{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "600b2828-3e5a-4552-947a-6047f387bcfc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70020cd7-aa11-4e97-8e8c-1c0b7e9a61bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6472cf3-d03a-4d14-bc10-d351560a5be5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c003cde-2209-4184-9124-49b880221903"
                }
              }
            ]
          },
          {
            "id": "f07c8af2-2a05-45f0-892d-9b9e2c047ccd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19aa228d-a29c-4686-9a38-28c97c8560c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38af14b6-258f-441f-9f3d-d80a3ef4be51"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "383b12b4-793b-4cf3-acce-1d2dcf7329d5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d472c1e-c100-4040-ae80-fd9c98fcb3e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe029de2-2f8c-463b-9026-577a022098c9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3915e3c-5034-40b8-a5e5-f632057d3178",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a2c267e-7885-49c9-8f3d-3b8e06304485"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d92161e2-1351-4e74-acd0-f557be91c1c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "870f3160-bb77-41be-a18b-10d5176e94f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc34da01-4024-4f6a-8c15-8b6ab9389ee8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9838aac8-71c2-4458-806c-69ed3b10a7b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78f5f76e-67f6-43db-83ab-e8afea42f777",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eaf2bec9-df93-4af4-8356-5b024bad2d79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a492c51d-7ee8-47a0-a581-58c7d326b980",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5537ba09-3986-45a3-8a46-60eab98b2e05"
            }
          }
        ]
      },
      {
        "id": "8ec7c868-1bc5-4448-9fac-cfd49803f80a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a2665440-2d71-4c5c-9a92-5e164d4e7942",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0dd5682-7c0b-42d5-a2d0-192f3be4df2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f51cde2-d881-413e-a8a5-cfe416fc3e88",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5f7551-e02c-4bdb-bb9d-766a62691c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10b3ca1b-9d8f-4d46-979f-1f3c410322d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ff9772-6a7d-4424-8f61-14b6a05c99af",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb501335-1a4e-4ca8-8481-48d21998d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0eefb1ff-88ef-4d1a-a09b-a5aad44a8077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d1345b-7e60-4cc8-94d9-705e9de305e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570d4a55-b05b-42d8-9bb9-c300b819908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66e2d7f9-10ad-43f7-8e3b-2693f09a2289"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d348e73-9a83-4da6-93da-5af72a09f352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "009e087d-ec36-4115-9f5c-8828b2f4489a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4087345a-4546-4e73-816b-9bd81a15ea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "212a2ed1-cc78-49dc-a729-27740329bd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a66a3-a503-458f-a087-dcce7a161d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a7cf20-7c1a-4a86-b37b-b42cbab65a7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba521ca4-85c0-4ac4-b3b4-385f1bce1207",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7648b3dd-1b73-4a07-b01a-f6039cea7c68",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afe74823-b839-4b61-a096-46d4f6b74b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4fcae2a3-aa6d-4e6d-9ad1-021a5d76093d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed0d64a2-0fac-4d06-b743-64498e04cb15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "86e3b807-760a-47aa-a991-fb17ff2121b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03b290a7-1b9f-450b-9306-b536117bdea8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8b87577-5b2d-4043-9a89-d672eeedd16d"
            }
          }
        ]
      },
      {
        "id": "a3f1db36-c331-40bf-8aed-11deb5a66536",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8dc9e3d6-1ad1-49cf-8de9-f9b8fe4640cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b38d9bfc-e1da-49a7-8852-410fab9dd239",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b68b1068-86e8-42ef-aac3-7a593cdff363",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c66c54-3362-4d49-92c5-1bc24e7632cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0300098-471e-4798-b50a-511c3095d765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd81a8b-926f-4aab-bd87-1366257a19e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c315b030-27dd-44bc-8418-413610e5bb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132dbf05-16db-446e-ba8f-9941c62c856b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52948dd8-82aa-4778-9365-edba48247887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae7be50-bf84-4711-a0eb-f5e9ca597ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d61e43-aff8-49e2-85df-0e63d613ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baacd498-d5d8-4e4f-af4a-b766cf4f1dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d64ff0-9e8a-407b-9232-54c2cc66e7f3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203e9a14-0a00-4c25-a4ba-958c5955e195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f701d24-a8d1-4ea1-918a-26879a93ac81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3070444e-0337-44c6-8451-ab1d52b6561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be0800b8-d01e-40ca-9603-273f4cba927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8be1d20-ad52-45b6-b14e-fdb6339e2853",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86fe664-0373-4e51-842c-eba9239ea837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a51c777-feb4-444b-8157-94e9ee196c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac81f3-88a1-4e41-b855-b551dc3a81b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3218b59e-78f2-4c0a-8058-1c31f0d31db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ffbf85-4eb4-4319-8e12-126259ee8050",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83be90bc-b42d-49e1-b074-93dc02d62328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e6e70b-51bc-4662-8df9-cf08d2fd4406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408f596d-6da2-4666-9f6a-603ae12fc397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b09c0e4d-9001-43b5-8585-23f065dd18af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a2b19-1896-43c1-9730-85a3eef8d131",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc25059-5c11-4ac3-a28b-cd4fc2cd3a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf994ae-a59c-424a-ad1c-e3e5f3d25b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbf74fd-6790-4354-a1c4-5f1e191343be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9731b853-c6d0-4c8c-a4ac-bc64d2e4d43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6981627-98dc-4bce-b213-d71f50703499",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c35f6e-f83f-4283-beb3-c69204a5d2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bccede-4a1f-4f2b-8047-0a1a8f3bccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00c88ab-6e71-4777-9d88-961e5eab917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a7d435-d685-44db-8c17-3ae095525e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d481a4-b43f-4252-bbd5-ad78a741b9be",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93640f6-1f2a-425d-b23e-d85c4fe71b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995e4958-ce9b-42f2-ba0a-58ba0ac818c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3928187b-3a66-4f96-84b1-616253f5fa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baa195a3-a300-4fb7-b34f-8bf8fb38a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f0dbf-f132-4be3-9a7b-4fe69ce53f35",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c4b0a5-6c21-4701-b90a-b03c853d05c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de552bb-0b8f-4e92-a5e4-498f1574a876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075160ba-687f-48b5-8d69-357295d1539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e4682ac-c625-441e-8990-2fe12c17fef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bbcf05-ab98-49cc-9483-a576307da468",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fd8881-6221-4fb9-8089-2d7036c59330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c517ed7-e99a-4da7-83ec-c299b0758e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c68aa3-ecca-48a9-95d2-6ba5760a34bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691de165-49c9-40ac-b910-1d39e4d1c9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6376bd3b-0e79-4e73-9971-8eb57eb5964e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b894f2-2c13-4351-9e3c-21a4e9bb0163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc760e74-f237-490b-a7b6-c34048e3fd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a30b87-c6d3-411d-8197-c0e24450eec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6a69b4-89b1-4941-9328-01baedaa3cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e17eb6-7e4b-4128-a4fe-d2e5caecb7d4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906254d-3f9f-4a3e-8e39-0168fab8a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37beafad-fe40-480d-a10d-4a6041bfa71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c87bfb5-4ca8-457f-bc9f-15f11a7efea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd216964-968f-494f-9982-1072ad99ce65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09bfc1d-e2c7-4ec6-93b7-d58022f4001d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6920d62b-729c-43e5-8ada-99e371914ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77867023-180d-4701-8167-c8d9ed58adb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283cded3-56d3-4bed-8c17-dbb0bb5633c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af434be-5dcd-42ed-ae56-2af19c451a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202ef4a-18c7-4162-9928-b19542992620",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a7c5df-5831-465d-b634-f014bd38a156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e621d6bb-d850-43cc-941b-a5704c9c7240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11541c9-8b20-4949-b17d-869dd7cd3b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba7a18a2-4d40-41cb-8ed2-7e521490c29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4c49c6-7884-4f1d-a096-71340110697b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44966ee1-ec48-4d98-87bc-723f5d047050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee027aa6-5a40-4a41-9fee-9f2af37323c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b900a2-535f-4698-bbb3-2c7cf4d05870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa8673f8-ec5b-4ae1-bcbb-38cf4c43d8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b02fbe-3880-4d4d-8265-12fd6b480641",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0e61d7-3300-4575-9c08-22d15de3bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3ba688-cb85-45d2-83d9-988e7b0974a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c52e4-8522-4fae-8988-014a0b326ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d5b71e2-10d5-4cf2-be58-cf42e09f0710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73656c8f-0bcc-4da1-ad91-a0480f99643d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b72e3ae-868c-443b-bb9f-2011d49f112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed956be7-a452-48cb-8946-bb371e7ffd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38027ccc-b5ff-4d70-b071-67d65f075a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8af2a5dc-0fd7-478f-9a24-0131a8b6f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ee815-116d-48cb-897d-b2c2df56ed0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08343719-070f-4eb5-8744-ca4616a4111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd729db7-2a9c-4b1f-84e0-6aa25a7d4d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc67d0-2ca9-4a1b-93c2-e3a4553d75b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "757de578-6e84-4245-8992-7eb0345fbe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7304836-5f1f-46e8-b915-91dc247d6eec",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa27ed9c-ee66-4d4f-ae8a-d4c6017407ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fad249-20a0-4ccd-816a-e467ddd1f51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74f4cee-fa1d-4c19-a69d-84974e5d9967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1711ac84-59b0-4081-9d30-5d4203ae2ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc328e4e-17b7-4477-a1c6-1c51296af259",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2aef4-7815-4c8e-9ff2-0fabe19b78a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b5639d-9e65-4758-9e50-db9cbb2f4651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35beec03-d4e9-4972-be18-098e090357cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d6a0c4-83b4-4273-bc8a-068619d5a839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ab4fe6-7253-41f2-8b5a-d4e27d00c3ce",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deca8a8f-17c9-4ba6-90c5-2876908a5984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb0579f-47c2-402f-9bf5-15a6277bf3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a693c6-dc35-4315-9b71-17184520a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98188fc6-6dc4-436c-9057-153c87554d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea1f2f-7b23-4026-80c8-11fab29585e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b753121-9e26-4a16-b3f1-4436d5c580f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0d193f-0b97-4c3b-81c1-e9e6f33ad735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a13b7f-88d8-4a6a-9b41-a91d2e02dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9c37a0-718d-407e-ac9e-8779c52047d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d2d371-3749-4960-be5f-f0b5afc33f96",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6d4916-91f1-41a5-b488-b7637713ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623230a5-887c-48ee-94d3-12274097a2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46590574-81b2-44f4-80b8-d32341920e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d57debe-3311-4267-8a91-dcdf49fb812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9da7b-b5c3-4bed-ac55-15a88a3b3caa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f4fc2-8169-4f6d-8121-fa65aca83637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45c7e8e-bdec-42ac-8b40-26675bcfff07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96431435-deb5-4377-8ac4-726f59185d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2656083a-6234-4ad0-bbe0-87374dd53d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffa4d9f-476f-494c-8960-908f768acf8c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe8c861-6a3a-45f9-96c2-ac511b6d5aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a3c633-b321-4d77-8ee5-7a9fd989c340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6109b8-0cde-4cf1-baab-05dc588a1caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41e443a-110d-467d-9970-dd87c738768f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e049c79-0700-428f-808a-6255d4501a49",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b087cbf9-37ca-4dfb-91be-47ce1ece29ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd6efae-9eec-4173-aebe-bbc33d84824e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f765e0a-fe9e-499d-b987-fe13ae812e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ce6ab1-c8ce-4aa6-b8df-c85a1190fb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf57000-c3d4-4f5b-845c-80556be88b90",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bfe24b-8460-4c8b-b1d4-99b2ef663eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7454ad-5584-4fd4-bd7f-45243203d066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfcf17b-74be-4f63-b47a-3bdf63a09356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce5bdd0-4e18-45eb-a483-a0cc62a878a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57e2386-f032-4f37-a4f9-71ed6456ca99",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4af323-09d6-4e28-a0fa-b7d703d673da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea98d3c-88c0-4090-b3a5-b03953c81006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618c7eb6-15d4-44ba-9a09-071db8d89faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56786a3-9d2e-4a4b-8a7d-c7b356733a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e2ae0-7277-4626-a40e-5e8bfa30f75f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1204b0f-4f7d-45a5-b00c-7ee7d89ffdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1601a687-1ae0-4d6b-ac9b-63d2d0453439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e662841e-0ce8-4728-a25a-fcde3beb71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1070ad4c-52cf-41c0-bdf8-5f67a41be906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2b3589-a1e4-42fd-b7b3-63d1d41c9159",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1053ddcb-7048-42e5-85fe-6933a9339cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fbe426-8326-4b4c-b74b-4396d512ffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adbbfa8-70c7-487d-904a-4391b45113ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1015e9-9e32-469c-b0c5-96a4381730e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3ae6a-ca86-4d22-9ab2-f1093d335e1c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e184d7-97c4-4f6a-ac5c-001d42ee0d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aeddd1-3999-44b3-be45-6ae81a9ef9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84a30f3-8d3c-4bf1-9962-df5415f2262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e88a4d-a9aa-452b-88e1-85ade9fe3d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1551ba83-0548-403c-bb02-fc1d97f674f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df204c1c-58d5-4163-ae72-4a9dea05832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d2f275-1e85-43b1-a922-c3effe6c3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c52aed-9046-460f-bc2b-782a58f1859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9fa296-99a1-4562-88db-86591659e569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7208e9e8-57f6-42ca-b22d-f69d0e7e5bf8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523fc900-77aa-4b4b-96ca-afdb33592756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc04b1b-a95b-48ae-ab2a-9256bea54e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c857a9d4-1057-4749-a4d6-7f2bc8a19092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb95705-b0be-4a0d-a725-c2d563ac34f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ec6c96-e7df-4493-8b11-8aa4807e2273",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac5084d-a145-46d7-8168-1174cd6d3db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453afd43-f64e-4aec-9d44-207d2c237395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa906d3-58fd-4d87-848f-0b3fad82b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "defa2774-7ea1-4125-b92b-4098dd6667e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c534510e-1145-4326-a741-e4ea54824c85",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85c843d-bd53-4c06-84e1-bd750da6adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00087b2-6dc8-49dd-bf89-c36ba32cd432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7934b31d-dfaa-45f4-9c92-dade615c52af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f10a6076-ee88-49e0-9d23-ddd8edb2ee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e3b86f-c412-43ce-91c6-03e0f1dfd8c0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21084f-ae61-425e-b3c8-980ab7345555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2050da9d-2c49-4704-ae86-5f516177f93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b244b6df-34cb-4faf-8764-495128f9ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "524bb597-61f5-481c-8ea0-57bdc23d4098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f8a64-de9c-4342-8230-93e1d24ea06e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7727ebc7-4cba-47d1-9c0e-af2af090d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a96f178-3b79-42ed-b412-3f353d7d210a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba33971-bec5-460f-b2e4-79484fab54a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc95e20-7183-4578-9d1c-bd75cd666a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5254bbdb-4867-42df-b4cb-3d9c17217c29",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387b0391-fef7-4be1-a989-645b28a284a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e56dbb5-b862-422a-a0ed-b988df4e6723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bc6c14-b43b-40c9-a251-549055af9898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "511a0812-cfed-4d0e-9fbc-59af2d617394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb3a304-8a8a-41cb-a96c-bfa0339a6979",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7482e56b-10ff-4f0b-8ae2-1086dfc1bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9460ac6a-4a1c-4a50-af19-0e67c2989f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72d870a-958d-41b1-82e4-fdfcf55f01dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc9bcd8-f76b-49bd-84a3-6be62595823e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5131dca9-93f9-4179-a615-4bfe80b51384",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14e127f-b2d6-49b7-9596-69645f61d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d684f8e-c8d7-4587-b59d-f0acd1ff7e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefa4c8e-5d93-4330-849c-c4f0b59b406b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f92164-110a-4f32-a0ee-b31ca8e87a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979912dc-be42-4de2-b8f0-8121923c6549",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51a912-218a-40ca-9c6b-9e9ddb92b1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacd17d0-3e59-480d-ae18-079c32903ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28334bed-e20c-4a9c-a418-5afc2ac07b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04e9b738-b2fe-4047-ab19-045a5cf707e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a8d072-097c-4702-a02e-3e7b25d9774a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf668794-0d83-4e7e-963f-dde0b3d16bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29b0e31-ee58-4c2e-8361-09e6b3b0550a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021201d-b9c8-4503-93f7-0ab275665a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b81e1e3e-02c8-4b2b-b308-8890be11b888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13e21b-7435-412b-ba47-dca2b9002f0d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b4ee7-43b4-49f1-9edb-549975f037ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abbba19-af49-44c1-a41e-8b0d287c3b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c561d0-9e80-4973-8cfb-75eff89db7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "296b1f2e-c479-40d5-9fea-e32f79082c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba4a0fc-f7f9-4930-928f-45a7ff65d62f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608a167d-15fd-4122-820c-5bc2d49207c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97274ec0-28ed-4bcf-941a-cc1622fd5650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8171e0de-45b9-4b97-a76e-e6da435c42e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67e41a3-fb98-4c64-8e0a-60e628cf182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2582e4-f2f0-49a8-b5d6-73521be599d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e67019-d60d-4468-a244-2ba6721b9860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1912cf73-b74c-44e8-a576-8e3a380904a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983db33c-5962-4b4c-a675-b0acece974de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e025635d-55ed-4886-ae78-1d07bc854516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f901094-8701-4141-8597-932212dddaa1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325c2c92-9fcd-4f0b-b136-5f970cfcd96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3359bf-e99c-491e-a007-e17a316059c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5253853-6148-468d-b3c3-f432cc1403a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59353678-ac89-4456-b909-b0d006e1427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828aeef-aac3-48f4-b6c9-35cec228c8b2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6806cc-4651-4397-be6b-c2a2f5d6b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fc45cc-dea3-428b-98bd-3fab2ae50c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54ad6c3-d1f1-41f3-95f7-8f7f78bd5fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa9ab29-1d12-4b5d-a326-90279e4d66e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c7028a-e6d6-4792-b10c-871f9864dc2a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c066d-5a01-44ab-ac53-fea9848c543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f72f1a-e954-4661-bf89-1a7b13a0d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3453031-b7d0-42c4-87f3-80997d40b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a50cfc-bccc-4c1d-ab68-1c7e8d7f353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b473f84f-7f17-46a6-9097-a51d51f6e3df",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25bd770-c3b3-4029-b641-e1a70e4bc721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01d10e-9076-4167-a34f-267fffe2ff51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb903dd-eaea-48ab-8b95-516f83125f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14002849-0717-4b0b-a40c-13231a833285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e7739f-fe41-4cd7-8d38-8b74971b7575",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41664017-b448-4467-ada1-689384438ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0926b1f5-2666-444a-b312-f9ec217bb06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d241cd20-5207-457f-88f9-ec6e042b645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5eecffbc-3de2-4857-a754-cc6223c54786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c3450-5718-405e-b0c3-fdae9391794c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef1530b-974b-401b-b8d3-2921922d58bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98dfeb3-d989-41c0-9c35-9ee2f4e7841d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4507676c-b895-482c-a5e1-cc7ff2220f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1561017-ec92-46e6-b58a-8d1cebe0d27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee06d7d9-b426-4239-bb2f-b7e5701e855f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd062f05-c0ee-4535-9b2d-9495245b8ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77f8020-c5a8-421f-bdda-c56427950a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27989d6-2979-43cf-8dce-1bc02d780c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "044c1ba7-b6d5-493f-8d98-6c2c79918a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc14ffa-e3cc-4bc4-8ff3-5e809ae6c681",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432b1f48-1139-4bee-ad38-94fd9d58fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ad1596-c13d-4a97-a9fa-3cd59e2a0fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd63d8d-3669-4e20-ab19-3f8d107cdd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "913bf160-7e04-4c6c-a82b-d9d58ad3d23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff5261e-bff6-4e35-85f3-add13d1214bd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1ab798-0f1d-4af4-94b2-a4c5829739a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4218a4-c1ec-4a69-ae27-3929e5d37332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24f414-ae0b-4c50-a6db-98b27bd26783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df68fb3e-c475-4331-88a9-13528165cede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd56c55-41fa-47a2-88f3-028452fc7292",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941814dd-0de1-4812-a71d-d3429f3c8734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa98a64-1235-43eb-a37c-e6a5553c90f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b10d0ae-ddbc-4dc7-a3c3-6128bf4ce6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a70c8b-ad88-42e4-9354-ca85d1e7349e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045816ae-a4ab-4ab9-ba64-e3fe055de9fe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d6226c-bc78-489b-9f23-29329e8f84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce24662-9925-4e16-a163-ef105236baa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67769a1b-05ea-47e1-adf4-f69593e092d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c676133-7bbe-4b73-b14b-a270c62fdfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8997cd70-2bc1-4729-9720-3d78523d4a4f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21ef29d-9fb4-4094-ad4c-bdcd7e646778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e303a2-dad9-46e2-9a47-d073a89159f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26c79e3-086e-4d44-a4a2-42fb8b817185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4866af-6c8e-45e2-93df-cb49cfa9fc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8057d1-be4a-4e0d-981d-65e12179473d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f50944d-b0e2-4318-9a90-1b1483ba4bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e956a6d8-3557-4a94-8d8e-27dc46928a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232d765c-5be4-4da6-954e-e4920149f634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d5bddf-89f8-4038-b9ac-188088b704d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ee346d-fe4a-4950-952b-5b3f2ba73faf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bec14-e02c-4bc8-a2b1-af3df705d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec0cba8-d34e-4849-be86-b7dd70ea7441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a8fe9-6d5d-4577-9104-24bbef36bd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01868aa7-33da-48d4-b9f6-701f1533aeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ea274-4da7-4d3b-8627-bc6ea6457498",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab684a9-6178-40ff-bb50-14a7719a305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a692dbab-3145-4cfe-8cc0-efa801461069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc4270-de4a-46b9-a9f3-44fc50a2c954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17a2d6ed-5091-4bd6-840f-3a35fded4bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561ccdb4-f2f9-45f4-b07e-10bb90de43d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f782daf-d3d2-4507-b621-8eb4930e80dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abda2530-8b7d-415d-8eae-a8e47d079c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3210c0f-0a27-4bf4-b332-4df1172dc459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38655a7-9d05-4942-864b-0e57ef2f25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c345d5-4fc0-4a85-9a8f-b62b533f7a82",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf8b0ec-e792-477a-9a5e-85247bfff3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86414cdc-12ad-4396-9d0b-73cebff4fde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616947f3-78bd-4aab-95d3-ecf86859c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "12319f0b-8224-4892-ad0c-aa8fe9681a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cdae66-fb0e-451c-b8c0-7889ebde463e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c56d02-1245-4958-b546-ebf702cb0c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ac4f61-0668-4114-9560-ca13ac39b1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c44b4a-c5fe-49f4-ad90-3c26b86fed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17359f2a-598d-4fe8-9b9c-93ea6e3ca917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dacd556-47f6-4c5e-8f53-47a42343c84a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380240c1-5d96-4869-90f1-5ecf08cb6a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c025e440-fc89-461d-b1f4-80f22e3cffb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c753d-7e25-4feb-b82d-be63d2ed5ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "172a961b-bf15-4a45-8782-36e1f74f0be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fba2e4-b4e4-41d2-97bc-b9fb5e66a8e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726a64d-574d-4087-a03d-af27b444addd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc6a35-c77d-409d-a666-02138ee45cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e17c69-330d-4b25-bce8-888d48741999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f24f781-7577-4083-86f1-91551b551ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0766c6e-2356-43c4-a790-450335c5644f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c9b3f-4c11-4b2b-b755-f389c091bc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41415769-184b-4b06-a9d7-35d3bf690b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d403761-e9ab-4e6d-a45d-3d112baa46c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "041278de-dc2e-4e27-a8b0-104a1a9f35af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3d49d4-5e85-41cd-a3ad-a69570280a3f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4548f52-8fd3-4e0d-9ec6-243fb468c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d92570-40f1-47a7-a3ca-d0eadfc42e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7bd51e-c90e-413e-a47e-d63eec679000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7863398e-d4cd-4e57-a105-dadafc8eaaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62023d61-352d-4cb8-9915-9eaea714c9cd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d33108-da8c-430c-9718-c273bcc00d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a450071f-765f-4914-8786-9e2df339bef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a5be9-1aba-47a9-8420-8c21bcb8d50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d1aaf9-024b-4c50-ac63-61f150b26679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcca6a8-870d-4970-ba3e-dde80b1c5642",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bc3cad-519c-457e-b9fd-42a60ebb65d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19292b23-6e65-4ffe-96da-a307c8cf0d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de04a0cb-8fd8-4bd7-a727-ab840f6c6341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce5fa1a-a311-4396-841c-183e811c2e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07c8812-105f-40e9-be90-9d74c45dcb7f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad90f30d-17de-4374-aa38-ebc41f42d544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3c991a-3083-4987-863f-b50d359a81c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28977db4-87d1-4a81-80fd-dc5a831dd779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31167945-e2d7-48fe-a67b-dce1d8fa35f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b63872-38f6-4265-ab33-bc21511c8eb4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ff7e5c-c40c-458f-94d7-ae24fcc18646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ca040a-b475-4284-a449-22690e775c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba22f974-7f9b-4001-9735-8cf364c8036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86b7c9a-2458-4745-a6aa-11ce4556979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6529213d-3504-4c22-ab1a-3c71e4265417",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb0932-f740-4a4e-aec7-4d92fb58961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b60d341-28a2-4e87-bd36-d8a605cc4ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01306c8-d78c-4819-b880-560e21e004cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "783628ad-eb17-48d3-87fc-10c0f4fdd525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1764bd2f-ace8-4bb1-8538-f60e2bc6ebc9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1c7581-be1d-4a7e-b3f7-30adc78ac533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef0358e-44c8-46e0-afe9-e845fa4882ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc51cc-4104-4131-a7c3-781d0233ce7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7b2835-7bb8-490f-a397-29ca2f65b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07224e4b-af7c-4038-ad14-65893da682c2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f562404c-8044-464b-8e99-a6dbc635b871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3414622d-6fee-429a-b929-7c2288416f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffae1d82-f17a-40d8-a322-11561e0ad17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8115f9d8-e868-44c1-abe8-bfeb21c3adf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898d6722-2e2a-4989-98f5-0d9abf58022b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9d8038-a565-4bc1-9012-175a711414e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91903093-d361-4431-b6a4-d3e65ac0fa95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e016cb-a0d0-45bc-99d0-47767550f5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b96932a-2251-4d83-b5b7-d964287ff274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005ff804-a08c-4fca-a8dd-3747b70c5a29",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0eeac7-7fea-46b3-a84a-5c100fc2f8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40f4e77-03e3-4b45-820b-1a56ee74cbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ebee00-0313-43fb-8982-425935944383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b9cef2-b7e5-44e9-abf2-610b21b4e451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c6d103-6815-43c8-9b1e-3bf98e2822b7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104fbf40-c367-4ad8-b912-240d2aff6ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff01d8b-3665-456a-a657-5614f69dfd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0be8a9e-98d3-47e7-89eb-85896f2835e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f60573-f227-4352-b9b0-7dde9bb59285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cd614c-2a31-4f0f-933b-edee16b97570",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e6a25a-b30e-4b4d-a8a9-31d915582439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132c3c6f-1fe3-4ed5-a00d-b9dfc00f6bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeab9bda-84ea-49c6-bb08-220906beeb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19709b35-5927-4cde-85db-b7c4ae27854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42acd3f7-7ddb-431c-b6a1-5f1fe23e6e2b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68caa3cc-c8eb-40e0-b548-da31b5035d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbef27b-27f7-496d-8e93-15c43a69f80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db34c51d-50d2-4ba9-82e6-4f590322a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "351fc8ba-5881-49ea-9e3d-4844ee291c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea4f66c-77ac-41ff-927a-ffe344ed5685",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1961b76c-e5a3-4fdb-b555-257eef6b9c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eaa6b81-d374-44a1-aa11-a12044e46add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a47654b-914a-486a-aa35-9d2e9c920a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "127f218f-1823-42ce-a700-a4988dd810f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb48a9-d5f9-4fba-9c5e-869ba722901c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e3c437-95e9-4d1a-b604-16028e48b281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba986f3-1902-4c11-8883-146c1be812a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c28b29-db62-4817-8bab-841e925715a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eb41fb-68f5-429d-8c12-7a7638434057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55022a7-15d4-4b4b-91f0-a28f9ee112cd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8038a84-fac3-461d-a513-0bac2d68fa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e59ceaf-a96d-4f61-b019-c112dec1e774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b792f87-d0ef-491b-a53d-9177f0cd0a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f51dd26-ba01-4f0f-a631-d98b92dd7482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91db9a69-6dfc-4f0d-bfcb-9a50b6e37e95",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed857cea-dca6-4c87-8e97-b3a6fe38a334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d38cda-d82f-422d-a3ed-d3a3eb8c4174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d352874e-37b0-45a0-abb2-9f4b964260bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9158846-585b-4305-9d35-4a9609f28a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e03ef9-1ed1-457b-bf88-52d2dccd2089",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b1edd4-c89a-4c35-b4d9-7a1ce1f23227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02747ef8-87ae-48ae-9c97-429a2551e086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7235c1-43e4-4e9c-af5f-f3d53c63345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d684a830-7486-455b-90d0-8b20b9878151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f89646-15d8-4f5c-8b81-9d9d2dc63d1d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a42e95-b396-42c6-afe8-8decc49bccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6008fe8d-4d51-43f9-826d-09d02d2e777d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3f4d21-c4b1-4362-87c1-b07ce0ca82a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "667384c8-aaa2-4e62-9d5e-bc891b8c5cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3000cd1-d987-4202-a191-d1029ef08e91",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb2cf9-4214-4b17-b8bc-3e007f27fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d450eb7f-61f9-4322-aaac-b8d33466d737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f48b986-c43b-4955-a839-7477e596770c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a702b16a-76ba-4324-ad82-be59938e1c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e41373-0137-4740-b49b-3be746c175f9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2170eb8f-3170-43b3-afe0-c071c97548ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a4588b-a7c2-41e9-8eb6-9d0e5472b026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72abe6a-2be5-4f49-9fc4-823f155a6391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe65b4cc-17ce-4ea7-9959-38b7b2cd2505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f17e516-39e2-4821-8f2a-1e17a176b27d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c65212-c10a-4608-9e38-c56b1522d392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aa9a13-8ff2-4764-813a-fc77871f6594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c683e23f-34c0-41c7-98a4-a0eb1fcb05cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "335f7476-576b-41a8-9ace-87623545053c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8b7c16-9167-4c2b-a87d-66b4818b4d12",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb81e248-6630-469a-83e7-84dd4e710d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2300f5-0c90-489a-89ab-422a033b0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f394d9b8-9dbc-4f60-b7f5-f2adb43789b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6ecc56-4852-4069-9f7f-d19dd95eb7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bb5e0c-1cf2-408d-81d0-c3d5584a659f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e73a4cf-2e75-4a95-8c16-805c5bf2879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dcc5a6-a8bf-4895-a7e8-ba8a7f90d41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa45ae72-7f54-4cf3-9965-66e00e6a0553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea1969c-5e6b-415f-bb50-aff9ff84117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea678be-924d-4255-8e19-ffdc5119382a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a138d6-8704-4ef0-aa5a-0f47f6a53b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd483129-ebc2-46d9-bac8-203c792f027a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d55768-f74f-43ea-a428-688c59f5b565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45bf90cb-4c15-450f-b7b9-9578aa4013d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8b36e7-33ae-4787-8445-82923e27d7da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c34f5-9747-4000-910a-c36894b3fc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9dae940c-dcea-45b4-9a96-566cae303708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ba4b3-719a-4f10-9bdb-4e47bf508d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "09eecc6c-ff63-42de-9323-3f5ae98b7e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76dc9dbf-2972-4270-8ca5-96a56cc7051b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80f48513-78ad-46b4-88ec-1aa95b40b588",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1272cdfd-cc24-4ca0-9366-f044680b28c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95c5655e-a307-492e-8af9-a4b914b853ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb614a5-70f0-4a59-bfba-1b8e847ae084",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fb97957-fa7d-4c78-95d0-130880c3ebce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ded1d81-f892-4167-a2f4-0f96c9aaabcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa6257a1-120f-4703-b34c-79161d02c235"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32b903ab-7709-4cf5-9795-5c7679ebb129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a393f10-575a-4c5f-84a0-1d55fb6f3fe3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fedf6f20-b17d-4e9a-8473-daa94dcd6b2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f40394e-f73d-4f78-934c-e36304282716"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33dfad5c-a37e-463b-9305-029127889a11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34ff9025-3bf7-48c0-8b00-b92cbc417a4b"
                }
              }
            ]
          },
          {
            "id": "bfe55b6e-1ab4-4164-90f1-c86aad61f6f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5e9c8d4-cfb2-43ca-8897-40a221331839",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ac0ced59-94a1-4a7e-a36d-7cd2e707bf7b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5745ae8-e8bb-4733-afc1-3d1a49d23cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e01a0e2a-4498-4f40-8227-b37ae956618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4854e4ca-d4ae-42a9-a5e2-25f6ec4ac3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b642196-f095-4cf0-a028-5488e57e5d84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de2f1a76-68ad-41d9-a2ac-65fc13ebd73d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc7756e5-9d77-472f-8b64-481ceab599ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8738347a-1966-450a-a3a5-85027973518d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87b40e8d-c06b-49d4-ade7-779232993816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa44755b-92c0-448b-a729-439793d0857e"
                    }
                  }
                ]
              },
              {
                "id": "3094598b-6ae8-4fbc-8df6-6da2daedfcee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e3f2c67-34b3-49de-a972-ed088262e723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30fd9c30-d964-43eb-bd84-5d8a68ab9d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a87ddd3-ad25-4bf2-8cf3-ac1f369788ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca909cd4-1a5c-4b24-a579-59ab0a9b50e5"
                    }
                  }
                ]
              },
              {
                "id": "a393b07b-f1ff-4672-8967-df16b8da4319",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e38126fd-0bed-4387-8970-46b1ae435c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe6bfe19-ecea-4e14-b886-ac15ea2cee7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef749f9-bca4-4c38-80b1-9fdd33da7060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "603c3e41-fd37-45ad-968e-f5e5efa4e401"
                    }
                  }
                ]
              },
              {
                "id": "2cae1fbe-59fa-4263-9d84-c22321c9279c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "892ca7f7-8888-4802-a7f0-f43eeb37a94b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afa5553f-ee9a-4026-898e-347135fbbc6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9f180d7-2cd5-40de-9484-59f1625a5181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f24fbb61-8a80-4423-8182-85a77ac07bb9"
                    }
                  }
                ]
              },
              {
                "id": "3a032b3d-2975-4da4-a07f-bbf4d0713115",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "682fbedd-48cb-473c-83cd-352bcdd58a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b29fa63b-df6a-48b2-a403-1f843ca1ab4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d5c535c-fee2-4c75-bfac-1c2c8ba1a837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "677d52d7-a7f9-46bd-b139-91b5c4c38ec4"
                    }
                  }
                ]
              },
              {
                "id": "659a1c29-7a65-4301-852b-4c4f0fccd5b7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "845e077e-ccca-4c15-b8e5-4dffbcc86274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c453b30-e573-4443-ad6e-a5710f90eca5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "136fe0a6-7840-4f24-b2d6-438c424301ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2915eaa2-59c5-4f95-8372-5dc5b1ef91a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2c82344-497d-4a34-a240-944bbb560daa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bddc162-5633-4e45-9e01-1abdf71a4605"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c241ae62-6314-49eb-aec7-a430f7667661",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4c1d83e-f1f5-4a41-b62b-36347c9ae33a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b81af3e1-02bd-4d39-b319-30de7db132bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a123fa1-b56a-49b3-b2e3-8666926840a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8299f92-1257-4493-a0a1-fac1130701cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64c2820c-689c-4345-8482-bc701cdae0d2"
            }
          }
        ]
      },
      {
        "id": "462a29b9-af61-4c7b-9c94-a81673641f89",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5f012bdf-6ab6-48c4-8b0e-be0e5b52dac9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9018ef4d-14ce-4543-b380-98a8754b0ff8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f683feac-d05f-44e7-b393-bb279c2bb4e3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab347cf-037f-42fb-84b3-01af4e8cb7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeb7ac5-4573-4ef6-b903-e95b764df0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ab096-926e-42a6-a720-f9e9f17a4466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf95dcf0-0538-4fd2-92cd-ce9836e6c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ea5c2-fba5-4f76-a171-c08912a426ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacaf949-0904-40f6-937d-617c1fa27c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8aeda8-b5ce-4efa-941a-825fcf8c0f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2aa737-028e-4d35-bc38-e0b282317258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "755e4cfd-4989-40cc-9aeb-7926af89b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ebae3-7a6f-4753-9f03-93279769e545",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c953acb-55d1-4526-aa4e-992c47f55505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a30a855-8935-49eb-acd2-ce595f9d1027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbda358-24eb-4b1d-98b3-cc781ea02cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac0d68d-0134-4146-adb9-11063e1c740a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03db4c4d-252a-4b83-9ac5-2ecd4c660271",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ab2fc2-4e9a-49a9-bc67-9d8dac718e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143b05a0-3801-4141-b78f-5048a6059c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87cc667-1f08-418c-b716-5789e27f9df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4ad05e-4fb6-4812-8dc7-4241fe7298f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3594c9f-1aae-46f0-90c5-9d5a8cea82ea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66c25b4-8189-4fe4-9d1c-425c7e6854b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb5b8bf-5653-4e05-bf62-a5493da40927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3576155-5165-485b-a697-587206ec8f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9f6e64-e127-48a8-9daa-5c792f1440ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfb24e8-2260-4488-ba23-3a411deae1e1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbbbc01-925d-47f4-9eb1-4e0cf8fa33ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95a7f80-9183-43a0-882c-e5efa8b97653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a970959-6350-49d7-9853-3cee7fc5bd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26bb5423-a7df-44c4-9089-5782421fc8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25338055-2f05-4a15-8943-488a5448cfa9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7182ab3f-3d5e-413c-a202-ae03c2e39217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bdd227-f79f-401d-9003-58d11b8bf848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e73766-ef0f-48ec-9d78-efd5e786c9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bd05db-d40f-4aaa-bc93-963548debdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8587724c-5afc-4b1a-a9f8-c3726c01c8ab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618099bb-bd08-4c9d-84e6-54f6e2166495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998cfac9-4e1e-40dd-81b9-d840845e5c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be48935f-89fe-4e4e-8ea7-5cfe1cfb6f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6be1b8-0051-49fc-83b6-d0de4465156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b8c4a-6b22-4fe3-b674-3354cc76e5df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b16387-cb63-4ed0-abf9-3b5b7974d27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0f7a19-0fac-410f-acc3-9f08272dbcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5099586-9195-4200-b578-708d4a89ce36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c62ff4-3cef-4099-8d3b-a83cd1c998bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac45ac69-7c2d-4a70-b5e5-1ae895c6c88f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bbff36-3f74-4b5d-bda3-8c728aaf128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8fc9d4-664e-4978-9415-2518de30b84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cc6880-dfdf-400f-b6b2-d3e2bb6e416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e774e97b-bc1c-4886-adde-b9b792578ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b8536f-e678-44d6-a52b-07322b7baabd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f54658-9b7b-4582-bb2e-b782e1567dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74a99e4-abf5-4ddb-b7e4-a2e8aac3b26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2813a703-044e-4204-b360-16ffa70fd6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5964c756-5d0f-4d7f-8e4f-37b8b7872ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf6c153-59d0-465e-a488-0e21f623b4fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e911c986-8b9f-4798-9621-e640391d836d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f9830f-5b31-4d40-b9bd-b1efeeaa31ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9523a50-7cb7-433a-a6f3-a08cdaf9f394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfaa0fa-e935-4bc9-8d65-65cf8e2059e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8e4a48-54d3-424a-9660-72bc19c077e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa374cd0-f8de-4071-845d-3fc723c33493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495c3ba3-d754-413e-930c-d7b3e169c808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27344463-674a-48b9-ad09-a672076a5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f27775c-423f-46bc-82be-56b01075e6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a905a665-bf87-432f-91d2-c7dd28ed52f7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2af967-5690-457e-8304-59f5e1a4635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de68f021-5af7-4d7d-9f39-6990d7a758b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c547209-4458-44e0-a482-e8c6ac501f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a77d74a-e924-4beb-9f0a-b3fc1d066e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29396b5b-0b3f-4fde-92f4-b275a7f763d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0863073e-0201-4336-b415-ecb584ebb99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8605e229-7711-4193-8deb-6d2ba28cd801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa965c-893e-40f4-b498-38847e1a2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93c8861-a5af-4324-9717-cbcf72d12671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3e13e5-f4c1-4605-90ee-cb12d8038a0b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4964da1a-b9aa-461b-b7d1-86d76af2df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935328e2-9776-449b-b396-06efbc9e33b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e05cea-8006-444f-bce9-2e06d3180efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04f6144-d09d-4fa9-b40a-be2cc7eac0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57999ded-1678-49b9-aadb-77a7fa1d2b16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61fe715-f1fe-4370-95b0-f59c367a6291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d3a80f-0dc0-4f53-ac6f-a608799aeccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09783134-b5eb-41d3-8459-0f7b41372d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82522d07-0e74-407f-a51f-46b0863d5755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d27b8c-5648-47bd-8204-3c40de1ad5ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74ac6f0-dd3a-4bff-83e2-017fa4cf26f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245e6b12-b80b-47cc-af60-ffe9c75d7de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a288dd7c-73b1-458e-8974-ea6d8d9bf1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8ff5ad-e49c-450e-beec-423bde5b5685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ee4a55-e130-4e4d-84e9-ba019933b420",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3087a37d-18f8-48b0-bca5-205b03fb80b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7707eee-de24-4ad8-920d-8baf72f2c097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e6990f-3348-4afe-8287-57d19e2ac5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9835a7e-aa03-4396-a6de-97b296365a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7e3ee6-5398-4c99-bd19-8844b4d1f36a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edae5033-39d5-4392-b3a2-5fdeebddeae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fc11f8-8410-4f4a-a710-2429f1e56848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e6e2d-2991-4409-b27b-781c3afa1546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259e0300-7c12-46d0-a7a8-22ecb0b8e802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9919cf62-44d4-428f-b917-1f2c9dcc9930",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7588a8-a766-41a4-852f-13807125e98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0733c2c-c640-492d-9809-2ea85f1a0525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a98064-633c-43a0-8021-f5ca7b6d6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2df75ea-7725-466e-a0f7-b2df6174a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1d2e01-8011-4cbe-a329-362ad5ac6ba8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d1506b-4441-474a-8b0b-b0c53c684526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7d205d-8e49-4f9e-a7d3-01ef640e4292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bbbfa5-52c9-4aca-b49c-079db6debcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93668da-ccc7-4511-9210-84efce58cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51267f4-bbc6-4a5d-b11a-ee3f3c126318",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc508be-262f-4990-9772-dc90b7a5e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e4056e-dd70-4834-b0dc-e73b36c3a703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e514d98-53ca-4492-8d71-034963b2c3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68d9643-25cc-420c-9758-1e4714423d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f47c7b-7f52-4c69-a1e2-d269163ae630",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcc8e24-5fb8-436b-add1-e5667e9d68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e38e63f-4803-4d1a-89ce-ac7e6ed8fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85758d74-d4d3-4229-8f65-3436b762d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e6d01c-3d6c-4005-8e4e-27bf00309350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf9a9c7-e409-42b2-9d08-db4b7e21285a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e9755-c48d-43a5-9ea8-c17515db7898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a197b5a-8a8c-46ba-9a65-0cbd02a34cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102524ee-170c-46e5-a2ff-c7253c4902d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dd9db5-6c29-4d3a-b5fe-b72b88aeac3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811f69c-b37e-44a9-80cf-8f137f51aa1e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ab5c1-12b0-47f3-b598-1f03e53aa2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadb74ca-38de-4ee5-a150-2dd61e03b055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee70b95-4a5b-4312-bb23-7b26b2436560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a38d40-6f93-414e-8686-b42386793d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e932bc-a745-4847-8dcc-596e74b2bb82",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f491e71-2bab-41ab-a659-551318eb3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c836926f-cd9f-46da-adfd-6c76a3bb11ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1b7fe0-b2a2-4650-8585-72668c187028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e6ccb4-18ec-49f3-9c80-4fec0691c101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af736d48-516b-4470-9173-a8549883c882",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f358211d-6d49-40c0-b79a-95ccb8c87bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7947b7eb-4066-47c5-a4ec-4b0290e1a66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceffd633-a2a0-4462-b5ec-ab18e86063db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f459b06-b4be-491c-8689-99be6cd9f49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3007d057-ea1f-4f4c-9ffd-2d38eb737814",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63024e92-b06a-4ce1-bd11-7e30ecaeb7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46716e09-127c-47ba-926f-581b0a697970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5ca20c-f2be-4dd4-b93d-fe571c6f091a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34fa176-9180-407f-b865-e05f650aa7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae194c5-27d0-4f01-ba8c-244d3087ecb2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70235f5-36ac-4322-952e-ce4b36c2d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22084a13-18f5-4f48-830f-342c9372ec06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8403c640-a9a9-4254-8ae5-dd375dd600bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9edad5-1875-43cb-9d06-dc411e26c244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f186e28-c294-4e77-b8a1-411f9f3945d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9718b2e0-d9cf-429e-962c-158ffb4f0a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81efbd4-94c7-466e-b851-6800b64ef247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb22b86-c05d-45ff-949b-228ee2f396c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a73666d-d345-42aa-9825-3dad2fb80196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c1d96-b499-44ac-ad57-a742456f3626",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ba4345-f748-43c5-9c89-a183a4bee837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca28da2f-5fa9-4215-ba76-cb3c7a9ba013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cafac6-02ba-4cd0-8f32-1206bcbfcaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0fdf85-5081-4837-bae5-4cc7d6a4dc92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5410dd64-8d05-44d3-9e9f-2c22a38e97e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b6407fd-0a60-4421-9a21-30f408edfbaa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b382e05-8083-4a2b-956a-fb2667354d34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5438794c-68b1-4b06-8ce7-aebdd1748fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92326058-89ec-4185-9b9d-3e322da71d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78faa0a8-15d7-4e42-9fce-130068fc5382"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78b52c55-3660-492e-9d9b-2f415a4034f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "318f12eb-9293-43af-adf8-1023eded7287"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bcd0a6e-127c-49f2-bdaa-c501cd03d30b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bdda23-9a3a-46dd-b534-91ada0e176a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68f5e0f3-25e9-4dd9-9094-688a6032c760",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61defbed-12e8-4311-94c5-6e15a7729870"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fa8becc-4e4c-4b83-81cb-a0d23b7af468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fbb65fd-7549-4e19-85b8-623c0b77ebc1"
            }
          }
        ]
      },
      {
        "id": "9aaefa5e-5bec-4575-8f8b-03e11b2da693",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "88d8b43b-798c-4617-b089-bb08133505ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "629cfc67-cf15-48bb-a599-4e277910cd4e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "353b0392-1bcd-49e1-9b7d-4188acdcac6d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d50d90a-22b5-430e-97d8-a80108bde37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cac2e4-3cda-456c-91ef-98adc292c944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b7f541-5bd3-4c26-b5a5-fec92b877ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "58841070-af15-4f6d-8e35-18c9d721a085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5c494f-d9ec-419b-8135-de37c16f1010",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84f94b-3b3b-465c-9b73-75745ac62832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eba125-3b31-483c-b658-c6ca306cdaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e7d563-481d-44a3-874d-2df392ab12d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ad75ac-ab73-4cc9-8860-7a0e3027ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a720de1-dcbf-4964-b5cd-697f88aaf0d5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83787ba7-d87b-4461-a44e-3ffdd83f8291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f9fa17-764b-427a-a154-9d0f94b33b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e2035b-4853-4417-9336-175e4df2abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64cbf5a0-6dd9-4d60-8d5f-74016767a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3993b4-3f21-47bd-82bf-4aa1f6473521",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a9581a-a8ac-4646-8884-4dd2425a440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca96208-fd7a-4311-ae59-085a9819cdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f5be18-34df-4cd2-ba76-a2ec72995d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9be506-fdca-40a2-a2a0-2ae6b2832051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53fc4e4-d09d-45df-8bde-50e3ca2249eb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b90d97-b284-46ca-8cfb-b294730e3762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5303b4-d57f-45b3-aebf-5db1df958f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52c376f-97c9-4b30-a802-e2cb74d51de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5227dbde-5f21-49d6-86d1-81b75bea2e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b737aa3-9c86-443f-8e4c-f1c4b73f6971",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d8c46-ba1b-4e2d-a833-a2fee83b26c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47118b0-e601-4149-b402-7ec62b21d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3eb346-b915-40d5-bc60-cc1b56053eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e68f62c-c860-4563-82f4-6e386d9305ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0255b4-88ea-4cd8-bbac-c963a2a4d26f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77a3b1f-237e-4ba0-bfc5-890211998ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6991b-3d7f-4970-8152-e1143428989b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08249cab-274b-4c82-959a-52223966826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e7df7d-9e5d-4d9c-9cd3-5347db97a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef997166-e307-449d-984d-c7a523eba056",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a5a27a-ae9d-40d5-87e7-e305409a9265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2286954-a151-4b98-b6cb-4abe05227c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26567e19-8c17-46d3-9076-2c292753fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7549bc1c-e6d3-41aa-a918-d61f09e4fd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1d789f-4f57-42d1-bd87-e091dca13387",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bc10d9-c4c7-44bc-bdd5-4f21518a25fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754eaf0e-4d24-4b13-a258-ca6a253ef68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a26724-9c80-479b-b051-9d4a6807c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47cfa64c-b03e-410c-a614-9cb399b9013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc0b4c2-81bd-4f52-b8e8-071aa6a2760c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd791947-8162-42be-a798-5d4ff21a4916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414ed2d9-264c-4b68-9bee-b83e56debb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb33bb5f-8a04-4967-b7d9-d89ace26c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbe3ef2-e77d-4c6e-87cc-11fd7af2e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a69f4e-2b70-4f82-abc7-14bbc7db5dbc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21f96a0-09bd-4765-8191-4eec62d7f91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069affbc-7b05-4557-b049-92f273d44892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eb7c08-ebfd-4cb5-9f4c-108af4f72252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5916cf27-0a77-4bad-8e26-d101ff0c5d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145340e-8b95-48e3-8011-6afa67fbb602",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93a0e9-4493-4864-ad44-ef59d06ceaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de22393-8393-443b-9eeb-747d5a12527b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9e926a-fa67-4028-9c1f-5e504c3fe0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c80e1b-a421-4a9b-bc75-b0f194125074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e81a80e-dbcd-47df-925f-1e4000eb5e15",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0999e068-ee44-4a41-9d97-d9a7373f736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce7eeb-d346-443f-a74d-402d16f6ae93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1d9311-7556-44e7-acd7-19d9662425ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de262e13-6b07-4c61-adcb-8a0aacc638d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a574839b-7048-46d9-861f-6262f635ad4d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b85b05c-3a73-4ef3-85c2-c38113a34354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5ca5cd-0392-4061-a3dc-9fe1fc4edfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6702317e-2519-4909-a590-9405c891e781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7d9f41-dfb2-4d98-b024-af1494af4936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024e39b0-f2c5-44a1-af45-2ac22da2956f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6975374a-9542-4666-9814-c36cb95a29c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bef5bb-d328-4e40-bca0-1189f1b06c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cba0d1-08ef-4691-adeb-7fc99f9cd89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19a9b5a-dfc4-4814-8d58-4c5becb09754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78f0d2e-e449-48db-bba6-867076dc3618",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e200089-63d7-40a1-bf05-c7e863daef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad73cbb2-64b9-4425-a5ff-70df1fa80088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356fcb2d-2425-4d47-8319-8e13b6aacef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59609cee-8c46-48a2-9258-a5340b1f8a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebb5adf-ac6b-40e8-ab32-947b5fcec030",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff017b-3336-4ad9-86f6-4da5360aba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8f3c53-4fea-46d2-80c8-fb67d2a55e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ff7ca-81b3-4def-b30b-1e476f7adfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc20f370-1102-41bf-8582-5f9730276e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4e924-2a96-4a9c-9596-13576fd90c51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c787441f-9563-484d-86b0-8f329e24f7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2164d35f-8177-4470-916e-09f588ea796d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c16f27-829e-47d8-864c-76a377185ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce921f8e-0dbf-4298-89aa-ae2f5714f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36b58c1-f57f-44ae-9f5e-53269a718456",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfb9586-bdf9-4ac6-9873-0596b012b4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e5ecfd-95c7-43a1-a18b-72d81420e795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e575eeb4-bd28-4f5d-86c7-c8299dc94ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a3bdbc-17b6-4367-b57b-540df9fb2c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7e249-18df-4ad5-a4c2-324196cf0eda",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a093998-cc55-4fca-904b-c3ceae8c80bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3429927-0c39-4ad3-9c53-62bc432a6c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c03aa8-a547-4e31-85cc-2173a979d628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdfa769-50e6-4ee0-9b20-a2e3efdca693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667eedbb-98a1-4924-9614-db5091b9a28f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c3a28-6e29-456e-90df-2b6fd8a3a691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabbded0-a534-4fd5-bd20-1cfef94f3803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba9f1e3-2da7-4170-8e70-2de7daee075b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89729f-df50-4629-a3d3-7a2dce7f5100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9007e3-89f0-4514-93e2-98b88718c5e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f774759e-c8af-46e1-b2bc-9184757aac2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7195f5db-dae1-4736-a0cb-cc39e77b0d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c15516-40e8-4668-94f8-0824eef75c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db89105e-c412-49c7-94e2-a140c5b413fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47a1e69-ff53-41eb-bbbe-590d99569c75",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7561c6d9-f713-4249-a73c-e63e3f09ee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793e67cb-b1bc-4897-a389-a54a9731bab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc44141-1396-423e-aaf1-d4f82256d435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "334e4c08-3ef9-41dc-9412-58fec4544aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f349a13-c379-49c1-810f-4a72f9ae7298",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38151cb2-f591-44f9-8256-d7e720c759be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122b6856-ac91-47b4-8936-ca16c0975dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998ae79-d2fd-4b32-b506-d19fbf1024ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6b510f-cbea-4367-b711-8228889deaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969341f-3b76-4365-9714-c225ea749bd5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa02720-51d8-46e0-9044-975c44991fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dba3dc1-f5e8-459d-a1d0-b801ae9320fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30276c7a-4c7d-487d-8e1f-4b62af4bbf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf8af14-1890-4ce7-b658-98ed62df746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26662b-cb63-4d68-9d2f-8776137748f9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b81f26b-26e3-490e-af20-92631267e2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f45e81-4890-46b1-8d64-d54eed038b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629a020b-fe25-4aa2-b38b-6914aa5039b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f9c7c3-999f-474f-8d45-0056064b7da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea0dbe2-6a96-4544-8f6e-016c92cd9c2a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf1964-f6fc-403a-b58e-f84a850afd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7b50c7-0b1f-49b9-92b6-22890ad278f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9202bf2-a7cb-4b6f-855b-74c392742b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce17df6-eb23-4106-9f26-b1581094fb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639346c2-c82d-4be3-a1da-e9bba40f64a4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5319b787-8b96-4f23-a1fa-3bbf1b89b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf54709-4054-487a-a985-ddf3571614a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698a9959-e0df-4c35-9d7e-9ee3bff46d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b917ef3-df86-4f94-8987-512a496c2a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328f9d2-75ec-43fb-91f5-e72558cfb7e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369ad4b-b09f-42a6-bfac-1bf6ea65be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af2c654-47f6-4d13-bd0e-6c8626e95f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b4ce45-0c8f-4e81-9ad2-79bf7b709245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1b38c3-5f37-409a-86a2-c3eca76c7202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae2eb64-0137-4809-bf4c-8b6d56c71d7d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0fdd8a-0f09-4752-9065-df741eecff7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dc696d-5cc3-40e6-93cd-0ba5b401ca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c4b774-9b74-4f09-817c-fa049f41b21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac65418-0769-4930-8239-ca18c83411ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac6b23-5670-49a0-89a4-e0ba1988b9e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31265b-6efc-46fe-8a89-a9cb4f0f92a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4777d71b-e687-45f9-ab2a-9ccc102dd8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ccfd5d-e68f-4211-bf06-b5473d7f3b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68753938-098e-4947-bb55-37ee4654da1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995c97b9-ebd8-4342-add0-6913029cef79",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533db957-91b5-4217-8aa3-5cdb2c1dbdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7579ca-bfbd-4cf2-ac35-108c2ddc7390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1396bf5c-c808-4798-ba56-5f443a0b6d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d03c55-8d3c-4dd9-8958-e49b3408ad60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e10ccc-3552-4f06-8465-b50d08ff40f7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e2523d-399f-45eb-81f9-e4ede1828385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c170cf3a-dbaf-472d-89ab-24a5b4b7baa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e336d3cb-6a5f-4bcf-834e-e6f6256a63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d30018-3444-4a83-9a54-61e5a24e4036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bebc1a0-3b85-4821-ade8-2be45f37ee59",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b9504f-79ff-409c-a62c-d78796926250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b71624b-e9d2-4ad9-ba0d-5b67a27563d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193aa07b-3ec8-480f-82e9-86669e8fa5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f7595f-601a-4418-993c-1597eac9f7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef5023-1598-4468-ad6f-4d3003c4f53c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a747f4f6-1ca3-4d6b-862b-b49c21340728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cd70b6-e107-4a40-949b-a4727e3c2b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbab600-5db1-47d1-8372-441940ace02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cf6a08-659b-41bf-b50d-03303e81b3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a948257-fef6-45a8-b1ae-a2d7b776fff5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df999ae-b46b-4d24-aa84-44f51be9b331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c058df42-a889-4fc4-a615-3a3966435c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b131c05-595f-4144-9ad9-09bdacf99fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3601f51a-b283-4416-99a8-e1bf0e346a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cd5b84-8a9f-49ae-9eef-f80063c48f54",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11d9d19-78d2-4c5b-9fb3-19c0bd5a3201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb9e7c0-f7e7-40bf-bb46-f5ddde8c5765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a0723b-65b7-4310-9c57-d6b30165da93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6753d3bd-877f-4ba3-949b-395ecb746bab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c1876b0-3643-4a57-84a0-a9554d585d81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50855b0c-15bc-40b0-9941-d52c2d78c671",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc35e7bd-389d-481a-8316-bb5fddbac8f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebd5665-70d5-4be1-8025-7fbe7e6181da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57231602-f7d4-4c3c-af26-471d5fdfd87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "980a6ff2-4b0d-4640-9474-fb4c3e6f0389"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d311f3e-3014-49d9-8dda-ee6d02dc70a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "571d2ee9-e0b1-4753-81c7-5e3aa0234a50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89408b63-2ea5-4dc8-a4a8-1b91238c00fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b68b8101-e570-4b8c-a7b9-5547c1ae1353"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d0f474e-91cc-4a0b-954c-205b61e17f6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a20533c3-e99b-4d3b-8081-294878ddedd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eef6cdd-6ec2-4b12-9649-dadf20c23382",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "644894e4-753d-49ff-9953-1297a714c988"
            }
          }
        ]
      },
      {
        "id": "395bd0f8-f5e6-43c8-a523-eedc70896792",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a76da940-b747-473a-b34a-7bc51d783b69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54c874ae-22d9-4f64-a3cc-9a5eb10d9ce8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ddb43350-9133-4121-9252-0a34a44f6237",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a556d77-d848-4966-aa5e-e5a8ad8dae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2bbd97-4a93-4801-9341-488a70157487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d991720-0f9e-4b94-b8b0-9f9cb714a3a2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0db4ad-c075-488c-825a-eba135f7e59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93f7d9b-ef53-4cd3-9f3d-0cf9680d9c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370ceeac-67a6-44ae-8ed3-e913cf462955",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748f9bb7-a6d8-4772-b574-ab8da15d82c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87981072-3aa8-427e-b99e-e256e91db933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5fa9f6-69b9-4040-bebe-cc849dea83c1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b768c3f-3438-426b-b9d2-21b1028fd643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efb6d8e-82c7-470e-beec-2e3fa027fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e908aeca-8a45-422a-8268-d03ac39cc216",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0792438-471e-4717-add1-c3814480164e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e14ffe-e742-4918-ae4e-899417d894c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e4c497-594a-4fa9-88f2-b7c031000a41",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8573c5-bb46-4972-8b69-a910b3b2db2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea2ef0a-f8da-40f4-bb71-98bf60d41984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fba5c3-ace5-4237-b3fd-afedfc02d526",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bd0afb-a5e6-4577-a766-1eabfe5839f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fc5858-9798-49bc-b515-b3e1e57e2bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed2477f-12ba-41d2-8688-d9fdbdb2d1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aea992-85c5-4d7e-b7e8-9c146dc7dd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eaa022-b276-412e-91a8-db13a3dad4a9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791b129f-29e6-4a33-a3b8-b1ee7b36f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "980c9bab-13dd-4a83-846b-ed91b66de58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87db69d-36fd-4874-b42a-0b7fb24e60d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b83d20c-d67e-409c-bb05-cec290de2e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16003490-8ff8-4c2c-907f-66717be45f67",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4026f0da-f2af-43b0-9bdf-0c264c711ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82b152e-9095-4864-9dcb-588e67a8ad6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f4aee7-d185-43e7-ad97-85e0036cbe8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ace12b-256c-431d-9efc-5a66ba96f744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c221c209-2ca7-4860-b338-d1f6dbc58f52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e1e333-c441-4eef-b76a-613f18886b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1803e6b0-6eb6-4a19-b03e-0043c2a1828f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45a6a12-7ec4-488b-8cdd-b8325159b9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026728f4-1a22-4e88-8baa-42e829b8ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f34c6-181a-484e-a86d-980ed10d6d26",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511fd9b-e21c-44b2-a4cd-ef111d3c5818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0478e7-ec5f-4237-9b15-82779d134c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b6b2a8-26b9-4dc5-92ce-dc0c74b87095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5719e98-88c6-46b2-82ed-79643c2d6268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46a68ad-a94a-4fb5-b7f5-790860250b4d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce95a247-8b65-4916-babc-8dca1ed8475b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0309e6db-758f-4853-be47-4117f2ae32b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf62d69b-07a2-497b-9f9a-9ed7f14ed50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baff5f2-7a2e-4ae9-ac8f-241b6e4a4cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfe91ba-976f-445b-ba11-3c0886d9fdf0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05676447-ca12-46bb-ba1d-cecd0f6d1dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbeb3caf-fa3b-4d40-a684-21220fcbd7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70179aa9-83e3-4529-85ee-18c1b9a7171d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77b5dac-2744-4dde-9e7b-7da52e2beaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd7a231-e930-4076-b1e0-9d434861fecd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795ee761-922b-4876-b744-a5663b4e9c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7ec246-9939-46da-bb43-0c3cf097c4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0528af65-41ca-43b7-87bd-2a2824b505b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014e6721-84d9-44bd-aafa-6494a3d93045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d64fd00-8a16-45ae-aca2-6b53dd70e02e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146d09c1-4fa6-43a9-bcf4-20a492bbd904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5aa402-9418-47c9-bf97-7221c97c313a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f061cd68-9a99-4a10-9385-119dd455cac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e210dff-ea6e-4400-93c0-4c1ba008cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f823471-928f-41d9-8c1b-d2ea82c52a0d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e03389c-936a-4ca2-a3d1-5266d44836ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf44319-ef5d-42bd-affc-12d6321cade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d57f08f-3330-4e5a-89d4-0281c4db2096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab41065-f0eb-44f2-a00d-e3821cc755ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15c1ee1-b315-44e2-89ba-a9445c8c0acb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a612b40e-ef94-48f6-b5e3-cf83dda717b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7effa801-12d2-491a-acab-a9b92feaf643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e79739-2a99-4a2c-b02f-1d3894fac3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b29b108-47a7-41a4-9319-d62049c1f941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0f9fef-4cd5-4b84-a09c-38dc6ab453de",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c95831-ecd8-44ff-8617-27e8f1104f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b221d7-8c81-4704-9b1c-18a9157a10e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35fbbb0-dd41-4904-9ebc-9f593c8880ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270c23ec-26c8-4bcb-a799-efb625a5fc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3564870c-062f-4532-bbdc-4aa083b05034",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca544b0-0fd6-4d1c-8934-db193421e248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f367e8-863f-4f59-9dc9-e6c5d3a9dae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77acd2ef-ac6d-417d-8993-ea30deb606a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59627c3-88f6-416f-8e02-072d544651f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318fbc41-18dd-4e1b-aab5-1a1250a6e7ae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b44aa0c-5238-43f9-91ee-2f1b86401ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387072fd-71ed-4ee8-a814-25326ef3f09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8335a7d7-ca8f-40d6-936d-52c29e0f0a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0f33aa-0786-4be2-8b46-ce42c131d562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0926e0e-6bf4-4b52-a6f7-816e20deed40",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929df73b-a618-4474-832d-5d90b43ed3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccfea7e-41c5-468d-87a5-c99ce86281d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4b5fc-522a-4404-9b6a-ec320d1f582a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad102b16-2e74-4f38-914c-40d5916e9d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7948f4a3-ab8f-4b5a-8a21-13d663f241e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5586b85-c02d-4a44-bb5c-1ffa25d7e7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d262a695-13ca-4ac5-b963-1e8b08853010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb2c5dc-04e1-462a-b652-84126f011b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec88d34-8a75-43dd-a8ca-bea418dda41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7dd681-78b8-4217-bf4d-48ec91ff5307",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cecf9d6-b8bb-4dd4-b2b3-c5d43f003aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fbc82a-257a-4dee-9709-d88cdde5d67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3a7d17-6690-4d76-b209-0d35ecd77bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeea9b42-6d27-475a-9514-19b7a54b8985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec33e88-4525-426b-b879-aa16cbd8f412",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428f8fc1-4b3b-45d8-beee-d0e8493bf30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71285de-120f-47d5-9086-3c9c53d05f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391549bf-22c8-4837-9883-7ba1df48499c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d65649-84cf-4818-94db-030d8d3748f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d70ac4d-8c3a-4c22-ba5c-a8d52b80f835",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3fbb49-5155-4671-bada-96815e4abfa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb73bd8-fb5d-4e48-b4ea-f30874e4c1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca962c0-a35f-4b39-a393-ace76ef439bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cb3782-1e2c-4325-8019-56470f70ecd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66767dd-a583-42ae-9698-04a30800cffc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefa9945-986c-4b27-a576-5ad3f6024da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343940a5-95d5-47d7-ad0b-70702ae51268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48393869-9be6-42a4-b576-3b4007b48e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c116a1-860d-403b-8a44-5ea8e3a74742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdcc9a8-5847-485e-be37-fc4ef02f733e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0337c76f-2042-45c9-bcc1-51ad3f6edb11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8cf942-4c6a-40b0-946e-a22935aca5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccbae5f-3a1e-4b71-b919-27efc8263302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7060ab-489d-4579-9d3e-71ff1c740aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d33e489-dbd1-4d53-a566-c65ba2905c9c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beb80db-0086-4ba9-837e-3532b3eadc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33ee89b-1436-455a-a0c2-889e2b25a5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e58ac7b-4c1b-46b3-b613-64aa3b48a61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d1282a-2c41-4288-8b6a-3b15be780346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508204da-f3cf-4afa-9131-91479c64b79d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27fd97c-d851-4b4f-ad50-925f886e2b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e65ff83f-52d7-4a1c-9fac-37051095a743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5479889f-da09-4583-812b-244424d7ee12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762687d7-9fcb-4eb5-9217-36a84b231bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76b5cf9-a8e9-4e85-bed3-f400f60cb92c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb6e7bf-485e-47bd-a130-7599bf0382d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f0f67e-a808-412a-bc54-fdfada334cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f6ad4f-3f7c-4d88-b248-caf46876a5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e6bc23-5784-4370-8169-6b059ac89449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62af794-1850-4384-84e9-3a13626b0674",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea226032-340a-4311-ac41-6246a9eddced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e808bad3-c2d0-4410-b54d-d0f8976a8b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff859e-9227-4a75-b9ba-fccfc66dd369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d93383-69ee-448d-b6b4-44fc343e218c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7135104-32ea-4453-bc3b-3f0cba4afcf0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9769e69-f395-4eee-944e-bc9e6dcea397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f18116-8aab-428f-81d8-34790e347f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee19db-7496-4662-ac70-94c135a33b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80882745-2e1c-4ad0-ad3f-3a8cd00badc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42606178-7300-48a4-bbc4-ebf8667cd2e8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b50f0e4-68e1-4d57-9485-798d32577c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cded4e76-a9f0-49a8-b55c-496c4d18839f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f21de1-e5fa-4f7f-8120-2eff5e329a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fcbcf0-723c-4d1e-b7fc-8930ff9e8977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eed14b-5c6c-47ea-b23a-39cba21113ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6fc90-7cec-4297-b59d-31a0337d7483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652570b0-4ae3-4f5a-a0ae-cc9196b742a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affdee40-67ea-423e-aeb3-fa1cdf76ea5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a684b3-43f9-4909-a294-621fe4377403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a080b257-ae12-447a-8c0d-e962c06d1e36",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c12a4f-9505-483a-8254-5526df95a93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a42837b-55f0-486d-9dfb-9ace1b494cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb522b0a-0be4-4bea-ac91-a7d801298eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23af1ffc-92a0-45d3-8567-bb11f7cfcfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb7cc66-b215-44fe-ac11-5378a3ba51ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d739e9-2989-4288-a840-5c3bc950748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8c8087-5908-47ba-b78e-7b1017d58567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20858724-9df0-4914-b107-906140c37abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baca4cda-c75e-4eb1-906a-d23afb4d10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b19dc2-07ec-4edf-8412-b19a1a7853fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bc72e5-d80e-45d9-b36a-fbe1f8f81fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736d42db-9cce-4cd7-8207-71e079593a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c36dbf-88f8-47c7-8c7b-3f3868a7bfca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67356d90-e97a-481d-a213-f92d2e56843d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da084ae1-6616-4651-a96a-06c4b46c4d13",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0804f660-2bd8-41b1-8b95-050dad6a2c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af057bb9-9f5b-49a6-a3d7-19321d41b1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e84635a-9f41-49c8-994b-84b22e4bf0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046c0745-8db0-4f35-ab30-145ab4ae7f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aae9058-8e93-479e-99f0-b59ca66c2acb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b4053-2674-4d96-a5de-ba2a991baaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea45c70-b6d8-45e6-b1a3-5dd9e6880b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093b4b1c-9f58-4724-993f-ac7fdb585df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2ba3c9-c2cb-401b-b7bd-1259b8372d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41e579b-e8df-4fc3-ba8a-d8e0283cec07",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c8dc2-8a2c-4ce1-b831-5f7d2d0c78d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea68d88-6fc9-4837-8aec-46396ca8e681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2242f75-ed07-4478-adbe-32010f53f759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0847d14-ca92-43dc-aee3-4ffc5141ad77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da45997-cd33-474a-9eda-13e9d4757ca0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353f2ff4-91b3-4dac-9899-65cd9efc87fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034db067-4511-4536-ad01-208a5fa5ea02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65620218-9688-4e56-8756-7601e49df5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf077176-9e2b-4d76-9666-c90f2c909e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34661df-16d0-4a3d-b5f5-51805b17b649",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0ff3b-50b5-4f64-b268-11472db65f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42473f4-a484-42ad-a214-a1958ff5530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ec9aaf-5374-4f74-80b1-076a37d3d98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f099ab-07c7-4938-8c80-c47261830533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c326b08-8742-43b0-9e26-0d3f75cc4e4d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b3136f-108d-432b-b791-605c35acb0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c476196-7d2e-4b4b-a021-949f952bec77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e9eccf-42c4-4f3e-bad4-52ff79d87954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f39153-c4bf-4703-8cd4-f86f1b9d1a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bd2aae-65fe-459c-8dea-28f768d3854b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8807f82-ae4a-459c-be13-37df77b591c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc986cc5-5ec2-43bc-b852-6947fe599f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d53b0d-1375-4bc9-b27e-3cfb800ca3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4807f1f6-b6a5-4350-81e3-981513a3d8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cde6d4e-cb38-4d6d-a766-12d389afaf98",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4097f1ac-6a11-449e-9194-76655c01c353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb60da-2e2c-4bef-95f0-5f0b1505da53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa1743a-0916-4fc1-9da2-40342b18f857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335c0e69-757f-4420-91f5-9db583dc7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1af77f-e022-49f8-9019-dcdcf2d87685",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1b355a-dc91-477c-add4-51f7c9cd28b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db44d926-e997-4916-9216-1985c20608f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b7c4ea-76df-4bfc-adbe-beae2ff9ea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9e53d7-f768-4ee1-9416-e2ae4c944834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f19155-8084-40f1-a46c-6b0d506883b3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c09f5-7566-4d92-b3d3-3ac1cabb8db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1540a3-17a3-4e55-a9e6-4784399f507c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22114b69-b9d7-427c-9beb-9619ada61bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de57e5ca-748f-4f0e-8b33-f1bf15fa5a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ec1d63-a02c-4acc-8535-87f2e0bf8563",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fce560-4026-4d29-85db-b15e78cdef91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d3ec3a-a1a1-45b6-9ccf-53d841060224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b240d1-aac8-4086-b776-1ed2846fa359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f82953-52f5-4e21-bcac-e8567e47fc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1206ebfa-b03e-4c4d-9632-a6a7fc219728",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4283f437-5dd1-4dde-992d-5d2faaec290c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99a7321-41e2-4153-9a02-917cca2c3edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7623b112-25c2-4f9e-ba8f-e5ee60b090ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4a9502-22ef-4e96-83a6-7ecea628a893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123c337e-11d5-4769-8a3b-6229b2439864",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca97b1-8839-4c74-bb02-ffaa775eff60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5513c3a4-a4e5-4133-a335-ed7c7f4dd5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e52b8f8-8edd-4e6a-a15a-ee9aa4db5a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6504350f-df69-4f2b-b3e6-e19ef6e24689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a1511b-200d-442e-9e32-90d678573824",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36244d61-8795-42a0-a3d9-b78f6b090455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b967508e-af40-4678-9b09-24e191b94a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c20693-d437-4f31-8d14-2eddabd361e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d71eb4-38d7-4838-adec-2c8a23844f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74e7dee-35b5-453e-9a68-2c2ee0422d78",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2606c523-5fe5-429d-b9b7-a6f05c784809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46ce6a8-4616-445e-8395-d8b6c13b78c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb75da9-d907-427c-bfa3-deb619ebaa2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d26cc09-0e8d-4828-989d-675c4f3c6847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda043ef-4e38-4bf8-9292-5f1907660565",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2b38bb-567f-4c11-8147-ef787d9d0ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3513326-8dce-4299-bef0-5fa6e409df16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a520fb9f-e0b1-4e0d-8897-d9ffd5a4a0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89841671-c684-414e-aaf5-e4e4484fbb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95de5785-2baa-466c-9128-02abd2227833",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db990ad1-1d94-4354-9f3c-3b27e22eafd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f43f21-dbc5-420f-99a4-3828ccccd40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5d4160-5e08-4795-8bd0-afe5921c9e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2a16e3-6792-49e0-9cd5-540778e47dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff503bb-e89c-490d-99e9-e88655712707",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f550dbb-05a2-4b44-b55f-4e1888d62c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7c9074-c7e2-4ce3-92d7-c2d5bc3470a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9caae68-9a45-4172-bc0c-103630f1bbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab4cdbc-2eab-4db9-952a-8eb44dc93d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66fd16e-4c0c-4c10-8324-a27f02a09076",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6efad3e-5ecc-46cb-aac5-74f2d43bf96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ecced9-1238-476e-947d-5a761cf5ffee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3953521b-f0bf-44dd-a580-460eb30afe36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547fb71b-7edb-4675-9e49-1486b8f94133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e1ef90-bb1d-4951-975f-364c555d2b36",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5eca89-e4b3-4447-8171-d01d043182ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b17b40-ae52-4dd2-aa7e-7d9f032f7a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98ede93-9d68-493c-8e47-8c4ab4ae6a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc7b8c3-bd1a-4b79-a0d0-d1d928540f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8d129b-b50d-4713-bc91-c622d30b113c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2437cfb5-c34c-4db6-b44b-fc47fb8b9619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fa09ee-ed5d-4e7a-954f-330ffe99e4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bc0910-ecd1-4b49-a7fe-bd6c449ba9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22093dd5-d280-418a-8066-ecd72971875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3300d28b-d074-4a5d-ab16-1099ab14add7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a23aa5-8345-4f2f-bffd-2ed40c4f0ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dd6263-7417-42fa-a417-538096a05a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9fc6cb-edef-4c9a-b7de-5b0024f45a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2aac60-a94d-4bed-ac6e-d2e7e16ffada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973df49b-ee02-4efa-8fe4-9886aaa2607e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582ff9f4-c3dd-4c8e-ad22-a15658a7ad44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8f0ac3-e133-4098-845a-67cb5159a717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc7635-beea-477d-bc7f-1a6ffed2688a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05af9442-9577-4d67-9614-9a1628edc78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94db3967-388f-4ec0-bbef-34b74faa5e29",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4af755-9766-464f-bd7d-0a2aff4a25e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2869f97-c0fb-4745-bae2-9ae437a0f9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b760d3-2d1d-4103-8512-7fe307cd1933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3f6b53-e75e-44ea-8639-a09e622ec680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10acbbe8-f544-4653-907f-a7dbe8b3fd93",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86969498-4c38-4cee-a4ae-d12e417400fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959cbd39-16b0-40b2-a0d5-9a978b538942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbf4cbc-2717-47f7-9c53-5f89840ec946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367f3157-f937-4b80-9a46-9f06ce088fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7363c78-b767-477b-aa17-777f90822ef7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408104f0-6f4f-4891-9b50-c9af471335cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c54e6-762f-4600-8f06-af4078ccbf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e27137-01d8-469a-981b-73992f88c784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fbb0a8-3702-4900-9a52-bfd82379a68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fe890d-2871-4ce8-8062-d1e1212567bc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e4bc35-ec15-4e48-aee0-dc031bfa7c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f20cdc61-2f20-4ad4-ae28-7373ce9dab31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be895ab-f532-4d0b-a8d9-6bbaec2ca0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a50703-a074-4694-9c69-03e100fea9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ae9d4b-f45d-45a6-a653-f69c585b8af8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6862444-1eb7-44aa-b2c2-61ef9c2a9049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7145ff86-dd0e-42dc-8181-114d9b97d969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711436b-1402-459b-b6cc-1c218d523825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7016fe0-11cc-45a7-af69-5be1873d8648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66279266-b0e8-44a2-81c7-831e73fa1a21",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52894631-2327-4de8-a78f-123e4902d6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed25cfe4-c64a-484e-bdf1-d10513b549fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950026ba-341d-425b-860f-0e8ac9f0930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216e9787-d13c-4665-b493-eaa570fed4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d521e8fc-7777-4dd4-b715-8acf456e3d74",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06456bee-206c-4fb0-9c9d-02b10403fec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5ac20a-9114-4eea-91f0-c2437b685339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f61e62-e7d2-446a-b6a1-6681e726d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcd7929-16fb-4900-8ae6-c088d3ece674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945e2d1d-bca7-4f1a-8129-c83056b1c30d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecb5c91-5101-4170-8a59-59172ff6e67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4140a01-147e-458c-9191-9ceb8e889d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a7f1b1-4eda-47ab-90ad-d75f25d847c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfed95b6-b224-4945-b265-384e69244b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd42397-2828-46cf-9f70-fb2012f74050",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60b9791-3271-4931-af4a-0ee7d9521b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c650c39f-3a2d-430b-9276-7e1b85200caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521570ab-d472-4967-beb7-53d16158ee6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5b6154-7dca-4a98-923d-e5852938459c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb85b65c-e06f-4627-8456-51aa61ce1e77",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ca9861-a9f9-4f53-b6ca-b919610d31dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bb8ec0-8df0-45e1-962e-6bf83b8fc437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f27796-7818-4669-8372-1b59e045e1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39b697e-8fbb-4c25-a86a-13164a0b35b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d57215-5904-46d7-be1f-757b93081444",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9e5b51-0869-40ef-a2d2-2edc2e7f59e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3e71bc-c944-48f8-acd0-9e14ded12736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1725a31-cb79-4a97-b0dc-24a9b325e04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45355d2-0e2b-4eae-bb15-3a776ab2b681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a69ed3-0939-4e48-9048-c60f51d6aba0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be656b-6104-4fd6-9048-1f98e4ff2157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a41adc-6167-4b31-a92f-f9c2d2987466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8826c14a-ce97-4bff-ac7b-321a3687fef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ab8c9f-5acf-4085-8b9a-37861959ae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc7bee4-5398-44f9-97a2-33f25e026b33",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f38f36-c9c9-48e4-a877-9e06fb7bc136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f0f88e-85d0-4c65-b737-4d326d5c3197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d50b8e-bb13-48d6-be87-99530ef6a0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020e4a1b-7342-418d-9f24-250a761c2937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263e498b-6494-4128-9224-6e40b1c9a81b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fbf844-0119-492b-9e60-5d52f06ed3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a45c746-ec71-490a-81ea-7793c348eec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77afd63-e30f-44d8-9f9e-bc3a3bc0935b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e54fdfa-5b7e-456c-bf8d-8819415f1ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135e70ef-54bf-485c-996d-228ff66c69c5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae561e1-5fda-4b5b-af19-1efcf3159cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac99a8b-9ebb-4a46-b9fa-339f46828492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c66357-58ee-48d9-b4ca-a4e4647c7dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54339a04-ba41-4784-99b2-5c0d126048d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674d2435-838e-47da-b69f-b8fb3f17ade1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6779f5e7-65fd-42a9-8254-59b8cc04959e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cd60c1-e636-4277-a4d7-f736049e37af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48983e16-87cc-4baa-acaf-2806a8fda3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d222c2a8-e3f0-48a5-8f4f-a67d0db049ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84902c8d-a19d-4622-9433-60c5fbfae926",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fca1518-5890-4892-a33d-5ebb12df6b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab03ff04-d45e-4992-a0c6-93f4d396d93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a412bc8a-9eeb-463d-9e46-a379ebb581fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51481b88-b4ee-4103-b99d-74332dc170ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e2edc5-ea60-4533-a5f7-d5dfe8e100c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0889ca7d-9165-43f2-aed9-01e94071e88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce45bca-0e17-480d-9c3e-11812fca6eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238ccef1-0a9e-495c-ae88-6137a48dab23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294e86ab-0f87-4a28-854f-7840329beb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdfd4c0-42b1-40ac-87b9-5f50cb2a6506",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5c9e1c-9c24-42f3-8adb-d5035bea49a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb3cd38-119a-4ee2-aacb-8036e189cf6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08995a-6c20-46bd-ad03-27be3ad87748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bd8765-c63c-4fb7-93ff-f9329f87d7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45400132-7a57-4ade-8dbf-26167ce72c1a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5765d59-0309-41c7-9c9f-2d2b4a921038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f06e25-edaa-47c9-b3d8-e657d1dfddd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b3b5d2-2275-429d-91a9-9fd8f3d8d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b725099-9182-4cd3-980c-909a34a1313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696d74b0-d032-41ab-941d-4111e9f9adf4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee75790-61d7-432a-975c-85c631cba0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fe2e76-89c0-42b8-bc39-bd483b3363eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e2eb06-52f0-442a-a2b1-6f63a5041634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dab95c4-ad53-4ad8-8176-c34bdddcd8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac6f5c-c57e-4afd-9b1f-5cbd79396212",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fff5edf-f1d0-4d7e-8a80-b34cd5d18b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e105d9ea-f338-411a-967f-cdc87d87fb0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90774f34-75c8-4a38-8de5-0cfe72f2cd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2165e47-a58c-4fad-a208-40e74b782cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8282368-fe75-4592-a820-7e8e34a001ce",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d627f73a-9000-456b-b80a-7e0ab2541937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51cffe70-1173-4302-b55c-5ed3f51e1ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a275bfd-41c1-4c30-93b7-7789e5b23990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332ba925-f838-4f97-a2ed-ab933f31c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb582881-d4d8-4c32-9802-f425f6339e99",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ac749d-c2d5-4a46-8ee5-fa2885117805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3883846f-f733-4210-a00e-55ef4c038e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df46c779-fbd2-4d99-af0c-5c705612735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f219301c-2b28-4676-ad2c-3c5676d5a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e55831-da96-447e-952e-6f25438253ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaac453-a54b-4ee0-8491-e0329d2bceea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57e5bbd-0bb3-4a82-9f70-5d4134464078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3946f032-b851-4e19-97f2-252203ca5492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf6c467-eb69-44ef-ba89-bf16fbb79166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d6414a-8843-49a3-b6ab-c914e611d6f6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0615e3b-7861-4938-a644-699037740b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da695276-e124-44ca-b3da-80f2d4e77f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c29f6-292c-41da-8328-20f19cd6cd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fe716d-7e26-44c7-9c09-259ce0c98f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03017d16-89da-4c6c-baa0-520fe80a88b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4b0c74-16b9-4019-a8b1-6e220df12198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fb1baf-d40b-4276-be5e-aa3e22a2e054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172a13fb-61a2-4398-912d-4a0c4953a6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e006671-b3d5-46e4-971c-6b9ef0a1752c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff6f94b-a95b-444a-acf8-65bb63582af5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7439157d-ee27-4cd0-9821-d3f33dc1ff75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e95fe9e-14e2-469c-a5a7-cc70502a1f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63602c7-78fd-41ed-abe3-a987abc9b3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feba632d-3d7e-4c3a-87f8-f9e7a1b85ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94df6883-5778-4ea9-a246-c8f7b1e7937e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bd60ff-6459-4642-a113-75d114902280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7d5f46-3741-44c9-9f9d-4bb536b961df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6065d7d-e2eb-4540-80f6-18e475966bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a83bc6e-3052-41a0-873b-db777458f192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b26aade-746d-4b33-b9bc-ad805945cc42",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998fb2d4-431b-4ea7-ad5d-009f792d1908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf03ec6-c969-4aef-83e4-40de90cfb9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be0e57a-6d81-4e0a-b1c6-914504a3e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140376ef-6af7-49be-a7d6-f6b1c89e3c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a557c-c6c0-46f0-9ed1-7b96e2a9a288",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68049f66-f675-4070-bc6d-382ef6ec4932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942e3355-add6-460b-8fc2-85fea68f39e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61abceb8-0310-4ee8-aedc-f49a8ebded0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e3988d-ee90-4567-b1b9-35bb021e9469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a03654-f282-43ac-9226-191703c3db17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34ffbb8-29d7-4db0-90ff-8382659598eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2bfd4e-e07e-49a5-b06f-6bfaa45441d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0767a0d-8b13-4504-b9c8-e26ad77fd6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f248be8-8a2f-4f71-905d-d613269a2b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4e2851-885c-4bd5-9e00-7b0ba097fa57",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b36137e-2514-4aba-b19c-c91af2924e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597e9118-2578-459e-bd89-763b3dc1e992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1120c21-8395-4a4f-b804-b01398e1c3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e572783c-9e98-4223-b3f2-7a72b9a00a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f98c619-4f03-4382-8bdb-b7fd19585d18",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0aa447-08a5-41a4-b3ba-183272980c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8dee6ff-b266-461a-b2bf-4e42b8679ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a391a3f-e70d-4a90-a1b0-0fb387966793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ee68ed-faef-4419-a045-a33da96fc6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5b345b-48fe-4789-aed0-617a8c165755",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5174ec-5c4a-46a0-9b24-bb7677a132f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2300e0a-8b07-4135-9c7d-641284b58573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ca89b1-095d-4b51-bf57-836fb81ddf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1924ce-3710-49dc-a371-af152adc3802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fedb0ca-4381-43bf-833b-1b8c5f68c290",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e73bfb-8c96-4dfb-9f6d-eb642c9a2526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511f6095-b8c9-4cda-8399-582283388e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291043b7-00d2-4d0b-8b2a-e9627afda062",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fa587c-506b-4301-b107-1a161e486439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0a0c10-f81c-4bef-b1d8-10f8b45135e6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218d5c0b-951b-4569-985c-e3863acab2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c7c308-f97b-41a1-9cbb-956b098e4788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29838dc8-4237-4e39-9ac8-cd67191fdd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7610b1-505d-4690-91aa-52087b9b95c9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04754f09-0adc-48f1-a8a6-b1c0c9033368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b9a8b85-cbd3-42ba-b124-2b04b3e4b84d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3048999-92cd-4ea0-9f67-74864e4ce1b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "985c5a94-3204-4077-ad74-f6251fb1a924"
                    }
                  }
                ]
              },
              {
                "id": "8e68bc5e-406e-4714-a985-9c91f39d5b6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b72b8027-7ac4-467f-9a68-53e1d73196bb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98649f2-71f1-4475-8ab0-5c261394f2e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "730ba227-3774-4192-9277-2de9dd622fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22d5b37-c2ea-4660-8b71-2ba7c3e079b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "604121c5-ca2e-48bb-836b-505e50da78ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "348590ee-1cc3-4697-8aa9-675580fc2fcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac6b3a5-1158-4b2a-8e40-038f0e10d571"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0161af8-071c-47bd-87a8-eb76539987fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639960b7-26d4-427b-980f-8124435c8da6"
                    }
                  }
                ]
              },
              {
                "id": "630736e6-0e8f-4d37-b39a-e25a482897cb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eac18339-1cf7-4609-8475-1298bac90be8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee43cdcd-8ffc-4285-8ade-e288aa65d417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad5f9f31-6dd5-4ef4-8edf-1f25d46661bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4049c5d2-25ad-4327-82eb-ae8f82180a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ab01a3-f828-4019-a79f-f00771bb5801"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5ff0501e-4b57-400f-aa56-25360813846a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "492c551b-3da6-4303-9039-9fb8d381ab96",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e394fed9-5860-4c02-952e-649eb2815f0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c555295-fff3-4190-bd9e-8a7956869458"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a13d95-0119-4c63-836e-dc5a1cac5b40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57bc9ab4-1f17-41a1-8169-ab7f44fa20d6"
                    }
                  }
                ]
              },
              {
                "id": "c4e42989-828e-454d-a47a-cff0f96cd837",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e1c84d-3efa-4456-a801-379d8aceebbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35b772a0-683d-4619-a4b4-1e56bb17506f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83033dd2-cd37-4db2-af6d-e408ff59ae5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0cbe37f-e721-40cd-b25d-41457065799c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34266bee-84d3-4ad1-ade8-4bd1cc365552",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ef60289-6a6d-4f0e-8cc2-e8fcb9c7254d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0712c7ec-1490-4354-909d-fe4cee8e3f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4a8711f-cc07-4838-8101-c81f4a925d87"
            }
          }
        ]
      },
      {
        "id": "b6808a32-5132-4646-8fbe-74e0fe9e813a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "467f76b9-0951-4ec5-bd32-3298d416482d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab0f4668-d35c-48f6-841a-8d149fe54fec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "666221d2-d80f-4989-8a4d-c499c74bafd1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc17f30c-d232-4704-8b1d-f0cf4a9f57c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "872c9d52-b01e-454e-b817-b9a032c64b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9933389-9a8e-4179-b602-71493d9dcd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2148c782-a746-4e44-b7c2-09c9208f2fef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d824198c-7e24-45e9-864f-577b9bb17155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c35dfc-ee38-4f5c-b115-852b1b35c094"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7994ee0d-dd07-4324-a208-8334e6e02ef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebb224d1-7b25-4c1d-aeb7-f7f8185e7346"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ef732dc-20bc-4e21-8043-80881cfdcb8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6071b0ed-33f4-4874-8f19-ac2679eb07c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c937350-5e51-4593-a4d2-803dc8cd8497",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f0d1294-0ac5-4170-870f-69a848c1b85f"
            }
          }
        ]
      },
      {
        "id": "cbdcc2da-2700-4462-8842-6be9394fa52e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "39ef8a91-6047-48cc-b5e0-b7216c9c1059",
            "name": "Negative Testing",
            "item": [
              {
                "id": "617cc0a6-c5a6-4e54-8dc2-7fc0ec9fc5ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5abcdd6d-cf33-458f-bad6-71c2567d6e90",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94992494-0a86-4235-b52d-e82c3513ab88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49e10080-7d78-4afb-bc64-c3a6f3bd94b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b59a0e-08c6-4108-98e7-d45c194c3fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84cf5230-69e0-4af0-9cd5-a6618fe8aa13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ac5c3e2-a927-4e1e-b62c-47dc3ed733d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6c8f8ec-3d07-4e85-bb8e-7b0ac0d5a99e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0640f16-7cba-4434-a10f-714cfa159dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91cdef87-3d34-4f98-a9ff-6ea43933f2ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec805333-67cd-497f-ac21-89ddcbb17cf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "642d6a86-71f0-488c-8a43-b8f7476386a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5ca580a-1d44-470a-8caf-008c3ec16424",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6ddcc69-734f-4de1-a4a4-d0cd5a2b8522"
            }
          }
        ]
      },
      {
        "id": "5932ccf3-0cb5-45f8-bb48-9a2f05f4226f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "436a18c3-b5fb-47f3-a230-aadf91dd584c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7706544e-8bfe-4ada-ad09-057f79684755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e596dcfd-f5c9-4d90-8352-fba1cbaeeed3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1366459d-d141-4342-9bf0-170e97623627",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b00c517d-d3ec-4ba8-8f1a-6cded3f5be87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ef41f9-cb20-47f9-93c3-b3a07031a1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83a93000-b742-4335-921d-bc0011c561ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec6d7259-3302-4771-bf1f-977b5d1b3dc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fbaf7b1-bf74-404e-9614-a0bf2a7bbdb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba639d1-b25d-41d0-8f52-23c092c09fa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f6bdaf7-2253-4d20-8baa-7f6c600a532e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17550b49-df05-4f7d-a95a-272bbe25b44d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e38d6fa-9861-4023-8d14-929ecd6bc13e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f773fbf-8dd4-4e6f-b449-117f8a5a787b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3566dd19-03df-454f-8731-534dbd729fe7"
            }
          }
        ]
      },
      {
        "id": "1498cd43-96b1-4c3b-900c-2a68e96471fa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15469239-ea02-46dc-bf20-068e77c46762",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ecd4fc6-e405-48b6-b984-b6d8e37969e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "22fe70cc-e391-4580-987f-8fe18ad86fa4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6efbe41d-9741-49b1-803d-db317bf65c4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b287a34e-200d-4299-a534-137880d132f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.59298245614035,
      "responseMin": 5,
      "responseMax": 321,
      "responseSd": 22.570185734446497,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702946172912,
      "completed": 1702946200558
    },
    "executions": [
      {
        "id": "70020cd7-aa11-4e97-8e8c-1c0b7e9a61bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cb2f0052-8f06-480f-b400-6abedda13702",
          "httpRequestId": "812e3b5e-f366-4df4-8616-50e733ffc2ad"
        },
        "item": {
          "id": "70020cd7-aa11-4e97-8e8c-1c0b7e9a61bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a9f4889-d54e-4fe1-ab2b-b1dd0775b6fa",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "f07c8af2-2a05-45f0-892d-9b9e2c047ccd",
        "cursor": {
          "ref": "1073600b-8951-4eda-b78e-2bca4f918ff7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "61784bab-23cc-495b-91d4-ca6c07bbebac"
        },
        "item": {
          "id": "f07c8af2-2a05-45f0-892d-9b9e2c047ccd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5175168f-e25c-4e46-99b1-abe27bb1f89c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "fe029de2-2f8c-463b-9026-577a022098c9",
        "cursor": {
          "ref": "473c4c4e-3c18-4960-bd40-7c99908b05a7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "efc110b7-671c-4be9-8e71-600f1c85d7af"
        },
        "item": {
          "id": "fe029de2-2f8c-463b-9026-577a022098c9",
          "name": "did_json"
        },
        "response": {
          "id": "7dfaf6dc-7755-4494-8735-5cce1cf02ff8",
          "status": "OK",
          "code": 200,
          "responseTime": 321,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51cde2-d881-413e-a8a5-cfe416fc3e88",
        "cursor": {
          "ref": "c98503b3-e2db-40a3-9096-2d915b7a9695",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ae857de-da15-41fa-8cf0-0bb892168f8f"
        },
        "item": {
          "id": "7f51cde2-d881-413e-a8a5-cfe416fc3e88",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b0d558a-a63e-4687-9bfd-9b2b9140c9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51cde2-d881-413e-a8a5-cfe416fc3e88",
        "cursor": {
          "ref": "c98503b3-e2db-40a3-9096-2d915b7a9695",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ae857de-da15-41fa-8cf0-0bb892168f8f"
        },
        "item": {
          "id": "7f51cde2-d881-413e-a8a5-cfe416fc3e88",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b0d558a-a63e-4687-9bfd-9b2b9140c9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ff9772-6a7d-4424-8f61-14b6a05c99af",
        "cursor": {
          "ref": "23c46ed7-c714-4339-8445-7ff9b26dc723",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "84f807fa-7627-40d4-8f88-d3f0a1652bd2"
        },
        "item": {
          "id": "33ff9772-6a7d-4424-8f61-14b6a05c99af",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d90cd0e8-ea19-4256-942b-1ab60b4749e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d1345b-7e60-4cc8-94d9-705e9de305e7",
        "cursor": {
          "ref": "e6763198-e7b8-44a4-9b8e-bea5a55e3ffe",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "648ac967-ffdf-4ce8-bffa-024e41f6f6ae"
        },
        "item": {
          "id": "e4d1345b-7e60-4cc8-94d9-705e9de305e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "536b3dd6-17d6-40ae-9e75-135b21427af2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009e087d-ec36-4115-9f5c-8828b2f4489a",
        "cursor": {
          "ref": "b84630c0-158b-46a3-9c05-d745fdfee80d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "83d9ae5e-f57c-4c15-9b73-ae4e62e4fe82"
        },
        "item": {
          "id": "009e087d-ec36-4115-9f5c-8828b2f4489a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cbdfe16c-6297-4fe5-af93-eb1acaebaaeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7648b3dd-1b73-4a07-b01a-f6039cea7c68",
        "cursor": {
          "ref": "7445dc1c-c677-4cd4-b528-e6d051241544",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1caaeb86-ba9e-49d7-99a4-3c7054e8cd13"
        },
        "item": {
          "id": "7648b3dd-1b73-4a07-b01a-f6039cea7c68",
          "name": "identifiers"
        },
        "response": {
          "id": "1b4774a3-773b-416d-a6f6-2c40a9ffb2fb",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b1068-86e8-42ef-aac3-7a593cdff363",
        "cursor": {
          "ref": "f3169f94-610d-4366-9b58-c50ae579b135",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "125cd353-cccd-4251-a6a9-1a1ebec25fe0"
        },
        "item": {
          "id": "b68b1068-86e8-42ef-aac3-7a593cdff363",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8022c4cf-cce9-4b51-8aa3-127c0ad467fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132dbf05-16db-446e-ba8f-9941c62c856b",
        "cursor": {
          "ref": "5c26b57e-d71b-45dd-994b-de9426fa1e36",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9aca35f4-bc7e-46b5-bedc-9da3fc0eaf1a"
        },
        "item": {
          "id": "132dbf05-16db-446e-ba8f-9941c62c856b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5161ec2d-7253-4da0-ae11-709bf72d5108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d64ff0-9e8a-407b-9232-54c2cc66e7f3",
        "cursor": {
          "ref": "f676d83f-14f3-4e45-aac5-61e7179035e3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0613c595-bef8-4dca-bedf-31ee1508d36c"
        },
        "item": {
          "id": "e8d64ff0-9e8a-407b-9232-54c2cc66e7f3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f6ec0d1d-ff23-475c-bcc1-a7829e1fc135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8be1d20-ad52-45b6-b14e-fdb6339e2853",
        "cursor": {
          "ref": "dc6395bb-dcdc-4076-a1e2-bce419492ea7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "367b9605-f97a-40d1-8366-2dc4228a3f17"
        },
        "item": {
          "id": "b8be1d20-ad52-45b6-b14e-fdb6339e2853",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c38e24a4-9c64-421f-8430-b1f61c27308a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffbf85-4eb4-4319-8e12-126259ee8050",
        "cursor": {
          "ref": "aa289ec3-fbf2-4f86-9881-1352d6c55c18",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b60a5ece-9ed1-44d2-939a-1d33c733b941"
        },
        "item": {
          "id": "86ffbf85-4eb4-4319-8e12-126259ee8050",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0087274c-6b42-44cd-b11a-183d207c0d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a2b19-1896-43c1-9730-85a3eef8d131",
        "cursor": {
          "ref": "aa5d8eb9-eb8f-4e80-a9ad-e5869d265ce5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff2c16c8-1ba1-443f-be96-f0724e454b82"
        },
        "item": {
          "id": "9e6a2b19-1896-43c1-9730-85a3eef8d131",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f2665f1-6751-49e6-ac75-63fbc1faddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6981627-98dc-4bce-b213-d71f50703499",
        "cursor": {
          "ref": "7305428b-d371-4626-841d-b32b0be5f500",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4d886107-71dd-4a20-9d5a-da89b18c0a8c"
        },
        "item": {
          "id": "f6981627-98dc-4bce-b213-d71f50703499",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7fdbe576-8bb6-489c-8109-7ee810d784d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d481a4-b43f-4252-bbd5-ad78a741b9be",
        "cursor": {
          "ref": "c8399e38-c8e6-40d0-b031-9ee50f8c624d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13df912f-af9d-4922-92c0-be9b52642efa"
        },
        "item": {
          "id": "94d481a4-b43f-4252-bbd5-ad78a741b9be",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f50fdd0-e9ad-48b0-baa0-515e0327bbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f0dbf-f132-4be3-9a7b-4fe69ce53f35",
        "cursor": {
          "ref": "5ba84118-bdb0-4ea5-a450-473dfbec8414",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a18204dd-2085-4a88-82b4-cf195e2bec3c"
        },
        "item": {
          "id": "3d8f0dbf-f132-4be3-9a7b-4fe69ce53f35",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f41c1e6c-4791-48e9-8449-6b75b0cc28e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bbcf05-ab98-49cc-9483-a576307da468",
        "cursor": {
          "ref": "161db65e-6e94-4aee-b8b6-29d12d3db9e2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1be59b3-f92a-4a0a-a934-6353feb11c97"
        },
        "item": {
          "id": "38bbcf05-ab98-49cc-9483-a576307da468",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "881b1685-3d8c-423c-a7ec-cac16dac20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6376bd3b-0e79-4e73-9971-8eb57eb5964e",
        "cursor": {
          "ref": "5c0517ac-94ee-4682-92f6-0bf92b8fbf61",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1917eb9-997c-40de-8cb1-51d3bd4c96ca"
        },
        "item": {
          "id": "6376bd3b-0e79-4e73-9971-8eb57eb5964e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9914ecd4-8658-4868-a150-92769c480609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e17eb6-7e4b-4128-a4fe-d2e5caecb7d4",
        "cursor": {
          "ref": "c2446a12-8641-4ce5-8a44-cdce01bab6c0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e9fc4965-17b4-4805-a009-3a71b803df63"
        },
        "item": {
          "id": "15e17eb6-7e4b-4128-a4fe-d2e5caecb7d4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "83d91f12-8837-495c-a149-45c2de4036e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09bfc1d-e2c7-4ec6-93b7-d58022f4001d",
        "cursor": {
          "ref": "f4b5654e-816f-4130-9be7-4e5fda8a7754",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "31f75a60-9aaa-41ba-bf8f-d684c8dc17cf"
        },
        "item": {
          "id": "e09bfc1d-e2c7-4ec6-93b7-d58022f4001d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9ed10b7b-3ba2-4cf7-a207-d339098daee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202ef4a-18c7-4162-9928-b19542992620",
        "cursor": {
          "ref": "0e164a97-c4d5-4bf0-b683-5830d50e309c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "81e38d01-9703-443e-a5f5-634568caabeb"
        },
        "item": {
          "id": "f202ef4a-18c7-4162-9928-b19542992620",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bc5efffc-459f-43c1-80c3-efbcd5f6770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4c49c6-7884-4f1d-a096-71340110697b",
        "cursor": {
          "ref": "31ac3cf5-976e-4280-8018-458356c75557",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c708ff48-b24d-4487-a4ef-8a3372aaab48"
        },
        "item": {
          "id": "dd4c49c6-7884-4f1d-a096-71340110697b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25608bbf-25af-4012-ac65-b1da02059b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b02fbe-3880-4d4d-8265-12fd6b480641",
        "cursor": {
          "ref": "1bfbd0fd-8b56-4c8e-b3bb-a39535fd6009",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb56b8c2-eee6-407c-8321-0d044fb7e763"
        },
        "item": {
          "id": "88b02fbe-3880-4d4d-8265-12fd6b480641",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2b9c50a7-7531-493d-bb28-ce97b29a3def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73656c8f-0bcc-4da1-ad91-a0480f99643d",
        "cursor": {
          "ref": "0624859e-b995-47c2-afa7-f4d46ad0d298",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e02321e5-e0e6-444f-8f11-27d4aa71ab8b"
        },
        "item": {
          "id": "73656c8f-0bcc-4da1-ad91-a0480f99643d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7976b99a-0ef3-4f34-85a2-524e5cbfa833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ee815-116d-48cb-897d-b2c2df56ed0f",
        "cursor": {
          "ref": "061b2488-1b6a-4da7-b13c-1faa8de19af8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "baa98469-5aa0-4b89-b7d3-9e1d256ccd01"
        },
        "item": {
          "id": "436ee815-116d-48cb-897d-b2c2df56ed0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "716aa14c-2e56-4a7b-a09b-e29084bc9cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7304836-5f1f-46e8-b915-91dc247d6eec",
        "cursor": {
          "ref": "bcca6e9c-e3f6-4cf0-b593-fbf107f260c5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dccaa11a-e167-4b02-9f5b-cd0fc6a6eb1a"
        },
        "item": {
          "id": "f7304836-5f1f-46e8-b915-91dc247d6eec",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eae31611-1d5d-48ff-9297-83f9fc9ed010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc328e4e-17b7-4477-a1c6-1c51296af259",
        "cursor": {
          "ref": "ad5a079f-a2b5-472f-b2a5-afe8ce47463e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a10ef8e7-565c-4855-bd63-df7b49e39a27"
        },
        "item": {
          "id": "cc328e4e-17b7-4477-a1c6-1c51296af259",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5c1259c1-8a30-4c02-9ab2-3bcd73980716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab4fe6-7253-41f2-8b5a-d4e27d00c3ce",
        "cursor": {
          "ref": "3dd2d519-bb5f-4c37-ae17-15f8f6523e24",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a8247c6-eaee-428e-8645-9fdfac242e31"
        },
        "item": {
          "id": "e0ab4fe6-7253-41f2-8b5a-d4e27d00c3ce",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "24f268dd-57f1-4edc-95de-37bd775451f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea1f2f-7b23-4026-80c8-11fab29585e9",
        "cursor": {
          "ref": "6b6b73cf-3f2a-4cae-9732-c0804e9ed4d7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "82cf1b0c-b036-4eca-8f8f-c1ab2f01f07c"
        },
        "item": {
          "id": "b8ea1f2f-7b23-4026-80c8-11fab29585e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05b930c4-7248-4fb8-82db-cdbb8f0fb2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d2d371-3749-4960-be5f-f0b5afc33f96",
        "cursor": {
          "ref": "649ab5f8-0500-44f8-b6ab-1c33a759d9d0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "630759ec-e70f-4ecf-85d2-1bd2139cc1bb"
        },
        "item": {
          "id": "43d2d371-3749-4960-be5f-f0b5afc33f96",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "75bb522b-c651-4930-b170-f3674214919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9da7b-b5c3-4bed-ac55-15a88a3b3caa",
        "cursor": {
          "ref": "252b2555-9854-449e-885c-66b2f12e2377",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72010823-ddaf-4b0d-80a2-2a218f8d462c"
        },
        "item": {
          "id": "a2e9da7b-b5c3-4bed-ac55-15a88a3b3caa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6a807442-014f-4f2e-b57b-67da5a846a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffa4d9f-476f-494c-8960-908f768acf8c",
        "cursor": {
          "ref": "f18a1118-195a-4f9b-b6a0-2aee90faa881",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "58b5fd39-7bcd-4eeb-8e44-97a1cfd40835"
        },
        "item": {
          "id": "5ffa4d9f-476f-494c-8960-908f768acf8c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d4d3e35-2dc6-4839-b1c2-a6c4b68a7d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e049c79-0700-428f-808a-6255d4501a49",
        "cursor": {
          "ref": "f6779b73-5c0d-4e73-b7ae-9ce28e82c360",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3a604ae-5949-406c-9795-b407ed250387"
        },
        "item": {
          "id": "7e049c79-0700-428f-808a-6255d4501a49",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9cc4d4d3-ff1e-44c2-8363-3a57236e0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf57000-c3d4-4f5b-845c-80556be88b90",
        "cursor": {
          "ref": "cefb3a83-8473-4e2a-858d-772033679b48",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5a39fbdb-8cc9-4199-a508-920219c08848"
        },
        "item": {
          "id": "2cf57000-c3d4-4f5b-845c-80556be88b90",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1f5a215-dbd4-4c6a-a85a-7f3a729fb7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57e2386-f032-4f37-a4f9-71ed6456ca99",
        "cursor": {
          "ref": "d589c015-b156-41a4-a0d5-161ed052594e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e2004d68-eef6-43d2-ab81-10f95917f208"
        },
        "item": {
          "id": "c57e2386-f032-4f37-a4f9-71ed6456ca99",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3ac5141c-a97a-4cc3-a7a3-c8afba5e5645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e2ae0-7277-4626-a40e-5e8bfa30f75f",
        "cursor": {
          "ref": "76e670f3-ea71-4371-b4ee-c6d9a48b0f6f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "653047ca-a0fb-47b2-92ef-98508de1e909"
        },
        "item": {
          "id": "704e2ae0-7277-4626-a40e-5e8bfa30f75f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f27faeef-8915-4e5e-9b4c-e003d692cce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2b3589-a1e4-42fd-b7b3-63d1d41c9159",
        "cursor": {
          "ref": "854563c7-66cc-499e-9210-a63a1ffbee4f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9ccc3119-c17f-497b-a3ec-49862970092c"
        },
        "item": {
          "id": "ca2b3589-a1e4-42fd-b7b3-63d1d41c9159",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f9356635-bc4f-4e7d-987b-de25750a7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3ae6a-ca86-4d22-9ab2-f1093d335e1c",
        "cursor": {
          "ref": "822b2206-81ed-4029-a457-7e3195ab8282",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d3f3d7ac-9927-4d1d-ac77-3265ef325c49"
        },
        "item": {
          "id": "f7c3ae6a-ca86-4d22-9ab2-f1093d335e1c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8b7d8ee1-7718-4bdf-970b-2971e2ba8313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1551ba83-0548-403c-bb02-fc1d97f674f2",
        "cursor": {
          "ref": "639d316f-2b2a-4860-949d-999e36530d98",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "61b0a88b-58b1-4cdd-bf28-8b411812fdfe"
        },
        "item": {
          "id": "1551ba83-0548-403c-bb02-fc1d97f674f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f86e3a00-efc4-4019-98c1-2ce507e1b83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7208e9e8-57f6-42ca-b22d-f69d0e7e5bf8",
        "cursor": {
          "ref": "9eacfbb6-45b5-4bc5-aaf8-57c1ac96fd24",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "37d34a30-c93f-4543-b226-a41c1ca05ec4"
        },
        "item": {
          "id": "7208e9e8-57f6-42ca-b22d-f69d0e7e5bf8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d1610e0d-4cf8-4053-a2f0-52e8a41a70a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ec6c96-e7df-4493-8b11-8aa4807e2273",
        "cursor": {
          "ref": "d209fcf3-7521-4789-9af5-511c50d893a0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9ca058f6-975b-4c0c-a3c8-1c0ddc10c442"
        },
        "item": {
          "id": "24ec6c96-e7df-4493-8b11-8aa4807e2273",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eb85e06b-2491-4bea-a5dd-88de9a4da6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534510e-1145-4326-a741-e4ea54824c85",
        "cursor": {
          "ref": "908d9119-817e-4400-a23d-12b6e878656b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "074dec08-9ef8-4ca3-8f3b-f2b12da36656"
        },
        "item": {
          "id": "c534510e-1145-4326-a741-e4ea54824c85",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "08be4e7f-017a-452c-a60e-518dfa2a791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e3b86f-c412-43ce-91c6-03e0f1dfd8c0",
        "cursor": {
          "ref": "29023ea6-da67-4441-b8c6-60c9ac182cd6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "08e81b71-7c94-4f1c-aee0-cb77a3d2567e"
        },
        "item": {
          "id": "b5e3b86f-c412-43ce-91c6-03e0f1dfd8c0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0a33da91-ea6d-4657-a2e0-7865216250d2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f8a64-de9c-4342-8230-93e1d24ea06e",
        "cursor": {
          "ref": "ce1fc976-4b55-4879-8c85-b6c2e2b835ae",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "59a32cf1-9396-4827-b4df-622a8dfdff86"
        },
        "item": {
          "id": "7e5f8a64-de9c-4342-8230-93e1d24ea06e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2583140e-ef5f-4751-9cc8-2bbdbedc6561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5254bbdb-4867-42df-b4cb-3d9c17217c29",
        "cursor": {
          "ref": "7211daf7-3e62-4c86-919a-347a97ab8e25",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4e16ecca-e508-4a3b-af69-1351478f3df1"
        },
        "item": {
          "id": "5254bbdb-4867-42df-b4cb-3d9c17217c29",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "31ff0edc-77e9-40a5-a4b4-b33a85a42311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb3a304-8a8a-41cb-a96c-bfa0339a6979",
        "cursor": {
          "ref": "101b3869-ef88-45af-9146-205ea0608ea3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f51ba30-7ba4-4c16-a2ad-c3c201eb3d06"
        },
        "item": {
          "id": "3bb3a304-8a8a-41cb-a96c-bfa0339a6979",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f0a79e2d-dc8d-4494-8a8f-f18773670f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5131dca9-93f9-4179-a615-4bfe80b51384",
        "cursor": {
          "ref": "39557595-86a6-4ec5-a65e-8ab310d09578",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b3bda5df-c8b7-47ab-9eeb-be0c65952095"
        },
        "item": {
          "id": "5131dca9-93f9-4179-a615-4bfe80b51384",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d06b02c4-b11c-4722-9cef-0878fbc38129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979912dc-be42-4de2-b8f0-8121923c6549",
        "cursor": {
          "ref": "ebc0b904-213f-45c1-bbfc-09c40dd99e28",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0a863a38-675d-4533-a7e0-6f81afca9d81"
        },
        "item": {
          "id": "979912dc-be42-4de2-b8f0-8121923c6549",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d5181d77-0c8e-4b29-9040-6e2db277c1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a8d072-097c-4702-a02e-3e7b25d9774a",
        "cursor": {
          "ref": "e85ad52c-f1f3-407e-aaf6-270f546d3556",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c72ebed-c06d-47c7-8a9c-25ecd1db6b7e"
        },
        "item": {
          "id": "90a8d072-097c-4702-a02e-3e7b25d9774a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "75598bfb-6ce7-455c-a559-e854427fbcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13e21b-7435-412b-ba47-dca2b9002f0d",
        "cursor": {
          "ref": "c190f471-eadb-49a4-af73-5dca7c14580c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "48992606-85bf-49cd-b713-d2faca9cddf5"
        },
        "item": {
          "id": "4d13e21b-7435-412b-ba47-dca2b9002f0d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "71a5e2db-41c5-4777-8bd4-ff6342588596",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba4a0fc-f7f9-4930-928f-45a7ff65d62f",
        "cursor": {
          "ref": "adf8a62d-13ba-425a-be08-4c1c0822cc58",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6d357e9e-7263-4da9-9cff-77182bbb22db"
        },
        "item": {
          "id": "fba4a0fc-f7f9-4930-928f-45a7ff65d62f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a934cd69-57d9-4964-8543-6d628778287a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2582e4-f2f0-49a8-b5d6-73521be599d5",
        "cursor": {
          "ref": "a784abdf-0767-4360-a5b2-989fdc90e96f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f25e2ad-0d37-4256-a3a6-ca1a130ccd8e"
        },
        "item": {
          "id": "3c2582e4-f2f0-49a8-b5d6-73521be599d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2bd522df-3675-44c4-b7bd-f09be83d8328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f901094-8701-4141-8597-932212dddaa1",
        "cursor": {
          "ref": "360f5e1b-0800-4848-8c7f-94ddceb55ed9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4544ba47-868e-4e24-bf10-98267ef916f8"
        },
        "item": {
          "id": "5f901094-8701-4141-8597-932212dddaa1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f382974-27cc-46e7-a182-d7bdec9bab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828aeef-aac3-48f4-b6c9-35cec228c8b2",
        "cursor": {
          "ref": "ebfe959e-eae0-438e-8051-70c058e16c5f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "253eba83-9a53-40a6-bfa0-e8f395e52ca8"
        },
        "item": {
          "id": "d828aeef-aac3-48f4-b6c9-35cec228c8b2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e4058a7e-d615-4cc4-9e31-5f5f6903db2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c7028a-e6d6-4792-b10c-871f9864dc2a",
        "cursor": {
          "ref": "a4b2c45d-e7d0-4e3c-ae17-1f639977a322",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7d08af36-fd28-4235-a574-031297268a0e"
        },
        "item": {
          "id": "f1c7028a-e6d6-4792-b10c-871f9864dc2a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b865b3c8-e3ca-4a64-a162-338851bdda7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b473f84f-7f17-46a6-9097-a51d51f6e3df",
        "cursor": {
          "ref": "44b0e573-9b77-4378-b4b7-632a6760b374",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8beeb8cd-88dd-41e1-8ea3-22d7bb666f90"
        },
        "item": {
          "id": "b473f84f-7f17-46a6-9097-a51d51f6e3df",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e771a4c9-6a17-49a5-87f3-22420f6e166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e7739f-fe41-4cd7-8d38-8b74971b7575",
        "cursor": {
          "ref": "bd92516d-75c3-4bac-bbe2-6f961e04fc33",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d8693fa8-ffcc-4b86-95aa-cc0d8bcae767"
        },
        "item": {
          "id": "33e7739f-fe41-4cd7-8d38-8b74971b7575",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "473c68d9-65e5-4ae7-ae47-49f2ffcc4cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c3450-5718-405e-b0c3-fdae9391794c",
        "cursor": {
          "ref": "2d48ba45-04f0-4407-9d3b-05e356b13b54",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "803fc16c-e176-4b32-99f3-e7f2c448a704"
        },
        "item": {
          "id": "3e0c3450-5718-405e-b0c3-fdae9391794c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7b0d682b-9b4f-4fc6-839b-55b2c6bd9b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee06d7d9-b426-4239-bb2f-b7e5701e855f",
        "cursor": {
          "ref": "3b22f2f7-80a1-4453-a1a3-a45c8aa59030",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6cdfcea-fc80-48f0-9f6a-616dc042dea3"
        },
        "item": {
          "id": "ee06d7d9-b426-4239-bb2f-b7e5701e855f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bac91bb9-2680-483b-8962-a531f997e3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc14ffa-e3cc-4bc4-8ff3-5e809ae6c681",
        "cursor": {
          "ref": "ed4e3478-f9b7-4609-91cc-990d569694d5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e957a65b-815b-4b9a-9f07-8281ffc4bbb8"
        },
        "item": {
          "id": "bbc14ffa-e3cc-4bc4-8ff3-5e809ae6c681",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6f6f0537-8e18-40ad-b4ea-cee99c7c1b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff5261e-bff6-4e35-85f3-add13d1214bd",
        "cursor": {
          "ref": "f2923343-30d3-4e12-95f6-55bbb11ce415",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f4f6c42-f1d2-4462-be3c-f9278f305e83"
        },
        "item": {
          "id": "8ff5261e-bff6-4e35-85f3-add13d1214bd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1d0f1a33-1a83-44db-94c5-f4b13ce2d778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd56c55-41fa-47a2-88f3-028452fc7292",
        "cursor": {
          "ref": "6500abc6-48e7-4da4-90a3-135fc844f47c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6be68442-855f-4df7-b109-fe86828d3954"
        },
        "item": {
          "id": "dcd56c55-41fa-47a2-88f3-028452fc7292",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b82fb7a-ab49-4aa3-9616-78da45631644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045816ae-a4ab-4ab9-ba64-e3fe055de9fe",
        "cursor": {
          "ref": "3f44a2c8-3821-49d3-81ff-17a2f2cb28b2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "46f97f0d-e7ca-49b5-b4f2-7828d543db05"
        },
        "item": {
          "id": "045816ae-a4ab-4ab9-ba64-e3fe055de9fe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65ba1e5b-ebf0-402a-afc5-c329e0119791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8997cd70-2bc1-4729-9720-3d78523d4a4f",
        "cursor": {
          "ref": "e55ce347-5baf-45cf-bb09-1676a7562066",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "16718010-48a7-457a-a008-af1d1b0e4429"
        },
        "item": {
          "id": "8997cd70-2bc1-4729-9720-3d78523d4a4f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7773d51f-846c-4266-98eb-6846b0ff79be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8057d1-be4a-4e0d-981d-65e12179473d",
        "cursor": {
          "ref": "d86270d1-1a3e-41ba-b0e3-3e24dfcd1c66",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5b644911-cecd-4aa9-8280-8a1af6f5a99c"
        },
        "item": {
          "id": "cd8057d1-be4a-4e0d-981d-65e12179473d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6cd7b76-dfed-49ca-8f3a-b9023138ac48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ee346d-fe4a-4950-952b-5b3f2ba73faf",
        "cursor": {
          "ref": "b8a10dcd-7902-4ec6-a971-0f23252faa26",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7d2c44ca-1f3e-48a8-9e2b-a1378c6331d3"
        },
        "item": {
          "id": "89ee346d-fe4a-4950-952b-5b3f2ba73faf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "488ee814-5074-4cf2-be26-a7d8cc7280e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ea274-4da7-4d3b-8627-bc6ea6457498",
        "cursor": {
          "ref": "7ec4603c-3c9d-4b58-a8df-07be9e4f26ca",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5dc716eb-8227-4531-a624-5a75073e3c5b"
        },
        "item": {
          "id": "7c4ea274-4da7-4d3b-8627-bc6ea6457498",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5ada49f1-87c6-4cb8-a001-3fc3535dda4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561ccdb4-f2f9-45f4-b07e-10bb90de43d6",
        "cursor": {
          "ref": "44517394-7ba1-4b90-8d7c-a4b860f482c8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8cd1fce1-f6e3-467f-9e13-12c7271be65d"
        },
        "item": {
          "id": "561ccdb4-f2f9-45f4-b07e-10bb90de43d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1fcd7b01-8ada-42e2-9bd7-af007a4655b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c345d5-4fc0-4a85-9a8f-b62b533f7a82",
        "cursor": {
          "ref": "c446956b-e020-43cb-ae67-a130cff65669",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4c3373c5-8b72-48bb-9856-5d246fb78810"
        },
        "item": {
          "id": "47c345d5-4fc0-4a85-9a8f-b62b533f7a82",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ab47e9e7-7455-4337-81d6-12f27dba8bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cdae66-fb0e-451c-b8c0-7889ebde463e",
        "cursor": {
          "ref": "b9406143-8a05-4d49-9680-34a489e9ca56",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cbe78da9-5153-4b38-a995-0cceb3642fce"
        },
        "item": {
          "id": "f4cdae66-fb0e-451c-b8c0-7889ebde463e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c8ab785-614c-4007-98df-d7805aef40e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dacd556-47f6-4c5e-8f53-47a42343c84a",
        "cursor": {
          "ref": "b349d0e6-89b2-477c-a4a4-73b4c917c7a0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "196fc65c-464c-461c-bfee-305506b219c7"
        },
        "item": {
          "id": "2dacd556-47f6-4c5e-8f53-47a42343c84a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ca29ab3-1b1c-4646-8afb-8d2fa297e446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fba2e4-b4e4-41d2-97bc-b9fb5e66a8e9",
        "cursor": {
          "ref": "8bff0299-2b61-492b-96bf-6c930bf222ac",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ab365642-2358-44c5-9c47-8f4b84e51660"
        },
        "item": {
          "id": "f3fba2e4-b4e4-41d2-97bc-b9fb5e66a8e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e2e64a9-c2c9-47b8-b727-d46ec69b371f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0766c6e-2356-43c4-a790-450335c5644f",
        "cursor": {
          "ref": "92203d31-50f8-4c51-97a8-d3b520831250",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b5a5dbd5-35e9-4f29-9835-3b6fc19bb258"
        },
        "item": {
          "id": "c0766c6e-2356-43c4-a790-450335c5644f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "75a18e3a-1e70-4960-8d6a-fd9f09999204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3d49d4-5e85-41cd-a3ad-a69570280a3f",
        "cursor": {
          "ref": "b37d0f8c-dd10-4df2-9a8c-d984c34c2070",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "232a6311-339f-452b-8f73-6329a2959a79"
        },
        "item": {
          "id": "aa3d49d4-5e85-41cd-a3ad-a69570280a3f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c64919f-929b-4012-a7b2-7c97ef86fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62023d61-352d-4cb8-9915-9eaea714c9cd",
        "cursor": {
          "ref": "9d67520a-2c9a-420a-8d17-401cad53fb30",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc4de2dc-8345-4e36-bb81-4d4db0ed63d4"
        },
        "item": {
          "id": "62023d61-352d-4cb8-9915-9eaea714c9cd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ca894d6c-02df-4909-a6bc-a753773604ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcca6a8-870d-4970-ba3e-dde80b1c5642",
        "cursor": {
          "ref": "0a1ff2c7-86c8-444c-8bfc-571ed239a712",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2d17cc20-cfbc-4efd-91dd-86cebf5604df"
        },
        "item": {
          "id": "abcca6a8-870d-4970-ba3e-dde80b1c5642",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3f38daa-d56e-4a21-9bd5-ff5f2063634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07c8812-105f-40e9-be90-9d74c45dcb7f",
        "cursor": {
          "ref": "8ac2ef16-a2f6-4478-a182-49ecbc23075e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "73cd9210-7de6-4117-94a6-95044bd3f3d5"
        },
        "item": {
          "id": "b07c8812-105f-40e9-be90-9d74c45dcb7f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fa33e181-f9f0-4c19-b840-09d1aec0dde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b63872-38f6-4265-ab33-bc21511c8eb4",
        "cursor": {
          "ref": "65caabd2-3bd6-4a1b-87ec-2adf1d5a9fa9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "df0ce118-8f57-4904-98d4-2ab7b50cc716"
        },
        "item": {
          "id": "33b63872-38f6-4265-ab33-bc21511c8eb4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "52ea9209-bab2-4942-bc5c-33042ef503c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6529213d-3504-4c22-ab1a-3c71e4265417",
        "cursor": {
          "ref": "5b56bcf1-218d-4c4a-bae9-77e13ed512a4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f6510069-87ce-4107-8231-21853a278acd"
        },
        "item": {
          "id": "6529213d-3504-4c22-ab1a-3c71e4265417",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ab1d331e-ab23-4d51-9809-b69009d81419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1764bd2f-ace8-4bb1-8538-f60e2bc6ebc9",
        "cursor": {
          "ref": "d42c2505-5c8b-48f3-8a39-19106e4a2502",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "36b82915-7c96-42a8-bcf8-20a39393bf00"
        },
        "item": {
          "id": "1764bd2f-ace8-4bb1-8538-f60e2bc6ebc9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "890748ad-d101-4b01-b8ce-d74a20aeb792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07224e4b-af7c-4038-ad14-65893da682c2",
        "cursor": {
          "ref": "bcf0eda9-3958-4c48-a510-a009eb387711",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9d6a3b6e-a385-4577-8595-dc62a37b4bb7"
        },
        "item": {
          "id": "07224e4b-af7c-4038-ad14-65893da682c2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09b824f9-3c8a-4b62-83ea-04d1dd78d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898d6722-2e2a-4989-98f5-0d9abf58022b",
        "cursor": {
          "ref": "4d3e027f-9f3c-41d7-92c5-40a869f631ef",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd8fdbf1-eac3-4a0e-9e77-79307d5c2399"
        },
        "item": {
          "id": "898d6722-2e2a-4989-98f5-0d9abf58022b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c778e9a-7e7d-41ed-9844-1303822f1b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005ff804-a08c-4fca-a8dd-3747b70c5a29",
        "cursor": {
          "ref": "3b0b8c0c-a646-474f-926c-5a22c2d2df03",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2ec4d02b-3270-4494-8393-8b0397813456"
        },
        "item": {
          "id": "005ff804-a08c-4fca-a8dd-3747b70c5a29",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fde9a141-2103-4cc4-aca0-f5fe472dbe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c6d103-6815-43c8-9b1e-3bf98e2822b7",
        "cursor": {
          "ref": "b410112c-1eb0-4e36-b2e3-6cd333ec587d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "41d951aa-0260-4e15-b03d-5263f6c2ea01"
        },
        "item": {
          "id": "91c6d103-6815-43c8-9b1e-3bf98e2822b7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a26eef92-f703-44cc-8743-40a7392a46e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cd614c-2a31-4f0f-933b-edee16b97570",
        "cursor": {
          "ref": "0a13a94f-cfe5-4e13-b2ee-589e5c4c4147",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "28b9c63e-5f3c-45b1-9866-95f23401b5dc"
        },
        "item": {
          "id": "85cd614c-2a31-4f0f-933b-edee16b97570",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a744e279-de5b-446e-aecd-d7d4b7961d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42acd3f7-7ddb-431c-b6a1-5f1fe23e6e2b",
        "cursor": {
          "ref": "45a70c1d-de5e-4a99-bf07-0d0da60d5c47",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "170e6541-eec3-43cc-8a59-8d6cf0026867"
        },
        "item": {
          "id": "42acd3f7-7ddb-431c-b6a1-5f1fe23e6e2b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cd014c60-43ed-4cc5-a41d-c5eb63dc31fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea4f66c-77ac-41ff-927a-ffe344ed5685",
        "cursor": {
          "ref": "2cd2387b-fbda-4c28-8c29-3a98a195c8cf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8d515e44-6602-492d-9cda-6a65bfc23903"
        },
        "item": {
          "id": "eea4f66c-77ac-41ff-927a-ffe344ed5685",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "381bbf1b-af4f-4579-bf5d-2eccd08e0f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb48a9-d5f9-4fba-9c5e-869ba722901c",
        "cursor": {
          "ref": "49e60a1f-453f-4b60-b305-b5bed0361f1c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4a187af3-7c21-43f5-871b-acfae8726bbb"
        },
        "item": {
          "id": "13cb48a9-d5f9-4fba-9c5e-869ba722901c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e401c5c0-420b-4ba7-bd79-ffb24d99bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55022a7-15d4-4b4b-91f0-a28f9ee112cd",
        "cursor": {
          "ref": "21138b62-8290-4577-baa9-923d8f5bfec2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9b85ae82-6e3d-41eb-8574-4ee2b322f36f"
        },
        "item": {
          "id": "f55022a7-15d4-4b4b-91f0-a28f9ee112cd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a6e61f8d-ad24-4ba5-bb40-27fee0a4d002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db9a69-6dfc-4f0d-bfcb-9a50b6e37e95",
        "cursor": {
          "ref": "f4507827-de77-4e05-b116-02126e95fa15",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "53d6b058-329e-47fd-9549-5d457d61dcff"
        },
        "item": {
          "id": "91db9a69-6dfc-4f0d-bfcb-9a50b6e37e95",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e023638d-ed68-45ea-b01d-8d36bb4ae7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e03ef9-1ed1-457b-bf88-52d2dccd2089",
        "cursor": {
          "ref": "5f7cab97-dda2-44e8-bd63-d4479e6d8c7d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "599ef36e-256f-49a3-b59b-aafac724990a"
        },
        "item": {
          "id": "12e03ef9-1ed1-457b-bf88-52d2dccd2089",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "557ca2bb-d34b-49fe-9ae6-1a037e89afa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f89646-15d8-4f5c-8b81-9d9d2dc63d1d",
        "cursor": {
          "ref": "ce71a739-1725-42d6-a186-8ff2ab9ebeaf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2f6888f8-83fb-47e4-9909-ac6fce38a426"
        },
        "item": {
          "id": "62f89646-15d8-4f5c-8b81-9d9d2dc63d1d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b588a072-6828-49d5-8a2d-45104caec13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3000cd1-d987-4202-a191-d1029ef08e91",
        "cursor": {
          "ref": "ed62ff21-f8df-4c15-b95a-0e23e384126a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "30a77775-d0f0-4f42-95fd-b3cd742858c0"
        },
        "item": {
          "id": "f3000cd1-d987-4202-a191-d1029ef08e91",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa575045-5e68-4b58-910d-06c24f974829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e41373-0137-4740-b49b-3be746c175f9",
        "cursor": {
          "ref": "73e3304c-303c-42de-b990-54dff741acda",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "db18d31c-46ce-4d82-8e27-7259e99d53a3"
        },
        "item": {
          "id": "81e41373-0137-4740-b49b-3be746c175f9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2bf4bbbd-3063-4eaf-bcaa-dd63bdd40447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f17e516-39e2-4821-8f2a-1e17a176b27d",
        "cursor": {
          "ref": "2b4f77e6-bf44-4adb-a87b-537a1ea266d0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5ce3d996-64ad-400f-ac48-fd9cf6efee75"
        },
        "item": {
          "id": "9f17e516-39e2-4821-8f2a-1e17a176b27d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f64e4ecd-3992-4bec-b98b-f4462e9f9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8b7c16-9167-4c2b-a87d-66b4818b4d12",
        "cursor": {
          "ref": "69d01c46-ccfc-4c2d-be72-a7285af3a730",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a7e17e6f-faa0-411c-a3e8-ae0b08b7821f"
        },
        "item": {
          "id": "7e8b7c16-9167-4c2b-a87d-66b4818b4d12",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07605818-a88d-4e9b-9c2b-4ad9b71a8f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bb5e0c-1cf2-408d-81d0-c3d5584a659f",
        "cursor": {
          "ref": "55fc09cd-5aee-446e-ba4f-ed5a2868d18e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84ff0fb1-48e9-4395-bed8-ff3c6a64aac3"
        },
        "item": {
          "id": "e2bb5e0c-1cf2-408d-81d0-c3d5584a659f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "42d0aee5-21fa-483a-86a8-d792a247d972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea678be-924d-4255-8e19-ffdc5119382a",
        "cursor": {
          "ref": "ce7a4513-6279-4220-9d10-1fb2f7b42724",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1af6d796-1e46-4dab-b882-751b0d15b956"
        },
        "item": {
          "id": "1ea678be-924d-4255-8e19-ffdc5119382a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "30a50b5b-db8a-4f98-b2c6-1c4638df215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8b36e7-33ae-4787-8445-82923e27d7da",
        "cursor": {
          "ref": "a00d4b98-1d2e-4e79-b1fd-8c7c3475e121",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e486a0b6-8af2-4e8c-87e4-156b7bedd8e8"
        },
        "item": {
          "id": "cb8b36e7-33ae-4787-8445-82923e27d7da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1ae9300b-8777-4f9f-adae-d77faa4a2c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f48513-78ad-46b4-88ec-1aa95b40b588",
        "cursor": {
          "ref": "ad0fc93b-ca7e-4b95-9fd2-6884c4746400",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "05eff428-6024-4942-adbc-c631b10f4bba"
        },
        "item": {
          "id": "80f48513-78ad-46b4-88ec-1aa95b40b588",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f251e0d3-217f-4481-b3eb-6f855a06abf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ced59-94a1-4a7e-a36d-7cd2e707bf7b",
        "cursor": {
          "ref": "493a2530-5baa-49fe-940b-d943c54c82a0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "987940ff-e36f-446b-984e-1aa6693c0702"
        },
        "item": {
          "id": "ac0ced59-94a1-4a7e-a36d-7cd2e707bf7b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c06a4867-8f36-41a5-a44b-79d40b60ebfe",
          "status": "Created",
          "code": 201,
          "responseTime": 113,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2f1a76-68ad-41d9-a2ac-65fc13ebd73d",
        "cursor": {
          "ref": "ba2415d2-964e-401a-8dff-2a382777dd8e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "420b54eb-5082-437c-ad3c-c594722030f9"
        },
        "item": {
          "id": "de2f1a76-68ad-41d9-a2ac-65fc13ebd73d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7bc8705-3790-4447-bd84-00c7d441822d",
          "status": "Created",
          "code": 201,
          "responseTime": 253,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3094598b-6ae8-4fbc-8df6-6da2daedfcee",
        "cursor": {
          "ref": "d8b3cff0-3f0f-4374-976d-f21d8842710b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "47109ce2-435f-4697-804e-8dc3d9299470"
        },
        "item": {
          "id": "3094598b-6ae8-4fbc-8df6-6da2daedfcee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dfa35615-6f8e-4dd4-90a3-7178b223e4d8",
          "status": "Created",
          "code": 201,
          "responseTime": 109,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a393b07b-f1ff-4672-8967-df16b8da4319",
        "cursor": {
          "ref": "cc9c31be-a07c-4fff-9bf8-896a27430973",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a417897b-8dd2-41d6-852e-7be01ba7b191"
        },
        "item": {
          "id": "a393b07b-f1ff-4672-8967-df16b8da4319",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4e50ecae-817e-4ad5-9ba4-eb92c14db333",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cae1fbe-59fa-4263-9d84-c22321c9279c",
        "cursor": {
          "ref": "b4fa5076-9354-4a0e-bfac-9b7e75239116",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc48c4af-0802-40d9-aec1-cee83bae5697"
        },
        "item": {
          "id": "2cae1fbe-59fa-4263-9d84-c22321c9279c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e33acf3e-1fc4-4adf-8971-adacce8ef887",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a032b3d-2975-4da4-a07f-bbf4d0713115",
        "cursor": {
          "ref": "6fe36cd5-c981-4700-97ac-56c08ccdf2a2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "64a5922b-7e00-4e70-b331-212d07615da8"
        },
        "item": {
          "id": "3a032b3d-2975-4da4-a07f-bbf4d0713115",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "46d7b4f6-4430-409a-a211-fb2a51e9b604",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "659a1c29-7a65-4301-852b-4c4f0fccd5b7",
        "cursor": {
          "ref": "cdb3d6ca-5acd-4d3c-bc76-0c2947874107",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f7ce8d7-e780-480c-a439-f2a939843a3d"
        },
        "item": {
          "id": "659a1c29-7a65-4301-852b-4c4f0fccd5b7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "17663b12-369d-4aea-8971-4c3df0f7e225",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f683feac-d05f-44e7-b393-bb279c2bb4e3",
        "cursor": {
          "ref": "be44c050-6478-483a-9482-3f1e9c9b9557",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "312a5fcd-db18-4347-9c29-0a31fbc9b9dd"
        },
        "item": {
          "id": "f683feac-d05f-44e7-b393-bb279c2bb4e3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3821f292-ee37-4302-bf02-785ebf4a68a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ea5c2-fba5-4f76-a171-c08912a426ce",
        "cursor": {
          "ref": "95f3defc-25f6-4300-b4a7-5230e9d83993",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "479243e7-95b7-4ee3-a1e5-58e6ce7a6037"
        },
        "item": {
          "id": "368ea5c2-fba5-4f76-a171-c08912a426ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81ad2e3f-63ca-4096-86c9-edeb1077db4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ebae3-7a6f-4753-9f03-93279769e545",
        "cursor": {
          "ref": "60beb9a3-08a0-4df8-849b-cbc855242117",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "668c7c5b-ea71-4dee-bff9-1aa19d9614fd"
        },
        "item": {
          "id": "af9ebae3-7a6f-4753-9f03-93279769e545",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6496772e-5fdb-4616-b2dd-77f829250187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db4c4d-252a-4b83-9ac5-2ecd4c660271",
        "cursor": {
          "ref": "9592d93a-476f-4962-a842-34bb65e15f4d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8c73633d-1ad8-4da3-bc5c-3dd4d8147a6e"
        },
        "item": {
          "id": "03db4c4d-252a-4b83-9ac5-2ecd4c660271",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87a2e95e-4dda-44a3-bbf1-18cc6358d0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3594c9f-1aae-46f0-90c5-9d5a8cea82ea",
        "cursor": {
          "ref": "2f7f9317-8a41-42a5-863f-376883d76473",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "86e3d7cb-e134-48ee-8053-f6fd6d0ed9f5"
        },
        "item": {
          "id": "f3594c9f-1aae-46f0-90c5-9d5a8cea82ea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4b680974-67c0-4a19-b4b4-ce8f99307e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfb24e8-2260-4488-ba23-3a411deae1e1",
        "cursor": {
          "ref": "21462f32-de55-4aca-9f03-760a6c1be1af",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "57ab32b8-8066-4d2f-98b9-aedf32893cf0"
        },
        "item": {
          "id": "9dfb24e8-2260-4488-ba23-3a411deae1e1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9af64aa2-a40b-42a6-89ea-7b39072d2834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25338055-2f05-4a15-8943-488a5448cfa9",
        "cursor": {
          "ref": "e07b467c-cfc8-49e5-ae35-6c0b64800430",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a517c5e-ce8c-4448-a506-2b1ff16dff8d"
        },
        "item": {
          "id": "25338055-2f05-4a15-8943-488a5448cfa9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4664578-f660-4546-a83e-e181c02e0fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8587724c-5afc-4b1a-a9f8-c3726c01c8ab",
        "cursor": {
          "ref": "e8da2d24-1207-4de0-b933-32cbfbe6de94",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c5c1dad7-2d79-434d-9589-64199ac579b7"
        },
        "item": {
          "id": "8587724c-5afc-4b1a-a9f8-c3726c01c8ab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "affcf48a-35a9-4876-a2d9-6709c37a2871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b8c4a-6b22-4fe3-b674-3354cc76e5df",
        "cursor": {
          "ref": "17ca72bd-4e9c-4d84-a5ac-4f922f49c5b8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "db410a5b-9d3c-4bf2-b299-399f10adff8b"
        },
        "item": {
          "id": "f41b8c4a-6b22-4fe3-b674-3354cc76e5df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3aa3e13c-50f6-45e4-a9bd-791ff398dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac45ac69-7c2d-4a70-b5e5-1ae895c6c88f",
        "cursor": {
          "ref": "bcc05d0d-ed5d-4485-91ce-7b09f53847a6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "061391af-aea3-4d7d-8d00-085b3c18bd63"
        },
        "item": {
          "id": "ac45ac69-7c2d-4a70-b5e5-1ae895c6c88f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e3573934-6c14-4638-99b7-a3ffc18d5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b8536f-e678-44d6-a52b-07322b7baabd",
        "cursor": {
          "ref": "e3f0472c-5efa-463e-b1d5-ff606b1e6ab8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4d4ecc56-8254-491d-9161-17cd899e5a94"
        },
        "item": {
          "id": "a5b8536f-e678-44d6-a52b-07322b7baabd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57b4df62-a550-44e4-8c9e-e8d6bd496daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf6c153-59d0-465e-a488-0e21f623b4fb",
        "cursor": {
          "ref": "df980ed2-5ce2-4bd9-8518-0e509f5f3403",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "43bb175a-2a18-45ac-9ce6-8d8b38437c77"
        },
        "item": {
          "id": "1cf6c153-59d0-465e-a488-0e21f623b4fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3cadbdc1-910e-4406-b9cc-493e3d5888af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8e4a48-54d3-424a-9660-72bc19c077e9",
        "cursor": {
          "ref": "3eb0992b-5698-40e1-bc0a-f4ede2fa14ad",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "566ea166-0298-41ff-93ae-2680c3d49310"
        },
        "item": {
          "id": "0e8e4a48-54d3-424a-9660-72bc19c077e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3b11e438-c08c-4580-9e9f-4575fe02da5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905a665-bf87-432f-91d2-c7dd28ed52f7",
        "cursor": {
          "ref": "c0a9d703-db70-4bea-b733-4d0564228ead",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "53bc0e4c-6a32-485f-904b-3adbd064d773"
        },
        "item": {
          "id": "a905a665-bf87-432f-91d2-c7dd28ed52f7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f61a799a-311e-494c-bac3-7eae053ec915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29396b5b-0b3f-4fde-92f4-b275a7f763d6",
        "cursor": {
          "ref": "6f6e5000-8b9c-4e80-b3f7-c01088722a8e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "da2fc96a-6b2a-4259-b918-6df98aaeae8c"
        },
        "item": {
          "id": "29396b5b-0b3f-4fde-92f4-b275a7f763d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c18e16f-3cb3-4c8c-b3d9-6632f9e0cf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3e13e5-f4c1-4605-90ee-cb12d8038a0b",
        "cursor": {
          "ref": "0d6e93d3-9105-4cc4-bba1-f8fd5850ffcd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4defaa48-f696-41e0-937a-2a6ede64127c"
        },
        "item": {
          "id": "ae3e13e5-f4c1-4605-90ee-cb12d8038a0b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ce11f583-16fe-4115-845d-044f34b02192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57999ded-1678-49b9-aadb-77a7fa1d2b16",
        "cursor": {
          "ref": "7e8af61c-39f8-44a0-b5a8-f4a4d8b24a77",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3d360055-5029-4321-ae93-65be4c9fef9c"
        },
        "item": {
          "id": "57999ded-1678-49b9-aadb-77a7fa1d2b16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2113117b-e9ab-4a43-9e88-9e7525e6efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d27b8c-5648-47bd-8204-3c40de1ad5ee",
        "cursor": {
          "ref": "434cd31d-8f23-4c02-95ac-9c2eea7748fa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7e2885e-949f-4d1d-b852-2a292ba8dbc9"
        },
        "item": {
          "id": "d0d27b8c-5648-47bd-8204-3c40de1ad5ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b17d0bc4-48ef-4340-8453-52b4ae8a49c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee4a55-e130-4e4d-84e9-ba019933b420",
        "cursor": {
          "ref": "232ae450-f12e-4e49-addf-2c5fc5894782",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fa445086-3384-4902-b4a8-9ad4fe20ec14"
        },
        "item": {
          "id": "94ee4a55-e130-4e4d-84e9-ba019933b420",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c397acb3-3c0f-491b-acea-750562fbdebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7e3ee6-5398-4c99-bd19-8844b4d1f36a",
        "cursor": {
          "ref": "a754b8d8-17df-4804-98be-8a8f363a2c51",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d5c4400-57e1-42bc-b5b9-978c937e60ec"
        },
        "item": {
          "id": "aa7e3ee6-5398-4c99-bd19-8844b4d1f36a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "003f7551-2f6b-4a4a-842a-9a51b5a0823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9919cf62-44d4-428f-b917-1f2c9dcc9930",
        "cursor": {
          "ref": "382fd56f-e6cb-4880-b2d5-0c46de0df7dd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "411f14be-214a-4e6c-b767-0911cc61c1c8"
        },
        "item": {
          "id": "9919cf62-44d4-428f-b917-1f2c9dcc9930",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7dfc9ef0-b155-40a0-a613-1ba7e583a113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1d2e01-8011-4cbe-a329-362ad5ac6ba8",
        "cursor": {
          "ref": "cdfc073b-e941-4779-a30e-20e7c30f439c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7cbf0f14-bf9d-4114-ae1d-43e4eea9f6aa"
        },
        "item": {
          "id": "7a1d2e01-8011-4cbe-a329-362ad5ac6ba8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ccc1e55-2dd1-4246-9f85-c60988acab6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51267f4-bbc6-4a5d-b11a-ee3f3c126318",
        "cursor": {
          "ref": "c27748d3-0c61-42ab-b60e-6f27a44073da",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "85bc1020-1dad-46b7-9cb0-7e73be517b52"
        },
        "item": {
          "id": "e51267f4-bbc6-4a5d-b11a-ee3f3c126318",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dc925b1-e451-4906-af1c-d60095e2e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f47c7b-7f52-4c69-a1e2-d269163ae630",
        "cursor": {
          "ref": "430416a0-34e8-4751-8f72-c2a5fd71e8fc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dbf586fd-d3c3-4afe-be8c-0aaf47dac1f0"
        },
        "item": {
          "id": "86f47c7b-7f52-4c69-a1e2-d269163ae630",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "83519eb4-e059-4fe7-ac35-a62e0d578be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf9a9c7-e409-42b2-9d08-db4b7e21285a",
        "cursor": {
          "ref": "f117383a-c0b5-4b11-bc25-022234b992b1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "73bd4d16-3649-429c-9b14-97c6e4ad41d6"
        },
        "item": {
          "id": "2bf9a9c7-e409-42b2-9d08-db4b7e21285a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a44729c8-85c7-4bc9-943b-4d8be6b73e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811f69c-b37e-44a9-80cf-8f137f51aa1e",
        "cursor": {
          "ref": "c05ce47d-395d-4d61-a4c2-21ca5c724a3b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "105dba13-7619-46d7-afff-7e363e35cb66"
        },
        "item": {
          "id": "9811f69c-b37e-44a9-80cf-8f137f51aa1e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "21045fea-7172-4e95-8a2d-1e70e33e1fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e932bc-a745-4847-8dcc-596e74b2bb82",
        "cursor": {
          "ref": "d72b9c01-337d-4abd-ac80-71a3620b6cff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e8f3b6ad-a531-4193-ae8d-d743cdcc1e3b"
        },
        "item": {
          "id": "72e932bc-a745-4847-8dcc-596e74b2bb82",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "189435ab-b5f0-40dc-8a23-24dadcca62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af736d48-516b-4470-9173-a8549883c882",
        "cursor": {
          "ref": "9d64d128-50b1-4a40-a895-7b19c6c3c59e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0c86b249-c9ab-454b-a8ed-5d64149c85af"
        },
        "item": {
          "id": "af736d48-516b-4470-9173-a8549883c882",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c31dfb3-2e34-4614-9b5a-b1531db66676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3007d057-ea1f-4f4c-9ffd-2d38eb737814",
        "cursor": {
          "ref": "ebe4c39b-ca13-4304-ae95-3c26dd359dfd",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b4a6dce-7bee-4f03-8091-7d6fd0e3f6a1"
        },
        "item": {
          "id": "3007d057-ea1f-4f4c-9ffd-2d38eb737814",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7e149b3-c337-413c-968e-7b5e14eacb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae194c5-27d0-4f01-ba8c-244d3087ecb2",
        "cursor": {
          "ref": "7c9ff29d-4f4f-48d3-84dc-f8b107407327",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "124d6cb6-a85f-4969-9a80-20375b7afeca"
        },
        "item": {
          "id": "fae194c5-27d0-4f01-ba8c-244d3087ecb2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a7831ec0-6931-43e3-9a63-65fdef72dd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f186e28-c294-4e77-b8a1-411f9f3945d2",
        "cursor": {
          "ref": "d19e4117-8021-43be-bc82-b315fb886efa",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4568da56-991f-4d72-a68d-84b0b877aa59"
        },
        "item": {
          "id": "5f186e28-c294-4e77-b8a1-411f9f3945d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66413c41-de82-44d1-882b-8c544d4a3c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c1d96-b499-44ac-ad57-a742456f3626",
        "cursor": {
          "ref": "f7d3617d-5a77-496e-99d0-a34bc5e09845",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a668a4de-d998-4d43-aa94-0ddc1a2a4aec"
        },
        "item": {
          "id": "906c1d96-b499-44ac-ad57-a742456f3626",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "495aae1f-c869-4433-b160-6b1e19b996b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6407fd-0a60-4421-9a21-30f408edfbaa",
        "cursor": {
          "ref": "4c137c0c-1467-4372-b701-1e9f5f23675c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dbb15ced-fc33-4835-ae6c-c7114e2b7884"
        },
        "item": {
          "id": "5b6407fd-0a60-4421-9a21-30f408edfbaa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96f6d466-4e58-4fdb-b496-1d21c3d782dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353b0392-1bcd-49e1-9b7d-4188acdcac6d",
        "cursor": {
          "ref": "ac120976-882d-434c-b054-bae569e384e8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "03f73b20-b8bf-4457-a1aa-03db6ddcfbf7"
        },
        "item": {
          "id": "353b0392-1bcd-49e1-9b7d-4188acdcac6d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "529bfa60-6a80-4fb7-ba6c-d7bbec175bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5c494f-d9ec-419b-8135-de37c16f1010",
        "cursor": {
          "ref": "d7ee1625-c6f2-48ce-a97d-a3c6b125bf39",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c35e7bc-00ba-4f3e-b5f3-84bb50457100"
        },
        "item": {
          "id": "4e5c494f-d9ec-419b-8135-de37c16f1010",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed3835c8-d8aa-4599-ae0d-e598fbd90885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a720de1-dcbf-4964-b5cd-697f88aaf0d5",
        "cursor": {
          "ref": "240fcaff-f978-4afa-b666-36a310ebca4b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2fca032-8c8a-4f98-ad7c-febe8275cc11"
        },
        "item": {
          "id": "0a720de1-dcbf-4964-b5cd-697f88aaf0d5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8c103e9-0d4d-491e-b426-36e2d3fed72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3993b4-3f21-47bd-82bf-4aa1f6473521",
        "cursor": {
          "ref": "3e5ae101-dafb-4c7b-b0bb-142b2d14a1f0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "24cb2710-3056-45d2-b9eb-9a9ecb5ae7a4"
        },
        "item": {
          "id": "ae3993b4-3f21-47bd-82bf-4aa1f6473521",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "43d88f9f-cdd4-4d6c-a1a5-0a65d0669e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53fc4e4-d09d-45df-8bde-50e3ca2249eb",
        "cursor": {
          "ref": "e362b474-ac3a-42ab-8e99-ff703a2b8113",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a6961f0-ed66-4dda-9745-4905957a2613"
        },
        "item": {
          "id": "b53fc4e4-d09d-45df-8bde-50e3ca2249eb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1c21bb5f-21b3-4c1d-ac90-8688dfbb8ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b737aa3-9c86-443f-8e4c-f1c4b73f6971",
        "cursor": {
          "ref": "721ea117-7026-4001-bc6e-bba76b0690b8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "133bdac0-914b-458d-b40b-37bd92793e40"
        },
        "item": {
          "id": "1b737aa3-9c86-443f-8e4c-f1c4b73f6971",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8001850e-1c12-41cb-bf11-49eaf63d5aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0255b4-88ea-4cd8-bbac-c963a2a4d26f",
        "cursor": {
          "ref": "7cf909f4-f544-4636-b597-aa11d7f900e8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de6a038f-89f5-4676-924b-3007dd2ebc53"
        },
        "item": {
          "id": "dc0255b4-88ea-4cd8-bbac-c963a2a4d26f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06eea0fe-e02b-4549-8083-49240ede81d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef997166-e307-449d-984d-c7a523eba056",
        "cursor": {
          "ref": "1553c0b2-0a00-40d7-9bde-023136f48a3c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cbcfc4bd-2f12-4780-b591-759db163e491"
        },
        "item": {
          "id": "ef997166-e307-449d-984d-c7a523eba056",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d495f8a-e02f-46f1-ba78-b697b9c56e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1d789f-4f57-42d1-bd87-e091dca13387",
        "cursor": {
          "ref": "1a079c40-7906-44b3-b3d5-ef7f04a9b17c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0b57e900-b1e9-4c5f-aab6-bee6d79508e2"
        },
        "item": {
          "id": "9f1d789f-4f57-42d1-bd87-e091dca13387",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59b94ae2-1d86-4b9b-bd5c-d327e34cc32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc0b4c2-81bd-4f52-b8e8-071aa6a2760c",
        "cursor": {
          "ref": "62e01e0d-f7a9-4d45-8d6f-1bfe4dc550c6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a12fe699-5604-4906-9ad9-3e272a69372d"
        },
        "item": {
          "id": "9cc0b4c2-81bd-4f52-b8e8-071aa6a2760c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "802dfa59-3a27-4c2b-85de-73eecd037a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a69f4e-2b70-4f82-abc7-14bbc7db5dbc",
        "cursor": {
          "ref": "6b748747-f431-44da-bb4f-68fc5e0a1edb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ea8ae125-35de-4959-bdee-a708320ab3e5"
        },
        "item": {
          "id": "b0a69f4e-2b70-4f82-abc7-14bbc7db5dbc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "542cb004-75a4-4f0e-8231-60959314b0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145340e-8b95-48e3-8011-6afa67fbb602",
        "cursor": {
          "ref": "99188067-f865-4a79-b0ab-eaca250ae284",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e1d3613-17e6-4643-8f94-dc5eb6c6f997"
        },
        "item": {
          "id": "1145340e-8b95-48e3-8011-6afa67fbb602",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6a6122c4-8808-4081-9e19-fe3afb17bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e81a80e-dbcd-47df-925f-1e4000eb5e15",
        "cursor": {
          "ref": "d85f5ef7-687b-43eb-b810-5825eaa766b5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5600d9f6-9836-424e-9d5b-b9a41170f82d"
        },
        "item": {
          "id": "0e81a80e-dbcd-47df-925f-1e4000eb5e15",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2a66c3b-850c-400f-bcc6-89e2b8808e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a574839b-7048-46d9-861f-6262f635ad4d",
        "cursor": {
          "ref": "ef681d23-19c3-4c91-a8a5-16e1a6535dfe",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef5391fe-2b6d-485d-98ae-ca3f58277a0c"
        },
        "item": {
          "id": "a574839b-7048-46d9-861f-6262f635ad4d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7936ab28-d32d-49be-9c8a-d8dbad84a3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024e39b0-f2c5-44a1-af45-2ac22da2956f",
        "cursor": {
          "ref": "cb4908a5-e97f-447c-ab8c-c72609ea2781",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ebfa7693-e420-4c95-b7ba-dc854c809253"
        },
        "item": {
          "id": "024e39b0-f2c5-44a1-af45-2ac22da2956f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d818711-7fe4-40b0-9ae4-52fd6943ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f0d2e-e449-48db-bba6-867076dc3618",
        "cursor": {
          "ref": "d34a6738-284b-430f-9771-414297c66cf2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "404b9b3a-c3d4-4da1-a51a-27d86d6b0aa2"
        },
        "item": {
          "id": "c78f0d2e-e449-48db-bba6-867076dc3618",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d437816-5484-429b-a4da-37ec74015571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb5adf-ac6b-40e8-ab32-947b5fcec030",
        "cursor": {
          "ref": "6d4e4c77-4c34-4e22-957c-4e7c5f8174f0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8ed041b2-2738-49db-9eb5-08207ff9cd45"
        },
        "item": {
          "id": "5ebb5adf-ac6b-40e8-ab32-947b5fcec030",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "49861098-14eb-4118-b061-a55407310660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4e924-2a96-4a9c-9596-13576fd90c51",
        "cursor": {
          "ref": "7278c53c-9646-4847-9fe4-a11a57ebb322",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aa36154c-359b-43c8-8557-d3c223a0c16f"
        },
        "item": {
          "id": "f7b4e924-2a96-4a9c-9596-13576fd90c51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6bdb5a60-4eea-46eb-ad28-a74315acbcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36b58c1-f57f-44ae-9f5e-53269a718456",
        "cursor": {
          "ref": "56d4227d-a0fc-4a2a-a19b-3a6f9c882257",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6c17c0a5-b114-46bc-b04c-102af99aa89f"
        },
        "item": {
          "id": "e36b58c1-f57f-44ae-9f5e-53269a718456",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c307bc14-7a61-4334-bc7f-f209ce5ba1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7e249-18df-4ad5-a4c2-324196cf0eda",
        "cursor": {
          "ref": "a04b6184-629c-4b99-a7ac-92549efa17c9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "676b2d69-a05b-432c-8fd6-f17e38d3b9ad"
        },
        "item": {
          "id": "3ea7e249-18df-4ad5-a4c2-324196cf0eda",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "647f4a3d-6872-46f7-ba09-2978a950aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667eedbb-98a1-4924-9614-db5091b9a28f",
        "cursor": {
          "ref": "bf12bdc7-3640-4fd9-8011-c1e69e2d7ac9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c1da34f6-cb43-44fc-ad02-85321629ee90"
        },
        "item": {
          "id": "667eedbb-98a1-4924-9614-db5091b9a28f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2b8fa440-9aaa-43a8-af4f-f64b6d49faf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9007e3-89f0-4514-93e2-98b88718c5e2",
        "cursor": {
          "ref": "7cc1f917-17a0-41ce-a261-4ec40ee3726d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01be53bb-3dd8-45fd-b8da-707c2c7a9d41"
        },
        "item": {
          "id": "dd9007e3-89f0-4514-93e2-98b88718c5e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "90e5aecc-2211-408a-a20b-d7c0c588dbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47a1e69-ff53-41eb-bbbe-590d99569c75",
        "cursor": {
          "ref": "e11f6444-5e3f-4a5f-a574-05ba6f8a816c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "baa55971-7ed5-4de9-9cdf-f7fcae3f5ee9"
        },
        "item": {
          "id": "b47a1e69-ff53-41eb-bbbe-590d99569c75",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65eda27a-391c-4683-8a37-d0ac861b11c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f349a13-c379-49c1-810f-4a72f9ae7298",
        "cursor": {
          "ref": "7e9ec4bc-5393-4331-af3a-5578309fe443",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "002c768d-28fa-4f9f-913e-bc48940968e2"
        },
        "item": {
          "id": "7f349a13-c379-49c1-810f-4a72f9ae7298",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e9d82228-e927-4e28-a855-407484da341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969341f-3b76-4365-9714-c225ea749bd5",
        "cursor": {
          "ref": "53e94864-f893-4654-b27a-f414609b414a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "865246fc-f5ee-4476-8761-c291eb0be454"
        },
        "item": {
          "id": "5969341f-3b76-4365-9714-c225ea749bd5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dbe6d024-831e-4cd8-a23b-133bd7ad7cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26662b-cb63-4d68-9d2f-8776137748f9",
        "cursor": {
          "ref": "7c7e1208-8e6c-4ad3-b432-e88e5ed93664",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1538a28a-3dd8-4b3c-836d-14e171e2b8f0"
        },
        "item": {
          "id": "3a26662b-cb63-4d68-9d2f-8776137748f9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0303eac0-b7e6-4e54-99d0-880116875797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea0dbe2-6a96-4544-8f6e-016c92cd9c2a",
        "cursor": {
          "ref": "b083d9e9-9d43-4949-aa58-5fae45698c16",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c6533583-25ba-47da-8a7b-fb52eaa2deb2"
        },
        "item": {
          "id": "7ea0dbe2-6a96-4544-8f6e-016c92cd9c2a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f37814c4-44f0-4aed-8df9-30a603a461a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639346c2-c82d-4be3-a1da-e9bba40f64a4",
        "cursor": {
          "ref": "fc886d34-cecd-4f2d-bd45-39321d650461",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2b7842f-eb98-4352-8d69-0df8d719eb3c"
        },
        "item": {
          "id": "639346c2-c82d-4be3-a1da-e9bba40f64a4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f5d8714a-0f08-4540-8ab5-6b46f17033f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328f9d2-75ec-43fb-91f5-e72558cfb7e2",
        "cursor": {
          "ref": "c211dec2-7888-44c9-b5af-ac599c4677b0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d57f572-7ca8-4d21-af7a-1a165cb925c1"
        },
        "item": {
          "id": "7328f9d2-75ec-43fb-91f5-e72558cfb7e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cbcb2058-31f8-48f6-a892-51d4e3d49c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae2eb64-0137-4809-bf4c-8b6d56c71d7d",
        "cursor": {
          "ref": "9f166749-1314-4103-a3c4-0b2bc2b4edce",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97871a1b-14ba-4fdc-b6c7-788bd5646d40"
        },
        "item": {
          "id": "4ae2eb64-0137-4809-bf4c-8b6d56c71d7d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3dad6ae-e0ed-4bfa-b203-afe0c44968c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac6b23-5670-49a0-89a4-e0ba1988b9e4",
        "cursor": {
          "ref": "d9e50d04-021d-45c5-a2db-93ccabe2ee44",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bd93b5f9-18c3-47d5-810d-24e84ec113e5"
        },
        "item": {
          "id": "69ac6b23-5670-49a0-89a4-e0ba1988b9e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "413d768d-66fd-4e70-8813-5031acc0eae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995c97b9-ebd8-4342-add0-6913029cef79",
        "cursor": {
          "ref": "590287d6-44d5-466b-94f0-c06db7b23009",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b6518ede-99ca-4f68-847e-2f4e77529020"
        },
        "item": {
          "id": "995c97b9-ebd8-4342-add0-6913029cef79",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6225d6d5-2e79-4770-a8f3-fdb437e59931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e10ccc-3552-4f06-8465-b50d08ff40f7",
        "cursor": {
          "ref": "97c2975c-db1b-4a16-99e7-f835464ea809",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a445c34-67ce-4857-b7d3-578a2a365453"
        },
        "item": {
          "id": "95e10ccc-3552-4f06-8465-b50d08ff40f7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9215e3e6-bc55-4c4c-83e3-7f27f7b1a7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bebc1a0-3b85-4821-ade8-2be45f37ee59",
        "cursor": {
          "ref": "c2c85f4e-73f5-4426-b94f-3981789b900b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "91451453-507e-4ee4-9b08-a8b6216cc63a"
        },
        "item": {
          "id": "9bebc1a0-3b85-4821-ade8-2be45f37ee59",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fe4897bc-c030-4c86-91c7-7a346cfb45ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef5023-1598-4468-ad6f-4d3003c4f53c",
        "cursor": {
          "ref": "3ebbfad2-82e0-4db9-bf69-97f94373ca5e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4986d466-57ca-4887-9536-a19c99fcb1bd"
        },
        "item": {
          "id": "75ef5023-1598-4468-ad6f-4d3003c4f53c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "32a3f5ad-db3e-4b9d-8291-80fbff95dbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a948257-fef6-45a8-b1ae-a2d7b776fff5",
        "cursor": {
          "ref": "3154f9ab-fa9e-4e34-8003-443ae09e03cd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "08365136-dc0f-4d8c-974a-e95900b4823f"
        },
        "item": {
          "id": "3a948257-fef6-45a8-b1ae-a2d7b776fff5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "51150e1f-30e7-4f3f-ad96-56c1eff9ae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cd5b84-8a9f-49ae-9eef-f80063c48f54",
        "cursor": {
          "ref": "7019d293-53d1-4994-9a6f-7edab21f4a61",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "99b2507f-1c53-432b-9a8d-65e74ca5baec"
        },
        "item": {
          "id": "28cd5b84-8a9f-49ae-9eef-f80063c48f54",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fa9d66c4-cf23-4638-95d8-d1c680009d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50855b0c-15bc-40b0-9941-d52c2d78c671",
        "cursor": {
          "ref": "99a3d3be-083d-4eff-9efa-005d34204834",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b4579177-2352-47b3-be02-372b64b773fe"
        },
        "item": {
          "id": "50855b0c-15bc-40b0-9941-d52c2d78c671",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "673c1173-f914-4787-9bf4-40a1b81e3c4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb43350-9133-4121-9252-0a34a44f6237",
        "cursor": {
          "ref": "4dcf71a9-18fa-4ec3-ab63-c15ef2c8fd4d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f3ecfc8-7389-48bc-89fa-1b4cb4bfee67"
        },
        "item": {
          "id": "ddb43350-9133-4121-9252-0a34a44f6237",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2c3231f3-d71e-43c2-ab15-111b10d6aac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d991720-0f9e-4b94-b8b0-9f9cb714a3a2",
        "cursor": {
          "ref": "ebd7cd21-5aee-43c3-9a58-b155031f4254",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9fcc3b6c-118a-4d94-9602-f92f37792fa9"
        },
        "item": {
          "id": "1d991720-0f9e-4b94-b8b0-9f9cb714a3a2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e65c175d-605f-4111-b294-90af222be428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ceeac-67a6-44ae-8ed3-e913cf462955",
        "cursor": {
          "ref": "78824517-fe6f-4a49-a595-972b6b992e7f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f44d2b21-f88f-4022-900b-eda0f8753e03"
        },
        "item": {
          "id": "370ceeac-67a6-44ae-8ed3-e913cf462955",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5e9e5c9-ca56-445a-b1be-9714fd3e1964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5fa9f6-69b9-4040-bebe-cc849dea83c1",
        "cursor": {
          "ref": "e71ee87e-1cab-4441-aaad-035e18c4b61d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "53f859ed-4caf-41e4-8516-3c2cbea31d0f"
        },
        "item": {
          "id": "ed5fa9f6-69b9-4040-bebe-cc849dea83c1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69a7c655-868e-4b3b-8a01-523a0aa162b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e908aeca-8a45-422a-8268-d03ac39cc216",
        "cursor": {
          "ref": "04709ca7-5e03-4f92-890c-fe2d2dcaac47",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4c5905e7-eee0-47f5-9da6-9c24b7b32969"
        },
        "item": {
          "id": "e908aeca-8a45-422a-8268-d03ac39cc216",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f8c97b64-e199-473b-8d2e-f71ab93fa241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4c497-594a-4fa9-88f2-b7c031000a41",
        "cursor": {
          "ref": "469da590-c60e-4d66-a875-5d6a5ce344c7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d6a4431c-e037-4abc-9992-577971583d3e"
        },
        "item": {
          "id": "86e4c497-594a-4fa9-88f2-b7c031000a41",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "477c2320-8345-46df-8922-bd48a85df098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fba5c3-ace5-4237-b3fd-afedfc02d526",
        "cursor": {
          "ref": "2e7a4341-473a-4655-87a7-d93f56fc1eb2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9cbb49d3-5b78-4221-8d7e-cfb4ab7d9427"
        },
        "item": {
          "id": "42fba5c3-ace5-4237-b3fd-afedfc02d526",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82d1459d-e2ea-496d-9a02-b87706f3d9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eaa022-b276-412e-91a8-db13a3dad4a9",
        "cursor": {
          "ref": "52bef1e3-d7aa-4090-9fb0-d5acd87ca446",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "07f1dc18-62cb-4dc2-9921-213f0166ae2f"
        },
        "item": {
          "id": "58eaa022-b276-412e-91a8-db13a3dad4a9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c093f351-978f-4f85-9b50-3135d33bf0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16003490-8ff8-4c2c-907f-66717be45f67",
        "cursor": {
          "ref": "3ab2651c-637f-4d80-85e7-8b7738bc3829",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a4bb91c-add1-4f55-8f01-c33acc6d2184"
        },
        "item": {
          "id": "16003490-8ff8-4c2c-907f-66717be45f67",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "72fe61c1-07e6-4d8e-aeb7-637a346ce394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c221c209-2ca7-4860-b338-d1f6dbc58f52",
        "cursor": {
          "ref": "8f74246f-1300-45fe-9d1b-101e2dc035a3",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "514955f5-5643-4f54-9dac-312c40765d8a"
        },
        "item": {
          "id": "c221c209-2ca7-4860-b338-d1f6dbc58f52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "90585a52-2bf1-49dd-b9a9-f4b0a3f6ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f34c6-181a-484e-a86d-980ed10d6d26",
        "cursor": {
          "ref": "e04c0a46-46f3-4381-b3a6-a0228b0da9b4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6061a3c2-4bdd-4692-b02f-e0d3e2e36ab2"
        },
        "item": {
          "id": "096f34c6-181a-484e-a86d-980ed10d6d26",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "611ff61d-50b3-4aad-9643-c499af74585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46a68ad-a94a-4fb5-b7f5-790860250b4d",
        "cursor": {
          "ref": "83cc16ba-ad2b-4e2f-ac2c-8ff716bae363",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6d4570d0-8794-4a55-b5ed-2eb0722caa3f"
        },
        "item": {
          "id": "a46a68ad-a94a-4fb5-b7f5-790860250b4d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5170dc07-775d-479c-8441-dafcde5a0c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfe91ba-976f-445b-ba11-3c0886d9fdf0",
        "cursor": {
          "ref": "a94d0e5d-dcbe-41f2-8be0-6d7110547a73",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "afbc0107-484f-4f9e-a4ef-80cea5ffc288"
        },
        "item": {
          "id": "0bfe91ba-976f-445b-ba11-3c0886d9fdf0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c8cd70ad-62a1-4228-be7d-256f5a37e497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd7a231-e930-4076-b1e0-9d434861fecd",
        "cursor": {
          "ref": "95e2c25c-a266-4a97-9a96-ab2147be250e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9d1fdfed-8dc8-4f1f-817c-481c389c18f1"
        },
        "item": {
          "id": "ffd7a231-e930-4076-b1e0-9d434861fecd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a298114d-5d6b-4682-825c-c6797d30266b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d64fd00-8a16-45ae-aca2-6b53dd70e02e",
        "cursor": {
          "ref": "9a45d1ce-0a3c-4ec4-89aa-9da9a5d0b2cf",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "50555c21-605a-4171-bc9f-6d4e53116bfb"
        },
        "item": {
          "id": "0d64fd00-8a16-45ae-aca2-6b53dd70e02e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a4415e00-70c5-4aee-b7ef-1dbcbeb85ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f823471-928f-41d9-8c1b-d2ea82c52a0d",
        "cursor": {
          "ref": "dffba090-f261-4d26-84e4-ed9b0a24117f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6bf3720c-9f13-41ec-a8f1-90494c187e42"
        },
        "item": {
          "id": "8f823471-928f-41d9-8c1b-d2ea82c52a0d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d86c1e1-8bf0-4361-805c-40a117dad37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15c1ee1-b315-44e2-89ba-a9445c8c0acb",
        "cursor": {
          "ref": "e39f08ae-12be-4c62-98b1-036418f7d271",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9bf162a6-8075-4787-a281-3e666b8b4257"
        },
        "item": {
          "id": "d15c1ee1-b315-44e2-89ba-a9445c8c0acb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "97c57f3c-4b15-4b2e-a15f-a4a8f29e1448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0f9fef-4cd5-4b84-a09c-38dc6ab453de",
        "cursor": {
          "ref": "d53565a9-8545-4aee-8f8d-af867ccb7004",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "383b0cd5-1ef9-4cbc-b611-f889b3264db9"
        },
        "item": {
          "id": "cb0f9fef-4cd5-4b84-a09c-38dc6ab453de",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e734ad68-016c-43f8-a8be-5160ceda6871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3564870c-062f-4532-bbdc-4aa083b05034",
        "cursor": {
          "ref": "4d950c2c-f133-4775-92e8-7002aff086b7",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a53d6c28-8b26-4cc7-b8a8-30f2f5878ab1"
        },
        "item": {
          "id": "3564870c-062f-4532-bbdc-4aa083b05034",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "be6e6459-0cec-4a6b-81e3-a14068ec70f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318fbc41-18dd-4e1b-aab5-1a1250a6e7ae",
        "cursor": {
          "ref": "b48d51dd-8109-485e-b657-a73eb672fa1a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0aaf1d1e-d4a0-436b-ac22-fced0852a5c7"
        },
        "item": {
          "id": "318fbc41-18dd-4e1b-aab5-1a1250a6e7ae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "70d37e60-06fe-445c-a573-2c3a6e2a5b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0926e0e-6bf4-4b52-a6f7-816e20deed40",
        "cursor": {
          "ref": "9118dfe3-44a5-4cc6-8cac-4491b9ed8a59",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3fbb9153-423e-4885-9a15-01ff09ff2ed9"
        },
        "item": {
          "id": "c0926e0e-6bf4-4b52-a6f7-816e20deed40",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3caf3e3f-feb7-46b0-b6e2-3efec2775f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7948f4a3-ab8f-4b5a-8a21-13d663f241e8",
        "cursor": {
          "ref": "924019a6-6bda-41ba-b23f-e63ee5777c34",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "989d3146-ff62-419c-89dc-f617133d9fb5"
        },
        "item": {
          "id": "7948f4a3-ab8f-4b5a-8a21-13d663f241e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0e65a34c-4656-46a2-8a6c-f277e060dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7dd681-78b8-4217-bf4d-48ec91ff5307",
        "cursor": {
          "ref": "bd51a5ff-fbe8-4662-8fc8-46d51302607c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5e18df65-ee15-4ba0-b5bf-5899001a8892"
        },
        "item": {
          "id": "8b7dd681-78b8-4217-bf4d-48ec91ff5307",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ca4a62c-6425-4a60-b3c7-b101a2812563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec33e88-4525-426b-b879-aa16cbd8f412",
        "cursor": {
          "ref": "1d02fa3e-5f79-4624-9710-33e78d86eb50",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1631158c-4b40-4284-8415-9fab8570881f"
        },
        "item": {
          "id": "aec33e88-4525-426b-b879-aa16cbd8f412",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1adac27e-3ac3-4f47-a8ec-78bbfa78541b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d70ac4d-8c3a-4c22-ba5c-a8d52b80f835",
        "cursor": {
          "ref": "4025da71-8058-464b-a381-2d8ae99d03d2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6cfd3306-c0eb-4b67-93d4-c663e891a3a4"
        },
        "item": {
          "id": "9d70ac4d-8c3a-4c22-ba5c-a8d52b80f835",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "300d5d04-975b-4e9e-a09f-700630394315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66767dd-a583-42ae-9698-04a30800cffc",
        "cursor": {
          "ref": "33c3c13e-ced4-459d-8366-f2970b50eabe",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fa882441-dad0-4a36-9c5d-e5bc2c590037"
        },
        "item": {
          "id": "c66767dd-a583-42ae-9698-04a30800cffc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "351a8c93-1191-4311-8321-6af2a9874ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdcc9a8-5847-485e-be37-fc4ef02f733e",
        "cursor": {
          "ref": "d8035485-0255-4abf-9ade-587bcbd16bde",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f702ca18-0e29-4e7c-8ab2-9c9bc54c7495"
        },
        "item": {
          "id": "2cdcc9a8-5847-485e-be37-fc4ef02f733e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4dd16d51-ce8d-4bd3-ac5a-643efabd03ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d33e489-dbd1-4d53-a566-c65ba2905c9c",
        "cursor": {
          "ref": "736cda67-59bb-40f6-b9b0-7b7c94fa9813",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c2a3b1ca-0b32-462f-b9aa-2465cb65c352"
        },
        "item": {
          "id": "5d33e489-dbd1-4d53-a566-c65ba2905c9c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc0cd2d6-af60-412b-ac15-1da4a3eb1651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508204da-f3cf-4afa-9131-91479c64b79d",
        "cursor": {
          "ref": "253819c5-a9ea-481f-b745-4f8ff93db36a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cab44751-c508-45c7-b2dd-75bb86c7cf02"
        },
        "item": {
          "id": "508204da-f3cf-4afa-9131-91479c64b79d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64dd9cd7-1cb4-40bf-974b-fd6e99c0e10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76b5cf9-a8e9-4e85-bed3-f400f60cb92c",
        "cursor": {
          "ref": "783e97cc-4a4a-457c-aca0-8d1fc1a20ecc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "14749b22-1b86-4e14-815a-ba67aa375bdc"
        },
        "item": {
          "id": "e76b5cf9-a8e9-4e85-bed3-f400f60cb92c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58804258-f5e1-4efd-990b-662dd21096e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62af794-1850-4384-84e9-3a13626b0674",
        "cursor": {
          "ref": "ae4015d1-0f86-4be4-8b17-e046f20289ca",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4739dd47-9881-4465-aa80-01b4b9289055"
        },
        "item": {
          "id": "b62af794-1850-4384-84e9-3a13626b0674",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af590366-bad1-4292-b4b0-20cb334c28a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7135104-32ea-4453-bc3b-3f0cba4afcf0",
        "cursor": {
          "ref": "06758549-3c93-4bfa-baaf-5196a7bb1993",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c418528-6aad-41bf-97d6-eb5bc58d46d0"
        },
        "item": {
          "id": "b7135104-32ea-4453-bc3b-3f0cba4afcf0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba778952-40d3-4bbd-984f-2e776933ce4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42606178-7300-48a4-bbc4-ebf8667cd2e8",
        "cursor": {
          "ref": "09cdb1f9-bbc0-44db-88ab-1e30bd82de9d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0d14fcdb-6741-4f1f-9337-e5bf2ec3694c"
        },
        "item": {
          "id": "42606178-7300-48a4-bbc4-ebf8667cd2e8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "443e29bc-9cb5-4462-bb06-3ec7451ae696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eed14b-5c6c-47ea-b23a-39cba21113ce",
        "cursor": {
          "ref": "0aa0cbae-e8fc-4fc4-bf94-2860a3b4a218",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "31d0303a-de21-4e71-b4b9-e86898f6981f"
        },
        "item": {
          "id": "20eed14b-5c6c-47ea-b23a-39cba21113ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ad6744ac-ff71-455d-846c-21fa244f168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a080b257-ae12-447a-8c0d-e962c06d1e36",
        "cursor": {
          "ref": "2ea753e5-1c15-453a-80b9-e3a03d272246",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aae96def-81e8-4eda-af38-f8c3d6b6d681"
        },
        "item": {
          "id": "a080b257-ae12-447a-8c0d-e962c06d1e36",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "61d307ed-df8f-4048-a739-0773f17b7f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7cc66-b215-44fe-ac11-5378a3ba51ab",
        "cursor": {
          "ref": "72e4146a-52b1-44f2-b665-8116c533b1ea",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "11f7284b-3564-4b78-9280-1cec9ed39a62"
        },
        "item": {
          "id": "8fb7cc66-b215-44fe-ac11-5378a3ba51ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "df42ad51-1ea6-4ab7-8026-8da9b7e32ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b19dc2-07ec-4edf-8412-b19a1a7853fb",
        "cursor": {
          "ref": "96de4478-7c64-49ad-a3d2-f30f4d8385cc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ac25368-1972-4841-890e-2fb4fb648986"
        },
        "item": {
          "id": "01b19dc2-07ec-4edf-8412-b19a1a7853fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "917b598e-92d5-4caa-b515-0f0701ea96a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da084ae1-6616-4651-a96a-06c4b46c4d13",
        "cursor": {
          "ref": "ada9f589-b7b0-4af7-9af7-cea03e2a4d41",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9a4d3fa-7ae1-41bd-a552-8428bbed5ebc"
        },
        "item": {
          "id": "da084ae1-6616-4651-a96a-06c4b46c4d13",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f276284-2dc6-4679-af26-8b13bbe8a500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aae9058-8e93-479e-99f0-b59ca66c2acb",
        "cursor": {
          "ref": "dba6b910-b44b-45ab-8227-0c70f4b0305c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b89772e4-cc5e-4a6c-8066-28c479952959"
        },
        "item": {
          "id": "1aae9058-8e93-479e-99f0-b59ca66c2acb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8f8624d7-204c-4711-ab9c-abaccbc752be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41e579b-e8df-4fc3-ba8a-d8e0283cec07",
        "cursor": {
          "ref": "54374d09-f227-4e1c-8f40-8224b156ee9a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2bcaa12d-46aa-47c2-981d-82a2d7cbed40"
        },
        "item": {
          "id": "b41e579b-e8df-4fc3-ba8a-d8e0283cec07",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "068513ce-8adf-452f-a1c7-36aa4fd52268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da45997-cd33-474a-9eda-13e9d4757ca0",
        "cursor": {
          "ref": "5b4d49be-c1e6-42be-87a6-e19fef348a48",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6f1da472-4009-43e2-9989-9f13d51a161b"
        },
        "item": {
          "id": "8da45997-cd33-474a-9eda-13e9d4757ca0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e9bdac63-a759-4d9a-81a5-fd65892d1288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34661df-16d0-4a3d-b5f5-51805b17b649",
        "cursor": {
          "ref": "555099f6-6ab1-423a-9e2e-841cf102233a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "220dacc3-f83a-4c76-bd70-0a4c19de9e1c"
        },
        "item": {
          "id": "a34661df-16d0-4a3d-b5f5-51805b17b649",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4496e5ea-ea1f-408d-b113-af75fa025429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c326b08-8742-43b0-9e26-0d3f75cc4e4d",
        "cursor": {
          "ref": "c7c3f8cd-5ace-4bc7-9540-b7a9b105341d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "edd5fc9d-765a-4027-84a9-d73f8cd6711e"
        },
        "item": {
          "id": "0c326b08-8742-43b0-9e26-0d3f75cc4e4d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6529a04f-51d1-45eb-96a5-0840a5aeaf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bd2aae-65fe-459c-8dea-28f768d3854b",
        "cursor": {
          "ref": "35f5fc5d-0f34-4ca5-bee2-519a328f953f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "85c54707-e916-4e75-9af2-afe3c77dc504"
        },
        "item": {
          "id": "45bd2aae-65fe-459c-8dea-28f768d3854b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5c29ec1c-9168-4f52-bf5f-65f32696c7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cde6d4e-cb38-4d6d-a766-12d389afaf98",
        "cursor": {
          "ref": "7de199df-fadf-4bc1-8caf-3028069e3ac2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eace35af-03dc-4767-8134-8d32f1996f25"
        },
        "item": {
          "id": "7cde6d4e-cb38-4d6d-a766-12d389afaf98",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "79978917-daee-403c-a294-d9cf371da117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1af77f-e022-49f8-9019-dcdcf2d87685",
        "cursor": {
          "ref": "23f06d05-831e-4e13-803b-fbcdffadcfac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5ad8e72e-2ce8-4e79-9279-8565b3e4a02c"
        },
        "item": {
          "id": "ed1af77f-e022-49f8-9019-dcdcf2d87685",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "edc3ed2a-7d4a-4dab-8d9e-c910ff3ff177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f19155-8084-40f1-a46c-6b0d506883b3",
        "cursor": {
          "ref": "4e24f43a-3a8f-4cbd-bb33-5134b2a05907",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "750a861c-aa9d-4fe8-b298-d682b7d2a937"
        },
        "item": {
          "id": "48f19155-8084-40f1-a46c-6b0d506883b3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dd09cdaa-9d32-4145-892d-cd8cda205190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ec1d63-a02c-4acc-8535-87f2e0bf8563",
        "cursor": {
          "ref": "3208ad87-9b15-462d-9c68-4e190825b521",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "16f72302-aefa-4461-a0ed-f91853b9b0d0"
        },
        "item": {
          "id": "f5ec1d63-a02c-4acc-8535-87f2e0bf8563",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b008b7b0-0973-49e5-9314-2ec77bd9c8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1206ebfa-b03e-4c4d-9632-a6a7fc219728",
        "cursor": {
          "ref": "1e61eedf-c2f5-4824-bc6c-9a44edea019f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e3d33d36-e004-4395-b965-cce57ce4b6ce"
        },
        "item": {
          "id": "1206ebfa-b03e-4c4d-9632-a6a7fc219728",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d90f8cf7-4152-46ad-bf67-ca9bfea56a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123c337e-11d5-4769-8a3b-6229b2439864",
        "cursor": {
          "ref": "a0f6bc7a-39df-4961-b38c-689087cba973",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32b1d7d6-f147-4d28-b5ed-691c21ba30c9"
        },
        "item": {
          "id": "123c337e-11d5-4769-8a3b-6229b2439864",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8ad7327-fb88-4cc9-9306-e4840f63ddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a1511b-200d-442e-9e32-90d678573824",
        "cursor": {
          "ref": "2f728fb3-2200-4468-8996-635d9f30e4b5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ccb8b38f-e8f4-4c97-a4df-33d04fdb75db"
        },
        "item": {
          "id": "54a1511b-200d-442e-9e32-90d678573824",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ff035e8-e971-4f7f-bb3e-f58e5cc0aff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74e7dee-35b5-453e-9a68-2c2ee0422d78",
        "cursor": {
          "ref": "0a0f7f3a-675f-4d0c-90bd-d523a6fd67ba",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "67f49e34-e906-49d1-ba17-def45b80740a"
        },
        "item": {
          "id": "f74e7dee-35b5-453e-9a68-2c2ee0422d78",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b892a523-50eb-4fe7-b72f-7e28352e3d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda043ef-4e38-4bf8-9292-5f1907660565",
        "cursor": {
          "ref": "f8642723-7fc0-499b-92a5-b4b6717a33a6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ee46d0c5-cacb-46b8-a365-eab2233c5723"
        },
        "item": {
          "id": "cda043ef-4e38-4bf8-9292-5f1907660565",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "659ae0c7-f2f8-4863-8d59-1c16c7e70624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95de5785-2baa-466c-9128-02abd2227833",
        "cursor": {
          "ref": "e619837a-b12e-4c7b-bbc7-13deaf45a9b4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1413fba8-cd92-4873-9ce1-8a9d36521cff"
        },
        "item": {
          "id": "95de5785-2baa-466c-9128-02abd2227833",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a14ad209-0fa1-4ecb-a4fd-5862488de529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff503bb-e89c-490d-99e9-e88655712707",
        "cursor": {
          "ref": "71ef4eb1-0ab0-4fbc-bedb-a56130817619",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ac8c186-a26e-4da4-9ffb-e3d70b3d8422"
        },
        "item": {
          "id": "0ff503bb-e89c-490d-99e9-e88655712707",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5016f6b4-3bb7-44e2-a713-7649cd50d31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66fd16e-4c0c-4c10-8324-a27f02a09076",
        "cursor": {
          "ref": "f9386aac-afc8-4176-b13b-c3803a4c51b7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "82d7dbdf-4a79-48f5-8e23-931b52efdbb7"
        },
        "item": {
          "id": "b66fd16e-4c0c-4c10-8324-a27f02a09076",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29cef749-59e9-4d80-8659-fc280abca4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e1ef90-bb1d-4951-975f-364c555d2b36",
        "cursor": {
          "ref": "5df4c18a-2a30-4267-9c8d-3bbe1395c075",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e253416-bd62-4f9c-a7d6-a868a5624d68"
        },
        "item": {
          "id": "04e1ef90-bb1d-4951-975f-364c555d2b36",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "35025327-6da1-4235-96ed-e0fc4bf7daf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8d129b-b50d-4713-bc91-c622d30b113c",
        "cursor": {
          "ref": "86a1585c-ba6f-42fd-bb06-bf6db4cd848d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "be196b59-31d6-465f-934f-d2cd546723c3"
        },
        "item": {
          "id": "3a8d129b-b50d-4713-bc91-c622d30b113c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b0424cbc-6776-4932-a4ab-289248e69a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3300d28b-d074-4a5d-ab16-1099ab14add7",
        "cursor": {
          "ref": "45befbe7-5e3d-4eee-ab5a-5cb0b42fe969",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "233360eb-554f-4df4-b619-290306432f30"
        },
        "item": {
          "id": "3300d28b-d074-4a5d-ab16-1099ab14add7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "abf3416a-f203-4023-967a-656999a1b24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973df49b-ee02-4efa-8fe4-9886aaa2607e",
        "cursor": {
          "ref": "0777af01-d1f0-4f57-9844-69286b55ae91",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1403ec97-c3a7-4618-a975-bc1b64163a87"
        },
        "item": {
          "id": "973df49b-ee02-4efa-8fe4-9886aaa2607e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "142c37de-78db-403d-b6f8-5fb51ca635b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94db3967-388f-4ec0-bbef-34b74faa5e29",
        "cursor": {
          "ref": "92742886-e43e-4ca5-aef8-e2a90556f96a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c84a5b2f-5f91-4238-88d2-5a8f5e28315c"
        },
        "item": {
          "id": "94db3967-388f-4ec0-bbef-34b74faa5e29",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "73b89e05-f836-4ea0-a9c3-3d4c040c7788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10acbbe8-f544-4653-907f-a7dbe8b3fd93",
        "cursor": {
          "ref": "a9e54d77-0b2c-4e60-8616-b942209e0b64",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b8bda9f7-cc48-4502-a21c-4dc84a0701ae"
        },
        "item": {
          "id": "10acbbe8-f544-4653-907f-a7dbe8b3fd93",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b5898008-47a7-4534-8196-f29595048ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7363c78-b767-477b-aa17-777f90822ef7",
        "cursor": {
          "ref": "55143712-b751-4c48-8f11-a9c6fc7a91da",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2b724e48-e729-445a-935c-f4aefb0f4575"
        },
        "item": {
          "id": "e7363c78-b767-477b-aa17-777f90822ef7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "215fcbaa-d668-4420-af9e-cb49a15a85e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fe890d-2871-4ce8-8062-d1e1212567bc",
        "cursor": {
          "ref": "adfb7278-f593-4c5c-9f92-7b5aa022c212",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7d98631c-ac0f-4d9e-8cbc-501523bffa38"
        },
        "item": {
          "id": "d6fe890d-2871-4ce8-8062-d1e1212567bc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "18cefe1e-6080-4b33-9a29-cdecdf8d3e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ae9d4b-f45d-45a6-a653-f69c585b8af8",
        "cursor": {
          "ref": "1f8c0fcb-0783-4344-8785-0d1610188b43",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de7b1ae7-c128-440d-bd2f-cc625a20c8d2"
        },
        "item": {
          "id": "76ae9d4b-f45d-45a6-a653-f69c585b8af8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cc063f47-0aee-4223-bc29-a318c932e3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66279266-b0e8-44a2-81c7-831e73fa1a21",
        "cursor": {
          "ref": "cddbe94f-7ec2-4106-ae0f-0836e1358e3a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "075bbc6b-b553-4626-acea-a9c96893764f"
        },
        "item": {
          "id": "66279266-b0e8-44a2-81c7-831e73fa1a21",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e7e9a3b6-6cda-4bce-baaa-70ee5648edbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d521e8fc-7777-4dd4-b715-8acf456e3d74",
        "cursor": {
          "ref": "ca8f69f3-1f75-417c-a1b6-7d2c7ce7e71f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ae56f149-1d01-42ab-b8be-338ca47ae574"
        },
        "item": {
          "id": "d521e8fc-7777-4dd4-b715-8acf456e3d74",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b33c6dbf-7c72-48ff-bbd4-a7d159260f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945e2d1d-bca7-4f1a-8129-c83056b1c30d",
        "cursor": {
          "ref": "6e15599a-ff39-432b-9f65-4ba8656da060",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0084bf6e-77b6-49e7-871a-0272e4f2ed24"
        },
        "item": {
          "id": "945e2d1d-bca7-4f1a-8129-c83056b1c30d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f921c41d-38ee-45c3-bd37-cbaa49a4fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd42397-2828-46cf-9f70-fb2012f74050",
        "cursor": {
          "ref": "153a24e4-b50c-471d-83e9-ee657c99231b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c48d504-5a1a-4496-aa35-4c0752dcf167"
        },
        "item": {
          "id": "5bd42397-2828-46cf-9f70-fb2012f74050",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "194ed99d-baa1-437c-8c8c-ce201906491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb85b65c-e06f-4627-8456-51aa61ce1e77",
        "cursor": {
          "ref": "aba20015-8b29-4de8-8688-61b266c4623d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d997df3c-8775-495d-ab1a-ce22eeb04895"
        },
        "item": {
          "id": "eb85b65c-e06f-4627-8456-51aa61ce1e77",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6d6374d-aff9-4aa8-9740-429fef4bd897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d57215-5904-46d7-be1f-757b93081444",
        "cursor": {
          "ref": "a574b996-47d9-474d-9238-7b869e060504",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "631e63cd-a803-41af-9d4e-93b96e514031"
        },
        "item": {
          "id": "20d57215-5904-46d7-be1f-757b93081444",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "93fc1251-2bf3-4a66-be52-a4a81f914799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a69ed3-0939-4e48-9048-c60f51d6aba0",
        "cursor": {
          "ref": "68c62006-886e-4715-9de1-7f063a02ec48",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5e4d912-3a80-4e5a-93e7-90cd1956cf20"
        },
        "item": {
          "id": "47a69ed3-0939-4e48-9048-c60f51d6aba0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cb24f43f-bf40-4217-aaf8-7bf1e489b664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc7bee4-5398-44f9-97a2-33f25e026b33",
        "cursor": {
          "ref": "05eeb76c-0cb4-43ca-8eae-669c2f72d49d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1083290e-c528-4ef2-8ddb-5ce4fae7815b"
        },
        "item": {
          "id": "7dc7bee4-5398-44f9-97a2-33f25e026b33",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d71b5f29-3b8a-41e0-a2de-1963db7ee97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263e498b-6494-4128-9224-6e40b1c9a81b",
        "cursor": {
          "ref": "38f015f5-a1b0-4ce9-b563-30a7f65d3df2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "883c3f2a-8907-4443-9668-d15d6c757151"
        },
        "item": {
          "id": "263e498b-6494-4128-9224-6e40b1c9a81b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0983f321-0c4a-44f5-a6a6-221ff4c809b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135e70ef-54bf-485c-996d-228ff66c69c5",
        "cursor": {
          "ref": "74852d0b-ebd0-489f-ab8d-ac606a6a622f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "826e3cbc-b492-4d54-a1e5-a6c707d8b247"
        },
        "item": {
          "id": "135e70ef-54bf-485c-996d-228ff66c69c5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a04ff07-1689-4173-9089-99a5d85eafca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674d2435-838e-47da-b69f-b8fb3f17ade1",
        "cursor": {
          "ref": "8514dc19-9f5b-4728-9f88-83ff78dbe658",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "57899a21-513b-4784-91df-45c0b4789b3f"
        },
        "item": {
          "id": "674d2435-838e-47da-b69f-b8fb3f17ade1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "213e08fa-3c42-4656-a7aa-7bfba29db69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84902c8d-a19d-4622-9433-60c5fbfae926",
        "cursor": {
          "ref": "70a2ad05-fdf8-4203-a8dc-b9ef04058da0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2170ad23-0bc4-4b3e-9a32-df724ff5a829"
        },
        "item": {
          "id": "84902c8d-a19d-4622-9433-60c5fbfae926",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "97083eca-4100-42c0-89e6-b6a6cb19de04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e2edc5-ea60-4533-a5f7-d5dfe8e100c7",
        "cursor": {
          "ref": "6be685dc-0aa1-40b8-a229-c139e425565c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bc5eb2a8-78f5-420e-92b1-aff405ecd622"
        },
        "item": {
          "id": "f2e2edc5-ea60-4533-a5f7-d5dfe8e100c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d4b722be-aadf-4241-832c-179d131dda2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdfd4c0-42b1-40ac-87b9-5f50cb2a6506",
        "cursor": {
          "ref": "2d6dffc2-6cf8-49f2-8694-b09fe64efdda",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a1e8f0ed-1f83-4518-9fb9-5dd20f5b21af"
        },
        "item": {
          "id": "afdfd4c0-42b1-40ac-87b9-5f50cb2a6506",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b3e7d9d1-35e0-4cbb-8c1e-55a771e4d096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45400132-7a57-4ade-8dbf-26167ce72c1a",
        "cursor": {
          "ref": "7620673a-97ad-445f-bed9-6a50d7de8a97",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7c020ad5-52fd-409e-9479-9897a3392ee4"
        },
        "item": {
          "id": "45400132-7a57-4ade-8dbf-26167ce72c1a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d6329dbd-9e07-43d5-b269-fa07f2870582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696d74b0-d032-41ab-941d-4111e9f9adf4",
        "cursor": {
          "ref": "8a4a91ab-507f-4051-a6eb-235caf4a1684",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fc148f2a-16ef-41f8-94ba-1198a039d180"
        },
        "item": {
          "id": "696d74b0-d032-41ab-941d-4111e9f9adf4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e90b017c-3142-43d6-bb5d-06a201e520c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac6f5c-c57e-4afd-9b1f-5cbd79396212",
        "cursor": {
          "ref": "177c09ee-e8ff-4329-9013-c332fb325721",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e1f80aa2-ecc4-4e19-8951-f09f815d1024"
        },
        "item": {
          "id": "95ac6f5c-c57e-4afd-9b1f-5cbd79396212",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "36e55f84-3fec-4062-95a3-af85ce3349d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8282368-fe75-4592-a820-7e8e34a001ce",
        "cursor": {
          "ref": "7508fb82-2095-4be6-8692-bb11eb713a16",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "61ca3917-1cef-4e8e-b0bd-5a538831f015"
        },
        "item": {
          "id": "b8282368-fe75-4592-a820-7e8e34a001ce",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "035796fd-9795-48b3-a131-de3c15571cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb582881-d4d8-4c32-9802-f425f6339e99",
        "cursor": {
          "ref": "4d6d00e3-246a-4d37-92d4-08abd68b771b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "953f9a36-d5ca-40a4-898a-0678dbd849ac"
        },
        "item": {
          "id": "cb582881-d4d8-4c32-9802-f425f6339e99",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d9c6252-cd7f-4e36-9b23-2eaa6d26a718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e55831-da96-447e-952e-6f25438253ce",
        "cursor": {
          "ref": "0b341027-f113-48dd-bb56-2d5ab7d76523",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5ee19cbf-3576-40de-8233-8240ac3c44d9"
        },
        "item": {
          "id": "d0e55831-da96-447e-952e-6f25438253ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "119f44d2-cd61-4806-b6e4-d44612618929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d6414a-8843-49a3-b6ab-c914e611d6f6",
        "cursor": {
          "ref": "dd52d83c-b459-4307-beba-4b40f85ac2b8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "df54fa02-c54f-4bf0-9fac-641c478d5dc8"
        },
        "item": {
          "id": "a0d6414a-8843-49a3-b6ab-c914e611d6f6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52d3a278-ba45-465c-9797-3f9289026e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03017d16-89da-4c6c-baa0-520fe80a88b5",
        "cursor": {
          "ref": "e335ca9c-9705-4e76-b76f-03e99b39f812",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6566803c-2802-4114-8858-0527c75bab12"
        },
        "item": {
          "id": "03017d16-89da-4c6c-baa0-520fe80a88b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "75d5e1c8-1726-4101-a64c-f51e4df8c5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff6f94b-a95b-444a-acf8-65bb63582af5",
        "cursor": {
          "ref": "bb8b2fb7-c47a-4c9e-9e2d-82cfc200f495",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c9dd7c07-7782-4f4d-8bd5-ce35590e9765"
        },
        "item": {
          "id": "7ff6f94b-a95b-444a-acf8-65bb63582af5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d8c4d6fd-455f-466f-8474-f32631ca33cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94df6883-5778-4ea9-a246-c8f7b1e7937e",
        "cursor": {
          "ref": "34fd7068-7f28-466c-8ebb-02b45d79a84e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e70779a7-8be2-4cf8-8a7a-0f92ec784941"
        },
        "item": {
          "id": "94df6883-5778-4ea9-a246-c8f7b1e7937e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5a3dbe55-9eee-464d-965f-f84d70b2162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b26aade-746d-4b33-b9bc-ad805945cc42",
        "cursor": {
          "ref": "7067dbeb-f799-4bb5-ae72-32559eb20a5e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d119988c-b6f0-4351-8d8b-a4bb5e3a850e"
        },
        "item": {
          "id": "9b26aade-746d-4b33-b9bc-ad805945cc42",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bd279c41-af37-439c-8e78-76773528a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a557c-c6c0-46f0-9ed1-7b96e2a9a288",
        "cursor": {
          "ref": "faca8aab-a6d6-4561-a476-1beb3b421731",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6b697f0f-d63c-4df5-af41-3719c5b54031"
        },
        "item": {
          "id": "407a557c-c6c0-46f0-9ed1-7b96e2a9a288",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7a1e696-976b-4a65-baf4-33332296f6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a03654-f282-43ac-9226-191703c3db17",
        "cursor": {
          "ref": "12894e86-c90b-4e53-82dd-3198f0db999e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "211d590d-3b78-499b-a09c-e6b7a8c782b4"
        },
        "item": {
          "id": "97a03654-f282-43ac-9226-191703c3db17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7a0afe7b-f72d-487e-9373-b64a4300fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4e2851-885c-4bd5-9e00-7b0ba097fa57",
        "cursor": {
          "ref": "103daa1a-f06b-4679-92f0-5bce4c2fbd92",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a54482c9-e7aa-475e-b55d-fa92f59f385a"
        },
        "item": {
          "id": "ee4e2851-885c-4bd5-9e00-7b0ba097fa57",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e57220b7-febf-456d-ae85-01cb48f8932a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f98c619-4f03-4382-8bdb-b7fd19585d18",
        "cursor": {
          "ref": "ee2dba89-70b4-479f-8f62-9bbfdce8a53f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dc60c7fe-435a-4a7a-9b41-d680542eeff7"
        },
        "item": {
          "id": "3f98c619-4f03-4382-8bdb-b7fd19585d18",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "24207ba4-495f-40d7-99b9-257e099d7021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5b345b-48fe-4789-aed0-617a8c165755",
        "cursor": {
          "ref": "f09cacf7-4863-41fe-b7a0-102d9d09095b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8a2814b8-d6bb-4eb1-a14c-e93e620e5888"
        },
        "item": {
          "id": "1d5b345b-48fe-4789-aed0-617a8c165755",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c869c317-1c8c-4297-aaba-8fe72b9ff44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fedb0ca-4381-43bf-833b-1b8c5f68c290",
        "cursor": {
          "ref": "da320e60-577a-4ccd-9cf2-ec26c430fa54",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9b1a46f9-10d6-4f89-812f-8b0312046a74"
        },
        "item": {
          "id": "0fedb0ca-4381-43bf-833b-1b8c5f68c290",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9bebbda8-fa52-4c6c-8aba-46494ca9ab0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0a0c10-f81c-4bef-b1d8-10f8b45135e6",
        "cursor": {
          "ref": "a98322f4-0c15-42c4-9f27-a0b83c4c49db",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eedf8aac-9153-4179-8c70-06bef38f5862"
        },
        "item": {
          "id": "7a0a0c10-f81c-4bef-b1d8-10f8b45135e6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d24e4bd2-223b-40a3-bb2c-f0e1f885d494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b8027-7ac4-467f-9a68-53e1d73196bb",
        "cursor": {
          "ref": "bd990d1d-823c-4b2a-85e8-7131836aec3f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "59d69bfe-7fc7-4c66-a32d-c7adfb99d495"
        },
        "item": {
          "id": "b72b8027-7ac4-467f-9a68-53e1d73196bb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0cbaf79c-5a07-430e-954e-c6e966f6cfea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac18339-1cf7-4609-8475-1298bac90be8",
        "cursor": {
          "ref": "35a9e6c9-a8fe-4b58-b928-9c4796090bf3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d30ff00b-1d2a-467f-8f0c-c4ad2d8b0b1e"
        },
        "item": {
          "id": "eac18339-1cf7-4609-8475-1298bac90be8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "03f57cf1-d682-4c69-a469-de24ce16fd25",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c551b-3da6-4303-9039-9fb8d381ab96",
        "cursor": {
          "ref": "70943014-5dc7-4bb5-a57c-8d1743170c50",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e2602928-1e95-4d7b-a5e7-7768d74a2ec4"
        },
        "item": {
          "id": "492c551b-3da6-4303-9039-9fb8d381ab96",
          "name": "credentials_verify"
        },
        "response": {
          "id": "68f547f5-20b2-4d90-b4e7-ba1f2928f83c",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e42989-828e-454d-a47a-cff0f96cd837",
        "cursor": {
          "ref": "1ae4906c-c1f1-47f6-95a4-2a9cc6818d01",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c0961404-294b-41e9-a77d-7be255d1f84c"
        },
        "item": {
          "id": "c4e42989-828e-454d-a47a-cff0f96cd837",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cb4edc24-84e0-4a47-9154-3fc3e55c93fd",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "666221d2-d80f-4989-8a4d-c499c74bafd1",
        "cursor": {
          "ref": "29603c4c-24f8-4f8c-a9f0-ced7e209a1cc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5b1f149-952a-4b2e-b2f4-1049e8245c8b"
        },
        "item": {
          "id": "666221d2-d80f-4989-8a4d-c499c74bafd1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea3525dc-0eca-4971-a31d-49d59a2319cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666221d2-d80f-4989-8a4d-c499c74bafd1",
        "cursor": {
          "ref": "29603c4c-24f8-4f8c-a9f0-ced7e209a1cc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5b1f149-952a-4b2e-b2f4-1049e8245c8b"
        },
        "item": {
          "id": "666221d2-d80f-4989-8a4d-c499c74bafd1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea3525dc-0eca-4971-a31d-49d59a2319cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abcdd6d-cf33-458f-bad6-71c2567d6e90",
        "cursor": {
          "ref": "c8d0e870-e2a2-40ca-9550-ccfa962d968d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9aa6601c-c0a8-457f-bb64-944138cc1080"
        },
        "item": {
          "id": "5abcdd6d-cf33-458f-bad6-71c2567d6e90",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55213366-a3e8-43b5-b3a8-758b7016ba26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e596dcfd-f5c9-4d90-8352-fba1cbaeeed3",
        "cursor": {
          "ref": "67520119-56e2-4019-a0e7-5656498bf950",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "82d8d327-d89b-42ab-905d-58b161349d55"
        },
        "item": {
          "id": "e596dcfd-f5c9-4d90-8352-fba1cbaeeed3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d99cf2c0-d3a6-48dc-b699-da50ba53ad02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}