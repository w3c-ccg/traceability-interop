{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "db209e76-73b8-4216-9b89-9bb91f1221f2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1c40624b-b175-489b-93e8-d1bb9435e5d4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74b7437f-ffea-4b58-b792-9bf63f0042f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8dc2d02-d9f3-4da3-88e6-74672dfbb376"
                }
              }
            ]
          },
          {
            "id": "55918976-5dee-4e36-acee-4317cd40f609",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f1c5de7-97df-4c07-a101-406b6121b178",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac994844-010d-4a58-9c5d-2a8bc34c5b18"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "af8ce2e0-49ab-4a52-be3f-02d8eb40e56d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9825b7f-b74c-4588-a1e9-42f35ec30ef9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9cc3909c-1831-4231-914a-4bff3c2cd303",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7c330b6-e2d0-41e5-9432-3364e5303b24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "911861fe-01b7-403d-99b5-3b7207532cb0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74402d57-8245-4901-b982-6a1abf4484c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48c49c09-b321-4af2-a2e2-813a661559e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6d8d6f1-a228-4fd7-add3-6b8140cd556e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f13f2ac-98bd-43e0-9d3c-eb53e3b0694f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b65e40e5-ca50-4296-b6ce-6eccd745b43c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3c794189-6933-4a82-a5f0-ad8f386b6f23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb1c330c-f476-4e4a-b718-e81b54f44a72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc6be9f1-26fe-4598-ae5b-ec7c0fbfdbda"
            }
          }
        ]
      },
      {
        "id": "29a24cd6-adf7-4245-9e36-46c52b9774ec",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "95d538be-3f82-4581-8a0f-dedad5b42a5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "680e50ad-cf31-4bcd-af6e-c3e269a0af8d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16ed5619-e8e0-4b82-8fea-33bef8ecb6a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e99c5cf-918a-4bc3-a71c-c0aae38c8d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50bd0b05-0b1c-4e88-a267-9ee33b4c9f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cdbb53-7be1-46eb-bab0-207c742fa65f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2462790d-a87b-47e5-84c7-32bacf1f1b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c42ccfb1-8464-414d-9b85-1b6d062585b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36aed6de-e009-415b-981a-c942f42d70db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2793f14b-29e7-4602-b6e2-cfc95ab05189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f075b3f-9a41-4f9f-ab98-cf013225a58f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc3aa547-75be-451f-bd34-f4d5647a4bf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7643b68-e911-4cfe-a1c8-8781e4c5553d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbe6424-330d-4b71-af82-2821a46a56cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72f1434e-3490-4f8c-975c-bf45ad5e4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127435bc-9017-4440-98ab-59bd70660392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f806dfac-c71a-4d7c-aa56-38be5409fbcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5ed7244f-0802-46f0-b1b4-94d472674541",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30055c07-0499-4248-9380-301b23a44517",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8b24b95-b85a-46df-a96e-45c444eaa458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "553be85b-bd59-4875-93da-cec558a026d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e20fe31a-4311-4b9c-8ed6-ccd6455b3810",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3d442a7a-428c-4f6a-a0f1-6e2d59c197c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7674ad50-bf30-4aef-a470-96e1547e05f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45e28d79-3424-480e-b218-ff92c39194d6"
            }
          }
        ]
      },
      {
        "id": "7590b4dc-5caa-4313-b0fa-2cc6705cd076",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb261d80-ba3f-4be3-b244-f6e7b61631b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4403075f-890b-481c-b554-cc5084d3449a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8661f588-30c7-46ab-86f1-21afc9c13c88",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c366ddf-731b-496f-b214-e00bf6e83fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb61397-9632-46b5-9819-654e91b4ae34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca154782-be81-4fb6-b6e6-3d70f0fb2d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ba127d-3672-4c75-b26e-2199430de25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4615d7ee-9a6a-40cf-80ff-d07b2980bdbc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e177276-f799-4473-b749-d0cd0805ace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219982f5-f5a8-4fd7-b6dd-192c600700dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89a3d86-5f9f-431f-b597-2d682d1ea1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca5a61ce-203b-4e7a-9ff3-99be1018758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e26d92d-6c98-4104-a5aa-8a4480d0f3bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0c8d3b-14a0-4407-93a4-9ac3e6791451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d1d819-3907-401e-8182-06aa4cc5e1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d1497a-8779-40c2-a619-4851dbd96efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b59c55c3-f69b-4296-b09e-baca6c940d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891ac0a9-54dd-42f5-99fd-b966024fafb9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85086f0-3334-4ac0-ae7b-ed61b72ad483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c988ce1c-e2cc-468f-b150-e872fe81f95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c326ed-ba67-43cc-8cb2-67f8eb173ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0df4918-5107-4c78-9590-706172ec07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e819cf-90b2-4dc3-92f0-ab291efdd0a3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191e1be3-8949-48da-974c-b665a68afe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff337dc3-a33f-4ffb-9d56-e3ce703d59c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3f0706-c7de-4c1d-9686-907a707de6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c42c642c-e6d3-48e3-a8ba-0ab299192b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f7d00f-1128-4d03-aee8-a500f0d15290",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bab390a-5e24-4d0a-9286-3f25486e673d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19db402e-61be-4ad2-b94f-088f755acff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904bf983-305a-4eba-a71f-3478e79fa88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9600e3-70ae-4e40-9e94-4832a121cd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35670b21-5465-4907-9eda-9fbdf288fb6b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9771a42-816b-4ee8-a9f7-fcf0fa9963d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265f1e34-8257-49b0-b5a8-d26acbe85c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f57f2b7-716f-4aab-99c8-83fff9af4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa0f625-9d8f-4f8f-b1db-7f18bed154a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3963082-e720-4cab-ae7d-cee6240693c2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dcfa00-561d-4481-ab7f-ab3a9ed499d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1e97be-906b-4579-9dbd-c000e7749b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eec0d9-4b0b-458e-be84-44ad0dd65fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "118bd8a9-7bbc-4c52-b22c-29abed862ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cf9d61-69d2-4b68-a086-2b9afa0b2354",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028651c-b2dc-4698-bacc-6ddd81e0065a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881d4e19-c11e-4c50-8333-57db8fd76bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf57290-b435-494d-96c5-4d03bb99f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12fe3389-ddec-44da-a485-e772df8e3f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceca12eb-7f81-4340-b67d-5e1fe0963e48",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b3c66-2d3d-4405-b3dd-f302d0418ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1dee31-0bf6-4f85-aa70-a4dac76de218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb10ad67-9b4c-41d7-ad87-4dc1a9b24b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f53f333-3bf2-4556-bb60-a5998209e6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ecfaa0-3676-4b5d-af36-64ac28c1d7d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd5d6e9-1ec5-41f1-a86f-6c78c73bea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04770dae-fe29-4e0f-83f7-7bbdf33f8c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86d7924-929b-49e2-8956-540828a02d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b083d3c6-2525-4bc8-9bca-28f63ce03dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8657b195-059e-4373-a4f7-1da2f2734f57",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6215ba-c5c2-47ee-920e-8c5dbe66df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda8dd08-4792-4638-be12-0321f619162b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf49955-cbbd-4c60-97ab-22262d8399e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caca682c-6b10-459b-92c2-0076c0971bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40bfeef-8dbd-4237-81d9-f22c5c114192",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad82e6-6d9c-49b6-a989-b70d1d12d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d2d792-a438-48da-852e-8996011e8afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492a9b9e-a036-4b18-8856-c32831f3ef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d2a3b47-bbce-4694-a1a2-c88a38c41b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fad86e2-b1fe-4c0a-948c-623f6f180a8b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5d1c31-1e1f-4586-b550-1f086769e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958f32a3-f8c9-4dea-b425-78acf544e650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57894c69-8126-4466-80f9-714a830ee478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55e0da67-8f75-4ece-a6e7-e113c4feb8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4217922e-c9f3-4c30-b975-d1065836a2cd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0247a4c-9926-441e-b638-a92da0f5926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956fecd7-2307-4d21-baf2-2937216f0a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec18fc27-887d-4721-8806-4e2d1e619a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9879ab8-0000-4a7a-a28a-2b5928beb863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ea13b-6768-4978-97b9-c8e7b8ce8387",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b08bb1-577f-47cd-902e-2acfd0ec8f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728b6aa8-d1f2-4c70-893e-ac0f31e9e359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cde6cd6-9d2d-4bc9-ab01-2478297c9ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e4fb2d7-0db5-47f0-9481-21306cea306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0b42c3-3d7d-4e26-831c-7b7fe4628692",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bcaf46-0b90-421c-b19a-f14e7083107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f138029d-1222-40d9-b7ab-780111268392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec81891-5e32-4229-8174-88b2f9af05ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd73245-fd44-41b5-b029-791c76a9c10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36558343-7ea7-411d-b203-ee96ecad7176",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb6d95-6310-4b2d-93e4-dfec7ec92ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3857966-50e2-4827-bf06-9be7ee9415e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f156bb3-e156-4f2a-b9eb-363e506219a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b01f3e4-fb0a-498b-a400-cbafac0dbf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1585c56c-e7ac-4e38-84e8-dd92faff8b90",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703b5028-6d68-43c0-ab50-8effcb50eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d79977-0acf-4ef7-a743-dc3cd8ef145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5bda70-a1eb-40b1-85ff-b32e0f5394a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e02fd9-a86c-4e13-80ec-73441e94bba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2464c0-6059-4550-b333-96e283eb04f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d1069e-0dad-4f64-b9bb-42c731b4fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52ae403-1d3b-45c7-a8e0-94f0d426fb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5af608-cc0e-4b8a-8ace-ea7d5ebd31c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f905c7-87f4-470e-ba72-a11e4e9dbbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b6b9f4-90d7-4d4c-82c8-0c51b0cd891c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f81243-100c-401c-be3a-87f99720ed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc7baec-beba-46bb-8124-41cc40a572db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72972b1e-a397-4219-9884-77ebf7f1153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a0f5bd-3ce4-4706-a356-a3c82db1671f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc4473-cfdf-4c9a-8faa-aef221997dcc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820b24c-d26c-4df2-b53a-162c1c416093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb9cedc-a03d-4372-939c-48d9ef8db817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e24e74-c157-47fc-9e68-776fad4a76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0ab65c-bf1a-437d-8841-78c19e0ed731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44992dd1-5b58-4d4c-af87-5b82c401e7e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74a5579-914a-436f-8cd9-44e8b65ce882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00788399-0522-459b-94ee-2b0a6f15bcbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ab10e0-a29c-4fe6-a347-452bc913e07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5caed7-6764-42c8-aefb-86a7f58ff0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4a91f7-e9dd-4b95-bdec-7c23923440c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3c4308-9dbc-4cf7-b684-71b8ffe7efe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f6b4e1-d2d0-4502-ad22-6f126da43b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2aea08-23c7-49d6-a6ba-e277a9568d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8f01bb-b577-4352-91e0-650a456fa044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccba691-86b2-4b06-8e6a-48b7cb2cdc1f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed075d-aeae-460b-84ad-c923626765b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1427e33-44ed-4700-b2b3-801e526c4211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73696e02-0995-45e4-b4ef-398bbbaabc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ed4aa5-3a4d-47ba-bd07-a03a811b8a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40defef9-dabc-482a-b6aa-919547c9b325",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff191ec-61cf-40b9-984c-49ef96a1bc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d2c9f0-e923-4649-9d81-f5ce2dc37177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4834f6bb-39e1-415c-8a6d-2bb22726a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6380a44d-e693-4067-8b7f-2ed1f1136e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ec9ada-7877-4c48-9af9-ecd21ded3fb6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148e3962-8b27-4f49-8742-9b208bd84440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbb92f2-b92f-4cb1-95f6-859a89a6e84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e0795-cd0f-475d-b697-7717c2f6b675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eb0152-c0e9-4082-af2a-cad4ac950613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049ca5d8-dc61-4088-b48f-fa2280f7cfb3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f7b1af-2c1a-4783-adfa-87919c73a2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2f2844-54bf-45c3-8b71-30b36d3c0455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0a694b-6fff-48c3-859c-79003965207f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18f4bea-2426-45bf-8645-cb173d7c93c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa3781-c2d3-4c03-845f-9f50a3487339",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53409a-2805-4ca9-a0a1-fc5a3cc89f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800415cf-322b-4a41-b203-2f1dbf324f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497281d8-e998-4d6b-9ed2-3aa0dea6bb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2709e5c5-807d-49d4-ba32-3a5d633c3fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bf77f2-8322-408b-a8ea-9af9425ea797",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd892a1-c9f1-4a3a-8390-b80f4eb2e20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f41e9c-3f20-41e4-8beb-79132d364b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2b89b3-7fb0-4eaa-aef1-3eaa998c6377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9182dfb6-86cf-4327-b468-caaa532e848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bf37e-0d54-49ee-bf63-015a9b981566",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ef6e4-24b3-484f-9571-762481c6c15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28d042d-22ec-4ad0-9f11-617b8a6ed092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d64967-fdc1-4481-bb39-16852057c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba656605-1dde-4e5d-bb95-52f6bfd19f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd8c00-c37c-4404-a175-344b6e6a47cc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a70bcf-d5ef-4dff-8a29-19243c8d39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91778f82-9c9d-4837-b451-054fe8d3f498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34154105-b101-4e64-ad5f-7dc2dca33c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8090b26-51d6-4593-a67a-25365d4c2935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da6049b-4133-4920-96fd-7373be269780",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620bf60-98c2-436c-861c-436a7e38dcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf206c55-3e72-49fb-98bd-a6d246dd4529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27786f51-afbf-418f-a11b-4854feab5e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34fea1c2-8d16-48a2-af61-e011fa4fa5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af44010-bd3a-423e-92a3-f4577cf917ed",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a709b261-1be6-4c8c-97a3-f5e95af497e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84315ab-201c-440c-b4d7-dc56c16c1fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f526aa2-8065-4583-8df6-2ceee19f20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4fde30-ae19-4648-82c4-d2059c6dd1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea58e0-4eef-48af-bfae-46d9bb2f2578",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6ee953-251c-4f81-98f0-21c6762b7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077d366b-1793-4123-862d-97e8992c5e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c7cd63-4339-4271-8eb5-b35e549dfc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "065cab32-4c27-4a19-8491-e3e5642bc7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828df5e7-97f6-4e11-97d4-713f89f9ba80",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec221a9-0a1b-4d48-a591-253823a79ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0607fa18-ead2-4e3c-b1fe-cbea60efa9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd9051c-b9f6-4ce0-b056-e24e9014e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cbc6cc-9eef-4297-bbc1-efdec31e9e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b6570d-435b-4143-a40f-28edc27c2dde",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59b148-c37c-4f6b-a3a1-fa3dc0d0190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227c494b-beed-4e31-9d24-5eacedbfb0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ac341-fdaf-4b34-842b-e78656548149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5574eacb-d635-4fd3-972e-425bc509d7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b587804-1d43-4be1-ac1b-35d617fe7310",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe34d123-1944-4ff7-84d7-8623ff94c4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a86f6c-394d-4179-8eca-3db389caad59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834e9b0c-093d-4f62-93f4-8fc1becf6254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8eba07-f882-4b4e-adb4-edc02030a4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173d0bce-fadf-4a54-8933-a1aaea051f00",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d810819-0abc-4937-a4ca-282d12731678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfe3015-f5f8-4b8a-bf0f-7880bd39fa34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543e8a23-3485-47fc-ac54-4cd51d62902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84fd3e3f-24c8-4298-b486-914001ee0f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d713e41a-fe11-452d-9730-777b71629b98",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152802f8-4672-4604-8d1e-5142e25b0cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f8ca0c-a731-495f-8b57-ced6e49bca51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084e95e2-3dbe-4c81-9893-35d4936a4602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94ee7554-e03e-4145-92df-f62456287b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f310961a-47ec-43e3-972b-36ad09ab2496",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a127f479-5c06-4e14-bad0-da3362ca4190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f03c0ed-7d72-456a-9627-b8005693e933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4958c1-e04b-4c9f-a468-ecad33ed8395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aadcf4a-dbcd-47a1-b15d-7fa88c022ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49332978-fe2b-4267-b1ea-b82870bc8715",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f2688c-91ca-47c2-9f61-70029b2d6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c8b5ec-e052-4685-a508-e0837fc6dad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d147ed-b4a1-4d4c-8b3d-dc0eb8c0a809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa83b222-5415-42d7-a186-e962a32b9e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df031c70-255a-406d-a1d8-21f26aedf88e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cef792a-1f5d-48c9-8a51-3d0f4387224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68b23b4-63c1-4b7b-94ef-64e9c602d658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a02f942-bdce-4a03-91e1-f0b0eb180d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19ee4af1-5c1f-4d0b-8514-178fcb15a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67af6b5d-5b01-4100-8a40-60eac950e69e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e706d92a-9d98-43fb-879a-efe1b72d7b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34549b27-ad50-4e78-907b-b6c5bf340e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddb7982-eb40-4a4c-ac7a-d81220d3725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9189ee-294b-4279-ac47-ea2139c69f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51842ba-d85f-48c8-b557-95d0c766700c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37be04ac-0a76-459c-bc3a-09f501f71326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15ee873-47de-49fa-b21e-57329ae39e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377ace1e-a713-4478-b7e9-5aa6e059968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c294c380-a6e7-4714-ad6d-a5ae637701fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399d8ae2-53fd-4a24-a39a-79a125e7498f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca88f402-873d-4871-b8ae-cf59b17c5032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8897e3f-f22a-44b8-8922-ca4fd7654a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2c770-0144-4830-a995-d595608c4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb51bfb-8759-45d1-8960-7f70d2cd7600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3ccfd1-ecbc-4bde-8933-c2bd634ef680",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ae27da-83b8-4bb7-8652-ccb5e7c65390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7beefa-d695-4f50-9d61-07ccd5adc946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d63d1-013c-4e96-ba2e-6c4ed473679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd032f38-e94a-4249-978c-81f6e65415c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c3aece-afe5-4dfb-88bd-07b98364860b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c3e9d8-fdbe-4ba7-a18f-f6a183771cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719be37f-09f2-442a-ba00-b28d345ae78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280ddd35-1a36-49d3-b7fd-d35fdacc4b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b8a6bd-d03c-4dc5-837d-ca2ba241589b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73525037-f496-4166-8eca-b97c11dfe1ab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d46fe4-a0cb-470d-a48e-afd0670431fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b562084-2ac4-48a7-b744-c9a908699ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f638669-5746-4d33-bad6-932d64f655c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cba211d-0c33-4e91-af34-5c21c8fc4341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1700fc1c-ff5d-4d5f-b16b-7ae6889094fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f66dc83-ce34-43fc-8095-ce33c40ef615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3036f9-4744-49e1-b787-7547848c1aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20bf1c3-86e0-4c49-b68e-f6ac1fc7b908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d82aa3-d012-4f00-8253-01f5ecb546d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0271d37-ef52-4404-9c8b-aaff229cc9d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1f9862-5487-446d-ad06-6ae8f790951d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e250a592-d9ab-43dd-a5c7-6897b1ed2b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84174fc-bdba-485d-a3eb-2d72a8ec2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b4f1f9-ced1-4829-8c81-21736f6b5428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f83ba04-4681-4c67-97fc-65e81b4569bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a849dc-2592-45b6-bb33-7d983bb61493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d82e59c-d691-4789-a6cf-1e9582ee7401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1186b81-c503-485c-9aff-0f87ef21c3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35650ae9-3817-4b96-9d0d-3d948c22c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912694ae-5cfd-4ca7-a355-0e27417efbf0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1711b2-57c4-46b9-a63d-b2910207c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f916bd-940f-4e0a-8b24-8a3c24a4c429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36c7476-2771-422f-9029-669c033406fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7769053f-0dc0-40be-904f-4ed7285b5a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e756332-698a-4339-ac48-76fb6f2b1e24",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f236519a-c03d-4407-956c-2a0372ae20d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b46bc6-1a11-4fca-b9bf-269bc36494d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d9869e-807b-4e0e-9130-6d23ffd54e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f85957-475a-4e3b-b358-c18483f9ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4007aaa7-63ff-41db-a763-6928aebbae39",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302c5d40-41a8-4929-b989-9cf608b61600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b2adc0-c151-4df3-b667-be73be50bf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7804ddf1-803a-4a18-8687-3b04f93fef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "935baa83-d1a8-4787-a4d9-1bfcef152582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7410eed9-a41a-44a8-a42a-c1237cc0bef0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d027a3-0873-4160-881d-587d5d801e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b617ae90-9b4b-403d-89c2-6f9e23b043bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe33af1c-d0b6-4827-9994-2f2d30998b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "46b44760-b879-4360-a3dd-e07adaace800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d34202-a945-466d-bed4-831a9569cb23",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142aa4fd-08f7-43fc-bd16-800ab8fd0df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2d26d4-a9ca-4296-a37b-11b5050f37c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121576bc-641e-419f-beef-df71205bba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd89401e-3cce-46aa-9cae-3458fd4abf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2376b39-413f-43c5-9988-6fbb665c56cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c1ea49-2bf0-481b-baa0-69f19dee57e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8b2be8-e301-41d5-b587-054cb9feb99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9388d2e9-5ee7-4f9b-82f2-7dce30b92aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "90e6b7ba-787f-436b-9eaa-60508ff603fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9280135-e021-478a-b968-26c0f938ca0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5d50a3-85c1-47fc-b704-cf96c4a8f303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb73bb80-d1a0-4cab-a300-1c9a57a02867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0e034f-ade0-49e1-8dbe-e37cb0ab245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad50ed2-8203-4a52-b2b8-10e1f1b2ea3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4476559-6546-4723-8f24-4e2d2c6dd4fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd39417-1114-4c1b-a3e7-dace4be89ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1214ef-e198-4679-afe4-8747fca8b715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a3ef2-749f-4815-a0b8-ed700436498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b6c25b-a30e-423f-8a7d-bd25e9e09165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699ee6c6-1a19-49b9-8448-d21c9a996319",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b784e4-7cd4-4140-9438-e3e04b7dcab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eb9b61-34be-4192-800a-ba64837ab777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbc4bda-3e9d-4fe3-8ead-a11d5bd6bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40423c55-1dc1-463b-a11a-aa699be516a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890d039-f58b-497d-bbfa-f2cac68c4cdb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a98c8-106c-4214-8d4e-588905c7caeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda185f5-49b7-4e8e-ac8a-8947dde08acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221faebc-6ea8-4afc-92f0-1753a09c6c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb7cbfe-5830-41fd-835f-bf640e2fc123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb90219-2ce3-4389-9d5d-aed89e5b1929",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d6bf6-653b-40c4-a6f2-80d107338f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8687bf79-8efe-41ba-930b-e346d4711af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ff1a45-a637-46b8-8bf0-8b79851bbb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1059da42-eace-4ee2-b1aa-0c7b0edb4870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004e9e50-bcf8-4e1d-a8c1-5c06c1b99f91",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1430977-745d-4c04-8829-5dde136fee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5ba134-fbaf-42cc-a15f-acf79f715f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203f22b-3f57-4a0b-ba8c-3a9dfd0d98b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "295ab438-a605-46b6-863e-64a172df22ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8ece28-5561-4d34-a6a6-240fec09a400",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ea8c0d-56ea-426b-92b9-a892bba8a986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3611e02b-fb2d-4383-bf85-8116096b5d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e12a05-1ca6-48df-bd18-f9860fe61918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5320fe32-6faa-49a1-8279-c8e2f77173ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1291a9-ae78-4edd-b04c-faf0d18c2ea8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b9687d-0c7c-4a85-ba28-941dee00a00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a97af11-8367-4962-8b15-d846e0754389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf03836-c107-4232-9e43-3240651f125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be931b88-e47a-4437-ae4f-ac6500689c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a31cbff-da40-4314-ae24-6098d118589e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed50e33-c0b9-4e26-828f-328c34439ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef7998e-86a6-4014-b9dc-dcf6af8e5813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6f03e8-7572-46a4-a1eb-418f9258dedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4e25f9-b20c-41ba-8f9e-6914014fc0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3a202b-8a1e-4945-99cf-2997ae53bf10",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d4a24-4a60-4be7-8099-3ae6b9326e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8bad1d-da4a-42cb-96a7-979383a4fc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220664f5-46f3-40ef-ae63-b545c10f1578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdbc555-b437-425a-8835-abd0f5c337b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbf63f7-e873-4de8-a35c-f5ffff648f3f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bd8453-495e-4b43-b5a7-64aa89724fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2780b4f9-5afd-4f02-be1c-266db037ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fad2e6d-97d1-4f51-bcc8-a548e53dbca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85aa76b8-1384-442f-bcb1-4a49e133cd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9bc2fb-f57c-4d38-a12d-ffec13cdc52e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86d4186-1c43-42be-bbed-631691d7b36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56685ae0-796e-445e-863e-8790a2de1db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4434cdb6-65c7-4b66-a069-4f757e74ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3001d3d7-0fc1-42e5-a182-6f3d27f052fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f3f868-1326-4f9f-8f38-085c6333b989",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c24870f-a657-468b-86d3-383a144206ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28700d8-2139-4068-a829-c0ab6ef18029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fdbc92-5838-4041-b15c-cdeefbafa0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "661a6446-8fbc-4b03-a2c0-8cdfbfc4f722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb03bce2-f98e-44cd-92ee-11c2f0979c85",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a1f9cd-e4a2-48a1-ae27-fa72ef9bed32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608d80d6-a371-4cdc-ab5f-da45f0c80738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded7c032-dbca-4a2c-b96b-01d9a60efaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de7d92a-6b02-41d0-9149-c162f8c7ee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd88d1c-94fe-4d68-bd5f-f19c57466210",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef63c1-92a6-4f56-b71a-23c412dc942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7772d9-60b0-4eeb-85d6-a07c821f9c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d551c1-957d-4c72-aff0-3dd8b9c07163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adbe12db-56b6-4ee4-bd20-c34f2fd29a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7621c9b7-681e-4c74-8386-7f3d609f015f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2732468-25e5-460b-999f-90e3a7bb1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b2a6ad-89e5-4990-ab2c-3eef48c80a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50250d78-23f0-43c6-aa63-75c2002cb069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3067a90-7b4e-430b-aecd-b2873c6dbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e2016-e1af-418a-8f34-257fce0bcc09",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809bee8-1ce8-401c-82e4-d33a3dbcfccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510feb93-9990-4faa-9567-a73b64425064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331ed7ea-1091-467c-837b-227f6b76dbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "530e4b14-c094-4bc7-8223-7b8e8a039e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9e86bc-72f8-463c-8758-b64714f8c3b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0469a34c-0e3b-4293-b359-8dea161d71b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ad8726-85c6-4fdb-a5ba-139de152e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08d4362-9acd-4705-977d-78476178a309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "282d239c-6cf4-4f74-b362-4c1d73cd34c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e418c-a04d-421a-8730-62995941d08d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a90218e-2221-4587-94a3-7a2fc890f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5094cee5-b63e-4561-b6e0-1ab3d6d8732d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc781a3e-5697-4205-9efc-13322f11b0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0066a5c9-361b-4642-b8b5-444ec557207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711cd8f8-ad73-4cc0-8361-d505ecd6c9cb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77cd9fa-5648-490e-91ce-70f0ecda1999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a2658b-23ed-4b66-9e35-727a58bfc92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cac127d-759f-48df-b551-351220c10e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5fd1e7-0be7-49e8-89e7-06bc923f56c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35b01db-8604-43fc-a928-1cb1b57f1801",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b429e-3a8a-4995-9e64-d41cf26c978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81db325-c123-4253-a7ae-551bf459b024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded06855-5af8-4d4a-823a-9c77e9b9fe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7141c102-1e35-4d5c-920f-9ede2cc06216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392b9c8-d4ae-4ebc-8887-9c23ec8bc1b3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81617b39-e21c-4172-aa54-ac943e0d5405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad34e03-4c33-49c4-96b0-3b76ce0ef5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb46065a-3cc8-449f-a36f-448ecf944c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccecca07-ff6f-433e-8c14-58be8a3bf6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6c624d-4200-46ec-929c-a6f918b50672",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d9fff4-e3fb-43e1-8f1a-2bebcef6ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d8eef9-2302-453c-ad32-a5825c2032ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b437ea67-628a-46f4-bfc6-36f0e37bfc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35941e4d-7ba9-43f7-884e-1937cf7e46e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631f28f4-16a6-4fca-b453-ddfc6d40adae",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e28cab-4772-46f0-a93d-93a050c3a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8446fa4c-5ac8-4ad5-be04-13919b76337e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74205e8-4e05-462a-b329-84e2e3d3e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d25b440-3711-48ae-8515-c89c4adb7ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d717e88-6714-4ed2-86b0-25f729c7a57c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0946f2c6-7630-444a-8374-450c9a0dc352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5aa841-9a07-4689-a0e3-3eb28205277c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b192b2-b5da-40f6-98a0-3f372b6a56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff018423-8999-47ef-827d-dc7ce4de7dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae68d58-ada3-41b9-853b-d554e6a941a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11634b97-0c82-483c-a4be-0ace0ed96a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3c15c7-570f-44d4-8c25-a62efa6e278f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61812334-2bc7-45fa-a82d-08cd93c1ee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2157a7cd-411f-4bb6-9fa8-00bdb016e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680edf9b-4ff6-47d8-a90b-d5b86efaadde",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39df068-1044-474b-9b45-af33b93ac757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80346b1-1fbd-4e70-a3b4-f7bb233b8136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e3545-57ce-4cbd-9ccf-6e2c1a29c231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a703a58-2757-4204-bee9-96dab8f60162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d847e-9176-47ca-ae2c-7977deae3451",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c8cfe-218f-4b9c-9d9d-2e1d937dedc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295cf074-fdf8-4a11-8708-1e29665e69ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a662292-b94e-4fce-8eda-245eb4d9d558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcff022-7233-4854-adbf-c942b31f5526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b4768a-79b9-48f8-8859-dc185e893de0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c26d5f-98f9-4bff-8ae7-a6fdf11aee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3a5d1a-d2a7-4b95-9ec8-08aeff846149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db829846-db21-487f-bb3b-dea747b1415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff368af-442d-4fd2-8c61-b57f02d7e6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd45606a-7003-40ad-b475-1ee448d3953c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3044eb3-fff6-4df6-9e4c-d47ebb1d7a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1cad2d-5df7-4e88-a72c-5082455b809c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55693d5f-fc41-4397-bda2-e5abafe7baf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee53caa0-5dca-45fb-913d-b9ee2975be0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ad9b16-0d9e-4725-811a-f51c27c1ca9b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649cae4c-859a-4d5b-82a9-ab42a23f1d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb418fa-ac52-4167-8a19-19331efe4823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba0955c-0724-45d6-a9d3-ddae7aac37a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad5a6ef-b8c2-4be5-83b2-3d0272cd31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc94ccf-28f2-4d9d-913a-a88c99332bf6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06b7689-d69e-4dae-9ddd-4061363d7657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868bcf13-fd8d-47e7-b309-32fb67b6f354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f0ff29-3e94-4ea6-ac4a-0ac6eef15601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6be2740-0f74-44dc-9d11-a267a8bc5a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef094698-3f5c-4438-9ff7-b7f4e4750c25",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fd5fe0-7a2d-40ba-a14d-4e2a363f7c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ab88f8-e3f9-4883-86bc-c187690dd1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f2b9c0-c5b0-4ef9-981e-0028e212dece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cf89c5-fb6d-4f3f-8c0f-c195d4d3faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1e385f-4ea8-4d06-9b46-4d7c61e26315",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8222f447-ec05-4895-b157-2b6beacda917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6bd4305-ceaa-4845-8b14-a4aedc505f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e82b1e8-1703-4cda-8612-00910a601910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "739a3bf3-1059-4c9f-8205-b00e761a9444"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbfe1d0c-fc5e-4006-8927-23753097b1ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02fda562-3167-4aa1-aebc-25e902b504f6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f3db6-4cfa-43d9-b8a0-502dd1992377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2efc4211-d0bc-488c-98a5-469a0fb6de54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0559885-2875-4565-bfbc-f875249b8ed0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b34fa108-193d-405e-9fd5-532cb43e2537"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "972c9a3d-86eb-47d8-9983-13b2cac90277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58088ae6-61fc-4dc7-8946-bb35a6d10444"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74347a3a-98ac-4be5-9a9c-3e679475da8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c1ca7c7-3b7f-4921-b176-e7137abd6651"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6669c8e6-067e-4b80-8970-3ef20c45a7f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed172a69-16fe-4dfd-9819-c19a951f052d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a972786f-96e3-4fae-8fe5-3c72cc38c30d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5b9b410-be2d-4d65-bc27-211f5ef6a88e"
                }
              }
            ]
          },
          {
            "id": "04e0b85a-dd96-4bcc-86bc-8583c0f3c534",
            "name": "Positive Testing",
            "item": [
              {
                "id": "375a4371-4c1b-4fb1-b6a5-b129620d4767",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f504b5b9-d616-4a13-892c-f71701d587d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c74685c4-bf3b-40d8-828a-2f0665039867"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d7e5354-0b9f-4f1b-be89-3e5d49cbea88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "349b8e12-b861-45e3-9443-bde5306302c4"
                    }
                  }
                ]
              },
              {
                "id": "97a58153-7837-4b52-ada3-bff5cb3952fb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9324f99-9958-4996-a246-3d4ace7dcaf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5959fa9d-650d-4dc5-adce-3da26f690dd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b4485ac-4ef5-4d67-8d35-36101532943f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "316e44ad-becc-484f-8b31-00f8e86036cd"
                    }
                  }
                ]
              },
              {
                "id": "68cac753-3e6b-450e-b289-3e6e6bce7faa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe82de7-404c-4407-ad56-a2dde0cf14a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f18b693-4fc6-457b-8406-ea794b0eca2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "141df44a-398e-4ee1-b033-bfc8bd5de093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "961bb570-d9fe-4290-842b-9efac5d7df52"
                    }
                  }
                ]
              },
              {
                "id": "dad059af-67a8-4ce9-bfce-c9eb0a70583a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c34f471-20f8-4f5f-bced-212a5469be45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e62c9a07-2407-4b68-9684-322a5dba75e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddbfdd75-cbdf-400c-95ed-99fafe328073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a2d2a629-ffc1-4344-8cbb-013800cd789a"
                    }
                  }
                ]
              },
              {
                "id": "a742b5fa-1f1e-4087-ae4e-b7c8a21d8ec0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c976b84-ab04-4404-8d7c-30441e34622f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55254510-38a2-4d4d-93d0-6036c525bef7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d726ead2-4834-4467-9ec2-8b359ef0f10c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b6782edc-c197-415c-894a-ff3939afe7a5"
                    }
                  }
                ]
              },
              {
                "id": "c5cfd076-85d1-478b-a49f-705365cbdbee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd92618-e6c6-4fe6-a259-25dfa5daefb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb6f3cee-a0b4-4340-b049-15b1e1905b5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "885d581f-c661-4925-9ad8-3b34c13308ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e97b2161-b5eb-4dc6-be36-672ee80b84d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a448842-1a0a-4f0f-84ef-0fc50677d436",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "adf86528-2f72-4274-915a-e6bd55b6eaeb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3fce536-5bc8-411d-bab9-424f159bd8f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2a61723-6166-440b-bf3f-282d6b3c54b6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26552526-f1f1-4f1d-9fab-c61f0c90c175",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "73030092-5712-4154-bd58-bdc0b4ab4f6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b40b8473-ae35-4296-b51c-c740c5e3e3c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7aede903-f51a-4a57-be92-971dde86d9fc"
            }
          }
        ]
      },
      {
        "id": "d5feb3a0-efcb-4be2-82df-e4770cc3295e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "89802daf-fdfa-4425-b437-f5f77f6f7470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38d7a4c9-79f9-4637-9ca1-594380ffed23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9735dc62-002b-41c8-a94d-158d931096eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74da4d9-3c74-48bf-8d08-d457d744f3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab3feac-637e-4872-b8cc-2f53d01e551a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ef5c89-1d04-47c1-a7fc-2df22f32ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1b0fc1-a7cd-4c2e-af84-180c357b4320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef57b836-d3b5-42df-8b02-b39bf9bdaaed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70946ff-7a01-4078-a5ae-d5739aa6e65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e067b86-9589-495f-a491-7fb9e78cfcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d41e38-560b-4d92-a38d-cb605cd4397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19be86f3-91cf-4a20-a1d6-68eb23a8311d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c813841-a75f-41a9-a59b-bea5ef119daa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d21daa7-d23c-4e9a-81cf-3306e1e7cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28188dc3-ed27-4067-b906-6d6129f67897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523ad81e-b64a-4568-88b8-7be1a5cf4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5909e9df-f854-4aaf-9241-4e9408620ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f537a6-d4ac-43c9-bef2-b50288c38c10",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2572f5-a1b2-40be-b8af-becfcd3a3d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f976f52-6cb0-4720-8dd6-a66e2b734fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac773ab7-ec01-47c3-b6d5-85d17688c0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4921b81c-6ad1-4096-a696-0d705748971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc0b7b1-36c8-462a-8a92-1c0e096f10a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5531ce84-fe68-4acc-b4b6-84421e455972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb34427e-0aff-40f4-8310-29de7650dc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de139c80-89f7-4d3d-8c7c-c82b725d1adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c204aa-6c37-443b-a115-6a3cd15a4be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9190e45b-5b49-4c07-8393-f1ea389e5604",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f01cb-143f-421d-a82f-0fc797c8a2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7cf2b4-82a3-4ec9-9415-2d40f5219af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c1f4ef-4439-4bd5-a9bb-a727d8f8c624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17df675b-e35f-4fd3-8463-cd6202c980ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386889a-f89d-40ae-a8aa-dd53f08612b8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53845da5-9bdb-4889-bae6-fed749e0b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4d55cc-d0cd-43a4-a435-c6f9dcb7cd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20970101-e6b8-4ce9-9032-b8d2dcb6e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5692ae50-1517-40c7-9a2e-33e48cee250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84f54ae-c79d-49ce-b41f-cdb7ff300b49",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6452abf-e9ba-4a04-9755-eaf2cc007c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8af684-4d51-4a9b-925f-dcfc5a63773c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b76b1f-34eb-4b17-877e-6452eff71395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5305b343-85b6-4412-be2b-e3027b128a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a10cd5-d78d-48c5-b534-e987b28b64b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2c0bc2-e028-474a-81a4-cf4393425ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21076200-bc30-47f7-96b0-9e4d293d3996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54ce43f-8291-40c7-9d7f-8128124de4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25ef01b-caa5-41f8-ae01-a19a898d31db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3760cf-01ee-4d5e-8541-2c6dc165f650",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b0e8c9-34f3-45bc-837c-5b0e616fb17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eaac5b-c52c-4eed-be0d-9c911c8f974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a79d675-73a6-4e1a-9b68-2354c060442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbff4de-a89c-4594-8321-bdd56beadcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03291f9c-1b5b-4899-9017-73f81bac0587",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479bb92-3470-4fdd-bbfb-4ce267c8ccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dec7c5-ee5b-44c6-b5c3-a5a96fc82206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18414ca2-ef65-4d0a-85b4-9132011dd0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "96bf8e0b-f0fb-453c-98e9-662268e97dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695e59b0-4ddf-44b8-85fd-e47abda64bf8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad03ea83-5e69-438b-9824-2fb7955818c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1598e330-32b5-42fa-9f62-cd456fd68254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d703b1-d960-4802-be2f-e8aa83d933e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a19c148-11de-4131-a76a-253b4a09ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7ff0d6-ba6c-41f5-a33d-4c03111f2e59",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d8bfe-d4e0-4c23-9f95-f7af19d5182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3b2929-f534-4247-851f-42585970e1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874863b7-7667-40b9-b36a-374bf6a932af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0d0365-c01f-4111-98cc-3c3d3e4a62d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d65b8-6f11-4d09-bd8e-a63d5bedc3f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63588df-174a-4e8b-ba45-204433e8b31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830661be-6e14-47cd-9172-fe616d6c1345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa53b7-54a7-4f2f-a466-93b5d635dafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c465b5-3a1d-4cfe-8c58-af00c299c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2165506b-4a6f-49fa-b0cd-cf664fa2b60b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fee953-a985-4fa2-a05f-465f5e1be1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55787dc3-7629-4729-acab-b70ee423e4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067c72b7-7459-4bbc-8305-128c901f1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4ae10a-da31-49a6-abf1-3fc341f29214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79452a08-a4e8-4e60-8d45-4b5478127ec2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273fa692-95ff-4e4c-91e2-2d0761907eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cecf6e-7e88-4881-a319-b14f85ba55b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a042bac-b5b1-4122-91e7-17610913452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76655ff4-68f5-4b6e-85a9-bbc3d6f45176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc01931-4cb3-4522-954d-d58b9b661a94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f35bca3-0bf7-4586-943d-b6ad9e765504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e32550-a47e-484e-996c-496d0e419442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c0addb-7811-44da-a520-c5a607872901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "939f7795-cb00-4f98-a68b-8554fd089043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f84af3-5757-4793-9f15-b124a005ce3a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d71ec1-fdfa-4f8f-8974-f1a68d7a7579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ab7f20-2b4f-4d7b-95b5-642e3e4c5219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc95e8-e687-41da-89bb-2d405dca1009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c0c923-21e4-4518-aa27-b66e000f5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bdd0b7-d8d4-4092-928e-8312ebbb95f6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153ff612-6241-4d8d-8b5b-a05f46add351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9328f6b-933f-42d6-a549-8ba3bc33ef9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731682e0-c5b1-4d82-9b3d-c675ad90f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a4b0a8-161d-4e16-a5be-65890357f8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d04c692-5562-495f-879e-3d64c1b530ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36f32e3-8d25-43f8-b6c1-9bdad6a3aade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fb04eb-0114-44a3-9604-7ecbdf6f1bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab20f1b-3195-4931-87da-4c9af4869f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "497368b3-76fd-418a-b073-5c76d552ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101a7cef-b310-4c62-8f15-42f4f631259b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf20d48-af88-4166-b606-44f14429c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53f2873-e47b-42a2-acd9-33db659c5920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c4090b-2d57-47ba-908f-3ad66a51202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8fb19c-e1b5-41a9-b7d5-2b3909877e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aac179-a816-49c6-af6a-5cddd740e110",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaadcc3b-ac97-4161-b21b-ad6816b135ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdced8f-b551-40cc-9f45-a85e68a1d8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68686e14-4386-4db8-968d-e07708c8f2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7fa972-a60a-48eb-b80e-a134842a8941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46668d23-4a73-4476-a73e-eae4f7c95849",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850457af-4840-434e-aff7-c75b2128789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb1a0cd-2a5c-4bc4-8b5a-69c1b239fb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b515f6a9-6387-49d2-830a-dedb62cecf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa976143-fbce-4ec1-b0a5-23ea4d497fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092fc0a-4448-4d60-9d5b-26ed96a121f9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd5db50-fd45-4f69-adb5-ca062fe1d023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c3cbcf-bc35-4fa4-845a-0ff16518ddbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff0e25c-ffb5-41ff-88c1-5e32662760fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56cc3858-4cea-48d6-9184-eed8405a2eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ca2559-0523-4657-bdf3-0bcce30eed55",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86407d0f-9dc6-4d15-b1ed-cd76f82d3e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a91a85-3e55-470d-aa3c-18323597b9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b64c8-c0b1-444c-9016-47c8b9bb6bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee56ba9-52c7-460b-a39c-8c939d88dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a8457-7693-4fb2-992a-1ee3b4080f78",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee25dfe-ccb8-40dc-bd49-f48f41037b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb428ad6-8b55-4f08-82b6-45f346131888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3892b-9f83-4d92-960b-eaffb8e354c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d0dc05-476c-4d20-bbf2-84e452cd4d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97027b38-6ca3-4270-bf08-04725e78925d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1486c57e-e9f9-4a80-b5c4-8961fa27e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f6d20f-a3e1-43fb-ad50-c5b6070a6b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b016aa-44e4-48d9-bb67-de72d5d0246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b450aa0-8def-43bc-97b9-d1489d0fac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4d49c5-81ba-4a09-b5be-32b1f596d367",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dc768f-bce9-4080-a8d5-1a243cba0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b47ae7-b4ee-46c6-9fa5-e87ce8ab2e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e463a8e-7222-406b-821d-3d30cc10fec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa1d33f-b431-40ff-a57b-ecf15b64ce88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa30fdc-3735-42f5-8dff-f643a05109f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be7e0ec-e6d3-47e1-aed9-aace21d581f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a018c2fa-d868-4d96-823d-7000ce9d3e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7178a1-7b68-4468-9dbe-74b09410fc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09139ff8-b67e-4ae7-b0e7-7b75957c34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995faa12-4796-4068-be67-49caed74cff7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7937d7-4e9e-4e57-b8d4-b5c6668ae1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22502466-3da3-46aa-9731-012792723f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e212c3-26c2-4562-bee9-d7454c6c6565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "599fc69e-dc9c-4a19-811f-4792c2cf4864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a984ef-5d58-41b5-8fa6-e23c61c5d800",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a1d63-30be-4ce4-af87-552f86a76e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e80d9e-950e-441b-b547-50aa997ded78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae8d96-bf20-4eca-a6f5-781859d6f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef35057-4f9f-48e2-a6c1-09840e32245b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f4f6f6-9bcb-4321-9b05-4dcac45aa777",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e49312-c7d0-418d-8f01-ff2f8d9ad41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0228b1fc-e14d-4e78-ac04-939b66d0119c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312464a3-f83f-4548-954a-d9a448c563bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88931a2-c546-4d14-8db4-aff0151405dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af69fbfd-900f-467e-95d3-e7bb2c25ef16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c6bddf6-74f1-4fb0-828f-451f82450fd7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227f6d92-3464-4d52-8d38-da0e12ceeafa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6be4e39-9a77-4827-936c-2627f105fe6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25f5024-8480-4373-8837-b003fefab5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d16ccb7a-86cd-4db3-b2ea-72d5b5419cc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "364a6bdf-778c-4451-8245-dcae85305b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19dfefcd-8a42-4c85-acac-384ee7baf46a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e2f4b7d-1032-4472-b97a-4ac071137cdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6247851-0591-4c8f-92e5-0f8840e10bfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa3c98e7-e692-406d-b33f-223ed68fc018",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb44fd44-d25e-44a7-ba40-17cf15ecf665"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3751ad42-15f2-48a8-a27b-39d75f9ddaba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6771a496-446f-496a-bf0e-fb4c3678f31c"
            }
          }
        ]
      },
      {
        "id": "a0c4609d-4b0f-414a-84c2-0d1fd8c4dde0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1247b593-820d-4227-95ae-5d9e80fc073b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03479a34-7f61-44d4-82a4-d035cdad7ce0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1c00447-2370-4444-9d22-7f60f5e04ccb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cffc20-fce8-4070-be24-879275ee6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf8bf6e-54c3-4e41-9a52-be05b7194a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78ec462-4edd-4e00-ae51-b1596ea22521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd952ada-cef5-4f77-8527-7f8bce689806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fced8b45-3fd3-470e-b320-c62b1c3822b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39364fb1-03d3-4144-a8e8-ab28bbd8a913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc5264f-28ff-438c-aa15-261c750ff42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515eb936-39f3-430a-89bc-928763a47db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7721aa77-d521-4a6b-bf1a-1ccf758b00e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31756c-96ca-4f27-8dde-4c3fecca721f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eccc58-dedc-4187-b005-eb4c2406b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb35d041-50e3-419a-86ca-c0cb849d8ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191dd6fe-4670-4933-a539-47f796b674e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0453d1-fbb1-49fb-8ca4-94d3e6a78d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a77b07-1833-4da3-a459-5ef2f7a340a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47f8c6-550c-44b1-ad02-09e0142fae24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcdef0d-9788-4e01-b6aa-23a80bcd3e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c30c31-b90e-43e2-9e01-7041d7592e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61832cd2-8864-45c0-9bc8-244df410b4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af1f29-55fb-4811-96d2-d86e30016a6a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0367da63-013d-4ac8-8dee-0d392131994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceca86a0-f6d3-41ba-87e6-32dd594c5422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a287ca-86b2-497e-ab49-1ea4a01e4e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc7afb5-b279-4feb-846d-b4229d8091c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca17ce94-7e2b-4dbe-9718-08885121f279",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b83384-b545-4f56-abe3-d410a7fe96c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aeb226b-7ed1-4ca1-ac46-be0e2f087238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9065848e-4ff8-4fb8-82c9-2d7d8e82d9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c47a85f0-0bc9-4489-9d12-9e22a7201ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f30e7ce-c24c-4a54-9249-0618bbdd72b8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610a3077-7824-48e0-89ca-fc3ee83f3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0d85de-bf38-4e8c-b620-df484da2a782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc042908-c5a4-487c-89bc-01386f2174bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a43ed91-7b9a-4a0a-a7c9-697e19499037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6370bc-425e-439e-a3fc-6fba233684a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc883cc-c954-4f91-b941-11d4de14d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee03016-966c-480b-8626-226396992774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c2555-0a99-4fc3-b865-1d7fc47ee1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22779d10-3636-48e0-8efe-afa3b595b9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5a24de-2657-4e2e-90ef-c3574dfa604b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26abbf74-6878-4259-b229-ffed0611cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c642582d-0cbb-4270-88d2-5486ec7e77da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1bed4d-e4eb-4e90-95c1-48e58c3f57fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a7014c-d253-43f3-8959-aacd69f1ceae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b940a9f-ac05-4961-8efb-757e5a0fc698",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d29f043-3880-448e-94ee-42b646bb925e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9145d22-b0dc-4f04-94a5-00a826e97ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155091f0-fe20-43e0-8204-57d4f5d760e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0c85f8-e841-417c-a56d-e257715a5b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c194165c-ff2d-4927-bc7f-117479aca183",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbe5bf6-8773-41c1-bd9b-fbf2ec2c942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b3ba06-8ec6-435a-9cdf-9ff2e16c55ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d2bbcc-9ee1-4536-a70d-425acc7d6f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bd49c7a4-a8f2-484b-b65b-eb995fd470cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6973d804-48cf-4bd5-89ba-1490f4710781",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccafc10-d792-4fb6-bd3b-f16443c917e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d833bd-e678-48a5-82a4-2d5df37a40fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2243b-4066-4b27-bbd0-61520a6ea3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec236a5-bb06-4327-b3bf-5ba248ecf232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738ae444-1794-40d9-9251-228875c7e2f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0141953a-fcab-4274-be53-9b7fd2fab1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b33b79-e100-4ad9-8fcd-8e2dd10e6078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc8942d-c9e6-463d-90f3-62120a21a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5688edd-f140-478e-bfbc-1851e5dbed42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f23be4-cf43-4a99-916e-bf24498acb0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319a0796-62e7-4fbd-8294-8b5829f8c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af3ed40-26ae-4eda-bf45-a5376f2839b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39beb33d-c465-4590-9e52-2d08b85a5416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a03c4a-b173-40b5-aea7-dcf016a75236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c45f31-f46d-4c43-b652-c9536a3b0e9a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd34274-c322-4e6b-a62a-76dff32344f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4fa9fe-a780-4b87-8572-848980a4dc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d0a04-56b0-416a-b6b7-5ed2c333ef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d74a27-91a6-4001-bd03-5f5892261d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10937dd9-72b4-4970-b3a0-5098eaa6a8b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c86cf6-0c54-4e3c-8716-29f066a6753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1567be34-fd49-4bbe-9294-a63f7a16095e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b731a30-58d0-44bf-a493-c5770789287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6146de41-d3c4-4167-b8e8-7c86b96aede7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d257c1b-050d-4a01-95a9-e3c558e000fd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b6a36d-fccd-48ec-bc1e-a047be61be41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c23d7d0-0b2b-4553-b04f-b9c0ae5b28f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb120938-33d3-4985-bb7e-b7dfccdbbd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cafef9-52db-4e40-90ec-e734ddeafb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96704da2-8348-4fff-8bfc-9d18ddbcd777",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504d1ca-1b70-4416-822d-98c6538c842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf83328-cbeb-4f19-a863-0d04feff389e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4304718c-6763-40c1-bd57-a4db2fd6d724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f967efe-a913-486e-88bf-704fce17c384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6556ee-f43a-4a7e-8193-3378c196dfbf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b228c-c00d-403e-a19e-7b4f0251fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94010efc-4353-4881-86f3-47d742cf844f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f204726-1769-4fbc-8370-a2a2e4f61d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b22398b-aca3-4407-8bd3-7f5c0099127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7877bf5-9755-4be0-b2f7-3ec6cfdd4916",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d1acb-5406-45a1-9c96-fab6abba15bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5704f9-a306-47e0-847e-199c809035b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b983e7f0-55e5-4a48-8c07-4f5a7cf37052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9928b-6852-44f2-a436-cc46ad54fdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827d7603-8fe7-406f-8cdc-13f0fb30c74c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c23d8c-12b6-48c6-9f2e-28dfeb34ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb837eea-5b63-4993-9863-e6011343ead2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f71e73d-21fe-4723-94a8-4f0682059e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e3de9f-89bb-4932-bbbf-caa7d7dbdd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d053f87-3902-4dc0-b806-250342cb022c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a15e9-871f-47db-b2a1-ac8e88b2cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01d36e5-8dc2-4c4b-afed-87a79733804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9748732-0caa-4d84-9b5e-5aade7af9fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba91fd4d-c587-420d-9a21-3f6bfb96a82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b6175-48de-4d2e-9054-62729d06e0b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b6643-2107-49be-b212-a7e9c879d861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fe5b6d-a61e-48be-a819-92548ea49d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9442d070-ae1e-4e62-ab26-99bc2e92dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b54635-f400-4024-a637-bd0365bd9a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a69946-db0e-44f9-9abf-dc7e390e8b54",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d599bd-722d-40ce-a2bd-6f8dcf50e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e99c067-c321-4692-9569-1313b9895ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633a1c0f-3f0e-4e1c-82c1-82dfa2b8fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8073274-cee3-447d-b57f-3ac9b64647c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e92b1f2-5c61-4493-a884-7b31e9a2f8dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fda2df2-1cc9-461b-b630-042ce8b3f11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7524f8b9-c74b-41bb-bd73-277b24a8887f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ada35f-4a65-45a2-960b-2f30512f43b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2e8a8e-c324-494b-b444-c2080ed7967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aade5f80-2589-4431-9fbb-9f4d213fb082",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a37db6d-1053-4c0e-ba27-808d0443e231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afabaa7-b86e-408e-bf91-832650564d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeac92c8-d6c1-4c85-8770-d9df0c274088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433b9b15-b59d-43af-a9cf-278037c41570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22698e95-7e12-4450-b558-f2758404e8d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b549c3-7436-41a2-8171-cec901ea4b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3ecc97-f616-400a-a3c4-adb313f49f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4c9941-ff7d-4ae2-bcea-d1a299b04f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f72a8b-c629-4d44-b9d2-a5684c0218dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c0bbad-5a73-4d22-8f76-182d77069991",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba37c2-bdb4-45fd-bdb9-1ca7cde87e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81404971-ce5a-45de-a16f-a0de07dfd6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749fc887-2169-4a19-a47f-faa33c131a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656f6ab0-01b4-4ea4-9149-5e3613513be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8425680-8228-460d-9103-a63e5f9641c4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3113c3ff-4e19-48dc-8bd5-47deab076b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f20291-e3f6-4618-b4f0-2deabc518ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37476146-62d1-419e-aaa0-24dd339b2217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4e60bd-03cc-4eb0-bccc-b89c9624518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faafb7a7-9065-4afe-98bf-ed2b9fb842ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52732f62-42d4-453b-805d-58aab10aa79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738e4519-5807-405c-9c05-4e1617e00a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6722fdcd-c67c-44cb-aca9-d2ccd6007684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc416d7-2a89-450c-bd2b-82f1f0d9597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d241274e-b65f-4e10-a0dd-106dc9c5059f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c533c2-8792-4bee-8f6f-9bb68a8f8394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fdba15-fd36-4f5d-8781-3dbd84d4522f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e5f018-fbd7-4c5b-b72d-2c5493b24430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa112b2-e4f3-4772-8762-97b9abbdf187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1eeb0e-91c3-46ce-97e1-fc330d451841",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5252edf0-67e7-4a4f-9242-1c35011d3293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5c3ef7-82f1-4817-9049-29fe04969886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7445af34-1168-4e37-adee-d9f6a08ceb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "660cd4e7-0cf9-4dc9-bbc1-64f3fb226e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e27432-cf01-44c7-9007-51f00e3a546b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf4257e-7ff9-4f05-9c48-f7f21da93b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3850013-1b60-44a1-aa28-901e3ea039f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b74dc8-d5ee-4ba5-9174-7079f7431089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "703a3c34-5f75-4c7f-b52b-64e122784a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf4897-f8ab-4baf-9123-e23733c095bf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dc4f8e-1502-4a49-9915-b80e432daedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d0c130-4670-47b4-a0c9-fe159ddeb636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2bd552-7f44-4f7d-a8e7-3b6daa096b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4e252e-c5e9-4c39-ade4-6983f986f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aabe29f-e3e9-4a3e-a2e0-e637979b18b4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f004c-4549-4937-872f-79ca6c9fa04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49ca6bb-7f2f-46d8-a967-214553d25f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46b9dbd-8dcb-43ac-af97-554d94e1ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2687f2d0-7a22-4ba9-9a04-11ab494e0c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657f12a2-a2a6-461b-84aa-21299be3771b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090be2a-be16-4f2b-bb68-f6a5b9016db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40d8339-f157-45e9-8313-73e33298d1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd03847-51cb-4fc4-bf29-70228a93771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "446b3f27-4dce-4ea3-a277-88197dc485aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d212cebc-ff0b-4146-9941-f6da01fc9043",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4836fc7-ddd9-42dc-8b04-9d7df3c2ee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cb5956-9654-4c72-ad26-5cc38c9c55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af883823-4163-40eb-8bb4-003976f0f10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b952e1da-dac8-467e-84bd-540bc8e040d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1485bb0-0c14-4012-8777-79ddafcad4fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf7e67d8-7afc-4ecd-b7d4-c8e271f36dc3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06b5f77-02bf-4f4f-8eb6-38c6a67c7d50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f91c91cc-39ce-4ccf-b96c-9f6fba3fa311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d0acbc-698f-4a69-833f-cd64ed83aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a629642b-219e-4f5d-9bf3-798c9a4090f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83c8d4c-53db-46eb-8361-5e9fc4fb90a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaa0a503-524e-46a6-82c7-dab8165c56fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06bad38-ad6b-426a-8f3e-9a1d7febde89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68219819-0c59-4e0e-86b7-82c1799b2af2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc1d51f8-6d3c-492f-a2b2-032f7c90019b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2673912-6be7-4f38-815e-3baab8053b3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c59206c-f7f7-42b5-a69c-a875d78c6e76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9aeab84-6a8c-48ef-ad7a-2d8276bdb590"
            }
          }
        ]
      },
      {
        "id": "b60763bd-4225-4647-9a2f-9e6e5c32901d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4185968e-c506-42e0-9565-605145c69970",
            "name": "Negative Testing",
            "item": [
              {
                "id": "774360ab-46a6-4a1f-9d73-3a1eadd871d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a245c6f-3824-451d-9c2f-562c53dd5891",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241e75bb-3d90-4f25-9bfc-cb3b0dda8267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4a316e-0a6b-4e60-b759-69f85fc8342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3effe7ae-c357-4c40-ae3c-7818d7ab2d06",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b04fbef-764a-47ef-89ae-b35fe19d07eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e603c87e-e234-46f4-bd48-2e3cff225530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855acc66-66c9-4de3-9239-e122e86daeec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6ed810-9cf1-4a20-8c2d-43cb05cac67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25ff94b-f725-40e3-8b65-1ce788a3be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1935678-9824-45f2-a75a-97d3c79ddf7c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ae2faf-a4cd-4d3c-8035-1244f675d29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3367d5-e915-450c-8409-48ab18b05571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19acaf29-c987-4b31-888f-db1ae97254c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4959d15a-c97b-4da6-9f09-ac9ab7ab0b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12da5df9-3e08-44ae-b6b3-bafff2886eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb438dc-6cf4-4336-aa9c-12cd564359ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d78e8d-e12c-4960-8d1d-4f529ca93303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0ee42d-0ce2-485c-878a-2777f66a9ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb725c7-8b31-475b-bf11-d18aa95c29b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779ca9c5-be11-4497-b92e-0a8f21d69e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da8c094-2708-4b98-b698-d73a5f9507fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85af645-c724-4bf1-b640-efeccdf26278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b64f704-88ce-432e-83a3-a822e37ba643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801bbfb9-2a23-45e6-b447-54f37eecf9dd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3657db0-1238-428b-9ea8-0c7ebd3d7003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b89b2b-5ba3-40c6-94f9-636866093117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e2d8cd-e975-4da4-a608-4eb303594fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3758299a-8a27-441f-b771-5ba557a5a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7d5673-2744-499c-8d36-76d826c0572d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daef63fb-f9f7-4f91-b594-9957d8c18c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276aa5ab-a532-4b92-ae88-b60a49d75fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eb0b5e-4062-44d4-871d-788d13a28ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ee278d-d18b-4c26-9d08-baeeeef6618d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a829ab86-2c85-4ee1-8708-6965f94e77a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1e111b-199c-48b5-993e-e465d6109473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0c91ea-c2a1-4e17-86d2-1a8559275dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98495357-7e50-4244-869c-7fadc16b2f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ab426c-6798-4ffd-9fc2-d1907a7142fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ce58de-dc27-4853-9c95-c6d8168a8ac8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20989438-7c7b-40f0-9629-085ee76b8b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8958a0-629a-4631-b52a-fd88b8a2ae8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b06fd-c8af-4882-bb14-fd9600bd2ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68352b10-1c0f-44a8-92bb-01419fccd24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137bbaa-5e22-49d2-9665-cdcf898116eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef06cec-d34e-4329-8712-7e1cec7c9db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29a3939-bb9a-4e99-bc82-202f3de4426b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eb5ee1-906f-443d-b48d-9deefea0bb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320d8946-3158-4769-9de5-a3c8d47b6963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1315c59e-586d-411d-bb95-c78ec9b5fd4c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3b5a7d-f270-4049-87c7-18c763bfbcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b23c6b85-4653-42c9-9816-2a966a84c878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0400aa-26d8-4588-ac3c-4fd6a88f8c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fe9a14-52b6-46a9-9c66-f0fac9389078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5255c2-9f12-46ea-b8b8-459085398b3c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7415a8e-2155-4a2f-9c69-ee1fe162f381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bc1c69-d198-42c1-aef7-ee201a4c44b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201fe399-ff7a-4af3-980f-d540e0561651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cecb9b3-e271-4cb1-8a11-1c1f6fd81770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382d328-0fb5-46b0-bf85-44f3e9d4ccd4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61513a3-28f0-4282-ba0d-3ff4ba33f170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a73f168-cfbf-46e9-b976-d1d117971851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac89fbb-cb29-4e6d-b9e7-305aaf187cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53238c9-7a05-4a4f-b45f-6f0e9a5b7097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c458c21-b86a-4bd3-850d-3fc92d83410a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ebd57f-fa0c-4e6c-bd79-afedc9177ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71983e6b-6d3b-497f-9595-7e5ba896d684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5209fce0-e719-460d-9212-608f851116d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c99a0ca-452e-450f-b19e-6226378dad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40851017-1777-4ea5-80a7-6ecc80b7bc9a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098b42a3-e565-4750-a41c-5f518ea5767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648f40ef-1e09-4398-bb9c-f96761ed4471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf80076-6fad-462f-887e-b806a0e4f247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eb7c22-c4e3-48df-8625-7e7611bf36d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a564711e-9dd8-4e72-a9bc-3efa9e13d2b6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d5b4be-e85a-473f-9b3f-44c6a1de9649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd2415c-1868-4480-a0e5-f836d2199011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7dde0-0746-48b7-8df9-61408b874a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4974cbaf-d337-47bd-b598-a9498a2ba589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecae3f0-5f2f-485e-a274-015022bd6c51",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ec0bde-0fac-4d6d-9fef-98280b801dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373d4095-188b-4361-871a-0d0c6a079f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99d2825-da45-453d-9d68-35a108702e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26764873-a865-4ee0-843f-006ef615697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd686c4-7d29-4619-a606-ea29f1b2d5e3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d886695-cbca-4ef8-a0f5-a462ccd0d81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50675fa8-d5e7-4550-9fc1-953cbede1c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec67e07e-8c57-4c15-b830-e90ad69dc79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2912ce4-12fd-4ed4-bb7a-7cacca1f00a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ac21f9-e1fb-40e3-b3b1-522b981aa253",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fd4dbc-a678-4946-b132-676da25d42f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76569d9-73f9-42b1-b411-7d1fea0a1226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d578f506-c0b1-4ade-aeb7-0302fce082b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cbb6de-06ba-44e8-9dc7-afacd1c6bc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b7e0a6-b5cf-47a6-9e4e-4ab6eeeafd0a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350cb582-2de8-497a-8c8a-f240ffc2fa30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57cb700-1451-4a7c-b95f-8bfe99febd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1165d0f3-3b40-40b0-b452-cbb396827de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d7f1ba-4def-451e-b264-84578afc1339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7908496f-08f0-44e1-b9a6-d410f1c36470",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47cedc9-7c0c-4f54-acc3-d51f374707dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675b408d-55f3-4c2c-880a-a59787a96cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0caa97-16a1-4d79-a3dd-6c9e9a39d3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8ffb82-2227-452f-a06d-d65a612b14a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f5428c-2e1a-4ae2-828b-809892d424c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d97fef-e29a-4ecf-ab32-8df0476960aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ec0a63-a3d4-4ea1-bae1-b5c8fbb79b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd210e27-30c0-4bd2-a597-fbaba0d840e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dad2ba7-882b-4c58-9040-13870fdb09e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7465bce-df94-4caa-9d98-a2482c69186d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30df8b1c-690c-4bcd-ad4d-9583ee30d492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e03200-f3b8-4d53-91ea-9c8e60689f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d072ce-7465-48c2-acc1-6eab3ab2beb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1df298-d9b4-454f-9d2a-b10435cd90bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b19801-5ac3-4774-b7f9-7e0ad4c781cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5399b9b-674f-4c16-9375-ae13a4e9c242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97743ddd-c9d3-4ab6-b883-7e8df28191f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b370a2-cc69-4af2-a2b3-2dcf32c40323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc59380-c3f8-4aac-af09-700d7dec9462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578acdc1-8340-4263-987a-10376c1039eb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40e89ad-52d0-4911-9666-ae8693308774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ae1387-7221-4bce-b026-1b0501f0238b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fe2513-7523-4f7c-927d-cd9483080c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c146e35-f6f1-4d7b-9431-136cea8d2292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769f7c0f-fa4e-4ac1-ba34-4e0f5de244aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90421af8-5897-4fbb-be99-458977b47b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9becd5f-1648-4916-a500-35fa69778b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ea7546-3711-478d-8446-62f3a01e2b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79d583e-fb72-4e42-becf-8eb96e375148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8324a5fb-998d-408a-8a6d-6008c2a61536",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca8a6cc-5a4d-4e25-bae5-8ee4eccb1977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079e4be1-702b-4117-923e-45577d0e7598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127895d8-108f-4fd6-9579-49db1175e5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481caffc-d8ee-48d4-9313-bfb1ef8a6d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f9ec3b-addc-48e1-b0aa-f8e7ee8a7660",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7ec9a4-1d5b-420c-b0a4-0ad7cb6a9de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea2a548-995b-4248-a4d8-76e9adc369d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbeb544-d2ba-4ee1-ac1e-9555bf0eae3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64b8dd8-7acb-4842-ad41-213d8029ec9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be28a32b-c239-435a-b3a7-3a434420bf21",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf38a1a-2121-4a71-93e8-f5fbc457d626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad2414d-6e1e-4544-b2e2-943273593203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3237427e-0741-46ae-b0ed-47b183a03478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb31a1d3-a0d4-462b-904a-71f308094958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f598ff4-0909-458e-8048-16f444202199",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19416d3b-5fcf-4835-98d1-ee4e0be92386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f33d69a-f3a7-4ab8-ad2f-ac744879aec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2626c5f5-c193-4de1-81dd-cd4ff92125f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a92111-20fd-481f-b609-1e0ad87f35e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490e55f9-df7d-4cf5-8d10-a5a783f33f55",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b0dd85-c32f-4421-90e3-2c63bee22bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d15b09e-9578-4ba7-b026-a7ab5ff253e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccba78f-92bf-4171-a8a8-8b71f1d79aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45174b5-03ab-4ac0-bef3-53a55f62cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043ddfb6-4af3-43dc-953d-2a7d43db9c82",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366e1323-a1b5-47cc-9bfa-4e108fd2a1da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc6222a-cf77-488e-b4aa-3799c8ee0c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627d597-762b-4cb2-93da-32fee7db9365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd8a32b-0cfd-406e-a183-34a599a77894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1545532c-4d9f-4eb5-9cce-502163c964b5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e57098-6fb8-46f6-b667-b9bd835e69c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a9e0fb-7915-4fa2-8d8b-6caafc83c3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93765b3f-3f25-449a-aab9-d313964934f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d339a89-2a16-48ff-90ef-d1af725edae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01e76f7-ec0f-4bb3-8f70-49296c421c1a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a2ae76-ce1a-4882-9504-0c014e73e624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e718782-9bd9-453b-be3f-5c701f45f011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f128f61-0625-417f-8116-f678edbd3900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5611f2d0-5e05-4b2c-959f-d9c8527e5ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c61c99e-377a-441f-9c50-ba26782a06cb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34196014-70d2-49d3-8ff7-19301853d528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e5d24a-c2c9-4a32-bff5-7c507d8981de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399e0d85-513b-452e-ba7b-f3bf89b9c825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dc8d1f-5186-49bc-bbb6-3d42777f2f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299054ea-d392-48a8-8e78-61c69d394494",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58294f41-624c-4580-898d-28a7de073a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86c8265-26a6-4b23-a660-9adb9d3bb8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9b73fe-f65e-4383-a34c-18586424ef04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8c5d11-a7e8-4170-b5b3-4f4b11529bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d61555-23a1-49f7-923a-a03270a59f7b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdd4d0f-a1ba-4654-8238-0d06f4c88f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7dad79-bc9b-4d3c-bfc9-df986f686636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610fc01-3a16-4330-accd-ff0e49e10943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39623579-a390-4d7f-bca6-c222d51625bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf6e3e5-f2e4-4b35-b439-aa361ba586ff",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef64526f-297d-431c-8902-811c93c5b678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef3561a-a644-455c-99d5-b9648e142e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e46eb8c-9ec5-47d1-acf9-96c1e2ca4282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a609903-3c22-4796-9a11-81f8b0cbc1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5193ac-ab70-4749-9149-1e0781702676",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d6b1aa-05a3-4f76-8274-be50e9735fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7cfb3e-183b-4f45-a3cc-382ed12fdd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cbceb7-96ef-4e00-856f-56c8a1692c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1880398-a804-4064-a857-8225fb18e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c1c634-d31e-4d5a-b8f3-ad140591d39a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a227b7c-b45e-4256-9dc5-5c261d8a457f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d5e06b-3e82-4fa5-bc78-793db640c006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644dd73c-c0d2-42c4-8c53-2f0a8dd6e822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15ca830-6419-4bc9-ba4b-73c5e8447432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25283c1-12d2-40d7-96c3-58b660c67cd8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970841ea-8508-4d6d-b942-f1c76ea65557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bb9050-100d-452a-b26c-70348aba248a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca08050b-b5af-47f2-9a96-5d5e82d4f1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a18101c-1a50-4c92-a7eb-06336df6ece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90a86b8-91a1-4ef6-a342-3d3e7739ed16",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ca0985-fc88-45d2-a729-f1aa2efc3df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6cbaf9-01c2-4efa-bc8a-d54bc23e893c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74061e8e-5f2d-40bc-88c1-5a22e730fab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9e025d-deb6-48a9-84b7-d5ec403f4b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d3b99-c69e-438f-86a7-bf06d0ba6f92",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2412ff7d-8e45-463a-949d-4a0c2f1eeb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e71c7b-b8cd-4128-b77b-c49bca1498d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911d6ec2-48d4-4f43-b4ac-91ec5ef0bd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5274f5-0247-49c2-89f4-b8883a0ca675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc95b0-650d-491b-be82-1c7ef0a0a1b4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1313a5ed-7951-4b29-92ba-231a2e71a7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8da8ccc-c99f-4f41-915c-9cc39c2e88fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf50537-4f4e-444b-a722-e0ff79009926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9891702c-576f-4372-b340-51263000135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060acb1a-3e32-46cb-8434-bf63818be0c8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a79b5-20ff-43bd-ab38-b2cacbab6929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39691bf2-a976-4ece-ad22-07a72f683717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe5279-8d21-4436-9099-d6c056bb22db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9d2e71-20b3-44a7-8542-30f812ced30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3566bd2-fc55-47af-8f56-debf8f43340b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0796705b-a7cb-4a69-9a37-247c37aa9a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc94bbc9-8356-4b0b-93a6-867a3ff207a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a56f22-0646-4bc1-a97e-693932073315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defa6e7d-b86c-4dec-8e95-299d8268c379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8960e705-a607-4d12-8cd2-04f9b089e194",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b9b0e-efe5-4683-a11a-891c8b4322b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913eb5ce-5081-4270-a7d0-a5c424e54768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857e2fa5-ec4e-41b2-8e78-630727e3672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66409449-0db2-4b8e-abce-c08b7941f5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c16fe1-4d03-438e-8dd3-cca22889b0ac",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e1169d-de37-4e97-90f8-b39fe3961ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b270f72-5a97-4350-bb00-c6b421cb14c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b903ff0-003f-4b46-bb71-b3e9b5cd8023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb64e7f-8cb3-4158-b8af-4fdab546dbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dd66db-5d99-4177-99c7-1e79669932da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5ea658-b03c-406d-9f2a-001ff9df4b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2bb680-daa7-4420-8700-f830a894b80a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcae1ab-b8be-4ac0-8213-2192e97de021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa8a4ad-2248-4f95-a98a-e9ee5a706fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff65c99-285f-4748-bda1-e5d0b6835573",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c104c88b-2789-45b6-b569-68f6716b8323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a355e47-1757-4156-9d79-a77f6b2fa1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e07fca-00f3-401e-9434-399ba25d57a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bee8ba-9104-402f-8e09-79f010c8f30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0761eb7-3aa7-409e-8092-f99de1398ef8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db340d-3db5-46d2-83ac-7c9b635a7917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f92a943-60e1-4bd8-8a7e-8a1609451473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d3c836-b52e-44e3-b9c4-d7e4a40dbf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710dc845-1797-42e0-9832-4152046c0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864a80d4-c756-460d-95d8-d5876ea077b4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86c5e6c-9d0c-4e8f-80b7-c015201a5cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51f4ef8-0d9f-470e-8768-f449f07c4c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f90e67-2ce9-463a-bb11-96abe81fcf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5da02a-0d93-478a-892d-a9a62dd6d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e7f901-e102-4802-9c95-87a7bb3d1f7a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddba71c-e040-4ce3-a23b-75c6d18a48b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae4d173-3f45-4706-8af3-35248ee8d4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210a6eb8-57bb-46d3-a28c-c881a83f84b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d7d8da-804d-4fdc-b7aa-4372034eb52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd79d5-8e8c-4658-a2fb-252cbf357e30",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a60e222-296e-4119-9ea5-d74963e02e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961c7e80-59b7-4fe1-9753-9b5cd1e0782d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1193539-a1a4-4ffa-b1ca-480efea055f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaae9c9-7d92-41e7-b2b1-8bcab4199e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4dc14d-7012-423c-8273-1001277eed79",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec29dd1-ecfb-4d3c-93fa-9fa4bba49fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfd3254-2d80-448d-b9a1-88197477a6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a71b49-ef5d-40ae-ac3b-7aa0bb515573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0b73c9-0df8-4ad9-8a36-6444899e439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fc5f7e-c050-4f38-b63f-59bf50073ff7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d613c-ac6f-46b2-84c6-570494283894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a3d0f0-095c-4ff2-8545-878f98e320f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eda0d9-24c0-4086-9233-b128f7fefb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201c1c96-b53e-47af-b341-63f50a6629f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aad4051-b7a0-40cc-bb0d-d5ac10103aed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d42ec-ab40-4c37-b63a-f641a29fe2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d660230f-9e53-4c34-b8a3-80d8ae27a8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99596a9b-0494-480c-81d7-3bf057b28f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cc817d-d0fd-4434-84ab-0ab3cadece3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfa4125-4e7f-4d04-9ad9-8474827f87d4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056c4180-b2b4-4e72-8f5e-a6edf992e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32390e4e-9925-48b3-9a98-959632012a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12d0680-7403-4284-ae1f-16923b6e9b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fae8171-8549-46ac-99ad-b99d404881cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9687b1a-824f-4d81-95c0-e9a65cc3601e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6804b13-ed55-4e27-9ee9-8070ae7e8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d63277-4200-4ab2-ada4-27bca481d201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cee939e-ed78-436b-bbb0-0107bce10bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493a98e3-d395-41a6-961c-51973a4b598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e193d016-50ed-4550-9fd1-c3c7c7705750",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3914cb9-ea44-463e-8bbc-1c2dd72b7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d20f167-5d00-42de-bfe3-4f52b18d123a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119b16ba-c62b-4e63-914b-1bf441767df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40276db-ebca-4412-aa48-9757672192e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab8919-16d0-4f0d-a93f-42ee5805495b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef39012c-3de3-4e29-897d-612810c141d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b584df-5864-499d-af69-4fda1bd8389b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15de8ff9-df1e-47bf-9c7e-c6d61cbc63ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aff0566-3707-40f9-a1f2-1d2e0ea690c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9015ef-2471-4251-92eb-5c8119f0c960",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10609965-a5d1-402c-b5dc-6464426b73d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a3639c-e830-45c6-8009-f14125bea077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40711b5-97a1-46bb-9451-4f12d0b544ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2628efa-6351-45ae-b4a3-a2216124bce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ce47a-ff90-4a16-a603-490a124ffc68",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485376bf-e1f9-4801-8e98-6e72c50d7170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4893d56a-efbc-45eb-8999-4c951e14f276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eead1b-684b-433f-9783-bbd244630900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d02c4f7-09c8-49dd-b904-0dba8486b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90105c89-c2d4-4fd0-9d1e-130423054c58",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d5cb9e-b324-4930-9ae0-d5ab89eac3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2108bdf2-1bb7-44e3-ab99-cac6649dd9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c46d3ca-bfb9-4435-9240-829b7e43f14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65663dad-6bf3-4502-a353-06d6cae797e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176d4885-6ab9-490c-b2e1-85097efb38b9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0047ec69-ef33-45c8-901d-f54400d24e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569f2234-7311-4ed0-bba2-cd953afa789c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b8c78a-9c5b-4516-bb55-86fd976933b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91f7416-e0fa-4613-a53a-4cbaefe69ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954033c8-1bce-4cbc-911e-c3dec49a2319",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4ef373-c7d7-4a8b-8473-c848f697cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6032d56-120b-473c-bd21-25f357eabfd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60db2d6-32e5-4034-9097-69fa5a42d87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dd77d2-1b0f-4d0a-820f-60987f93bda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f86c0e-022c-4bb2-870d-183204fa761e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286a6856-f019-4e39-b4f2-35c885481e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f790000a-180c-4e65-b21b-041e3f7be377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c13351-aaa0-4307-b417-fa220b2ed339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d41ddea-f1ff-4571-b459-92fdd417a139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b2ca38-f380-4f26-aace-9d666dcb6f17",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3030bd3a-75f9-497d-8a79-ac9c72dae635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e820787c-c06e-4e9f-8dc0-63cd2a389c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41c6ca4-1070-4221-a561-d5e75ae359eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6a134c-2ff2-46a9-9eb8-f61cae7c8981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e744a83-cce7-46c1-a391-4e37b1710c9a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec93e6a-1179-460c-af90-44385b465829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3218bb72-bd27-48c2-b735-962b301111b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756141ab-d188-4f68-bb57-4a5c8a15e924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9752df53-7003-44c9-a886-d8b6c8e56540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4babf-a7c4-46a0-b8a8-c6b07b1417f2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b219f16-9f03-4a2e-8c74-53aa69fb0ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d095ab7f-cf82-4453-a216-5bbe0e5c036a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b540d14c-d5cc-4504-a47c-527f752f1f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f40118-1c2d-4948-b87e-d204fac1375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fea6f0-fd05-4ccf-b39b-318b96122153",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6b4cda-abe5-4a28-b52b-7c1c35223121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd38e7b-5f04-4d9e-9591-11dc61fd2885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aaa144-497d-4c5f-bf8f-d179f2a92a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96eee49f-a25a-4bc3-a2c8-a2ab289e1f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc731f7a-3645-4bc0-9f1b-17e7028a6c76",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a74c4e-be5b-4f0e-b5d2-d6777f5f7e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6cf0928-dc74-488a-902e-6141afee8f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5b718c-9f00-4ff4-9b98-a88604b0d125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc6897f-e7a2-4069-9c2c-9eea2c43e689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e6158c-a32c-486b-9c1a-801c107c1944",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5eea8b-7d64-4855-81dd-6a416c0f851c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b183008-160e-4627-b68c-80746cd55091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0180aa-63a3-4e19-aeef-07808239ae3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4e9af6-9f7d-4a50-a9ec-ad0a4b82b4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919674f4-85a6-4c0c-a04a-65511d6b7a58",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a78980c-fd84-40d1-9d67-ba63c71a655a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c07943-87fb-4993-a47b-011a5227b321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ce139-f693-4d13-9d27-f6a65185cf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6801c4e-8d6a-4ad4-aa55-6869926570c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b50f01-b73b-41ee-abfb-57b6cb5c69de",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9834d-517d-4902-9a5c-62496310ded1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33271667-0ee1-4a84-87b0-543c6ed82d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5011f0cb-b009-45dc-a2d4-4f85786a862b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecf8fdc-b7af-436c-bde3-fade7ea21099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358bee1-3993-4763-8ede-f62de93feee9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6183cc-16e0-43c1-853b-8d362d11abde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096c6231-99c4-4134-af76-3e8e6b36d890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ad4dea-92a5-4948-a9f8-d3c91744c319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977e817d-36b0-4d8a-9efd-9005d06b7789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7d5a70-a4b3-4080-8c5d-d20b881bdbce",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba478632-f9b3-4f0e-94a3-507ffeb16da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b207ad-f1d7-4fc3-9acf-e3e77ca8db97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaea225-901b-459b-a3b5-dda58672150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43870f0b-c8af-4a7b-ac68-3b25c29c7cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa20b6-3265-48bd-8cb4-5d2c2d7e4205",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de266a02-ebc2-4920-9c4a-dc5c913e1239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0b1305-ff65-4431-93d3-82d450051d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73219ef2-de42-4ab1-97c0-0c83f72f17b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a354ed5-1008-4cfc-94a3-2152ccd3cc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d31801-b9b9-4bb1-a625-7edda7d68de9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d6bfda-9b0b-483a-a98e-06c7f00aac34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5051d45-5ea0-41d5-8063-06e6ebfe7022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e3157-5ef0-4848-81ab-c2b461124587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd965c27-56dc-4bb7-aa8f-f8c1ab694338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab65112-2372-4d20-afec-c64f742dd338",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b344c40-c769-4935-893a-5eea13e617e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f8946d-2e72-49fc-ad2a-9f24ec046df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc82ea3-a370-43ef-a7c0-5ccc3d247b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178329e2-f20d-4481-b123-bedb01ce13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83569a35-fbb4-4602-ba06-896d0d054305",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a01d8eb-a5a2-4233-acd3-12c831e61bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4a0d98-0954-4e3f-9bf8-0e2a14cd54f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8cadb9-16b3-4ee3-9a71-1e394759c8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8176a7-0032-44d8-b53e-631d06672ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ef615e-cfa5-4602-bd7b-a2760f3a51d4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d336a-b86f-4435-83d3-2df3ae1c9581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dee0a41-ce13-45fa-addf-900758954567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939cebec-4706-42dc-a833-14862d6c9d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a187c4-08a0-4725-9e17-d6594f68d0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efaf130-e0e4-48c9-86e9-cd27e37a1da7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd661886-b510-443e-bb42-e5015fd29cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fca770-f631-415c-94bb-5ad9cc703194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095cf8be-0505-4b68-ae3c-e89e9478f260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4e17e7-9e97-43ef-b27b-563ef00ff0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065fd2fc-d6b1-4881-9ffc-f3e3b6d94828",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b39041e-c94b-4fe8-b579-fe2ba2c3b573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895ad8bd-c379-4be0-a34e-227978ef14f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3349a858-8426-4324-a250-09365014a57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1c9fec-8b78-406e-9d47-8749d19c50ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf4282e-ed7c-4ea5-ab69-322c914b404f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05581e3a-7ece-4a42-a476-acfc60f8475c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0338e30-366f-4912-af96-47c46672f96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9fe557-f1f7-468d-85b1-3634d7855aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b393907c-d9f0-4586-8108-d8592904302b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4218694b-38d3-40f3-98c8-f02a74f5d78a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d976d3-a12f-42f0-b577-35d107976a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2f870e-c818-43ce-b530-bc2822c8f513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea9b4ec-d552-4e42-b2e7-04bcb0473946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aec04d6-3543-4f96-b0dd-08f49826cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de74e635-2dae-4a65-9d2d-25c794c36221",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c16e69d-87dd-4acd-8fb5-5bf1aa401093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4ac03b-db1a-499a-985f-1929f16ecfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15fab43-60a0-481f-9e5b-2f47f5c3a737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0938b7f-18dc-463c-99fb-31140a3a909b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf1275f-3c4e-4acd-a55e-0399d303fbf9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878bedec-010f-4589-b425-f3d27d11c23b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13e87b3-1c99-4cf1-948d-67b6adf89f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b803194-62d8-49d3-a753-6fa71aab029c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ba5060-644f-4a00-b7b1-8e8aa56edb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989ad8a-cafb-4a02-871e-e046350a8824",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f6075f-b0e5-41e5-9357-a5592af680c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0687b4ee-bfff-44ad-94c5-4220eeb139d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf6c4fc-6314-4210-beaa-472476e90cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc62baee-67d7-446c-bd9b-73f651e5168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c09148-3eb3-4d70-a95a-aedc2eb7027a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c037996-e624-47d1-b1d4-d493e573f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cce922-ab46-4f1d-80e2-78eb3e0dd02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd6b351-32f2-4dae-962d-8bed3d20c9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07ea95d-207e-4144-84a9-5a09666307d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2603c4c0-6638-4eee-b659-b2884f51e850",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7632c88-4766-4cfc-b8a1-2a678891f139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236de52a-3a89-4ed5-a7ef-8fd936e2f24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271b2fb7-fe66-42dd-8cea-5b90b881859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61eb121-5828-40c9-87f1-104047afeb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d571f16d-d5f2-4347-8e9c-fb607fe94592",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67442679-9edf-4636-aed3-324e08e7b6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b8b725-3011-4067-b42c-c3db20f0c85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd720c-461f-446b-bf5b-5c17aa325324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebccebf6-849e-46a4-b7a1-e9211c1aa141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21258490-5442-438d-9a9e-3dfab511aa7f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c29fc0-847b-46be-9fa2-118b5fb685b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e51993-02b2-4eca-be98-59f595527d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b33efe-4530-4622-bb28-c67a5467ee39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e443c304-e3b9-4777-bff2-976b4f42e38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46637c0-d44a-4419-90f8-66bcab8c8388",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba2e672-bf0a-4549-aab1-7f349cd4cd73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df576477-74aa-41e3-9426-6636306dd10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111800f4-2f33-4e23-8428-62bfc4fe2355",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded63f7f-d426-4d5c-9f87-6ea6783ad038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68af77f2-737c-4a9e-b337-98c03c9fd88a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c3a241-5ad0-48ae-a09f-7a5a58aa5e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c73ae36-3161-48aa-9d3e-c3f98fad5c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffefb945-41e2-4ba4-b2b3-e0372dd5381c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b3215e-7b8a-486c-8ff7-2e2e89579960"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a01e765e-7555-4637-b537-9fd08206878e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5724fc6-765e-4754-aaa8-9853aca9b72f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da53eb9-e50a-4d5e-be0d-6aeb64ef81e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9818e3ce-c6dd-41f8-8868-421e73c08cd0"
                    }
                  }
                ]
              },
              {
                "id": "b64002ad-4959-46fd-aef9-887910b53a89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29ae033e-a3f5-473c-b326-d566adc28281",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d3f3a-d683-4de2-ba29-99e8618539a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59cf0e76-e87b-42e5-a400-9ec048cb3b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4802e-6566-480a-af5f-7c4d47d0de09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4349fac9-36f6-4777-aa7f-ebcf24c39c50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10fbd1a8-80fc-44ba-8e5d-0ea6d3f2d1c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da1d8bfb-ccb4-44a4-a557-f10b31c5f968"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d2b26ec-60b6-4e89-a804-e204130bb67a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9afba018-a492-4801-b259-b200d1e6fbd4"
                    }
                  }
                ]
              },
              {
                "id": "710de9d1-afbe-4100-b279-df7f1223e3ab",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "86b146d7-5a21-4d2f-af10-6f07aad5e4a4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7201a6-6d3c-4ba5-bf70-88231535aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6b826e6-c1ff-47f7-93fd-e0b7e1db86b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697ecc32-1ee7-4a79-bf8a-82bc24658b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ef44ec-68e4-40e3-9842-8a5c16f5a757"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab4754db-d274-4beb-8a78-c565cbf37712",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c293ee75-e5ea-4e8b-b5ba-ebb9fe5839a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4593efc-156c-4bfc-be90-298d598c02f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9d50e038-b7a4-4e88-a48c-03f621cfc592"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7876381b-8816-4e42-a08b-712ff4ecf5e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2104bb7-8640-4a33-b9fb-6266b98d45a6"
                    }
                  }
                ]
              },
              {
                "id": "9c069ce4-5a4b-41a4-a1f5-4334323357a9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "869a69c4-4bd8-4ffc-bdfa-8e673e2e0a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8587aa08-68be-4435-8de2-b4840a4aa3b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe048e02-30b8-4319-b8b6-4e1a4d5cf271",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6513781-4d5e-4351-aaee-5dd894cbdcea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "107a12cd-d453-42e7-8a6d-06114f464414",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "820d6f31-a7ca-45bb-892b-5b49159eb7be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "191c88dc-3c89-4a01-9a4a-f21efa133c32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0f6645e-7a93-422b-88f7-7bdf9065bf5c"
            }
          }
        ]
      },
      {
        "id": "4ec0020f-9d6c-4dbb-a99f-039fd68c7099",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1f2bac94-bda6-49a6-801f-3639de227686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71d7ab69-ca94-49c9-a038-363f0b71ffab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0dc2a8d-e9d9-4c0e-bd1c-26e19a74930f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdfab5f-faed-4bb7-8af7-0ee0cc2ef7c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9b573358-36a6-455a-9e5d-14ab36111885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c32aa4-2920-42f2-9b07-623fb20356c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aeaea0c-c30c-4647-a294-ab597cbfdd65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53e6f9c-75a7-4a80-95a8-515c8600e404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4f809aa-2cae-4a29-862b-ff32793ef97f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22dd9dd9-04fd-4991-a594-ab7604d6b87f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0b7f091-9ab4-48f5-82f9-e587fbfe286e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b5cf13f-ca01-452e-b030-2abb5337fe88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "398d4304-ca33-47a0-820e-e4b59cc02dda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2825128-66b4-4959-a0df-a1721e6c37b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f705a06-a7bb-4001-aa1f-fb8db7113d3e"
            }
          }
        ]
      },
      {
        "id": "3b49659d-bfe8-4d37-b423-9756591cb55d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b96904d-4ea5-46af-97d2-4fe98ee6cac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "208bf7c1-6821-40b8-85ee-21606248b8f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "849d2a09-a339-4399-89db-63e0e2e90f77",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ad305f-f573-4220-b01b-fef7563c74d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dc783cd-4717-4bc9-a167-8f5ae7df8d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3ecfa5-bcd2-456b-94a7-7e1a5da92971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66de0ecd-d1b4-49c5-bc96-c3c103936615"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bddc6088-882a-4036-a1dc-cce84b2450b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed26267e-4c20-4035-8163-727593bb7f3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b861bf-92ab-4c0e-9b0d-3e51ec2b3a3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6985cd1-b1f7-4b7d-a59b-daec9e02b8cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af1342f5-cdca-41e6-9bbf-ad100bfadb45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18c609d7-d124-4f27-87d9-4dd220df5541"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf1d656-ba73-4499-800a-32b2e0a30cc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "311711aa-b517-46e2-902b-0ae08e97ec2e"
            }
          }
        ]
      },
      {
        "id": "1d5ed756-1fa7-46bc-a08c-9f5dfca9a0c1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "efe20e78-238f-408b-9a67-1c744b5f34bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed70f711-18a1-47f5-a196-2f2ba9279e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6c9c343-5ea0-498e-b503-f46fda81961d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3163c9c0-f92c-4579-9c5a-8adee22a6586",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f91035be-e1b7-455f-a1ea-60c1e9bcb817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3452a8-bf06-408b-95e8-3a81dba770f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c23d3c2-a25b-493a-a5f5-e29e634b3654"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feb9b275-0f2a-43a5-a4fe-8ca00ffb6833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23aa7f7c-b51f-42c9-a2e5-6893de129711"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8abe9c97-9450-40be-bc34-7efb7223ab3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db1b4a6f-66ae-46e3-bc48-e8b761ed3f75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdb1a1ea-6d61-4e7d-8d98-fc54e1212075",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73b25000-8b84-4322-9214-0113e2d77dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3916f78f-7739-4bbb-8c0f-d74d3ecc5b55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86b07493-6cd0-444e-a8be-b9817c3f11d1"
            }
          }
        ]
      },
      {
        "id": "efa457a8-51ae-435d-8176-389567838116",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1ebf5d7-c641-4af1-ba7e-efedcd8705a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e68002b-97a0-41c6-9f97-9e3d722b5342",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "98bed14b-2a2a-4824-ab45-70ddac3028ae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ab8200e-edb7-4272-bc4b-d025ecd1b884",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cd4260-71a0-45fb-a6e3-c9c740b34734",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 54.54929577464789,
      "responseMin": 22,
      "responseMax": 395,
      "responseSd": 30.157468760479173,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692664319711,
      "completed": 1692664346885
    },
    "executions": [
      {
        "id": "1c40624b-b175-489b-93e8-d1bb9435e5d4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c1a2e462-b880-4103-8976-539bd2bc38f5",
          "httpRequestId": "2dc2106b-39b7-45d2-b1b4-2f03afd7f44d"
        },
        "item": {
          "id": "1c40624b-b175-489b-93e8-d1bb9435e5d4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "979307fd-31ca-489d-bf3b-98ae7a2a09c3",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "55918976-5dee-4e36-acee-4317cd40f609",
        "cursor": {
          "ref": "2a9970b8-b12e-4b4c-8b79-306476b30be9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "65c9b356-2faa-45d7-96bd-8ed5b4089dc3"
        },
        "item": {
          "id": "55918976-5dee-4e36-acee-4317cd40f609",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1f8fb3a8-53f4-4285-901a-d10d52ffc25b",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "9cc3909c-1831-4231-914a-4bff3c2cd303",
        "cursor": {
          "ref": "20db846c-aeb9-48f2-b95a-d11f4e9d41f7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2b6bfa2-ad04-4c80-aa02-c17654855da7"
        },
        "item": {
          "id": "9cc3909c-1831-4231-914a-4bff3c2cd303",
          "name": "did_json"
        },
        "response": {
          "id": "ec3dea54-9641-4654-89bd-981175750b14",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ed5619-e8e0-4b82-8fea-33bef8ecb6a8",
        "cursor": {
          "ref": "5a3741fd-8028-4e3b-b577-ae63e06a865a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f489b3d-b024-4976-b2f6-0d29c3d49829"
        },
        "item": {
          "id": "16ed5619-e8e0-4b82-8fea-33bef8ecb6a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cf0e83a-5bb0-4e4e-b66d-252d05ca2536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ed5619-e8e0-4b82-8fea-33bef8ecb6a8",
        "cursor": {
          "ref": "5a3741fd-8028-4e3b-b577-ae63e06a865a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f489b3d-b024-4976-b2f6-0d29c3d49829"
        },
        "item": {
          "id": "16ed5619-e8e0-4b82-8fea-33bef8ecb6a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cf0e83a-5bb0-4e4e-b66d-252d05ca2536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cdbb53-7be1-46eb-bab0-207c742fa65f",
        "cursor": {
          "ref": "a11f2e92-f328-4027-8100-9f1431847843",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6cbf9012-601d-4b6d-9831-46818b4deb6a"
        },
        "item": {
          "id": "e5cdbb53-7be1-46eb-bab0-207c742fa65f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "37c60bee-75f3-40fb-836f-286ee354e266",
          "status": "Not Found",
          "code": 404,
          "responseTime": 91,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aed6de-e009-415b-981a-c942f42d70db",
        "cursor": {
          "ref": "0de7a782-1cda-4930-b5bb-996ef372f1e3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71c733a5-744c-4289-bb05-a2b40a8e0fd3"
        },
        "item": {
          "id": "36aed6de-e009-415b-981a-c942f42d70db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5dee14a3-9d80-4478-bb9c-630b5545bf99",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7643b68-e911-4cfe-a1c8-8781e4c5553d",
        "cursor": {
          "ref": "4ae8a0f6-a9c3-4555-baca-0ab1f48e0ca2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cfd3ba60-9906-42f7-98ea-f4d212af9add"
        },
        "item": {
          "id": "d7643b68-e911-4cfe-a1c8-8781e4c5553d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b1b31757-aa6b-474d-a65a-04aad184653c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30055c07-0499-4248-9380-301b23a44517",
        "cursor": {
          "ref": "83fbe3aa-6fc1-4593-b425-2e6c8690a7ce",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "016c0144-48ab-4610-873f-407aa80e257c"
        },
        "item": {
          "id": "30055c07-0499-4248-9380-301b23a44517",
          "name": "identifiers"
        },
        "response": {
          "id": "78549c1e-53a5-42fd-8de9-275f552a616f",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8661f588-30c7-46ab-86f1-21afc9c13c88",
        "cursor": {
          "ref": "6fa02e3e-5b66-417f-8ee2-f215301b75c6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "23c65487-84a6-4f5c-9343-977a78510f02"
        },
        "item": {
          "id": "8661f588-30c7-46ab-86f1-21afc9c13c88",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d96d72c-3227-4c7f-9601-3296735ee7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4615d7ee-9a6a-40cf-80ff-d07b2980bdbc",
        "cursor": {
          "ref": "066f09d2-dddf-403d-a9d3-a95ee754d001",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a06c3e63-eb33-4f87-a8e9-82a916a307cf"
        },
        "item": {
          "id": "4615d7ee-9a6a-40cf-80ff-d07b2980bdbc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cc1442bf-f300-46fc-af24-5408406fd9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e26d92d-6c98-4104-a5aa-8a4480d0f3bd",
        "cursor": {
          "ref": "bece15a6-9cab-46ab-838a-af1b72910b9f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fdb69af-705b-45d4-8e4a-38847b39d030"
        },
        "item": {
          "id": "0e26d92d-6c98-4104-a5aa-8a4480d0f3bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "92b42e6b-9792-4135-bc3f-99914ec997b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891ac0a9-54dd-42f5-99fd-b966024fafb9",
        "cursor": {
          "ref": "a3af6800-1db2-4b07-99e8-8ea110622d6d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "73b5181c-d2d3-47f1-93f0-299f77e2494d"
        },
        "item": {
          "id": "891ac0a9-54dd-42f5-99fd-b966024fafb9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "30200a69-216c-4668-823e-131e4e1080a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e819cf-90b2-4dc3-92f0-ab291efdd0a3",
        "cursor": {
          "ref": "03726bcf-9c63-4543-930d-66e617c31335",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "205c4299-93b5-4413-a157-aecc9d41bd30"
        },
        "item": {
          "id": "b5e819cf-90b2-4dc3-92f0-ab291efdd0a3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e7c6f598-a26e-4924-9609-5297613329e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f7d00f-1128-4d03-aee8-a500f0d15290",
        "cursor": {
          "ref": "cf0cc6e6-3733-4daf-ba96-299e4cd521a0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "54d5794c-18f9-4e33-9a7e-52f00c2e90de"
        },
        "item": {
          "id": "56f7d00f-1128-4d03-aee8-a500f0d15290",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0d9dbfba-a518-4970-a9e9-d677ae6c86c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35670b21-5465-4907-9eda-9fbdf288fb6b",
        "cursor": {
          "ref": "abc6902e-989d-4260-9398-108e03d12fbc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "132c087f-6697-4ec8-bb4c-3d9147d3e670"
        },
        "item": {
          "id": "35670b21-5465-4907-9eda-9fbdf288fb6b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "25720c9e-389e-4dd4-98d8-eb7647befedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3963082-e720-4cab-ae7d-cee6240693c2",
        "cursor": {
          "ref": "06c59523-3b11-4c74-a696-c770c6f65052",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a719955c-14eb-46d7-885a-e3c9030d3cf9"
        },
        "item": {
          "id": "c3963082-e720-4cab-ae7d-cee6240693c2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3314ca8f-891c-4770-802a-5844df6f7d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf9d61-69d2-4b68-a086-2b9afa0b2354",
        "cursor": {
          "ref": "f14b1d85-3a3b-4e78-8f04-1af2f3c6db79",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7a44b773-3ad5-4e04-8208-3398a45ef82d"
        },
        "item": {
          "id": "b5cf9d61-69d2-4b68-a086-2b9afa0b2354",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0ff0232-1b69-4596-b6e9-3f8ac8301f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceca12eb-7f81-4340-b67d-5e1fe0963e48",
        "cursor": {
          "ref": "ceb6b338-053c-4590-be4f-5cadfaae3716",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7da0aeea-79c7-4f3a-a6f9-b01e32f8763d"
        },
        "item": {
          "id": "ceca12eb-7f81-4340-b67d-5e1fe0963e48",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1584007f-c28a-473f-af41-dcd73409e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ecfaa0-3676-4b5d-af36-64ac28c1d7d2",
        "cursor": {
          "ref": "d8d914ee-743c-49a2-9c27-022075bbc632",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9ac79f63-2303-4465-b1a2-39cbe80c8936"
        },
        "item": {
          "id": "d2ecfaa0-3676-4b5d-af36-64ac28c1d7d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b6cbbc11-4827-49c4-bf17-2838e894a070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8657b195-059e-4373-a4f7-1da2f2734f57",
        "cursor": {
          "ref": "1cbdb165-9263-4fdc-895d-67d84516c239",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f85c0d3a-f8d8-4b6b-8316-c11bf55f1b65"
        },
        "item": {
          "id": "8657b195-059e-4373-a4f7-1da2f2734f57",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b01dc25d-884f-469c-a9ab-039896fd5087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40bfeef-8dbd-4237-81d9-f22c5c114192",
        "cursor": {
          "ref": "c7f7ffce-349d-40e6-9aa3-6f1c967b8f18",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c8cb5f40-c78a-4157-8ed2-da839a495c58"
        },
        "item": {
          "id": "c40bfeef-8dbd-4237-81d9-f22c5c114192",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eccc5512-05fd-4717-b771-9341848883fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fad86e2-b1fe-4c0a-948c-623f6f180a8b",
        "cursor": {
          "ref": "3acf4a7f-0e07-49da-a18c-4dd28c74add8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a1085ba-f534-4a25-8675-f3e19ee6c0fa"
        },
        "item": {
          "id": "5fad86e2-b1fe-4c0a-948c-623f6f180a8b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "da772714-5594-4ffc-9f05-cfc83337a4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4217922e-c9f3-4c30-b975-d1065836a2cd",
        "cursor": {
          "ref": "865c7fd1-c9d2-49ae-b17d-0ece06832573",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c31374d-a649-48f0-8e1e-7ad62f692241"
        },
        "item": {
          "id": "4217922e-c9f3-4c30-b975-d1065836a2cd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e8f3a33b-3a17-447c-a22d-222eba2a5adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ea13b-6768-4978-97b9-c8e7b8ce8387",
        "cursor": {
          "ref": "30e0d561-888d-498b-b50f-6f3bb2dd06e6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f1e0d84d-ced0-49fb-9683-5d18583cc1db"
        },
        "item": {
          "id": "988ea13b-6768-4978-97b9-c8e7b8ce8387",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0cfafc7a-924c-42a9-a5b7-e37e4693beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0b42c3-3d7d-4e26-831c-7b7fe4628692",
        "cursor": {
          "ref": "61413288-2ff4-4974-9640-aa2f17c12a22",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7cd4abd9-331d-4460-9932-1627949b3e9a"
        },
        "item": {
          "id": "3e0b42c3-3d7d-4e26-831c-7b7fe4628692",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5164c6d-c2e8-4e28-a9d6-1b25c7a88842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36558343-7ea7-411d-b203-ee96ecad7176",
        "cursor": {
          "ref": "1409fe63-6ddd-47fa-a9ab-5eed7bfb6ad7",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f5fa498e-074f-4e87-bf11-0fc6d7575a72"
        },
        "item": {
          "id": "36558343-7ea7-411d-b203-ee96ecad7176",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a4a4e388-dc9a-4fa3-985c-d9864f73411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1585c56c-e7ac-4e38-84e8-dd92faff8b90",
        "cursor": {
          "ref": "184bef2c-1751-4120-9f71-284403259c6f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f8fd67f-44b5-4623-9531-1b054ba1727e"
        },
        "item": {
          "id": "1585c56c-e7ac-4e38-84e8-dd92faff8b90",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32f4022f-4470-46a7-bd95-3c819ed51141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2464c0-6059-4550-b333-96e283eb04f1",
        "cursor": {
          "ref": "774e5eb7-48db-4de1-be1a-dae85e59b1ea",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3c235a90-6aec-451d-a4a4-5519dc7cb411"
        },
        "item": {
          "id": "8e2464c0-6059-4550-b333-96e283eb04f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "643e0995-de9e-4d0f-a30d-8acbcfa4aed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b6b9f4-90d7-4d4c-82c8-0c51b0cd891c",
        "cursor": {
          "ref": "4d9e3c06-06c8-4c73-a267-00107ca62516",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb557ad8-d969-4c29-867a-d0d120c82959"
        },
        "item": {
          "id": "03b6b9f4-90d7-4d4c-82c8-0c51b0cd891c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "44dfd6bc-199d-48bc-b274-3721bb8704e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc4473-cfdf-4c9a-8faa-aef221997dcc",
        "cursor": {
          "ref": "67404898-cb1b-497a-92d1-0fa40d9b1747",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1548ab06-20bc-4928-b3b0-bfdd49c36d0b"
        },
        "item": {
          "id": "50dc4473-cfdf-4c9a-8faa-aef221997dcc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "49eb418a-4461-4dab-9b17-1dc12394ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44992dd1-5b58-4d4c-af87-5b82c401e7e7",
        "cursor": {
          "ref": "5859a1a0-7713-482f-8e81-f69f25d114ac",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "665a4cc1-d438-4766-840c-97d6ae08ef2b"
        },
        "item": {
          "id": "44992dd1-5b58-4d4c-af87-5b82c401e7e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bbb54c06-9c02-41ee-b516-9fd8f04709a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4a91f7-e9dd-4b95-bdec-7c23923440c0",
        "cursor": {
          "ref": "af5c3bb4-eb74-4a25-8e1c-78c51d849520",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "69ec17b4-720e-4226-af18-ced0ca4a9deb"
        },
        "item": {
          "id": "2a4a91f7-e9dd-4b95-bdec-7c23923440c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "44e5cd01-6df6-4270-ad85-4e9040fa0587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccba691-86b2-4b06-8e6a-48b7cb2cdc1f",
        "cursor": {
          "ref": "5245e617-3677-4af0-92e0-a3fd900a707b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5d535c38-3d7f-4c1e-85bc-df7ec8ac273e"
        },
        "item": {
          "id": "bccba691-86b2-4b06-8e6a-48b7cb2cdc1f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef6756a5-e427-4503-a3ed-b9eaf0a98c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40defef9-dabc-482a-b6aa-919547c9b325",
        "cursor": {
          "ref": "bcbc19b8-c69b-4124-aad2-3ab374968064",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "700c7550-7fb4-4ec2-a1c2-a697e38c4ff8"
        },
        "item": {
          "id": "40defef9-dabc-482a-b6aa-919547c9b325",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7190f416-957a-46ab-940c-a09b1b17849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ec9ada-7877-4c48-9af9-ecd21ded3fb6",
        "cursor": {
          "ref": "daa6338f-1416-4afc-8acd-b1883c4ceebe",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d9a821dd-d1b6-4c38-89d8-ea2181683b84"
        },
        "item": {
          "id": "48ec9ada-7877-4c48-9af9-ecd21ded3fb6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f330b9f-9240-4e8e-abd5-29f6a5d4f3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049ca5d8-dc61-4088-b48f-fa2280f7cfb3",
        "cursor": {
          "ref": "810774ba-c076-4902-afd2-bf92d5cae22b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0443e661-c989-477d-8734-16868de55aae"
        },
        "item": {
          "id": "049ca5d8-dc61-4088-b48f-fa2280f7cfb3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d0492e8-d87d-4a6f-b3ff-c3418bbeb8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa3781-c2d3-4c03-845f-9f50a3487339",
        "cursor": {
          "ref": "91e4f4d6-f061-486a-b17a-c4eee442d20d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "28f5b08f-ccb3-40bb-9545-5a026b504768"
        },
        "item": {
          "id": "6bfa3781-c2d3-4c03-845f-9f50a3487339",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "627440d9-4ca8-47ee-bbde-fc22f2d31c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bf77f2-8322-408b-a8ea-9af9425ea797",
        "cursor": {
          "ref": "eb6daf55-32bc-4338-aecd-126d8bdb1986",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "093468a3-df97-4a8d-8a70-0e38909ea701"
        },
        "item": {
          "id": "a1bf77f2-8322-408b-a8ea-9af9425ea797",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b8d29c5e-4075-4ba5-a6ae-3f9e965d6e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bf37e-0d54-49ee-bf63-015a9b981566",
        "cursor": {
          "ref": "2d7ef98e-af98-4a08-9b0c-cb84bb93422e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b752d828-424b-4125-b673-9469301d6257"
        },
        "item": {
          "id": "a91bf37e-0d54-49ee-bf63-015a9b981566",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0dadc69b-471c-43cd-9fd3-e54a57a552a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd8c00-c37c-4404-a175-344b6e6a47cc",
        "cursor": {
          "ref": "e983f0f8-d047-426b-801d-f2ef578bc4b3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7992333b-be42-49ad-97df-087c750d1fbf"
        },
        "item": {
          "id": "47bd8c00-c37c-4404-a175-344b6e6a47cc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7bb960b3-8c2d-4438-a296-51871de64eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da6049b-4133-4920-96fd-7373be269780",
        "cursor": {
          "ref": "c14faf6c-6322-42e1-8cff-68c45d1d80e0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "acc9f3fe-8b00-4bf8-ad1b-3a4a0f7fa0c9"
        },
        "item": {
          "id": "2da6049b-4133-4920-96fd-7373be269780",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "37ef6503-cf13-43c5-8064-ec138277cc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af44010-bd3a-423e-92a3-f4577cf917ed",
        "cursor": {
          "ref": "f297d4f2-b377-40a2-8621-5abb7fc6a50c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b5e8c70e-a650-4671-bf8e-0bdd45a003fd"
        },
        "item": {
          "id": "6af44010-bd3a-423e-92a3-f4577cf917ed",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bbfbdd8d-3f9f-4d4f-bc22-a4e88caf2091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea58e0-4eef-48af-bfae-46d9bb2f2578",
        "cursor": {
          "ref": "254949a1-fdf1-4abd-a2af-419647c0874c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a0ebc2d-9040-4b3c-80f2-32514732f84e"
        },
        "item": {
          "id": "b8ea58e0-4eef-48af-bfae-46d9bb2f2578",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "626d9fbb-2954-44c8-a88d-de6100592627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828df5e7-97f6-4e11-97d4-713f89f9ba80",
        "cursor": {
          "ref": "a075d110-c1ac-4b53-bb42-dbe5aa9ba65d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af946cc2-d12f-41bd-9702-7909a5c5c757"
        },
        "item": {
          "id": "828df5e7-97f6-4e11-97d4-713f89f9ba80",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4233485c-980b-4b9e-9dc2-0b47d33a68db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b6570d-435b-4143-a40f-28edc27c2dde",
        "cursor": {
          "ref": "36a62814-49bb-4ad4-aaac-220e155dd563",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dbf8adb9-4b59-456d-a72a-cabbf61ffdd4"
        },
        "item": {
          "id": "a2b6570d-435b-4143-a40f-28edc27c2dde",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "693fd8dc-fa75-48d7-8325-1c77336b9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b587804-1d43-4be1-ac1b-35d617fe7310",
        "cursor": {
          "ref": "a556699f-9c8b-4973-b817-340cc391d2b1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33b604cf-2c22-4d79-996e-9be15c624717"
        },
        "item": {
          "id": "4b587804-1d43-4be1-ac1b-35d617fe7310",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "07595c5f-302c-4d5f-89de-eca66c25341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d0bce-fadf-4a54-8933-a1aaea051f00",
        "cursor": {
          "ref": "f09931eb-cbd4-42f9-9790-3294d9d46d47",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6da28d5d-c520-4644-81a4-c7cc00574afd"
        },
        "item": {
          "id": "173d0bce-fadf-4a54-8933-a1aaea051f00",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9914015-5257-49ad-a0cc-cff002eaa39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d713e41a-fe11-452d-9730-777b71629b98",
        "cursor": {
          "ref": "6c4ee7ed-7fb6-45e1-a4f9-27791369796a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0dc580bc-bff8-40e4-97e9-823a032ef1d1"
        },
        "item": {
          "id": "d713e41a-fe11-452d-9730-777b71629b98",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "09d6a61f-fb39-4253-8b06-20a27b6ce29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f310961a-47ec-43e3-972b-36ad09ab2496",
        "cursor": {
          "ref": "b6f02141-f659-469f-acf6-87c6daed1951",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4aaa3346-aafc-42fd-be9a-96ea32b738ae"
        },
        "item": {
          "id": "f310961a-47ec-43e3-972b-36ad09ab2496",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4fae21b1-6b61-47bf-871d-cd1a61ca0bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49332978-fe2b-4267-b1ea-b82870bc8715",
        "cursor": {
          "ref": "3511cff4-81ab-484a-a623-7db0cfdabf58",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0647c882-52c0-4ce8-b5d1-95563e7c3e93"
        },
        "item": {
          "id": "49332978-fe2b-4267-b1ea-b82870bc8715",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4d7c0ca2-5f53-40bb-a059-93657810c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df031c70-255a-406d-a1d8-21f26aedf88e",
        "cursor": {
          "ref": "203202e1-9865-4ca8-9516-c06ef6ed042b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2a648847-c895-4d2e-a3a1-ef933d29aed2"
        },
        "item": {
          "id": "df031c70-255a-406d-a1d8-21f26aedf88e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "127f3938-2bf7-455e-b59c-67dcf8d69747",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 63,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67af6b5d-5b01-4100-8a40-60eac950e69e",
        "cursor": {
          "ref": "7a000370-3b4f-4fc6-83b4-eef6a91a27fb",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63e96435-7180-4639-a4bb-0e6e066b9fb0"
        },
        "item": {
          "id": "67af6b5d-5b01-4100-8a40-60eac950e69e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ad3b6c85-10ef-48a2-a54e-20ec9ee8d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51842ba-d85f-48c8-b557-95d0c766700c",
        "cursor": {
          "ref": "c887d97f-3add-4885-b4bf-0eb28afff5b9",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec631707-c93b-4de2-8af6-c8216bd9a607"
        },
        "item": {
          "id": "d51842ba-d85f-48c8-b557-95d0c766700c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9a5358d9-f585-44f9-8cd7-864aa36382f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399d8ae2-53fd-4a24-a39a-79a125e7498f",
        "cursor": {
          "ref": "d93ea5cc-c0fe-485f-b6e3-8a9a0789a3b3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "868db735-88fb-46f2-8031-61c160894f50"
        },
        "item": {
          "id": "399d8ae2-53fd-4a24-a39a-79a125e7498f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c195c68a-57e8-4cb8-83f1-e2217f4a3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3ccfd1-ecbc-4bde-8933-c2bd634ef680",
        "cursor": {
          "ref": "b71e2105-0497-4ea6-903e-fba9f9f0cd04",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7ed7187b-ad64-4cfc-9829-aedb3d0fc1bb"
        },
        "item": {
          "id": "2d3ccfd1-ecbc-4bde-8933-c2bd634ef680",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a8c1827c-463c-473a-afb6-b92337cd0685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c3aece-afe5-4dfb-88bd-07b98364860b",
        "cursor": {
          "ref": "dac2f5f2-2ee9-47d3-b922-214825675b78",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "91fba942-c902-4acd-89ec-7cee3da61b5b"
        },
        "item": {
          "id": "c9c3aece-afe5-4dfb-88bd-07b98364860b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "66e99ba9-56ef-4eb3-96ea-cb3462389d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73525037-f496-4166-8eca-b97c11dfe1ab",
        "cursor": {
          "ref": "3cdf3504-264c-4163-b84a-b7bf5c78c99c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5d0ed57b-ac2c-477b-86c5-3ac3ebdd13eb"
        },
        "item": {
          "id": "73525037-f496-4166-8eca-b97c11dfe1ab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fbd5d5fd-95ae-459e-8063-b03e9a930c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1700fc1c-ff5d-4d5f-b16b-7ae6889094fb",
        "cursor": {
          "ref": "1520fa2d-e8cf-4d76-9ec8-afd4cba18e32",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24423d07-5b3c-4558-a5c2-02e0a65a9ab3"
        },
        "item": {
          "id": "1700fc1c-ff5d-4d5f-b16b-7ae6889094fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0a6e355d-ba99-43dc-828e-f98ee6ccfd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0271d37-ef52-4404-9c8b-aaff229cc9d3",
        "cursor": {
          "ref": "40f15819-10fe-4bbe-809c-74babb200861",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "10b5f4cc-3061-4074-8d38-bb5ee2c2e041"
        },
        "item": {
          "id": "a0271d37-ef52-4404-9c8b-aaff229cc9d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a993710e-c419-470b-8f60-e392c9e2cd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f83ba04-4681-4c67-97fc-65e81b4569bf",
        "cursor": {
          "ref": "21221a78-73f7-4fd6-8b4c-f8776f22cec3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e026b5f7-6175-4585-90e5-bacef0d2b8d0"
        },
        "item": {
          "id": "0f83ba04-4681-4c67-97fc-65e81b4569bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "05ebd99d-bf12-42bb-a426-724040af96a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912694ae-5cfd-4ca7-a355-0e27417efbf0",
        "cursor": {
          "ref": "c99629d3-582e-4ab4-a55f-a5b7595975a6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d7b25dd8-fca5-4342-a1e8-3977d4769a4d"
        },
        "item": {
          "id": "912694ae-5cfd-4ca7-a355-0e27417efbf0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "af0d9089-b253-417d-9bde-a79ed96cb9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e756332-698a-4339-ac48-76fb6f2b1e24",
        "cursor": {
          "ref": "b7c2dcbb-c2ae-4582-85cb-80e9961fb088",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9cc9d799-ec74-4df9-acbb-f7e932fe1514"
        },
        "item": {
          "id": "6e756332-698a-4339-ac48-76fb6f2b1e24",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb9c3096-4126-4bb9-b58c-8903900bbd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4007aaa7-63ff-41db-a763-6928aebbae39",
        "cursor": {
          "ref": "0eee065c-07c7-4686-b1dc-a0921d0dfee8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6f3dee9e-601e-43ba-8765-9ef9e2aa2430"
        },
        "item": {
          "id": "4007aaa7-63ff-41db-a763-6928aebbae39",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9fc0f41d-7cd1-4385-a9cc-6795ccb9ce01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7410eed9-a41a-44a8-a42a-c1237cc0bef0",
        "cursor": {
          "ref": "c8d7b060-aec5-4297-8caa-4321db5af0be",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c57f2074-cc30-4051-bdc4-7116ba0c35a3"
        },
        "item": {
          "id": "7410eed9-a41a-44a8-a42a-c1237cc0bef0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "501714d5-b0c5-40c5-8775-cb292ac670dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d34202-a945-466d-bed4-831a9569cb23",
        "cursor": {
          "ref": "3740b4f0-7067-4434-91ee-fbf01358de25",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eac830df-449d-4b49-8fcb-6b11ab479042"
        },
        "item": {
          "id": "31d34202-a945-466d-bed4-831a9569cb23",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "68b641ca-f73d-4d8c-903e-3fe3508ea2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2376b39-413f-43c5-9988-6fbb665c56cb",
        "cursor": {
          "ref": "b08cd0d2-b2e8-4640-9d67-3bbc67bc217e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a5573012-9e7e-427f-8c54-7af34a749395"
        },
        "item": {
          "id": "b2376b39-413f-43c5-9988-6fbb665c56cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8025689c-b280-4b40-888f-dcccafe8300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9280135-e021-478a-b968-26c0f938ca0f",
        "cursor": {
          "ref": "2557a453-70c7-40e5-9f8b-c0044b88381a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60f31cfd-5cdc-47cf-825e-1187b9881ef5"
        },
        "item": {
          "id": "b9280135-e021-478a-b968-26c0f938ca0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dd335267-4c03-4c53-9d48-cc1df1a49ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4476559-6546-4723-8f24-4e2d2c6dd4fc",
        "cursor": {
          "ref": "248c04c2-6cd2-4720-89cd-3ddd2e72cd77",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a40a1868-58e2-4f33-8944-26ff374530ca"
        },
        "item": {
          "id": "b4476559-6546-4723-8f24-4e2d2c6dd4fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9cf2f87a-c024-45eb-90c0-8e4a3a0540e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699ee6c6-1a19-49b9-8448-d21c9a996319",
        "cursor": {
          "ref": "49c963b1-cc78-4ea0-a8ac-bd420ccbe44a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "244d7a25-0538-438f-b038-f28bc1f60b18"
        },
        "item": {
          "id": "699ee6c6-1a19-49b9-8448-d21c9a996319",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a2dbab43-611d-4b60-bfe0-16274f56216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890d039-f58b-497d-bbfa-f2cac68c4cdb",
        "cursor": {
          "ref": "944bf45c-11e2-4b64-80a0-12437b3e7650",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "96c8d181-5c94-4de7-8cdc-e8726537a0b2"
        },
        "item": {
          "id": "b890d039-f58b-497d-bbfa-f2cac68c4cdb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fa52e603-6be6-4fbe-a46c-c4ebdc36fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb90219-2ce3-4389-9d5d-aed89e5b1929",
        "cursor": {
          "ref": "4ad7ac58-6c1a-4f67-aa79-aa9605f36064",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f26a3a6e-30b1-4c52-9810-713100ff1d57"
        },
        "item": {
          "id": "9bb90219-2ce3-4389-9d5d-aed89e5b1929",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "802025d7-b045-4031-8235-0c0c8e6638bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004e9e50-bcf8-4e1d-a8c1-5c06c1b99f91",
        "cursor": {
          "ref": "8591f0b5-2f91-40f8-9574-fcf51413f621",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6790076b-42cc-4f91-a186-ae27b9bac055"
        },
        "item": {
          "id": "004e9e50-bcf8-4e1d-a8c1-5c06c1b99f91",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2aa1cc4a-c5d6-4d7c-9669-50fa7992f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8ece28-5561-4d34-a6a6-240fec09a400",
        "cursor": {
          "ref": "dc29f01e-348d-4ab6-933f-c8f5929cfaee",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d94eb967-b4bf-4016-9849-8a3fce6ec0f1"
        },
        "item": {
          "id": "5d8ece28-5561-4d34-a6a6-240fec09a400",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "582e23f9-c7da-4d0e-9816-fc63737eef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1291a9-ae78-4edd-b04c-faf0d18c2ea8",
        "cursor": {
          "ref": "7ee67b38-7dff-44f1-b40f-922d6345d39e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4ad4f00a-affc-4696-a697-6f4debf7f4ac"
        },
        "item": {
          "id": "bd1291a9-ae78-4edd-b04c-faf0d18c2ea8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c325c7cb-5860-416c-8f14-bf250c936b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a31cbff-da40-4314-ae24-6098d118589e",
        "cursor": {
          "ref": "ff80e385-cdda-4e97-bc59-bc1f8c93efb2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "33632266-6fc2-4480-a141-64a1cd5cb4a1"
        },
        "item": {
          "id": "8a31cbff-da40-4314-ae24-6098d118589e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "835d6afd-f7fe-4505-9dec-fcb395ac948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3a202b-8a1e-4945-99cf-2997ae53bf10",
        "cursor": {
          "ref": "7dca9c7e-b214-4d65-98ee-441d0af71a88",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "de53b2ae-e8d2-4c44-b1a5-cc8d0e842131"
        },
        "item": {
          "id": "4d3a202b-8a1e-4945-99cf-2997ae53bf10",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b8455dcb-e9be-426b-acd8-1041b1efdbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf63f7-e873-4de8-a35c-f5ffff648f3f",
        "cursor": {
          "ref": "80af7a4f-50ae-4138-91d8-0136196835ed",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cbc70932-b564-49fa-8760-399c51c25715"
        },
        "item": {
          "id": "4bbf63f7-e873-4de8-a35c-f5ffff648f3f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cf0808da-aa02-445b-a30c-ed8973dccaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9bc2fb-f57c-4d38-a12d-ffec13cdc52e",
        "cursor": {
          "ref": "c8cd8fd3-1b34-49c3-9b7e-31e5ac3df411",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2e55c51b-06ec-4d7e-b0eb-949e4e1299e0"
        },
        "item": {
          "id": "ef9bc2fb-f57c-4d38-a12d-ffec13cdc52e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7200094e-4ff7-4664-a5d3-5fe2c3c01543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f3f868-1326-4f9f-8f38-085c6333b989",
        "cursor": {
          "ref": "921b7336-7fc1-481f-a2c8-9f2e20484aed",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "51c76472-a8f5-4ce8-b0f5-2efe9cb8d9f8"
        },
        "item": {
          "id": "d6f3f868-1326-4f9f-8f38-085c6333b989",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bdbdca49-b75d-44b3-bb9b-3e58fc2fe83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb03bce2-f98e-44cd-92ee-11c2f0979c85",
        "cursor": {
          "ref": "7b8d19c5-8e56-48a9-8be5-9675900ecba9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "df958151-66a2-4695-86e0-9c231956d2a6"
        },
        "item": {
          "id": "cb03bce2-f98e-44cd-92ee-11c2f0979c85",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1c6c1f12-82c2-41da-ba8b-eb3b0e251a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd88d1c-94fe-4d68-bd5f-f19c57466210",
        "cursor": {
          "ref": "e862e83d-f6ef-4293-a238-bf3d887cf4c3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d7eb6d07-58c0-4f52-8f40-e09e27758fbe"
        },
        "item": {
          "id": "8dd88d1c-94fe-4d68-bd5f-f19c57466210",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "61202f8a-001f-4acf-afeb-22f310e259ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7621c9b7-681e-4c74-8386-7f3d609f015f",
        "cursor": {
          "ref": "b848e75e-d073-4e24-a2bb-2737a2db7d80",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2408cf8-6f7d-4f5f-bea9-19bb01569fcb"
        },
        "item": {
          "id": "7621c9b7-681e-4c74-8386-7f3d609f015f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b0294bd2-64a8-4395-b271-d9796ae9a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e2016-e1af-418a-8f34-257fce0bcc09",
        "cursor": {
          "ref": "d008895e-9a18-4169-ad0c-828957f88cbd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ba482bb0-43b5-47f1-aa81-9077f70c0d52"
        },
        "item": {
          "id": "929e2016-e1af-418a-8f34-257fce0bcc09",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "586292b5-6c74-4352-ae5f-7541b0df5584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e86bc-72f8-463c-8758-b64714f8c3b7",
        "cursor": {
          "ref": "86a59be8-ae08-459d-aa1d-d3dd7dbf6525",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7bcdf4c-cbd4-41f9-bfea-dcf103bd9640"
        },
        "item": {
          "id": "fe9e86bc-72f8-463c-8758-b64714f8c3b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3529c7c7-3e10-4b22-86ac-c9372c09bba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e418c-a04d-421a-8730-62995941d08d",
        "cursor": {
          "ref": "ed4ff5fc-5779-4326-9f4f-3da5f03620df",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c29cf9cd-5412-4329-b4c0-e8fd6b58ce1a"
        },
        "item": {
          "id": "3e7e418c-a04d-421a-8730-62995941d08d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "93587112-f262-478d-a77f-fff064f30d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711cd8f8-ad73-4cc0-8361-d505ecd6c9cb",
        "cursor": {
          "ref": "db816c9c-832a-4661-87b6-710c685ebca4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e862b41d-dff0-428c-9043-8d8276a4d5d8"
        },
        "item": {
          "id": "711cd8f8-ad73-4cc0-8361-d505ecd6c9cb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de7ad70f-b841-46af-8da6-eeb7c8cb7017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35b01db-8604-43fc-a928-1cb1b57f1801",
        "cursor": {
          "ref": "7afb7102-0da5-45da-9175-41f2949e4dde",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "04f37db0-0185-496f-94a1-4497988e90c3"
        },
        "item": {
          "id": "b35b01db-8604-43fc-a928-1cb1b57f1801",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0f341dc3-23d4-4a42-9139-6a2d11313300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392b9c8-d4ae-4ebc-8887-9c23ec8bc1b3",
        "cursor": {
          "ref": "9e25bc3b-f0e0-4486-ae31-b9844490a05a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3952a7ff-8835-45b9-b8e1-335acdcbed49"
        },
        "item": {
          "id": "d392b9c8-d4ae-4ebc-8887-9c23ec8bc1b3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "81d868ca-6f02-47f7-a146-2e44e4d05608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6c624d-4200-46ec-929c-a6f918b50672",
        "cursor": {
          "ref": "5f7d9de9-db77-4b1f-b03d-66fcfc96f43c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "514a8577-c3c9-4c9d-afeb-6d3c445dbde3"
        },
        "item": {
          "id": "dd6c624d-4200-46ec-929c-a6f918b50672",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "54a23b14-ff1b-4b9b-bf9c-9fd4484d066e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631f28f4-16a6-4fca-b453-ddfc6d40adae",
        "cursor": {
          "ref": "7aa46c7d-f97c-422f-8cb4-b528fa18a7cd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac5dcc5e-3084-4293-b647-90e9a62f74f2"
        },
        "item": {
          "id": "631f28f4-16a6-4fca-b453-ddfc6d40adae",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d558b716-4732-41af-b757-706fa5c74208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d717e88-6714-4ed2-86b0-25f729c7a57c",
        "cursor": {
          "ref": "08d1f671-3e90-471e-a7a7-1b5daa3e5e7b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3fe771e2-a82e-4f44-b024-67d0db63e598"
        },
        "item": {
          "id": "0d717e88-6714-4ed2-86b0-25f729c7a57c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71cadbfa-d952-4702-839a-6691cca3e978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae68d58-ada3-41b9-853b-d554e6a941a7",
        "cursor": {
          "ref": "0658cfef-793d-4467-84a8-37a525dc12b3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2fb19bed-359d-4f01-9dcf-755d590d0133"
        },
        "item": {
          "id": "eae68d58-ada3-41b9-853b-d554e6a941a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de3a492b-4580-4b4e-a02c-d6836b90f80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680edf9b-4ff6-47d8-a90b-d5b86efaadde",
        "cursor": {
          "ref": "8e0f445d-f437-42f7-a9d8-96668db6305c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e6c7ac71-414c-4cc0-92f6-4e4236d3e6b2"
        },
        "item": {
          "id": "680edf9b-4ff6-47d8-a90b-d5b86efaadde",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96d5d2d8-a4f5-4deb-a20c-66d8bdf87cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d847e-9176-47ca-ae2c-7977deae3451",
        "cursor": {
          "ref": "b824307b-3b24-4154-a4f6-9fee78c2359b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6a52789b-8876-4657-9eaa-95fc795235d6"
        },
        "item": {
          "id": "225d847e-9176-47ca-ae2c-7977deae3451",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5abe557-9ed8-4c7d-ae6c-91c2af3ab178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b4768a-79b9-48f8-8859-dc185e893de0",
        "cursor": {
          "ref": "3424ebe8-e0de-412f-9829-4c5197cd811c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "afeae419-63d9-44be-9d35-353a2fda460a"
        },
        "item": {
          "id": "53b4768a-79b9-48f8-8859-dc185e893de0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "65d74a32-32be-42bb-9b81-08db7eeedb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd45606a-7003-40ad-b475-1ee448d3953c",
        "cursor": {
          "ref": "94c1614c-e0b4-4c92-bf34-2b4d4ac7b730",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "182ca55a-6402-4412-beb3-10794ecb4a52"
        },
        "item": {
          "id": "cd45606a-7003-40ad-b475-1ee448d3953c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d7eedc1b-7805-472a-8541-dc9f5f292fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ad9b16-0d9e-4725-811a-f51c27c1ca9b",
        "cursor": {
          "ref": "78738865-12b1-44cc-a865-cbd142c558cb",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29961970-2ddf-4513-b756-8731209b62f9"
        },
        "item": {
          "id": "d4ad9b16-0d9e-4725-811a-f51c27c1ca9b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e36cc71f-f16f-45df-a263-e2b5e64745ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc94ccf-28f2-4d9d-913a-a88c99332bf6",
        "cursor": {
          "ref": "2a06f7ed-c86b-4017-8b9d-e51fb21cc169",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6aab99b-ac63-463b-85ac-69364f66c9d7"
        },
        "item": {
          "id": "4bc94ccf-28f2-4d9d-913a-a88c99332bf6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b5dd0a2f-6497-430e-a5b5-ed3deecde650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef094698-3f5c-4438-9ff7-b7f4e4750c25",
        "cursor": {
          "ref": "6f5fae69-3405-4770-86e9-317c1ed6a979",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "09060565-a780-471b-b413-2ae290ebd86c"
        },
        "item": {
          "id": "ef094698-3f5c-4438-9ff7-b7f4e4750c25",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37717913-6d5f-4873-9432-61d3d1dbce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1e385f-4ea8-4d06-9b46-4d7c61e26315",
        "cursor": {
          "ref": "e90fe102-597d-4487-a26c-9fd37d1b7a56",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f60730f4-b883-4cd9-8fd1-9d31358f65ca"
        },
        "item": {
          "id": "8d1e385f-4ea8-4d06-9b46-4d7c61e26315",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "62f39f9e-b481-400f-be2f-f5c52702a518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fda562-3167-4aa1-aebc-25e902b504f6",
        "cursor": {
          "ref": "7f5c458f-4333-4ef2-8e6a-267aa6a13376",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0a948d24-8cf6-4783-a18b-72760543d6f1"
        },
        "item": {
          "id": "02fda562-3167-4aa1-aebc-25e902b504f6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "78ea4fcb-1b76-47fa-92c5-5dd140dd859c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375a4371-4c1b-4fb1-b6a5-b129620d4767",
        "cursor": {
          "ref": "f3775695-fc4a-4b4b-adeb-e9a7c3d2bfb1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "64301aed-a4ee-42b5-8696-28b229cf2341"
        },
        "item": {
          "id": "375a4371-4c1b-4fb1-b6a5-b129620d4767",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2a7a5283-837f-4204-a62f-63e8b63a313d",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a58153-7837-4b52-ada3-bff5cb3952fb",
        "cursor": {
          "ref": "7feb68dc-f60b-43f2-ba1e-a30b071f86fd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12d52865-77ab-4de3-a19c-6e0be887c08d"
        },
        "item": {
          "id": "97a58153-7837-4b52-ada3-bff5cb3952fb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "38ac3a41-544a-4086-9e3e-03d2c9e108d8",
          "status": "Created",
          "code": 201,
          "responseTime": 358,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cac753-3e6b-450e-b289-3e6e6bce7faa",
        "cursor": {
          "ref": "98c2eec8-ca0b-4ab9-a18d-5e1381b4c39e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0818113d-f268-4303-b9b9-ce12ca3d35a3"
        },
        "item": {
          "id": "68cac753-3e6b-450e-b289-3e6e6bce7faa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "25b99e47-de37-4dc9-947b-d9021876b777",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad059af-67a8-4ce9-bfce-c9eb0a70583a",
        "cursor": {
          "ref": "87b9086e-afd3-41d8-9191-ab801bf4dbdd",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76af4afa-118e-4705-a8eb-853151e698f2"
        },
        "item": {
          "id": "dad059af-67a8-4ce9-bfce-c9eb0a70583a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f6566bb8-c4ad-462f-a52e-14183f3a0645",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a742b5fa-1f1e-4087-ae4e-b7c8a21d8ec0",
        "cursor": {
          "ref": "acfed889-a59a-4af5-a1c2-fbbb2f9bb0ac",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "98861f55-800b-493c-8a1d-338456e1bcb1"
        },
        "item": {
          "id": "a742b5fa-1f1e-4087-ae4e-b7c8a21d8ec0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86a88c13-43b4-481a-831d-9433a84dac05",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cfd076-85d1-478b-a49f-705365cbdbee",
        "cursor": {
          "ref": "89c1adb5-34c3-45bb-aaf9-9dda45349a90",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "882378a5-56f8-4564-af07-06b7595bcdde"
        },
        "item": {
          "id": "c5cfd076-85d1-478b-a49f-705365cbdbee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "47167b8f-92ea-4ca8-a55c-5a4462f59574",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9735dc62-002b-41c8-a94d-158d931096eb",
        "cursor": {
          "ref": "ebf8dcd3-2f97-4882-a9c4-6ae80a2359fb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "57891857-189a-4481-9613-bc22610f0681"
        },
        "item": {
          "id": "9735dc62-002b-41c8-a94d-158d931096eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1fd683b3-c1da-4477-9342-91e4babd8eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef57b836-d3b5-42df-8b02-b39bf9bdaaed",
        "cursor": {
          "ref": "ac6d1ab1-bf28-479b-83a9-aa2f4e256132",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7641989b-e157-4d67-a057-6e5a6364b55d"
        },
        "item": {
          "id": "ef57b836-d3b5-42df-8b02-b39bf9bdaaed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecb39d7b-87f9-44d6-b37d-5138cfd884cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c813841-a75f-41a9-a59b-bea5ef119daa",
        "cursor": {
          "ref": "b8980729-1d1e-41fc-bcef-5077bf5c0437",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ab137bba-0d20-409f-98d5-bb26d44b3c19"
        },
        "item": {
          "id": "8c813841-a75f-41a9-a59b-bea5ef119daa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f15e6035-4de5-46b7-9a8b-e35ce624a88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f537a6-d4ac-43c9-bef2-b50288c38c10",
        "cursor": {
          "ref": "0273d325-e190-4af0-b04a-6c70b2c7d7ca",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4cda63a6-5ae1-4e5b-a0ba-3b56125d5fcc"
        },
        "item": {
          "id": "d4f537a6-d4ac-43c9-bef2-b50288c38c10",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7ecf80a-ae3b-445e-b11d-fdb7149a1d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc0b7b1-36c8-462a-8a92-1c0e096f10a0",
        "cursor": {
          "ref": "e2032714-b7b7-42f0-a66a-e6ff53ac12e0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "89c1b5ca-c743-47b8-8770-89db7e0b1538"
        },
        "item": {
          "id": "6fc0b7b1-36c8-462a-8a92-1c0e096f10a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5d1f7de5-d477-4ac7-b2f4-1fae9c3d7241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9190e45b-5b49-4c07-8393-f1ea389e5604",
        "cursor": {
          "ref": "7d0959fb-b652-42d7-81a5-adadde059e26",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2dd9e013-c29d-4569-9d0c-f4468791c269"
        },
        "item": {
          "id": "9190e45b-5b49-4c07-8393-f1ea389e5604",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "236e5277-191b-4e6f-b2ee-0a1a6b9ff792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386889a-f89d-40ae-a8aa-dd53f08612b8",
        "cursor": {
          "ref": "89f8181f-b75b-44e8-b5ec-1718c671f3ca",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "572c08fc-e3e6-4f77-aa28-bd06bea47ad7"
        },
        "item": {
          "id": "6386889a-f89d-40ae-a8aa-dd53f08612b8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf1b1e34-d84e-4702-af90-ac0fdc49d6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84f54ae-c79d-49ce-b41f-cdb7ff300b49",
        "cursor": {
          "ref": "0159152c-9496-4e60-bfb7-ee2d5c76d48d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "55a3807b-a50e-4f4b-b0dc-c750394e8820"
        },
        "item": {
          "id": "f84f54ae-c79d-49ce-b41f-cdb7ff300b49",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ffcafa65-e1f4-4aa0-b396-e12e82f7355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a10cd5-d78d-48c5-b534-e987b28b64b9",
        "cursor": {
          "ref": "b2fd44d3-247d-4744-bb93-2bb06ae497da",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ba40cab6-d846-44f2-87f6-6d82e23a0f3e"
        },
        "item": {
          "id": "55a10cd5-d78d-48c5-b534-e987b28b64b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f861e14-4efb-4142-ada9-42612dbb65e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3760cf-01ee-4d5e-8541-2c6dc165f650",
        "cursor": {
          "ref": "09ea4e78-a09b-42b4-98b4-b8b9157612e8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a5f5c358-3c0e-44eb-b2af-7379fcb3ddca"
        },
        "item": {
          "id": "8c3760cf-01ee-4d5e-8541-2c6dc165f650",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a60ba7cf-16f8-47d7-b0af-b1b73bbb3b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03291f9c-1b5b-4899-9017-73f81bac0587",
        "cursor": {
          "ref": "2b7baab0-3309-4e6f-a482-cee13c2d1f37",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b408d209-b532-464e-a567-523e2d19d3cd"
        },
        "item": {
          "id": "03291f9c-1b5b-4899-9017-73f81bac0587",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c966f4b-0389-4fa6-8ecc-af06f82325d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695e59b0-4ddf-44b8-85fd-e47abda64bf8",
        "cursor": {
          "ref": "e2e82787-7e41-41ba-9d56-9078c701d3e5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dd10a823-4df4-4d6a-aaa4-777bc27b92f2"
        },
        "item": {
          "id": "695e59b0-4ddf-44b8-85fd-e47abda64bf8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15e473e4-3407-4fa2-9fbf-ef1ebba07799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7ff0d6-ba6c-41f5-a33d-4c03111f2e59",
        "cursor": {
          "ref": "0ea3b395-c405-4294-98f3-7c53054f8ddc",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29aab585-36e0-45e6-a349-ef6d228ebde2"
        },
        "item": {
          "id": "3a7ff0d6-ba6c-41f5-a33d-4c03111f2e59",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0633cce9-7d29-4aeb-ac42-57814f133afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d65b8-6f11-4d09-bd8e-a63d5bedc3f2",
        "cursor": {
          "ref": "fad5720f-00e2-44ae-9415-76938462e328",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "43edff29-5268-4ad8-8b1c-baf7beb152c9"
        },
        "item": {
          "id": "7d0d65b8-6f11-4d09-bd8e-a63d5bedc3f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d74bbb38-4dd3-4d2e-aff5-29c192cdbbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2165506b-4a6f-49fa-b0cd-cf664fa2b60b",
        "cursor": {
          "ref": "37b2a23d-903b-405c-a1f1-b548180a45f1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4625e46e-8f9b-4697-9d54-2c841c49f8df"
        },
        "item": {
          "id": "2165506b-4a6f-49fa-b0cd-cf664fa2b60b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f20ed17a-855a-4aaf-b899-a7f754a98da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79452a08-a4e8-4e60-8d45-4b5478127ec2",
        "cursor": {
          "ref": "c9260543-d098-4941-9af1-d75f219f0564",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3b320935-a75a-4e39-b81d-ec6240ec0ef9"
        },
        "item": {
          "id": "79452a08-a4e8-4e60-8d45-4b5478127ec2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a0c1827-a766-4a4d-8893-8e774948d3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc01931-4cb3-4522-954d-d58b9b661a94",
        "cursor": {
          "ref": "effe66a4-808d-4786-9b19-b156c58a56e3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "71d54267-692a-42ef-9387-421fa421bc8b"
        },
        "item": {
          "id": "7cc01931-4cb3-4522-954d-d58b9b661a94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9f1c15d9-adae-4f39-8836-be108aeb238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f84af3-5757-4793-9f15-b124a005ce3a",
        "cursor": {
          "ref": "5b47f39b-f7e8-4012-89a5-7d9ec44e9f8b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "759ccf97-d419-497d-81e0-0bded5339be2"
        },
        "item": {
          "id": "c5f84af3-5757-4793-9f15-b124a005ce3a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5b85029f-327e-4e4b-a749-b2c8b4cbf489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bdd0b7-d8d4-4092-928e-8312ebbb95f6",
        "cursor": {
          "ref": "f3084111-f106-40e4-a7fd-ff2cc750d657",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5bc82e61-4aad-471a-9fb1-461c62649ee9"
        },
        "item": {
          "id": "b9bdd0b7-d8d4-4092-928e-8312ebbb95f6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8387e44a-36f8-47fb-81e0-d120e3433f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d04c692-5562-495f-879e-3d64c1b530ad",
        "cursor": {
          "ref": "880c078d-730c-4bf9-864c-6d1588c7dc30",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "330c93ca-3383-4c3d-b494-1afe7893c090"
        },
        "item": {
          "id": "2d04c692-5562-495f-879e-3d64c1b530ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d6b428fe-ec5c-453b-a27e-307e53de9306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101a7cef-b310-4c62-8f15-42f4f631259b",
        "cursor": {
          "ref": "87c230ac-5b3d-48d1-867d-2e0d8b8d8f4a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5604d035-d48d-4d25-93af-0cde1df16b91"
        },
        "item": {
          "id": "101a7cef-b310-4c62-8f15-42f4f631259b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9824a32-7c4a-4671-b776-d7143e1183df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aac179-a816-49c6-af6a-5cddd740e110",
        "cursor": {
          "ref": "b8a34ced-c8e9-412c-a85d-2cabb7c28822",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b9a8c66-9276-4fd2-840c-6272a0948754"
        },
        "item": {
          "id": "c2aac179-a816-49c6-af6a-5cddd740e110",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da3d8966-6cbf-4c54-937d-18c39cd4da00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46668d23-4a73-4476-a73e-eae4f7c95849",
        "cursor": {
          "ref": "bcc6fb17-70c4-4d76-9126-2e205d41ff4d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4c923dc5-35ad-4634-aa1f-ac23682675c0"
        },
        "item": {
          "id": "46668d23-4a73-4476-a73e-eae4f7c95849",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c6a1c8c3-a1ce-419f-9df4-5d188be5a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092fc0a-4448-4d60-9d5b-26ed96a121f9",
        "cursor": {
          "ref": "373b33bf-5415-44a7-8454-f524a95c75f8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b12cabee-8e32-40df-b441-7881854b8b27"
        },
        "item": {
          "id": "5092fc0a-4448-4d60-9d5b-26ed96a121f9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db3b4b37-7f71-4af8-9dc6-b64c1e90dcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ca2559-0523-4657-bdf3-0bcce30eed55",
        "cursor": {
          "ref": "80a888da-ac2a-40d6-b231-a3068652867d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6f617a0d-8880-4739-8ee1-3f2d86817da9"
        },
        "item": {
          "id": "10ca2559-0523-4657-bdf3-0bcce30eed55",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4df4c8b7-40e1-4ae3-b94f-bbbfb6eafa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a8457-7693-4fb2-992a-1ee3b4080f78",
        "cursor": {
          "ref": "1cf7ec16-2bd9-4a7d-ab4b-eac750cae624",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55ed19b2-7fe4-431e-819c-4fe88db87831"
        },
        "item": {
          "id": "6a7a8457-7693-4fb2-992a-1ee3b4080f78",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a1aeb860-a3a1-4376-b7ff-619fdf15541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97027b38-6ca3-4270-bf08-04725e78925d",
        "cursor": {
          "ref": "dd167f3e-fc61-475c-a012-5e981bc93dbf",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "79808327-75b2-4b7f-9eae-9757fb522e75"
        },
        "item": {
          "id": "97027b38-6ca3-4270-bf08-04725e78925d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98d658f7-cb76-4f96-8654-b2895953f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4d49c5-81ba-4a09-b5be-32b1f596d367",
        "cursor": {
          "ref": "100693a3-129f-463d-b4ad-aba989ab9369",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4352ba17-4386-40e1-b234-2fbfec6e56ed"
        },
        "item": {
          "id": "6a4d49c5-81ba-4a09-b5be-32b1f596d367",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c7ff3c75-ceb6-40d3-b283-042dc76cb934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa30fdc-3735-42f5-8dff-f643a05109f7",
        "cursor": {
          "ref": "b2e112b7-d08a-4394-bf97-3121a9abba19",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ba21bc11-dfc1-4ea5-9078-85551c309938"
        },
        "item": {
          "id": "faa30fdc-3735-42f5-8dff-f643a05109f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efa02549-49c7-4c4d-969a-1e7a4e48b6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995faa12-4796-4068-be67-49caed74cff7",
        "cursor": {
          "ref": "a0c97f0d-aad0-4405-8144-10e53923532c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a587ee1e-8db0-46b7-8067-1690459b6550"
        },
        "item": {
          "id": "995faa12-4796-4068-be67-49caed74cff7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1654e818-3fa9-417b-ad3e-c443eb8e7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a984ef-5d58-41b5-8fa6-e23c61c5d800",
        "cursor": {
          "ref": "833bf57a-a22f-4793-a7ec-109314d72ddb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "52a89132-0005-4ec5-98ca-4b1d79b73059"
        },
        "item": {
          "id": "42a984ef-5d58-41b5-8fa6-e23c61c5d800",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fde48efa-4802-43f5-a115-7b2e6bc48b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f4f6f6-9bcb-4321-9b05-4dcac45aa777",
        "cursor": {
          "ref": "8022adaa-7ed2-4322-ac22-0ee91f928cd0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d4b2e771-8629-46c5-b421-f150e06d11d7"
        },
        "item": {
          "id": "74f4f6f6-9bcb-4321-9b05-4dcac45aa777",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "82d2007c-23c9-40f6-851e-c424977eb7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6bddf6-74f1-4fb0-828f-451f82450fd7",
        "cursor": {
          "ref": "78b34ed1-322a-4bd1-9261-fbd4d23ae7ff",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fad9f6b7-65b6-4dad-af5c-24975f2fba00"
        },
        "item": {
          "id": "5c6bddf6-74f1-4fb0-828f-451f82450fd7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f69bfed2-3f51-4195-b155-588f1e44db2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c00447-2370-4444-9d22-7f60f5e04ccb",
        "cursor": {
          "ref": "b49eeaab-873d-4871-b4c8-19c84f38f8da",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7f023212-b60d-4284-bf81-56b70a1a34f5"
        },
        "item": {
          "id": "a1c00447-2370-4444-9d22-7f60f5e04ccb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d4389317-35d4-4eaf-ba43-bae4e97e8aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fced8b45-3fd3-470e-b320-c62b1c3822b7",
        "cursor": {
          "ref": "f3de80f4-7ad5-4eb6-a0e9-9db72c9f4fa1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d89170eb-50fa-47a8-8480-e27654e6bebc"
        },
        "item": {
          "id": "fced8b45-3fd3-470e-b320-c62b1c3822b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb14b3d7-671b-4428-9c3b-c7fd33bcdb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31756c-96ca-4f27-8dde-4c3fecca721f",
        "cursor": {
          "ref": "b454213a-96ea-456c-bc3c-9da29c475606",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f577d2e7-72f5-40ca-a2a9-f640b66bb6f7"
        },
        "item": {
          "id": "8e31756c-96ca-4f27-8dde-4c3fecca721f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "25f09086-73fb-4666-a9c5-17854b5aaba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a77b07-1833-4da3-a459-5ef2f7a340a0",
        "cursor": {
          "ref": "841c0bdd-aa41-423e-9de0-daef9896a1fa",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b1343322-1c55-4848-9098-5baa524a9f18"
        },
        "item": {
          "id": "69a77b07-1833-4da3-a459-5ef2f7a340a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "22ec6343-d67e-4d51-9b2b-a6734fe0b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af1f29-55fb-4811-96d2-d86e30016a6a",
        "cursor": {
          "ref": "fb027f08-9f61-417b-adfa-6b1ddf945439",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5a0e37a9-be4d-4a69-9cf0-e34559766e1d"
        },
        "item": {
          "id": "13af1f29-55fb-4811-96d2-d86e30016a6a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1b48006-e1e2-4072-bd53-ca7c694b35cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca17ce94-7e2b-4dbe-9718-08885121f279",
        "cursor": {
          "ref": "2206e3b4-e6d5-406b-ac44-7768dc44b63f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "10fe8a4f-88f6-460d-b7e1-45ad9f4ec5bc"
        },
        "item": {
          "id": "ca17ce94-7e2b-4dbe-9718-08885121f279",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69831da6-7f26-480c-90e8-53181c73bec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f30e7ce-c24c-4a54-9249-0618bbdd72b8",
        "cursor": {
          "ref": "e9aad8f4-0163-4f86-9ce1-b8f1c20242cf",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55622d6b-e4ee-46ed-95a0-47b9a8487e89"
        },
        "item": {
          "id": "7f30e7ce-c24c-4a54-9249-0618bbdd72b8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bc760cd9-b8f4-4a8e-949d-d8e54a9f28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6370bc-425e-439e-a3fc-6fba233684a3",
        "cursor": {
          "ref": "71e06edc-e7f7-448b-8d77-56bf9449e32c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d53daa45-dde0-4c0f-aaf3-c1344855413d"
        },
        "item": {
          "id": "6f6370bc-425e-439e-a3fc-6fba233684a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "465023fb-f3a6-4376-89c8-b1fe1d0b7fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5a24de-2657-4e2e-90ef-c3574dfa604b",
        "cursor": {
          "ref": "b7bdb8bd-6249-4c3d-a0fb-c3caf838971e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95fc9f13-c45d-4fad-80bd-08e809d5ab6c"
        },
        "item": {
          "id": "5f5a24de-2657-4e2e-90ef-c3574dfa604b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f8fd4939-4e97-40cc-a2bb-b13318e25c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b940a9f-ac05-4961-8efb-757e5a0fc698",
        "cursor": {
          "ref": "8b9c11e0-ddad-4a95-994c-f01995ec559a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cca58c6a-0300-4557-aea3-8b701cd970d8"
        },
        "item": {
          "id": "5b940a9f-ac05-4961-8efb-757e5a0fc698",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8eb899c9-32f1-40ac-b0f1-fb1c48a36446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c194165c-ff2d-4927-bc7f-117479aca183",
        "cursor": {
          "ref": "06fdb4bf-ae0d-4d74-9f69-905969a863e3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80bdd97c-5608-45a5-9ad3-5098463cd42e"
        },
        "item": {
          "id": "c194165c-ff2d-4927-bc7f-117479aca183",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ff69703-9731-4173-997b-46cff9ae99d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6973d804-48cf-4bd5-89ba-1490f4710781",
        "cursor": {
          "ref": "cba00ba0-ee48-4ff2-a223-804efa7379a4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7677a32a-8bf1-40ba-be3d-7432bd90d642"
        },
        "item": {
          "id": "6973d804-48cf-4bd5-89ba-1490f4710781",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5520f752-3dda-4bbd-9676-e5d689ad3f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738ae444-1794-40d9-9251-228875c7e2f7",
        "cursor": {
          "ref": "2f405efd-1697-4687-9169-c78a631ce70d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "580edede-9f91-43f9-9fa6-b16cb892fa39"
        },
        "item": {
          "id": "738ae444-1794-40d9-9251-228875c7e2f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9aac6eb4-f2b0-44cf-85fc-2793035fff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f23be4-cf43-4a99-916e-bf24498acb0d",
        "cursor": {
          "ref": "819cfde8-8486-42da-8087-2ee74025b9ba",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "93e570f6-3810-4689-a933-8d10b1a18d42"
        },
        "item": {
          "id": "21f23be4-cf43-4a99-916e-bf24498acb0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59f50291-4ad1-4104-a0a1-e9424d2773e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c45f31-f46d-4c43-b652-c9536a3b0e9a",
        "cursor": {
          "ref": "6a5b4b90-2f75-43a8-baa7-dc08c8696866",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7ada6825-0e46-4ad6-b4a3-228867f17fba"
        },
        "item": {
          "id": "d8c45f31-f46d-4c43-b652-c9536a3b0e9a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0605a81a-b6f0-4481-83c1-4b02ff7ee301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10937dd9-72b4-4970-b3a0-5098eaa6a8b6",
        "cursor": {
          "ref": "b7ebeb2f-97cf-466f-9718-3acbfa8520c1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "377b4177-f352-4ba0-9993-c30f918f3b4e"
        },
        "item": {
          "id": "10937dd9-72b4-4970-b3a0-5098eaa6a8b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ede0c8b-9af1-4713-99db-68d3625b9ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d257c1b-050d-4a01-95a9-e3c558e000fd",
        "cursor": {
          "ref": "c1d4211e-f6e8-49d4-8315-9232b8e5cb62",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a0aa0163-5935-4204-8201-627fa84ac9ec"
        },
        "item": {
          "id": "7d257c1b-050d-4a01-95a9-e3c558e000fd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "738d3dad-e590-4e6c-8488-9bdca8747ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96704da2-8348-4fff-8bfc-9d18ddbcd777",
        "cursor": {
          "ref": "9e8362a9-a223-4539-845a-52d6acdb950d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cfb6458b-d3e9-4d0a-9665-2eb9fe448525"
        },
        "item": {
          "id": "96704da2-8348-4fff-8bfc-9d18ddbcd777",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cfb15f1d-f106-4122-bfc3-a1e4e82edc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6556ee-f43a-4a7e-8193-3378c196dfbf",
        "cursor": {
          "ref": "803b9bc3-580b-4bd9-9ad7-28a8c24c9fba",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de21c74b-4e41-4a54-99e7-d7cb5da06150"
        },
        "item": {
          "id": "ce6556ee-f43a-4a7e-8193-3378c196dfbf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ac80ea1-d3ba-4018-86f2-79ab2088c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7877bf5-9755-4be0-b2f7-3ec6cfdd4916",
        "cursor": {
          "ref": "539bff81-9b3d-42a8-b301-3cce4dd97bec",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8f0ee982-b38c-4167-8429-5fe60b4d100f"
        },
        "item": {
          "id": "e7877bf5-9755-4be0-b2f7-3ec6cfdd4916",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "78262c4c-ff0a-457f-a6f4-1de2e15eb35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827d7603-8fe7-406f-8cdc-13f0fb30c74c",
        "cursor": {
          "ref": "3db43208-f786-4e0f-8253-4a4e05eb5f00",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "26ccb357-e92a-4ee3-9992-691810906cbb"
        },
        "item": {
          "id": "827d7603-8fe7-406f-8cdc-13f0fb30c74c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6854c02-3180-49eb-9b19-b5a0c03dd96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d053f87-3902-4dc0-b806-250342cb022c",
        "cursor": {
          "ref": "bee612e4-6c20-444c-a6e2-60b5095c5870",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9f9be3bf-de71-49fa-9dc1-40126155867b"
        },
        "item": {
          "id": "0d053f87-3902-4dc0-b806-250342cb022c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "13dcec19-227d-4d40-bfb6-7a64498d684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b6175-48de-4d2e-9054-62729d06e0b7",
        "cursor": {
          "ref": "d9ceedf8-c9e0-45cd-9faa-66d82348b4fa",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "92937c24-18cb-4d23-b726-b9aef1275e0e"
        },
        "item": {
          "id": "4d7b6175-48de-4d2e-9054-62729d06e0b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec3b3614-9146-44af-8e12-5ed3b92172c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a69946-db0e-44f9-9abf-dc7e390e8b54",
        "cursor": {
          "ref": "007b9421-cbe6-473d-af93-2bd6368ca3c7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bd43271e-c6d2-4c65-af7d-4b622ad3b9a8"
        },
        "item": {
          "id": "28a69946-db0e-44f9-9abf-dc7e390e8b54",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b856fc2f-1760-4f94-98b9-3e427ab31805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e92b1f2-5c61-4493-a884-7b31e9a2f8dd",
        "cursor": {
          "ref": "b3dfa011-f756-4a02-89be-ba1f0ef41ecc",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "45620bb0-3c03-49b1-903b-30cb39b2e98e"
        },
        "item": {
          "id": "9e92b1f2-5c61-4493-a884-7b31e9a2f8dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5ce9f91c-a2bd-4fd5-9025-687401015b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aade5f80-2589-4431-9fbb-9f4d213fb082",
        "cursor": {
          "ref": "9d43eaa8-c91c-4cdf-ad61-c202f833d383",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a3b8796a-adce-4090-9230-0f4abc3ad7ad"
        },
        "item": {
          "id": "aade5f80-2589-4431-9fbb-9f4d213fb082",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "373f47e9-fc59-451f-b820-2f4dcb86d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22698e95-7e12-4450-b558-f2758404e8d9",
        "cursor": {
          "ref": "00da4317-4d37-4f1f-8bb3-09a1319be965",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "20b69fad-46e0-4f57-9819-c75d5ad7f1a3"
        },
        "item": {
          "id": "22698e95-7e12-4450-b558-f2758404e8d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a47bd495-06c7-4b15-a9ca-3202f832b0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c0bbad-5a73-4d22-8f76-182d77069991",
        "cursor": {
          "ref": "42dd8a83-6ccf-4375-9fff-2baaea645fa5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "28f95f8e-8505-4d06-941d-b498ad467fe2"
        },
        "item": {
          "id": "c1c0bbad-5a73-4d22-8f76-182d77069991",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b801f7d5-471c-4593-b52c-1fc4782ddcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8425680-8228-460d-9103-a63e5f9641c4",
        "cursor": {
          "ref": "6339a4ef-da23-457d-84de-f8505fba50f4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2720aa67-070f-4000-89e3-cf10dc7adc0f"
        },
        "item": {
          "id": "f8425680-8228-460d-9103-a63e5f9641c4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4cd311b-45ee-438c-89a6-62bcbad52b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faafb7a7-9065-4afe-98bf-ed2b9fb842ad",
        "cursor": {
          "ref": "38dac723-3708-4a0a-a7cb-a993e8da04ab",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7fe8356a-12f8-45b0-9535-5f45e8e73698"
        },
        "item": {
          "id": "faafb7a7-9065-4afe-98bf-ed2b9fb842ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54038430-c7fa-4f29-9f3a-c0357ee8759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d241274e-b65f-4e10-a0dd-106dc9c5059f",
        "cursor": {
          "ref": "3fe09a16-f28c-4c5e-b2b0-54cfbc4b3889",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c93250f4-418e-4d28-ae72-765c532be8e7"
        },
        "item": {
          "id": "d241274e-b65f-4e10-a0dd-106dc9c5059f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "09125872-e40b-46df-9da8-12f65ba3b40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1eeb0e-91c3-46ce-97e1-fc330d451841",
        "cursor": {
          "ref": "28b3980c-68ba-4a7d-9b07-e5a9848774be",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5bdf63e-9cf7-4cc4-a7b5-dbae1537d526"
        },
        "item": {
          "id": "cb1eeb0e-91c3-46ce-97e1-fc330d451841",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7f075414-fc66-4a5d-8abe-8c39a32ee366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e27432-cf01-44c7-9007-51f00e3a546b",
        "cursor": {
          "ref": "a7464755-9566-4b79-be11-bc291dbf38bf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d4bdde1a-a5a0-47a1-a63a-67af8f0fd639"
        },
        "item": {
          "id": "55e27432-cf01-44c7-9007-51f00e3a546b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2f160d9e-d545-4617-ba1b-dfb137fe9577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf4897-f8ab-4baf-9123-e23733c095bf",
        "cursor": {
          "ref": "d5481495-846f-49bb-b1b3-533bc3278b1a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "14689c08-6119-43d9-a587-c53cb660d96e"
        },
        "item": {
          "id": "90cf4897-f8ab-4baf-9123-e23733c095bf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8732ed87-c382-43f6-bec0-962a67e8e327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aabe29f-e3e9-4a3e-a2e0-e637979b18b4",
        "cursor": {
          "ref": "cb37b4c2-c33f-425f-b589-49f28e71e60f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a0cce2ec-cc00-4e7a-9611-2805c7f16cb8"
        },
        "item": {
          "id": "9aabe29f-e3e9-4a3e-a2e0-e637979b18b4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b57f47a0-a337-4da5-b78b-325fb50c9405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657f12a2-a2a6-461b-84aa-21299be3771b",
        "cursor": {
          "ref": "9cc6c813-654f-4469-a7d8-c33b2595f47d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5f02bb47-bb2c-4ef7-916a-0d2faec452bf"
        },
        "item": {
          "id": "657f12a2-a2a6-461b-84aa-21299be3771b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6af6ebb-d6d9-4187-a241-b7bdf1325957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d212cebc-ff0b-4146-9941-f6da01fc9043",
        "cursor": {
          "ref": "cfd9dfe2-70cd-40d8-92ec-c7b7673c34d1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "91230353-1440-4b0d-8d91-b3cc15d031eb"
        },
        "item": {
          "id": "d212cebc-ff0b-4146-9941-f6da01fc9043",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6430afca-cd15-49fb-a3a5-6f03eb4a00a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7e67d8-7afc-4ecd-b7d4-c8e271f36dc3",
        "cursor": {
          "ref": "5141244b-92d9-4800-aca5-bc77ec957707",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c3bd35ee-1a66-4c87-8ed2-85f1252adcbd"
        },
        "item": {
          "id": "cf7e67d8-7afc-4ecd-b7d4-c8e271f36dc3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7433d3ce-ee7e-4ced-aa31-303d199eaba2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a245c6f-3824-451d-9c2f-562c53dd5891",
        "cursor": {
          "ref": "a954126a-8d3c-4988-b074-bc492965bc5c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a84adb98-753c-4b6a-a138-ca0182d331ff"
        },
        "item": {
          "id": "4a245c6f-3824-451d-9c2f-562c53dd5891",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d78db49d-2cb5-4bc9-9554-0bad18681690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3effe7ae-c357-4c40-ae3c-7818d7ab2d06",
        "cursor": {
          "ref": "2b4a5c0c-353f-4863-aa1d-a80f53e3eec0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "87d603ae-1712-45bb-8092-6dda67d3ca33"
        },
        "item": {
          "id": "3effe7ae-c357-4c40-ae3c-7818d7ab2d06",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a4bfbb69-c509-416c-86d2-ebb216b0f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855acc66-66c9-4de3-9239-e122e86daeec",
        "cursor": {
          "ref": "9bc252bd-6e2d-41ae-9c93-85c26017b02a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a0ecf650-a119-4cca-ae83-4d29f15da74f"
        },
        "item": {
          "id": "855acc66-66c9-4de3-9239-e122e86daeec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c9209746-969d-47b4-887e-a675882d0d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1935678-9824-45f2-a75a-97d3c79ddf7c",
        "cursor": {
          "ref": "f781a5b6-636e-4fc1-9fa0-9b1088dd64d1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b1d983e0-76ef-431a-a061-5cea14b55202"
        },
        "item": {
          "id": "a1935678-9824-45f2-a75a-97d3c79ddf7c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48f95ec5-8272-430a-bd3a-d3fdce322be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19acaf29-c987-4b31-888f-db1ae97254c7",
        "cursor": {
          "ref": "5e63d197-e90a-44e4-97bc-c070d667e0b1",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aacaf682-f398-4cf6-9276-7b741e8a989a"
        },
        "item": {
          "id": "19acaf29-c987-4b31-888f-db1ae97254c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "53a852f7-9361-496c-b9f6-3ddc82822bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb438dc-6cf4-4336-aa9c-12cd564359ac",
        "cursor": {
          "ref": "8d976319-ff04-4980-861c-7ec042595416",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "484f4ece-4d5b-439d-bf05-1d1bcc7de244"
        },
        "item": {
          "id": "7cb438dc-6cf4-4336-aa9c-12cd564359ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6b6bda6f-8a90-4e71-b08e-afd44c5b4838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb725c7-8b31-475b-bf11-d18aa95c29b8",
        "cursor": {
          "ref": "b4afba66-2ac9-4c61-b8e3-cf5a383b569a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc427cbc-c332-419e-8c65-950c1bde4e04"
        },
        "item": {
          "id": "7fb725c7-8b31-475b-bf11-d18aa95c29b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7e699fda-a664-4627-b99c-284f174c5ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801bbfb9-2a23-45e6-b447-54f37eecf9dd",
        "cursor": {
          "ref": "e8e51278-80fa-40fd-8a0d-2a02456185d1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "49020d51-ca3d-4438-817c-4cda02ad9921"
        },
        "item": {
          "id": "801bbfb9-2a23-45e6-b447-54f37eecf9dd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c31cfcd3-96f2-4e94-b290-309d32264690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7d5673-2744-499c-8d36-76d826c0572d",
        "cursor": {
          "ref": "2dce1f72-9d54-45db-930e-9e49e97a2387",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "731d7238-2d26-4322-b4b8-fa380cbba114"
        },
        "item": {
          "id": "ac7d5673-2744-499c-8d36-76d826c0572d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4f6fd6bd-c412-48e8-9c75-f5b91e48e801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a829ab86-2c85-4ee1-8708-6965f94e77a4",
        "cursor": {
          "ref": "04d20481-221a-4847-bf06-9ca528284c23",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5ae3a234-79c6-406f-b92d-946c6594b4fd"
        },
        "item": {
          "id": "a829ab86-2c85-4ee1-8708-6965f94e77a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b585c666-ab5a-4ada-a4aa-a3bec53779ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ce58de-dc27-4853-9c95-c6d8168a8ac8",
        "cursor": {
          "ref": "095a80c9-cc18-4bb2-a0a5-43742cb05087",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f34af5f1-0dde-445a-89f8-33589d9c3e6f"
        },
        "item": {
          "id": "77ce58de-dc27-4853-9c95-c6d8168a8ac8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "17f3475b-06a9-4d92-b942-734823bb6288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137bbaa-5e22-49d2-9665-cdcf898116eb",
        "cursor": {
          "ref": "76df7862-3448-476c-ac43-a8fc97df5204",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a24afa6-1fc9-44bb-b1bf-fe51d695ba31"
        },
        "item": {
          "id": "b137bbaa-5e22-49d2-9665-cdcf898116eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c61e79c9-6b8b-4c02-965c-99d5d7d8dce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1315c59e-586d-411d-bb95-c78ec9b5fd4c",
        "cursor": {
          "ref": "6f995925-7136-47c7-97d7-36daeb82ac64",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f992f155-2508-4605-96e7-dd0923bfab28"
        },
        "item": {
          "id": "1315c59e-586d-411d-bb95-c78ec9b5fd4c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2abc704d-b0bb-4498-999f-cec5cfde3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5255c2-9f12-46ea-b8b8-459085398b3c",
        "cursor": {
          "ref": "46e6bcd9-1e7b-4486-8164-a48aab9bbdb4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3d86594f-bf81-4778-9885-41db991583b5"
        },
        "item": {
          "id": "ac5255c2-9f12-46ea-b8b8-459085398b3c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c0e27fd1-4e4a-4585-8521-84d98ec48378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382d328-0fb5-46b0-bf85-44f3e9d4ccd4",
        "cursor": {
          "ref": "a05fe5d9-07c6-4e0e-9fd8-9ed9913cbc9b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0c3b0ba0-7e55-4dbe-b270-4d98667b3cfe"
        },
        "item": {
          "id": "c382d328-0fb5-46b0-bf85-44f3e9d4ccd4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2cc4b7c0-e1de-4063-846b-06790bf71109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c458c21-b86a-4bd3-850d-3fc92d83410a",
        "cursor": {
          "ref": "d4f58154-f6ec-4ae5-bde3-40614b0c6e75",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffe978e0-8234-4de0-a405-5c9ee0163aab"
        },
        "item": {
          "id": "1c458c21-b86a-4bd3-850d-3fc92d83410a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ce18799f-30da-4c53-9b78-e88bd117c4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40851017-1777-4ea5-80a7-6ecc80b7bc9a",
        "cursor": {
          "ref": "8aa07d13-66b4-4172-985d-28c1429cf630",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b1a27197-0685-4184-8ad2-463150d18d26"
        },
        "item": {
          "id": "40851017-1777-4ea5-80a7-6ecc80b7bc9a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "65b2de1b-9f74-49fc-8598-7706b4c2db62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a564711e-9dd8-4e72-a9bc-3efa9e13d2b6",
        "cursor": {
          "ref": "cfb0da70-7de8-4d70-a0aa-1a45831610f3",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "63cd97b0-ea69-4fe3-a28a-1d15e653c719"
        },
        "item": {
          "id": "a564711e-9dd8-4e72-a9bc-3efa9e13d2b6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cd4ba132-052d-447e-bee7-6e3734040956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecae3f0-5f2f-485e-a274-015022bd6c51",
        "cursor": {
          "ref": "ac5bf60c-9951-4fb9-8308-6a03568cb58c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "683f167f-d09d-4111-8574-66c05b02b50f"
        },
        "item": {
          "id": "3ecae3f0-5f2f-485e-a274-015022bd6c51",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3975c183-0094-4300-8456-a0394b2a4f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd686c4-7d29-4619-a606-ea29f1b2d5e3",
        "cursor": {
          "ref": "d6745a4d-517a-48dc-b6db-c73f48ef3ae0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb54d619-60ed-47ab-8fdd-cc2d74a9e75f"
        },
        "item": {
          "id": "bbd686c4-7d29-4619-a606-ea29f1b2d5e3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8824cc67-f8e4-470f-86ab-bc55f93dceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ac21f9-e1fb-40e3-b3b1-522b981aa253",
        "cursor": {
          "ref": "d692e3fa-9b7d-432c-a65d-834961c6717d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "794d3866-1ea1-4f32-9689-4c5773a59e6e"
        },
        "item": {
          "id": "86ac21f9-e1fb-40e3-b3b1-522b981aa253",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c610cdd-2a0f-4213-a67f-1df46278c4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b7e0a6-b5cf-47a6-9e4e-4ab6eeeafd0a",
        "cursor": {
          "ref": "e8b8be94-a6d1-403f-b078-fa0e0123c63d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "83a10406-f3bb-4eff-9320-5193baa68c2e"
        },
        "item": {
          "id": "e7b7e0a6-b5cf-47a6-9e4e-4ab6eeeafd0a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a17140ea-3589-4873-923c-c5d3b804d519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7908496f-08f0-44e1-b9a6-d410f1c36470",
        "cursor": {
          "ref": "155375e3-89c3-44a3-af21-5f21781014f7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d649bb42-f7a4-4b05-abca-c990e98bbe4c"
        },
        "item": {
          "id": "7908496f-08f0-44e1-b9a6-d410f1c36470",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "662ac5c6-897a-48fb-9cc2-e8391e87d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f5428c-2e1a-4ae2-828b-809892d424c9",
        "cursor": {
          "ref": "46eed9a0-a128-4275-8962-629f69617db0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ce29ef60-aff6-475f-b9b2-0cf5075dbdca"
        },
        "item": {
          "id": "48f5428c-2e1a-4ae2-828b-809892d424c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cfd8dd6b-1f59-451e-aa0f-eddb1fefa661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7465bce-df94-4caa-9d98-a2482c69186d",
        "cursor": {
          "ref": "152db89d-0e92-4b63-93e8-1cd81a415d5c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5230cd0f-de50-4f79-89c9-94ec78515faf"
        },
        "item": {
          "id": "f7465bce-df94-4caa-9d98-a2482c69186d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c0773dcd-bace-479c-9486-9367563b47db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b19801-5ac3-4774-b7f9-7e0ad4c781cc",
        "cursor": {
          "ref": "9f79c74d-2f12-4d3d-ad75-073fb08a8ac2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3e3660b5-baa9-4e1f-8c96-8ed6719f058e"
        },
        "item": {
          "id": "d9b19801-5ac3-4774-b7f9-7e0ad4c781cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2db5b4a9-e980-4aa9-915a-9894cc42a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578acdc1-8340-4263-987a-10376c1039eb",
        "cursor": {
          "ref": "b618435f-0ffb-45b7-97cb-0bd3c150f11c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8f8f6eef-7e68-48ef-85d7-a96e6c3d9c2a"
        },
        "item": {
          "id": "578acdc1-8340-4263-987a-10376c1039eb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba39dd6d-aaaf-4f3f-9b86-7a850ec08d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769f7c0f-fa4e-4ac1-ba34-4e0f5de244aa",
        "cursor": {
          "ref": "cf2bd32c-33c1-45e1-862f-ae71be902de7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7212cb95-43de-4ed7-8c2a-7d6471b267a9"
        },
        "item": {
          "id": "769f7c0f-fa4e-4ac1-ba34-4e0f5de244aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8568f71f-189e-4919-b6a4-a0a0ddff34c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8324a5fb-998d-408a-8a6d-6008c2a61536",
        "cursor": {
          "ref": "87741d08-91f8-494c-b634-e65b18a0b8a6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fcc5f0fe-d8f9-4145-b234-90be0e4aaf4f"
        },
        "item": {
          "id": "8324a5fb-998d-408a-8a6d-6008c2a61536",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "03ed0c1e-b403-4285-85de-9c6a1431648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f9ec3b-addc-48e1-b0aa-f8e7ee8a7660",
        "cursor": {
          "ref": "21df85d0-dcfc-46df-9da0-1d104539c500",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e37a9de-7bbf-46cb-a0e6-2e8d20bde84d"
        },
        "item": {
          "id": "e7f9ec3b-addc-48e1-b0aa-f8e7ee8a7660",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a91724e5-bb38-4078-a328-7e1b1e9f92f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be28a32b-c239-435a-b3a7-3a434420bf21",
        "cursor": {
          "ref": "a304af68-fb38-4761-9995-64fd44449ae9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "88f8a68a-11ae-4d88-8192-2888f2d03b1d"
        },
        "item": {
          "id": "be28a32b-c239-435a-b3a7-3a434420bf21",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d5da5d7e-0c91-4cca-ad7a-170186c9d74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f598ff4-0909-458e-8048-16f444202199",
        "cursor": {
          "ref": "8a7e4a5c-ef26-4260-ab38-409e4278c960",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c7014435-4696-4752-958a-9bc9c8c67eb5"
        },
        "item": {
          "id": "4f598ff4-0909-458e-8048-16f444202199",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "670ca7dc-e2f1-42c1-b82e-42c7587e8599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490e55f9-df7d-4cf5-8d10-a5a783f33f55",
        "cursor": {
          "ref": "c7a1b06b-a343-401e-8e19-4bd33768f128",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "43a9a99e-34a3-467e-ad50-42a2af1b4f71"
        },
        "item": {
          "id": "490e55f9-df7d-4cf5-8d10-a5a783f33f55",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "99ea12c9-74e5-4874-a780-8cbe185d02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043ddfb6-4af3-43dc-953d-2a7d43db9c82",
        "cursor": {
          "ref": "698412e5-edfa-448f-b320-bd0494e29a2a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a27332e0-4f41-4921-8ced-5517d496e28e"
        },
        "item": {
          "id": "043ddfb6-4af3-43dc-953d-2a7d43db9c82",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "694f02d1-142c-466c-b051-64743c741323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1545532c-4d9f-4eb5-9cce-502163c964b5",
        "cursor": {
          "ref": "afa56a89-e601-4cc9-9a37-6240d61432d4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "090e812e-18bd-4af4-81e8-e0ca30d11fbf"
        },
        "item": {
          "id": "1545532c-4d9f-4eb5-9cce-502163c964b5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1f435eb0-e10d-4b77-85f9-91a319d1067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01e76f7-ec0f-4bb3-8f70-49296c421c1a",
        "cursor": {
          "ref": "0d221f14-5aba-4f03-9b6b-35b553bc3361",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e76e7a12-19b2-4ec6-836c-cbc60d2b2662"
        },
        "item": {
          "id": "c01e76f7-ec0f-4bb3-8f70-49296c421c1a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fa2778a5-f295-4244-a6a5-2703c569245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61c99e-377a-441f-9c50-ba26782a06cb",
        "cursor": {
          "ref": "6471803d-dff2-4eca-a5e3-7ca9773cc2e8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ae43b46-80f0-4440-9d5d-78e20957f81c"
        },
        "item": {
          "id": "0c61c99e-377a-441f-9c50-ba26782a06cb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4c08c218-31e2-4114-b2d4-986db4c8965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299054ea-d392-48a8-8e78-61c69d394494",
        "cursor": {
          "ref": "6ea4d750-3189-46a3-a7c1-1576d54b475d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd75d43c-bc3a-4c05-a0af-a10e23c00245"
        },
        "item": {
          "id": "299054ea-d392-48a8-8e78-61c69d394494",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7589b162-f435-4632-bf3b-a125d7d20599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d61555-23a1-49f7-923a-a03270a59f7b",
        "cursor": {
          "ref": "c3ec89b2-9dea-48e7-a8a2-19bfef5ab4ce",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ceddec49-0f16-4193-83d5-725ef29275fb"
        },
        "item": {
          "id": "31d61555-23a1-49f7-923a-a03270a59f7b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "99e25931-2c30-48bd-8170-14280efaacb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf6e3e5-f2e4-4b35-b439-aa361ba586ff",
        "cursor": {
          "ref": "f184a557-1ac3-40ad-b367-7bbae1ce0993",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7d360094-4773-4baa-8b0d-321ad6f4efad"
        },
        "item": {
          "id": "adf6e3e5-f2e4-4b35-b439-aa361ba586ff",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f55ceb8e-d444-40f3-82df-cb20bf38d3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5193ac-ab70-4749-9149-1e0781702676",
        "cursor": {
          "ref": "e20b0023-fe67-4b5b-a875-90ef8765944e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "027f1ad4-dc77-439e-a03a-877fbbf616c0"
        },
        "item": {
          "id": "3c5193ac-ab70-4749-9149-1e0781702676",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eb23f435-baf7-4083-bc60-32ac90aaf9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c1c634-d31e-4d5a-b8f3-ad140591d39a",
        "cursor": {
          "ref": "28a903d5-59cd-48be-82c7-b00775bbb956",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b8da9cd0-1e51-4ab9-973a-2814ed366616"
        },
        "item": {
          "id": "04c1c634-d31e-4d5a-b8f3-ad140591d39a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d83b5e23-c9d8-4ba4-bc17-d2373fe17fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25283c1-12d2-40d7-96c3-58b660c67cd8",
        "cursor": {
          "ref": "b4fc4753-6ddb-4ef6-b3a3-93c4f1e9378f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cd8a28c2-b842-4704-8654-828f9a2d59b1"
        },
        "item": {
          "id": "c25283c1-12d2-40d7-96c3-58b660c67cd8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "612fdea5-9f2e-4f64-abb6-24bd30e5c65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90a86b8-91a1-4ef6-a342-3d3e7739ed16",
        "cursor": {
          "ref": "1f5da869-1388-4ab6-8d8e-d85692f8d0fc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c82db0f-3562-411b-8438-4faeefa0bdab"
        },
        "item": {
          "id": "d90a86b8-91a1-4ef6-a342-3d3e7739ed16",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "79b48ac2-45c2-4339-8789-4632925468e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d3b99-c69e-438f-86a7-bf06d0ba6f92",
        "cursor": {
          "ref": "eabba997-02a5-4a1e-a38d-134c51d99653",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "067d80c3-825c-4ef8-aefc-02e05edf7281"
        },
        "item": {
          "id": "b40d3b99-c69e-438f-86a7-bf06d0ba6f92",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cf078285-adba-47c3-a1b1-b46f4b0e60c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc95b0-650d-491b-be82-1c7ef0a0a1b4",
        "cursor": {
          "ref": "0628a671-3d21-408e-b539-13ecf1beb6b8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "00ceb606-d0f9-4c66-b809-f9b2ab1de0cb"
        },
        "item": {
          "id": "89cc95b0-650d-491b-be82-1c7ef0a0a1b4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fd0efea0-bea1-4b53-a60a-4b0c896f0b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060acb1a-3e32-46cb-8434-bf63818be0c8",
        "cursor": {
          "ref": "d27bbccb-504d-4734-bb56-e60eaa377a6b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03dda564-7ecc-43ed-82d6-b750906eb4c1"
        },
        "item": {
          "id": "060acb1a-3e32-46cb-8434-bf63818be0c8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f6845b27-734b-424c-b119-1ea192b1db73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3566bd2-fc55-47af-8f56-debf8f43340b",
        "cursor": {
          "ref": "8fe8762a-2d09-4e2e-b841-0a0e6b186df4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "79006a96-e760-40f3-a651-68621e9fe285"
        },
        "item": {
          "id": "e3566bd2-fc55-47af-8f56-debf8f43340b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "08c24a87-cee9-40a4-ac23-faddb1539338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8960e705-a607-4d12-8cd2-04f9b089e194",
        "cursor": {
          "ref": "40756d88-54b5-4450-84b0-9a25ecd1a54e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9063851e-2a0c-44fc-82d9-5fb87b0c071f"
        },
        "item": {
          "id": "8960e705-a607-4d12-8cd2-04f9b089e194",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8fd9e8ed-3d51-4d3f-aa11-287df56b17d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c16fe1-4d03-438e-8dd3-cca22889b0ac",
        "cursor": {
          "ref": "5d723915-818b-4516-9f24-bc6c0390fc83",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf9ab78c-a225-4cd6-b350-55025f1bf2c9"
        },
        "item": {
          "id": "77c16fe1-4d03-438e-8dd3-cca22889b0ac",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6893ca94-751a-438c-9aca-43b1af25c65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dd66db-5d99-4177-99c7-1e79669932da",
        "cursor": {
          "ref": "98fbc265-cba2-49ed-a311-bb4239a47b66",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3a1939d0-9f8f-410e-856e-7dd34cdf5bbd"
        },
        "item": {
          "id": "48dd66db-5d99-4177-99c7-1e79669932da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dbd4a939-d56e-435c-b717-9be93be8be73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff65c99-285f-4748-bda1-e5d0b6835573",
        "cursor": {
          "ref": "43bc58d6-4633-45ba-8635-cbbe414d7e5d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7682b2b-6154-4f6a-ad25-9e16daa3de06"
        },
        "item": {
          "id": "dff65c99-285f-4748-bda1-e5d0b6835573",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ed5453e9-80b6-4480-a0a5-eeb52c862784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0761eb7-3aa7-409e-8092-f99de1398ef8",
        "cursor": {
          "ref": "2af61f3f-e2b6-4d9a-9521-8161b1d72515",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "543ccf45-4290-46f9-a609-114159590ae1"
        },
        "item": {
          "id": "c0761eb7-3aa7-409e-8092-f99de1398ef8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9a86c6e8-45ab-4f07-8fee-145c491b7869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a80d4-c756-460d-95d8-d5876ea077b4",
        "cursor": {
          "ref": "dbc8ff03-c053-4adc-98da-01927dd627ec",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5cb920cc-edf7-400c-b595-9338e0e6f7ec"
        },
        "item": {
          "id": "864a80d4-c756-460d-95d8-d5876ea077b4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "be33b963-42b8-4988-98b3-637c1cfa4951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e7f901-e102-4802-9c95-87a7bb3d1f7a",
        "cursor": {
          "ref": "12b0cb8b-1385-415f-b0db-55224ebe02bf",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a9ca9971-8f00-466b-9d18-5d8012900678"
        },
        "item": {
          "id": "03e7f901-e102-4802-9c95-87a7bb3d1f7a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c9a8333-6577-4018-a761-6ee0bacf7b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd79d5-8e8c-4658-a2fb-252cbf357e30",
        "cursor": {
          "ref": "85aba35f-a2d2-45ac-8236-eadae1061841",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "884d40a5-868e-4d2b-8e1e-665e25273535"
        },
        "item": {
          "id": "69bd79d5-8e8c-4658-a2fb-252cbf357e30",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f9ced048-97ba-4055-a834-bc7a385498e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4dc14d-7012-423c-8273-1001277eed79",
        "cursor": {
          "ref": "d94e4bd5-c031-4ef3-863b-eeb0ac45ec2a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7de6a7cc-af36-4b5c-bd1e-97917e7a2639"
        },
        "item": {
          "id": "7c4dc14d-7012-423c-8273-1001277eed79",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7cb498e1-9822-44a6-82bf-1688c1627f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fc5f7e-c050-4f38-b63f-59bf50073ff7",
        "cursor": {
          "ref": "ab3595d1-2336-457e-8e17-10a1291f8f7e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4c899ae9-fb0c-43fb-bfbb-a45f519bdc82"
        },
        "item": {
          "id": "d3fc5f7e-c050-4f38-b63f-59bf50073ff7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "76d608f9-2ec0-4ce5-a6a6-be1a8462b542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aad4051-b7a0-40cc-bb0d-d5ac10103aed",
        "cursor": {
          "ref": "377a8d42-d157-46e3-85d6-b3239879b62d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "91e3f179-8432-4f2a-896a-25dbe24ee291"
        },
        "item": {
          "id": "8aad4051-b7a0-40cc-bb0d-d5ac10103aed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c3071bc5-59fa-459e-8d08-b522e19464e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfa4125-4e7f-4d04-9ad9-8474827f87d4",
        "cursor": {
          "ref": "5bf4a7b9-e2d9-4a0c-afdf-c04711d134fb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a156d6b4-c8fd-4700-93a0-40dc8b340aa6"
        },
        "item": {
          "id": "0cfa4125-4e7f-4d04-9ad9-8474827f87d4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fa3336c3-f3ac-419e-8377-9cb7b162ab78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9687b1a-824f-4d81-95c0-e9a65cc3601e",
        "cursor": {
          "ref": "c3b0d3b3-c02e-4186-beab-b10938ac568c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c518d591-2504-4c65-b909-9c368b62ff81"
        },
        "item": {
          "id": "d9687b1a-824f-4d81-95c0-e9a65cc3601e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "37bcac7a-749b-46b9-a086-7a5ba2ed90e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e193d016-50ed-4550-9fd1-c3c7c7705750",
        "cursor": {
          "ref": "076e229b-12f6-4aa6-b0e8-18ff795ba6a6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7b1e15f0-745c-410c-96fd-442346bf8155"
        },
        "item": {
          "id": "e193d016-50ed-4550-9fd1-c3c7c7705750",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fa98c5aa-b454-4266-bc4b-fb3ceeabe80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab8919-16d0-4f0d-a93f-42ee5805495b",
        "cursor": {
          "ref": "6726feea-63f6-4286-b77e-65eabd4b9baa",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "51ea600d-d3c3-4f27-ad42-c7dd38c5698a"
        },
        "item": {
          "id": "68ab8919-16d0-4f0d-a93f-42ee5805495b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09bb9ab3-9575-41a0-8d89-0e3c47cae8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9015ef-2471-4251-92eb-5c8119f0c960",
        "cursor": {
          "ref": "932c1135-c6af-45f5-9e60-53e97ff848ba",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f7dca51-36e4-4687-af76-146cc868c942"
        },
        "item": {
          "id": "3d9015ef-2471-4251-92eb-5c8119f0c960",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "37cd754e-7ba0-4850-b937-b34c65f08ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ce47a-ff90-4a16-a603-490a124ffc68",
        "cursor": {
          "ref": "65085638-5fcd-45fe-8123-21a9b9a00351",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cd49b1e3-7f3a-4fa7-8fbc-b242a6f4b100"
        },
        "item": {
          "id": "a82ce47a-ff90-4a16-a603-490a124ffc68",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "69cb6278-895f-4616-baed-df19b4fc214d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90105c89-c2d4-4fd0-9d1e-130423054c58",
        "cursor": {
          "ref": "624d8e64-65c6-4560-872c-39c339a655fa",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d9f9c957-0673-4d96-b574-4f8a90a15982"
        },
        "item": {
          "id": "90105c89-c2d4-4fd0-9d1e-130423054c58",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "11969fdb-dab9-4d73-9e39-8e7f8e746de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176d4885-6ab9-490c-b2e1-85097efb38b9",
        "cursor": {
          "ref": "96ffb688-9226-4a84-bcad-09f3d2210adf",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e7f80de0-e667-44f8-a549-bd5ec6f89d21"
        },
        "item": {
          "id": "176d4885-6ab9-490c-b2e1-85097efb38b9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cdd533c4-00bb-4833-a133-d00cc6b0eb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954033c8-1bce-4cbc-911e-c3dec49a2319",
        "cursor": {
          "ref": "89caac12-05ec-4b61-ac00-4b5de2e2c75a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2114e74b-6719-46fc-8b17-dd0db824fd22"
        },
        "item": {
          "id": "954033c8-1bce-4cbc-911e-c3dec49a2319",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c61f8d9b-bffb-4b6b-bfc8-e2b0f5110499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f86c0e-022c-4bb2-870d-183204fa761e",
        "cursor": {
          "ref": "704cd8c8-1a6f-491c-9946-e6c559501d41",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "32f155a7-7089-40e5-95ce-53a7444962f8"
        },
        "item": {
          "id": "17f86c0e-022c-4bb2-870d-183204fa761e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "56db948c-0a03-4dc3-8afe-9b7ce396502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b2ca38-f380-4f26-aace-9d666dcb6f17",
        "cursor": {
          "ref": "433aa848-0c76-4702-bfb7-87a89625ef38",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2d56b719-7ac0-4986-9404-0629870d0b79"
        },
        "item": {
          "id": "d1b2ca38-f380-4f26-aace-9d666dcb6f17",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a595d1f1-6893-468b-aa74-abfd8ce5e0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e744a83-cce7-46c1-a391-4e37b1710c9a",
        "cursor": {
          "ref": "3c97ad9d-85f0-48bf-ae3f-89f9183c9b9a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6d18cc5-fdfb-4b2f-97e4-3f1bc81c5fe2"
        },
        "item": {
          "id": "7e744a83-cce7-46c1-a391-4e37b1710c9a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ffd6157e-3a4b-4d1a-a44e-8bb4168e1c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4babf-a7c4-46a0-b8a8-c6b07b1417f2",
        "cursor": {
          "ref": "554be07d-1be3-4cf3-9c7f-17050d7669ef",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ef663d6-71f8-4319-8f53-df044c466de3"
        },
        "item": {
          "id": "b0f4babf-a7c4-46a0-b8a8-c6b07b1417f2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ba6d2f7d-791a-40b8-9418-69c6aacb904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fea6f0-fd05-4ccf-b39b-318b96122153",
        "cursor": {
          "ref": "dc82f295-12c2-490d-8233-3fa43b10c936",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0f66204e-bf65-4aa9-b86c-858b28496b89"
        },
        "item": {
          "id": "36fea6f0-fd05-4ccf-b39b-318b96122153",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "efb2000b-1566-47f1-ac82-afe735d578f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc731f7a-3645-4bc0-9f1b-17e7028a6c76",
        "cursor": {
          "ref": "ddcc3649-81d7-41c4-8496-68cd3171ce4c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8449c412-c86d-41c4-8dbf-e2953af09610"
        },
        "item": {
          "id": "fc731f7a-3645-4bc0-9f1b-17e7028a6c76",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9e58b864-7c62-4c2a-8a51-18db60f03f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e6158c-a32c-486b-9c1a-801c107c1944",
        "cursor": {
          "ref": "df805097-14a1-44dc-8b1e-9bb2ff5a0d10",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ec02af9d-a08d-4022-9125-312237b7f99b"
        },
        "item": {
          "id": "f8e6158c-a32c-486b-9c1a-801c107c1944",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e7022c15-b8e4-4584-a03d-01a2cedfca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919674f4-85a6-4c0c-a04a-65511d6b7a58",
        "cursor": {
          "ref": "8a147269-d956-43ba-bea2-962799c48ab9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "34f136e5-fdef-4707-b131-96e3aad807bb"
        },
        "item": {
          "id": "919674f4-85a6-4c0c-a04a-65511d6b7a58",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "56743f5b-6761-4a0a-9c07-cdf8d7314671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b50f01-b73b-41ee-abfb-57b6cb5c69de",
        "cursor": {
          "ref": "c70ffce2-dcce-4ae6-8f39-62b9f2247771",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1ca01a24-5f96-43f4-bcff-0c30426c282a"
        },
        "item": {
          "id": "49b50f01-b73b-41ee-abfb-57b6cb5c69de",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5fac3950-5cc2-4902-86ba-1d67509bb060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358bee1-3993-4763-8ede-f62de93feee9",
        "cursor": {
          "ref": "3c764852-d4b5-45a1-a8d8-f36ac6386434",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b5f7e52e-d802-4022-869b-c6afbacfc73a"
        },
        "item": {
          "id": "b358bee1-3993-4763-8ede-f62de93feee9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ebb12921-44ab-4b14-bebe-32bd0a49a136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7d5a70-a4b3-4080-8c5d-d20b881bdbce",
        "cursor": {
          "ref": "25ba9886-f145-41c1-80c4-d68f3c94ce53",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc74e3ea-b3d9-4f22-9c24-17e8d1d5cae0"
        },
        "item": {
          "id": "4d7d5a70-a4b3-4080-8c5d-d20b881bdbce",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e77799e4-330a-4c8f-86e1-36776c42a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa20b6-3265-48bd-8cb4-5d2c2d7e4205",
        "cursor": {
          "ref": "07700f19-51de-4be2-8552-81ef9d4bbcae",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5b6ce718-1b39-40a8-9cfd-c1e13ab0eba5"
        },
        "item": {
          "id": "b8aa20b6-3265-48bd-8cb4-5d2c2d7e4205",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d9b335ca-fd31-4721-815d-b0a3c6753fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d31801-b9b9-4bb1-a625-7edda7d68de9",
        "cursor": {
          "ref": "7d4dfe3e-1e9f-4e0d-a71f-095ab098a1b6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "257b140b-7a67-49e7-86c3-196fc706202c"
        },
        "item": {
          "id": "78d31801-b9b9-4bb1-a625-7edda7d68de9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b49c6041-b756-40cd-8b0f-04dc9422764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab65112-2372-4d20-afec-c64f742dd338",
        "cursor": {
          "ref": "56730166-86f3-4761-9fed-081185608870",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be4ff593-17b3-48fd-a020-fdc8b73dc761"
        },
        "item": {
          "id": "2ab65112-2372-4d20-afec-c64f742dd338",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "652a9792-40a2-4411-8e39-52560d68785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83569a35-fbb4-4602-ba06-896d0d054305",
        "cursor": {
          "ref": "3c69b5ea-f391-4f7b-93ca-37f3d30d17a6",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c321161d-b6df-440c-a21f-32c9f67c040e"
        },
        "item": {
          "id": "83569a35-fbb4-4602-ba06-896d0d054305",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "74febee6-8426-4d6b-9432-35da887adc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ef615e-cfa5-4602-bd7b-a2760f3a51d4",
        "cursor": {
          "ref": "206884b2-3454-48e5-8fd6-c1b21a5fc84a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "15d91ea2-caf6-4553-8da1-aab94de2be36"
        },
        "item": {
          "id": "a3ef615e-cfa5-4602-bd7b-a2760f3a51d4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b692810-35bb-4282-85c1-3130984df9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efaf130-e0e4-48c9-86e9-cd27e37a1da7",
        "cursor": {
          "ref": "b9bb315e-5f9b-433d-ae1c-bed7d44c0d5d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6884eed3-d74e-4d9e-9a81-57c6d8b433f6"
        },
        "item": {
          "id": "2efaf130-e0e4-48c9-86e9-cd27e37a1da7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "42db63bd-f2c9-4e3d-9bd7-85642421c033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065fd2fc-d6b1-4881-9ffc-f3e3b6d94828",
        "cursor": {
          "ref": "94e6ef33-d6a9-477b-adb4-d3425ab18270",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "48ed8497-35b3-4e34-9aec-d59da05fa516"
        },
        "item": {
          "id": "065fd2fc-d6b1-4881-9ffc-f3e3b6d94828",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "02737e35-dbd2-4321-a75f-5b29a72f03db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf4282e-ed7c-4ea5-ab69-322c914b404f",
        "cursor": {
          "ref": "5b3d6ab0-8d68-49ee-b33c-ed0f242c2f11",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c01797e1-e4a0-4684-b366-933925917d11"
        },
        "item": {
          "id": "7cf4282e-ed7c-4ea5-ab69-322c914b404f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6105eda7-4892-4f2b-a992-502acff21af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4218694b-38d3-40f3-98c8-f02a74f5d78a",
        "cursor": {
          "ref": "b71a492b-d65d-4773-9d62-fe5f1f09b144",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c992fee2-5092-453d-8b8b-358e95fdf053"
        },
        "item": {
          "id": "4218694b-38d3-40f3-98c8-f02a74f5d78a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0b0a0cf6-87da-4691-916e-fc4d105b4fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de74e635-2dae-4a65-9d2d-25c794c36221",
        "cursor": {
          "ref": "f02b44ce-518c-4e09-939e-4a7c9d77bde8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "37080e3a-276d-4181-abe4-0626e32219ca"
        },
        "item": {
          "id": "de74e635-2dae-4a65-9d2d-25c794c36221",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ee8063a-19dd-46c6-a76e-128377d63499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf1275f-3c4e-4acd-a55e-0399d303fbf9",
        "cursor": {
          "ref": "17feef42-ef52-465c-ab4b-7e721e01491c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2707fc2c-0e73-4bdc-8dd3-d55f5447951e"
        },
        "item": {
          "id": "caf1275f-3c4e-4acd-a55e-0399d303fbf9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42b8d472-733f-488c-ab7f-e9cf8f5fd2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989ad8a-cafb-4a02-871e-e046350a8824",
        "cursor": {
          "ref": "c76a38e1-0eba-4de0-a98b-946eaea3c762",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "72c0e0e3-7a03-449b-99ee-f39b84b18adb"
        },
        "item": {
          "id": "6989ad8a-cafb-4a02-871e-e046350a8824",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "137c8bce-0e66-495a-ba2d-215123cd3a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c09148-3eb3-4d70-a95a-aedc2eb7027a",
        "cursor": {
          "ref": "7473438b-3463-439f-86af-5fe78790c948",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54b757a9-7aa5-40d2-8530-dfd7538f2320"
        },
        "item": {
          "id": "a3c09148-3eb3-4d70-a95a-aedc2eb7027a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "20491dc5-01fd-45de-8261-7c718b7c7cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2603c4c0-6638-4eee-b659-b2884f51e850",
        "cursor": {
          "ref": "25592720-687b-453e-9b1c-ba97593d6055",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c221e2ab-1f27-4053-923d-74f42904e624"
        },
        "item": {
          "id": "2603c4c0-6638-4eee-b659-b2884f51e850",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5b88edd-e4fd-4a07-ad3c-cecf5c1eed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d571f16d-d5f2-4347-8e9c-fb607fe94592",
        "cursor": {
          "ref": "c8583267-efc7-4f57-b3aa-7fcd4f983e45",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2e953ad4-3471-4707-b40b-7bcbcdae41b5"
        },
        "item": {
          "id": "d571f16d-d5f2-4347-8e9c-fb607fe94592",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "929b52c8-30fa-48fe-b283-09591929cc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21258490-5442-438d-9a9e-3dfab511aa7f",
        "cursor": {
          "ref": "ec97cfea-bc8d-48cc-9a45-ba90e52c3770",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9e81fd26-5517-4522-98a4-f0c01cba2ed7"
        },
        "item": {
          "id": "21258490-5442-438d-9a9e-3dfab511aa7f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ac3f268-b476-461b-977a-e673244673ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46637c0-d44a-4419-90f8-66bcab8c8388",
        "cursor": {
          "ref": "6494e8dc-2da0-4755-934d-0c834c114c2f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "62ed3c7c-02ac-45e2-8b52-0fee9afa6a7a"
        },
        "item": {
          "id": "e46637c0-d44a-4419-90f8-66bcab8c8388",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f403e048-d8ef-4589-a34f-1b19be458f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68af77f2-737c-4a9e-b337-98c03c9fd88a",
        "cursor": {
          "ref": "13fe92a9-56bf-4a77-a83a-70475339abc9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5c5672a2-d7e6-4d14-9f4b-8ce12a5ace11"
        },
        "item": {
          "id": "68af77f2-737c-4a9e-b337-98c03c9fd88a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eb1d59bc-b2ec-43aa-a329-b3795909c263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ae033e-a3f5-473c-b326-d566adc28281",
        "cursor": {
          "ref": "a5a62bdd-65fa-476a-9952-9894e9fc9feb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b11903da-ed71-49a6-85f9-1eba22b9ae69"
        },
        "item": {
          "id": "29ae033e-a3f5-473c-b326-d566adc28281",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "84acdd2b-f21b-4e92-8446-c914563a1569",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b146d7-5a21-4d2f-af10-6f07aad5e4a4",
        "cursor": {
          "ref": "5a1fa65a-c5b5-4ac6-a303-fc4dd1fea041",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f035fe9e-c762-465f-8b0e-2cce259c12b2"
        },
        "item": {
          "id": "86b146d7-5a21-4d2f-af10-6f07aad5e4a4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "57daec37-6022-40c3-9b18-25a73ab5c301",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c293ee75-e5ea-4e8b-b5ba-ebb9fe5839a7",
        "cursor": {
          "ref": "d16208f7-7a36-4bdd-b5fc-310d2631b25b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f198e504-5d4a-4d86-a46c-62d006094e37"
        },
        "item": {
          "id": "c293ee75-e5ea-4e8b-b5ba-ebb9fe5839a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3d0bba4-f2ba-4863-8bef-a50c15dc85d6",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c069ce4-5a4b-41a4-a1f5-4334323357a9",
        "cursor": {
          "ref": "1a46cc34-c776-4788-9984-3b9d1e5daa11",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "860e366a-a86e-4886-91c3-77830bc071cd"
        },
        "item": {
          "id": "9c069ce4-5a4b-41a4-a1f5-4334323357a9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7f4ab798-4c46-4582-a5d9-325dbd4bdf21",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dc2a8d-e9d9-4c0e-bd1c-26e19a74930f",
        "cursor": {
          "ref": "276f8699-1840-485e-968e-07b95b9be323",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c134551-f862-426d-9c7b-82b110cd14dd"
        },
        "item": {
          "id": "f0dc2a8d-e9d9-4c0e-bd1c-26e19a74930f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00bdca6d-439c-4fd2-8565-fa02824d0bf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dc2a8d-e9d9-4c0e-bd1c-26e19a74930f",
        "cursor": {
          "ref": "276f8699-1840-485e-968e-07b95b9be323",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c134551-f862-426d-9c7b-82b110cd14dd"
        },
        "item": {
          "id": "f0dc2a8d-e9d9-4c0e-bd1c-26e19a74930f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00bdca6d-439c-4fd2-8565-fa02824d0bf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d2a09-a339-4399-89db-63e0e2e90f77",
        "cursor": {
          "ref": "28f6db9b-bd1b-4782-852a-9eebd0d84fd1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d213b915-4107-4c74-9d91-917699dfb943"
        },
        "item": {
          "id": "849d2a09-a339-4399-89db-63e0e2e90f77",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "edfca48f-b972-4df1-948c-29aacc207583",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c9c343-5ea0-498e-b503-f46fda81961d",
        "cursor": {
          "ref": "d3bbeb64-7f0e-49d0-90e8-6081f9c7e412",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ac195fb8-bb66-4953-9611-573d89cfa8a4"
        },
        "item": {
          "id": "d6c9c343-5ea0-498e-b503-f46fda81961d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b2d4125e-5636-44a8-88db-929edba19886",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}