{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8868adb2-84e3-4177-8768-59f3978a8a8f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87b5fea2-116a-424a-aec1-83ece4d3783a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebaba619-135d-4937-a1ab-522a7412f873",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9a69de9-f96f-4e46-a13d-8f75a3785f80"
                }
              }
            ]
          },
          {
            "id": "7dcfb846-91aa-429e-b60a-85aa37ee2a18",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d47e066-1ac4-4bf5-8991-6c6d9fb2e32e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21de05c2-6c57-4439-bf85-45e24fa3c89e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c13de55a-585c-4a16-bb93-bfff34f350ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "794c8cee-b64a-40c1-8ae6-0abe89ec6ba8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d0167f1-bf65-4e06-b8a6-d571b3d5f8d9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9050b889-fcab-4293-a828-217bcb374fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c234dc4-a829-4209-8711-30f764d13d8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6cf81e4-8e1c-4cb5-a45d-ce4fc0d047e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3541c909-ce60-4fe5-8437-2bca655fd7f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c285e09-e278-473b-8ea8-367062fff72f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab6f1356-7418-45dc-8504-4fc82d648cc4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8b14e81-e99e-4f1c-b9f4-ad44b8311c1d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3970326e-0ec6-4df9-b407-835602d85412"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de25d680-6217-4613-ade9-cb85f76cdeb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44a81a37-08e1-4f02-a914-877779ba820d"
            }
          }
        ]
      },
      {
        "id": "c451bf39-bcf5-43cd-b734-f7e5c6a12380",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f627d998-0cbb-4a21-a5a2-66c763ca27cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aed5bea-7d62-4dec-ac38-1cc4e11de56a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "637ae326-bf78-4847-8238-91fd22596dc0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafe7df-35c7-4541-ad04-7bfc4ee58abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32ad400e-b918-4adb-82e4-971b73e3bc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69350f-ab8b-45ea-8772-fb27ca673680",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63011536-3e60-47b9-aa84-3088b64f61c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44b9e425-ffa7-43f5-941c-6ef92e0757a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ba7b94-76e6-4928-947f-ef8479d66954",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6306d-48fa-42d1-b646-da20b3d9829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5494755-c816-48b9-bca0-f8aaa83b9744"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d24e8149-28ce-4d6d-9fac-fd7011c0497f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "879ea049-8eb7-4866-a4e6-5bb8e792db65",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143d37c-3f6e-457a-b92b-38c854c565bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "600d065d-7496-461a-8da6-a90d8977474a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14588bb-66e6-4ccb-bd7f-7af2602c03ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d59364d-7992-4695-9b35-cd8964572d5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ece64f9b-e6c6-4e0f-ba63-d8a5fbac39d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efa1a099-a6fa-4758-9637-e07913f4804f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f645929-328e-443a-9821-6aec73710c01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23288845-41fc-4f01-9b8d-5b0511a94c81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc74c107-01d0-4429-b675-15aa03d8adf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f380a1dc-3bcf-49db-b5fe-9d6c7f830a43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae64a8c0-0a9d-47c1-9c6b-bd5256503f10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b606552-7921-4440-b567-bd610a26fa3d"
            }
          }
        ]
      },
      {
        "id": "217cff0c-9c15-483e-bccb-e925baf9ef52",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "582d5fec-8ef0-4950-bf96-b1c1d1465e08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e485f43-c630-4e13-8de7-2fdaa9b50a27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1bd01bef-a9bc-4fd4-b60d-44071b152e58",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edc3c3d-e924-4c46-8eea-5828eb4e0a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faede903-e34c-41ca-92bd-9bedab307def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9534e703-b60a-47a7-a9c0-fa6384a4193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d92dc43b-5a27-4623-ac98-9453d7fa0ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c443de8-691b-4d60-9e1d-0281adec8466",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883865dc-cb0a-4c82-ae4c-1ada6f96b986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd955129-02c3-4816-9775-7c7e9dad582c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553538bd-5d5b-4b1b-93f8-75690d6e1070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58c67c8b-9933-44d2-b9bb-c549c38e1355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84573088-06b9-4a18-b725-eb76581a01e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae55bb-f89f-4f26-840c-a0f9ad25bc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f76be1d-dc11-45eb-88de-8c672acad869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69c9aee-09f6-4e6e-a2aa-d18b87a96591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e08c6bd-57ab-4d90-97b5-614589626627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c023def-d8a7-496f-a74e-388daeae3246",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9184566b-b4f9-4a81-b25a-5db7171e32a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4893a16e-4cba-4676-9ea0-2a1d3ef81de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c9310c-6cbe-4f94-b01e-a692c09d35c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ae05f4-8a49-4d44-8711-95564fdceba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf57e600-7055-4c49-8e15-0a8196a9a2ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aec54f-3122-47d1-bd77-a962a11f2055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a72b208-279e-4643-962f-9deed8818df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880513e9-a706-4b51-b36a-2773d1bffe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca254764-ed05-46b3-8281-1a85825a279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dcd3b8-6d38-4630-b4b6-74b3b4b8839e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d932f1e-64d7-44e7-83b3-5f74f1691c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a35693-6924-463b-b87a-29cf173b69f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13db8fe9-4532-4bd9-9e60-ba3c45a19e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d1066d-64bc-42b2-a201-9590aebde1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3072f842-3b9e-411e-878d-d2d8319abe68",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737f120d-e846-4b83-9d85-4eb09c6cb2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42e64bc-d440-4b30-9cab-4b188971182c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f518fc4f-140e-4e3e-a54c-2ed54eacdbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef1a251-0576-4632-b869-587a6e3aa347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165b6ab5-1cf9-48cb-8414-a6557fcce682",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e53dee-9fe1-43dd-9fa6-77ebbd57bbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cc6d21-0ca8-4556-a51f-a083e17be188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5604d85c-897e-42b0-a24f-ff10967cfb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ec4def1-6f25-4204-a765-6de6af238970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ec515c-3c1d-4f45-8be0-c4d8897ed436",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3763b6eb-1b0e-478a-a522-9a3a317cdb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12a14ea-7148-4e32-81ec-9ab95e1937fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fda659-c691-4e44-9b99-f733108ca82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ba7d310-65c4-46fe-8598-e7ad69452c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3803c0-54ff-4a84-999d-c67ec00bd869",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa05a07-b43a-4335-b60c-309a55bc93ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aec493-d65e-4673-be74-6807bab83515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23adc3b-7fb9-42a8-b570-dd46727184ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68c16322-4c5a-4c03-b04e-98c0ec885f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce84a98-554c-47a9-bd03-ae52dc5a46f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd48232c-272b-4449-a6a5-f82d7d19667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4c28bb-5db1-47ad-8313-b41383ce69d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4290dd8-6292-4266-bdb6-2eae8d474669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d9ce4d6-4573-4b5b-83f5-0286b0fe889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d840c5-fb31-4dcd-87d6-5dbbbf0a4786",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07951fb1-7eed-4f62-aa7e-835d1fa76a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a18f04c-4f9e-456e-8508-0e6b583eed6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b24df1-4267-48b7-8b34-a6bd41d9f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6bea003-de0f-4b1a-978c-5815dba5d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883f0bf-e55a-4250-a741-e3d19ec969be",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5f4938-e351-4f48-a1d8-2239319dfc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0141613-4410-4771-be47-8d71a263da8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b9b9d-e974-4ccc-b94e-dddf0f228b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a504e2f7-ae4d-423a-abd6-102a795cec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bb6e98-a1e8-4bb7-8fb6-2b653c01adbe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6f6306-24ae-4e5a-8647-e455af8ec67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e74af5-7854-4436-910b-2380a4169393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09daca8a-d6df-41a8-88a1-93f82d45484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff5e2a1a-4aab-4416-86dc-3722a43ae013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fed42c-5713-4070-b700-2ca64d97686e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df4353-08e1-4a80-9413-3935706ee8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9afe557-edaf-4895-b6ee-14fb9048eaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47a07d8-579c-408f-9c25-a394b4814ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47d2e0fe-a2fa-4544-8f82-60a03daf47fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd915e9-2528-4533-9edd-fbcb66e868b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0f66bd-1256-4e4f-9160-c31ea6f595a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070f67d1-c63f-446c-9701-28f57afde63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7188ef-f8a0-458c-a370-473b1e64b701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c5b8529-a015-49ec-adba-fce30a45d6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5296b63-a448-4ca1-83ed-c4a43ec9a663",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b0a6d1-81a0-4198-aa45-5a0778739094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eb1e75-52e8-43fc-a133-1f75e763630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420329af-2200-4876-bbcd-83a07df11072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46627423-f66e-4b7c-ba94-4bd5366841d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd46ba1a-b20b-4265-bb7f-31496053a112",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c69be-3ec8-4b49-a569-8d0d82f94af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb409a4-7b80-4a73-9c9c-ccc47e3bed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d09f752-e026-4980-b135-56590dd6b792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e24cc83-bf5d-4ff8-a372-14b3a1506769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64946fac-6844-47c2-acf6-3cadc1b65e10",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32ea439-db7b-4ee2-8990-770abdb7baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cca683e-9e56-4417-8646-82d32f2213e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7df547-71d5-4cb1-b337-1b9f77c136f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc28186-091b-48a1-a8ba-1582be11c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1584b6fa-4541-41c4-adcd-118326849021",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c952cfa0-074d-4e86-b015-552dcdda7a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a144115-15d5-4906-bab5-bda1d37f6df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c408f6a-6ce4-4242-80e2-0e132f10d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4a9c7b-874e-4277-8dd4-4de4ef476770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656d794b-29bb-4559-963f-6fe2fecacb77",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2680e6bb-f931-4c95-8744-61a7bde70b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f51d22-624b-4a61-9e3d-ae311e0bf346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6957e9f-25bf-4aab-a165-270bdbe8368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4d6513-a684-404c-b27e-aee39cb46da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e0893d-e3ae-42b3-9f9a-cd72415e9d50",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0795b22-0456-495b-9a27-d385b03cf4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd7c4e2-0e07-4afe-bc5c-3f44bf3d2069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d2a2c-5b16-4c14-8a36-c85fd714e2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57df8f6d-3030-4650-a35e-f84754a9e99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa84ebf9-a95b-440f-b504-32dd7f518c77",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541cc2aa-eb5b-40f4-8db7-cb0b24ca0db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b69a079-2e73-4070-a950-db636c6e4d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bcb3f7-ba8b-44b6-a3ab-0094f2a10058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6da9500b-6ecc-4ec2-a33e-e1aea1e4313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f534ca27-eab0-4aef-81ef-aec4e2d983fc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dbb57f-9a3b-4dfc-b812-625c81cdc195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adef0ba-49ef-4690-ac91-1028e33f4e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df24b745-83e5-4e7d-80fd-df8e0e5235bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad62f740-e15c-4e60-85a1-b7ccb82f0135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a13a36a-575b-47a9-9a73-63b9d6238759",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd0b397-cee3-4af8-a9c3-9959f92d2e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4bbbb-4454-49a8-8330-a0c28cbdb8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49fbec-d0d4-440a-82cd-30863f1dc277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79679d4e-39ab-43c9-80e0-9cf7489a267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50189194-cae9-4bae-a656-5d160bc0e233",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ea73c3-4d9d-4d14-9429-5294a7197c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1432e2e8-863f-43c0-9d14-0057e36b4d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512f2b74-388f-447b-88aa-79ce4cdc30fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70aa7d91-784c-45c5-bd05-ab10017617d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a20b34-f7b7-45cd-a849-46706acc06a9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa341c9-b581-4d31-960e-264ab46e5ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bac0f9-68bf-445d-9b7e-059d7a895c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5db9e55-ad8c-4dc5-87c3-99bf29eb4bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d112d02-fac7-4f0b-b193-b70ad308db8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed61c2d-ee10-4509-9c48-cbd17164c31b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b19351-ba43-4266-ace5-5964bb5229a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640ad3da-0a3d-4d0c-b40f-a186651fdd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d596c7-250f-47cf-9af1-1d367ce1026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2a740e-e287-4cc1-b921-f79ac8ae3f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f49c82-7193-4de7-9d2c-1801db990676",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b76e667-7d14-4ab5-9169-4719b386284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66caf8b7-e646-4f06-8dea-ac4ae80ff8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daa64a9-e887-43cb-a33d-65d5e5db819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a605867-bae0-4515-a673-319fd3c33233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825af6c8-1ee0-4324-9ead-c1afd5672687",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939351ba-af76-4314-a949-e91985844d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4e048f-911d-4f2a-84e4-20e6181801f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935205c4-25fc-4f1b-af2d-0c453f6f18d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0e4d4f-af04-446c-877d-6f67fc202f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c977870c-b7a1-4278-8388-9bf59bee0ecc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9e3275-99c4-47a8-9300-4c2a28bb9b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e720b8-f061-4074-afd6-46377646a09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068660f4-a8a1-4bf2-bcfd-15a794fbcf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95af50ed-8805-4190-8852-6a9f9bce4975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfa6dfa-ec83-42c6-8ce0-bf3afa51752e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0eddcc-7814-49c1-be33-81f5966c4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbff1f8-8cb5-4c77-ab5e-574b86752149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed1a61-316d-479a-878c-eccedb18d6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf332da-3233-4500-af47-8495c658dc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4b56b-2361-4ac8-ad17-590412a531c3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3431f2a-08a3-4803-a180-7b40b05574f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18011a29-919f-41b5-8020-e7c58769802b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaa81ad-1a4c-4273-a29d-2a85944dcdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69bb033-4417-4a36-9254-19b2b977e81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e71677-0adb-454b-817c-2b4afcea1d32",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a7e6b-07af-4570-84e6-5cd123fbb9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc88a47-c4b2-49e0-919b-0831db710153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a364bbd5-b167-47ca-90e4-ed75109bcfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "034fd4c7-7595-48df-bc54-b374ee168edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7303701-dae0-4ea5-b78c-cc90f9a18ed5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510270ec-b3fa-4cfb-8142-0862b5631138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b5e0fe-c252-4fbb-a27a-1eb323783272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10381595-1575-4498-ad9a-1227535b870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "28122072-c804-4772-98b5-1edffd3c0dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5705cbd-396c-49a6-b7c6-047a13d112a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa9db06-5c97-473b-a3a2-b1053de36764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d336a56-5e1a-44e5-b105-97a2895f38cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80414c9-a124-45ba-bc2c-48735f7c8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0b1f79-4512-43a4-9dd3-8c926d257c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa19d43-d764-4392-a9ad-bd06b5bf75ee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19846629-5ec4-434e-b0d3-f01188810bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357fb7c5-7af2-440e-bd82-91664b1a3659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d270e45-95b8-4a1f-ade6-7b23e86d4b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61961503-2612-4a1e-beb3-8bbafc232fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a30e78-6c17-4fb6-983a-6ee01422ec5c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963e9988-ca6c-45b0-937b-663073f9891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f689681c-7b94-4c5e-9db0-8d767f9a5b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd751cf-8237-4d10-8fe8-8f7cde7db03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7466f74-2133-4332-a83e-b1e5b9bdb14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bc064b-6836-4d4c-a52b-b0163deb6115",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73fdf3-35fc-4181-b100-8d684d36fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8db4ad0-dffd-4e8b-9151-fbe32bb60140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941830a4-4283-4e0e-80b6-47f4e87ecac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60e66617-2171-47a2-8ead-bba433b3eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbe4d11-aced-4e1a-a0a1-8037b505bb05",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a5db80-244d-4d8d-886f-8580dcdb0428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e39e57a-3bcc-46cb-b8ec-76d017e1ec39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51235268-b9b6-4cb3-8331-e392dc7a8f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "227674f5-2b5e-4257-bd25-c4940d121a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75449878-c516-4456-8109-7dd8efea66c3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342be0ac-13f3-414a-b3da-d1663db8de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8464c8d-c474-400a-91d5-f6f3b0d493f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37d27e3-cd65-4c28-9b5e-f18c9870fd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04fcc04-4e05-4384-82e4-70da4890f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9872f4-02b6-4437-bf3a-375f0b5a2ccb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651a10b9-a7cb-4f01-bc70-89148a014bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90671d79-cb59-4483-8b89-6b4191a5f74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b712ea2-6214-49bc-ae12-ae3ea1d2963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03da9144-da73-4e41-90c0-896c10c1f249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc6eac2-7946-4243-b2f0-b94e94e3c547",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe999b3b-c5ff-484a-b5c2-05a4268209e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23144c5a-09b5-475f-a487-49774d7ba7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d05a21-7f87-43c7-9dc6-9f361be9d480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f63564d-1492-4c5f-9ff0-d07e294a5aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9c0ff-0661-4f66-b7d7-965f4000297b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55cb460-bc42-4646-8291-2eafa68fbe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd804a9b-0a4a-401a-916e-cc7640f18990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814323df-893f-4a4c-9c64-be5bcf943b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3646f4-ae6f-43e2-94b4-21ff75fa533e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ac9003-0268-417d-a006-5e7d6a0ebeed",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22836004-f8e8-444c-9f85-7d3e77982ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545f2978-2e57-49da-8277-0d907c78e758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8895f2-b4ff-4040-9f2b-2ffeb34174c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36eb46b-2f01-4e54-a854-9297c29d807e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b361417-9479-4284-b83d-b1ce1615fa4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60adacf-14eb-4c6d-a095-e6b22c6a30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc017ca-84f7-430c-b757-2193639d8b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3077dfa-4b7b-48b4-af45-73e50e25600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98eeab98-4625-435e-83fb-1e120f11539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87b08b2-bbe5-4542-8b84-486a246ccfec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34c5648-e12b-47b4-9b17-7a8b29c0ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f95528-ec0b-4df5-a1da-09f684cb3337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b65ab3-b863-4cfe-ae1e-7f3c7c415208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adcefc6d-7c9e-44b6-8143-26c83f97eebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb409bd9-a2cb-4c84-9bdf-68e63aad42f1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c1c660-27f9-4fc0-8a94-f13738514ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a864ef4-b82c-4ed6-abd0-b14ea775f259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9028be21-1f5b-4ed9-8ffb-65686ead1947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fd78aa-cd14-4074-81ef-951b016118ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72de8cdb-1140-4696-9ed2-0ef97b137002",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745374c9-1147-46d4-a5cb-61f6b30dd2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd7858-af87-4613-852c-4a436e3cbac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a395d2-0215-4a5e-bc82-9c81a31fe817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "614d6e3c-e79d-42db-9fec-17b11df026d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c534e-1fad-4ec0-af65-a44b960134fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3ef4d9-2f5b-4bec-a941-4e58645f7fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b254a87-9145-49be-bf11-41a735884ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4c99b-d742-419a-aa65-60a6cbe8be6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2d23b9-6c1a-4255-b76e-52424ece2728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29b1bc4-1270-4bd9-916b-0445d6938a45",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e39a39-7bdf-40b1-a7fc-c1d90c8ebace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbc0e77-3ff3-450e-9dce-44ab0ed660e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d92bad-5cfa-461a-ab3c-111b7e64b973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "938ff0e0-8e33-4d9a-bf2b-8b06f772160b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84cffe9-6320-4799-a961-66197a96e47d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51f382f-8a13-442c-9e40-2d177a60ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb8df58-19af-4410-9eff-18f04da775df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6de0b23-3506-4d45-a08a-b753d5a7caab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef89e85b-754a-4ed8-bd5c-506482397416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398f253b-b54a-4364-a618-43f5580258d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8b0118-9d0f-400b-9b34-22737e3d03c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2800606-d726-4e84-a99d-0fbdbef1fc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4643d6b-469b-4209-8fc5-21266694f5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4cf2f9-d4be-426c-9d0b-7430334f6e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469ce240-cdb6-4998-8f46-12d4ea78610b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5b7725-b9c5-45bb-aac8-33679bd4c75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb093ab-6ecc-4fce-8dbc-0ba4833d11e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3771a2-b708-4b16-8ff6-3ed62738eb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d645b437-248d-46ca-86bb-c0b5ba3660b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1867ca21-f1fa-40cc-b06d-39a894cf681c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda31b26-0ddc-4cf5-b152-e33bd4ef704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5189bbda-a1d4-40e6-82a8-762f31bcb984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25dd064-1d16-43e5-880e-f1b61e99997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a3dfd2-c282-4a9b-aef4-dba4f8d2ef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c8d89-67d2-4dc1-bcec-c8810676cf44",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ee9f7e-5704-42e7-8846-d46bb24a0896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d83494e-7afd-4062-9b56-dabd5414a00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f550cf-389f-4eed-88ea-4dba401290b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "af67ec90-604e-481c-8aaa-c22415d2a683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d76e31-6c23-49b4-8f63-b12e8901688f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141a3d63-2db9-42c4-aa91-18795ea31877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282eb86d-895a-4e04-9949-177413454f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f0b231-3177-4000-a102-c7a54cec157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8199ae88-7784-459a-bb27-2bd5b27294e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40306ec2-3a9b-45bc-9208-79738696a644",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55121c9-9dd0-492a-b9ac-de6a5a557d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fbe079-6de4-46f5-ba8d-b3843430886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26078664-0402-40d7-966d-4c5e8817e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d3b804-5ea9-42e4-998d-893ce76bf591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcf7ed0-f836-4414-be1a-67b58121d5a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c935af6-a42f-4a31-9d81-2ec0d40f3227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a260a1-2257-4aa0-988f-1ffe40520bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3707bae6-0d14-4184-91b9-4b9229bf1839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8347a136-b47c-47f0-aa88-502c62db6216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4168112c-4be3-4697-8e00-4b1dda499e5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e27dd-c1c7-4ce7-9b84-9b049928bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b74f70-cd46-4639-b56f-4da31dff51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3dde7f-7357-4064-b5c9-54397cbcd46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f68a0c55-2e30-415a-b5aa-9b55e6abdf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe126a51-874c-4d7e-a7d2-908093007f5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04184490-4f73-4506-9410-8642d9e5a958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a7119b-f718-4573-8868-1eec60d749c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39072dd1-3ee7-4cef-9142-4d4ec3d14a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c6aded-a654-4119-9b53-61c58d2444cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b326c06-b933-48df-9d17-67ff6100cd6d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20619c8-cb35-4a2b-8838-d87c203ca2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72787b6-19b4-4e1d-8c42-d6c17d45e670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b928e9c-7470-45c6-9517-00d8311e9d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "982257e7-2fa2-4116-9386-7d730943cfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bf4df3-5bbf-4f22-ac78-089324326a2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b409fc5-f2c3-4a10-8d72-96cd2b6a6f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b26671e-b370-4193-b4bf-8788c1c829c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f351dcf-2fdf-4886-a669-9f705ae2e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e6aa07-71db-43ca-9ae8-cc9338734a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada2e5b4-2a3d-4842-9587-945f9904e772",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15857114-a450-4fee-b483-679d3f777f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d4f699-4677-490f-a043-cb3e4aaaa209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068a07cb-9a42-4121-a229-ee743d1b8004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6db7e9a-6e72-4d2e-bee2-e5e7a52ceef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbee884a-5777-40fc-af4d-163e3f44d231",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65e5b4a-cfe9-49d4-a47d-708fdca68336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1202e96-064a-4d5b-9f02-5c341ac4f256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b1aba5-ffa6-425d-93c9-cac543ec5591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ba0287-0152-4b8f-8527-b8b1634021bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bd0f43-3e95-404a-8c0f-15b787545346",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58769895-20e4-4b06-ba2d-7005862d4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ace4cc-586c-4a7f-953f-ab7abe19ae68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5476d9b2-404c-4230-93f8-b088bfc06046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a90d51f-d3ec-4c95-ba90-294750f3df3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09acae-0ece-4135-8ab7-9274a12fe0d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69fce4e-d1ec-41dc-a49d-70c03c4ca78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b13865-b737-422b-b217-2ce386505184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4292b77-6dcb-47e2-8497-c71dbfe27d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46e45408-1d26-4807-a758-de97cbd04ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f78f03-11d5-4911-9116-3883d02e299f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b71cd-2a7a-44ab-a497-a3e17de6aac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1b8f33-2d2d-421b-87ac-9e07139b1f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0517615f-1226-4550-9651-2802d15bdd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "89088e1b-1f1b-44dc-9e0b-73abc4a39338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da3040f-eb87-487a-8793-ac42f25825cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af2d76b-1aab-449b-bf2d-d5042de6d8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bbd43f-dc51-48b8-bc57-f69b8b60cb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bad0871-8e68-475e-8e1d-ce68ec98916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61f24b5-d3ed-4332-988d-c9de78eb034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a1aa3c-1e4e-47bc-ae3f-076f58802a11",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cca49a-e484-4f9f-a3a5-ab51fa8692f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b91a04e-b77f-40d3-9cfb-a909753d2054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47cafcd-be17-4017-9c96-617e33cc7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "125e8d89-9465-4cbb-bcec-674ec40dae36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5989ff-ae78-4eab-b69a-1bbdfe0d937a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d265a1c-9f08-4fe8-bc0e-0c818ada7489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae854a3-2ef5-421e-8de8-16ebf82dcc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a9689-9a86-4544-bf8b-49598481527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "833d3e84-9c12-4b25-ab80-82514fe35c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984c774d-d250-4d43-b224-6f74bb9c066e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a630da5b-f388-43a4-b60a-f07574952e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9974cc0d-22ac-4dd2-a7b9-713b828c2b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa0b666-1af7-4d12-bfda-4ddc92ba17a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb81d151-e50a-4073-b5b7-dd1379d27234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03be32b-2505-4f57-b1bc-15cead507165",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754c5c98-e73e-45bf-93f4-f6026948089e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273eff31-c456-4962-bb5b-80cbfcb466e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbf394d-43db-4ddd-a726-39dd7fb78ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e970c69-00da-4b5e-93fe-67989edbfc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885dc3ce-dc61-4f1f-800e-f3c796f55c32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0defc4d0-e737-45e6-8687-c6f2ff4df9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d06f01-b1c6-4aaf-ac06-6dc3b09f8cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e4066e-2062-4b7b-bf8a-283918eebcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64c88313-d4a4-426c-8b37-96f3b2034402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb18963-12c6-452a-8e1e-ee3abd8f8371",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e5bd90-3509-4d91-933d-cca9b193a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739267a0-8272-4115-8c49-c8b904b95b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0b3a07-76b7-4752-b0a9-2347a068128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d03e458-e27a-49a1-9771-233dc562e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031deb8-7490-4261-911e-165a8b49b2f8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c0c1d-3fe0-4dd4-9cbd-7c1970736bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeef9b27-2fa5-4e59-9499-d436d6b477a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecaf62a-dbe0-441e-92d9-d51fc833fc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3688bd-9414-4f2d-989b-679f180fe61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e204a47-f09b-4a7a-b42e-b6feb85ff61e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fa698e-7b80-43d8-9e7c-087c072156f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0e019b-7d5d-4749-bce5-9895a2b3f514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9538ea0-f618-4253-a9bc-b9390ef705f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de793f5f-7aa2-4dd0-a165-ac6f9413480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeb9cd7-b713-4e5e-ae61-f93b411d3cd6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefba53a-5c9e-41e8-8c65-49265e2c06ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b05a6a-45e0-4e95-8fa1-42834bcb290e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7395efbf-7804-40af-ab44-1137835b54d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ce4cf1-8c3c-49d6-bc4d-e298e9acb789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd2f8e-4c02-4c97-9619-e42604749443",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62145005-54f0-4d3f-ae64-491ae5d068c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0331a7f-ffc1-4817-aaff-60ded6ad64f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da1e0dd-0122-481d-9b55-9872e3b23432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85055f2-7278-430e-9d84-737814f3d2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5da711f-484f-4c4d-bd9b-6ec5dc8c84c6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad674df8-25aa-4efd-994c-8b4cb693db81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8f678b-b9c0-4d3c-b2fd-ee1b2105f7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8664187-a97d-4e0e-a4ca-4223d62b2809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70e3fcc2-1922-4466-92aa-de451836bfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515c3ff0-71fc-43e4-973f-61695a791351",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c4009c-f16c-442e-8204-1ce6ea55211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425c9f97-3681-4740-bf42-8b22c802de4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee60407-d6b3-4938-92f2-090b95b7eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b90033-350c-421f-b7be-00e09928d0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b021e23-c8c5-4929-a1a5-7556b708b49d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef90b465-9c92-4379-b0b9-f52ef9455974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7b608d-3ec1-47ea-b31e-d900f9489852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9fac54-b3c5-424d-8c12-1e08a74418c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7423193-8d8c-4364-9d81-45c3144e514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d03623-74b9-40d2-b7e8-6faa3ffe9f97",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd20f88-5442-453b-bf21-de91714639c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac73a4c3-4296-4131-92cc-bc8494dfe6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63be8cce-a817-499a-8f2d-ef2ec7e59da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c12e4b-a604-4ea8-aba7-507f367bce65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d10dc4c-3bfc-4bab-9484-4edf3cd9a2a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6df7e6-b623-4d65-b8bd-65695b848344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f6efa5-efe0-4aa4-994f-af32c9b3fb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1414816-d12c-4e51-84c3-0e0e1e16f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba895c4-e7ed-4da2-a72f-3ebe14bfd6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720577f6-bf24-415c-a61a-cab18accb584",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bc3e1e-cd73-4162-9ef0-927cc9a95b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fbfc3d-b2ce-4c3e-afe3-67f73009a85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b8a40f-e90f-4a38-b49b-a4d2a8a5014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49176ed7-9405-4657-97cb-aff5bc7e89d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbf9fc8-21cc-4054-910f-fe3f65745342",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe70c5-958b-43a2-b3c2-3c7259b023a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a47093-d8e0-4a27-a714-65c8b8581322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483902d1-43c1-4d44-bc23-aa553f4d36a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcce48d5-2e02-4980-8971-ae04bb0d2eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cf38cf-9772-4219-b324-a83bc589b127",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29728267-ebf7-4e56-89e3-f2684ea5546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5119679-e1cc-4a6d-ac4f-cf939e2f845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef0fe7-16e5-4728-b96b-b3e52989992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "071320dc-803f-4a5b-a6b5-816fd8a015b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5026ea9-2431-4446-a548-45523fb5cad0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5533562-865a-4f5e-a688-833160d34d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c1ebe5-abd7-4efe-8adb-71038e1e84c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354119c8-f0f7-4cb7-9417-c7a58ed91aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54109104-4f39-4e96-8eed-d7de96c57aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923f47b9-92e9-4728-91f8-45e5299b680b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83897af6-0499-4fd4-aad6-f9415d569de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ba7f63-9c0a-442e-ba59-d5fd6c718824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e682cd9d-74f0-47a9-956f-32ca61d7ba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c70ad45c-901d-4c1f-ad34-48828b7bae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342120d2-04c1-4641-9ac9-7d60718f19d2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f850c-9aab-4e68-a737-636a293595bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56261f1-2cc6-42de-9a9b-302e1f557ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a3378b-d897-4281-862b-fe8bf16486af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edf21d4d-9c7d-44b0-bf6c-10b0ea2b9535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba6e78b-7900-4dd2-8d20-6d34b22b3122",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e140de03-673f-4800-8f52-12e50bbfbf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f02eda-310f-4bb7-a37c-62690fb9f3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900c2106-0c88-4876-877a-35edc5abdff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c69490-bd01-43b7-aee7-e82fcb2e8f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083df6b0-6658-42f0-a7d4-a1053d8d5174",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d147f-adaf-4ab9-8f31-b78886b26327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ffdcb814-ad77-47d2-90f0-d37814d0965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e772053-56aa-464e-84a4-9a485d11ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e88e5f3b-4b4a-455c-9bfc-cf4f5b863cfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86ec76e7-9c07-4819-8565-a3790b8af965",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9cd01d7-c91a-41be-85e4-a4f5b1866e38",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dedf6e-cd5c-42fb-ba0e-12c77af94675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db5f79c3-fd5e-404d-8191-890890eeb385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166330b4-e9e3-4831-8259-362cf3893e13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4652b7c-aedc-48f8-9789-061d6a4f62e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6795506d-b5c3-49ff-9da4-4e6a3a929b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "918a86dc-d607-4e83-86c2-cbce9b6a79d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b50a2d-a904-4b1b-a7ba-639b5b60885e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad162302-fbd0-48b5-9eb9-7ec428e6b465"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e856a4d6-1ad3-4e85-849d-f1fca3b0709f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3197550d-611b-4bfc-a088-0486c6f2c46d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a18aa280-7544-4954-9314-b8f69d1eac25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee7b5153-6b1e-4646-8800-c45a095d12e4"
                }
              }
            ]
          },
          {
            "id": "ff6f43b2-1405-483e-80c4-1b0e7b7031b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16c5a5e5-c924-4e3a-b07e-796a454c7d0d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "855f69e6-0b65-4a8f-b37d-76249beab342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66254968-dfde-418c-9dfc-b13ecebfe07b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f86f9491-f238-4dc7-a364-6c18216e6411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23ea4d1f-2399-43bb-a1d7-e5c1536f6503"
                    }
                  }
                ]
              },
              {
                "id": "b6af6b10-54b5-45b8-97c8-0a95e9488ae9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd6f4e2-74fd-49dd-8eca-2549ec0dd2fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1faba6bd-0c3f-4e38-85aa-1a5ef1c6f39f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b059650e-34fd-4fe4-92ae-55d9518537de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "caa65151-98cf-4567-9f09-f2a71b31828a"
                    }
                  }
                ]
              },
              {
                "id": "de8701f1-daee-4e7b-87b1-e47fd36241e0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78511825-630d-4275-81c8-9ba03cb982e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e16ef11-fe42-4f65-b424-d755d5f771d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ee44278-adb2-4c94-ba5b-e008e99a78e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "daa589d4-8b62-4591-9d8f-7b8d56bcb86b"
                    }
                  }
                ]
              },
              {
                "id": "cfab5dfb-ffd1-481e-85a9-5fec40d6c3dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01e5434d-7085-47ae-92d5-941e0b4a4583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bce89417-af11-433a-af30-957c84e8de29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47373678-1361-4b9a-93a5-108b5f394561",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "617844ea-30c5-4ad0-a107-0eebd9695f50"
                    }
                  }
                ]
              },
              {
                "id": "ddb7682f-63c5-4c06-8702-8c513d8c4a36",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "759128e7-d444-4b4b-a1be-368ea06c2865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb69992-7f36-4cc9-947e-4b32220d2bf3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b0e111c-ced9-4653-8865-ac6084ef5a4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a3dcf76-752b-4606-83f2-a4ce629144f5"
                    }
                  }
                ]
              },
              {
                "id": "42701ba8-660b-4c5b-8daf-e77ff9d4fc0e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ded3bc20-cb76-40a4-815f-64f7b6f2ec69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ae5503a-7eb8-4d3c-b963-f3e38ac109fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "840a0a81-611f-49b2-922b-671cf413cf05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "617adf8f-13ca-40d3-ab1e-4ecf0b8fd643"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c92aa54-d72e-4402-b08d-b1040c560167",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b3b97fe-2085-4d0d-ae98-9a6b91f4b9c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28f02b43-4ac3-4676-b068-dedb81a0bd65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d85c435-c541-4883-9801-af7edc553f9f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32f4ead4-a84a-41b7-b2fc-9b23dc13c08f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a6241262-14d7-40d1-aaf1-42ddb1258564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0901d1d5-8c1e-4375-96d9-0a4d0ba12a56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "657e187a-87f0-40bb-854e-288121906a26"
            }
          }
        ]
      },
      {
        "id": "0e484efc-10c5-4fcc-962b-991cbdd744d7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a7471e8-a963-4c4a-a9af-47e47ab5c3ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dcdb8b8-e9b4-4dce-9ec2-6b649cd586db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfa5753c-ae2b-4234-9751-2c1d1e9711aa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a06b47-208a-49ea-82d2-9044984feda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cd43b0-ad40-40d7-a0fb-d86eca31910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30783a3e-c518-4b5b-8409-0911ee4bfd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdaad75-2329-4e49-93a3-582679abd630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae392427-8d93-4ff2-92f1-13b8a8546da9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9c48e6-8ecb-4a98-9322-a6c1770229f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37c0ace-9b6e-474b-873e-6b62fe8fe886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf750763-09d4-4187-8896-c9abe5148070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "541d3414-0065-4695-a49a-006fe2bd8bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac45ad71-ca26-4d8a-b435-9be8a65e0c60",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f15153-eeb8-492d-b51d-e9c0094beb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67a2e1c-e59f-4ce7-bf1e-778ddb93f100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe78b6a-5125-4ed6-aaf3-63001675ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb13642-722d-4287-86bf-1ed09ce74c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9043ea46-ff22-4ff5-810d-59bde43610c0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afa0f5e-88a2-4f38-8515-49036943e5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f2e82a-8677-43bb-8240-ea720cab0c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8c4c29-3876-4918-9ba8-0069d21a07fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42693ec0-00d2-4d5f-b2db-2f74974daa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd22854-6142-434f-8af8-2b03bdfac4cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dbd79e-d134-4c11-ace2-435ce3d4c342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c896bb20-b898-4873-9988-c98b4cf3c5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f934c0d4-6c36-4436-b57a-2a84c0692d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "728461fc-fac9-4f5c-bb5e-4bf2e6566d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc31a36d-ed62-4d0e-ace4-63623fa640b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76a5f00-4147-4063-9725-622ef628a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866384b2-5bb9-4f58-957b-c152d351edd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1880aa63-6579-42eb-9eab-8e624907caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79857d98-feff-430f-82af-656a9ed1e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1699b673-49dc-4b9c-a238-a63ae32a2244",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0647c6b-5703-444d-a700-3d99e6041b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d1dea9-951a-4199-b572-5d7cea571c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc28c2-45e3-4964-87f6-8fe37bd3e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "268555c2-7dfc-427e-941c-77319d55aa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38928f6e-786b-48d9-bf16-a5fd1a99e9ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dda95f-1ff3-4de0-b3a7-0609bc943b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a052a60-d773-4319-9c46-55480473e460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6508e97-3c69-4045-831d-6ebd472bb63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa58cf6-aa4b-41fb-87a9-42bcd1a10fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3074d8c1-15de-4ad4-8748-bc478b77847e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc5ff0-c85e-4b79-bb2e-e59c682a93d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a08b87-b037-4fa0-9a92-5bedc5a962de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9542b445-37a8-4db0-b461-0b1304bda192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88fb14ea-341a-458f-8eb4-56c2ea316540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e82303-0a78-4505-906e-c4c28df876fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42186a09-c54e-43b1-a7be-088aae2f608f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7229d4-fd7f-42ed-acae-83349ed14a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21461125-6fea-45c4-b4a5-884c00406164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43184f08-5070-4456-99d6-feaf6c5bf323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52fc34b-5463-4180-b686-97c29ff1c7c9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e49097d-34b1-4acd-b5b7-feac04c928b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8695bf-a161-4c9e-affd-7fa399a5e1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e2255-be35-48b2-9826-835fce54d22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2b7dcf-9985-4220-bcda-3e55cc7ee42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0299453-c587-4ffb-b985-6fbedc776394",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db87d735-04e9-4d02-b2a9-a63f338d321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad4367e-b6e6-44a4-ab68-22a9335a296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac88824-d1a2-4b4a-817d-5ef70bf7592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21fb9adf-7877-4343-a166-3a7f302e2b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58e7ae8-682d-4ab6-8c90-0f36d7aed81f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14852229-ae53-40ed-af3e-8bbe8eb73fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfd1bf3-63ac-405b-ac9f-e3bdfa83bad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a9b810-f5fd-4e23-a86b-b78b47219c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bbaf80-9256-4b9d-8336-4039d34895d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9241830e-f20d-48c1-bdfa-c8dfe69a6c3c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1972465-4eed-48d9-9c85-4629fc4411c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d44a6fb-dbb8-44a6-ac89-0d162cc39305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c231a9-3318-49ef-8d6d-36c2da1f6023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49aef0f-9a2d-4816-8a87-8a99a3fa4caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df97a9e-784e-454a-bf73-cecc9ee13b45",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba5c7e-e780-46d4-9d5a-75a41cf1a074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0a538-0731-43d6-9354-475e73d4bcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db86a291-1845-4a58-b3db-e9c1490c4801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0fd59e-0e21-4e0d-9757-e2eaf3f40d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67a4d02-0ac6-4e5f-b705-a651fcb863fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2756572-5f1e-4e0d-ac5a-cf48f87f01f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402760c6-28bb-425d-b83c-4fe9969d6296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df8f9a0-2de5-4af1-8e78-426ca13ea399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "17346562-a2ba-48f5-8f1f-3d2ae3948780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14296ddb-baa0-4b88-84b4-2812c9dfabf1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21db863-253d-45bb-9095-0b268767ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57038ad7-b16c-494f-b099-32a5f1ad02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586f6b4c-289d-4bd1-bfad-ad8589365c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14c75bb-2f52-4560-a79c-dcdb778b7e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d854b0b1-eb8b-435a-af3f-e0cd55dc9a3b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18b18d5-7d09-4ded-8dff-2e3112d926da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70701dce-5bd8-4431-9323-e0eaa3c00f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34638ce1-ca4d-46d2-b5e8-834df7fea440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5fb227-2bd7-4c49-bd2e-383f96bb3e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014fbb3-f874-46a9-bc55-f9e53aaad1c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335124a2-ac53-430b-a7cb-b62ec2b50fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c74c380-d8b1-4bc1-8344-bbb3d820257c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d96a78e-de7f-451a-8eaf-8cd87a59d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9accf59-3cf1-4a33-b262-16e28d3a96f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dcb6a2-cc46-48b5-837f-8a6496ba57b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c333bbcf-1ecf-4afc-b8e9-ea302708dd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1702419-8551-41c5-b636-17ce5d867a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7e182f-1c83-470b-ac51-eff49057101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bcb54a-257d-43f9-8e46-01df402acb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ebdf6-996b-47e6-8ede-b4304ec9a3b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7254cd64-8c97-4c9c-bc85-ad9cb7eb649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe15408-a9e5-41e9-be91-c6f0db64cfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba451f3-395e-4f6d-874a-b9c8d8161159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d349d1-8119-4bb3-b4fa-3df8d2d3d7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b501a0-1be9-4203-b7e0-4b88c70f4d15",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39befd92-fa42-4345-9139-0babb5901109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04cd5e2-fefe-497d-879b-e5d0e7e8968c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334d3550-3df3-48e2-bd3b-acec255e348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db16a564-c094-4e79-85a9-fe6b2a9efd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc117516-e15d-485b-8e06-e558de4fae34",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2769d91-b6c2-46a7-bfaa-642bc69a5946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59444c73-2f94-4b46-b4b1-378597d71dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31046fe3-026d-4bab-aa06-53fe7bc550be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e89bfb90-53a7-402e-bd9a-2df1b0be2c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad63cc6-f757-4d92-9a70-f6922273a815",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9deb2d-fd3f-4bba-b5f6-ae83a3f2919f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d11ac00-7f4b-454b-9caf-042cc73534a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90c11cb-e6ff-4e56-949b-e518ec85741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e6b4e3-7b6c-441c-94af-c354f8d17db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c61e24-5863-4e6d-91dd-f712159d36f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146e385-4f5e-47df-8ff0-67d9791d9d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bee4e9d-d55b-475c-b6dc-85ff9d19878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fd2c48-392d-4e1d-83f4-da9de7eab15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aed9843-f979-4835-9f29-d9e92d1ee71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb2c5ad-8fc1-41e3-a7ae-ef0815128b12",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f1869a-5709-46bd-aaf1-e9ca0b5887a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e36868d-3ba6-485e-ab79-66a07d410995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f654ef-e98c-4f97-b5c7-2f20f2218b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fac883-0517-4299-8997-69333d305ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530e6445-8897-40ff-aec0-32ba420f56fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086a3aa8-438c-45f2-9d24-c812aa1bcace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f641ccf-6cb8-47a3-8a6e-386f189bb30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cec0e3-5d81-40a8-96e5-0cf0287f1a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb9aa6c-2b97-4b37-ae95-d9bff7408864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18a3972-2185-4e8a-a929-a240b9814248",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead6801e-57a3-4222-9cd6-b3637b94378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fdb4c3-578c-4b08-9b98-1ef0d1fdc459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0fa909-d76a-4bb0-9a95-f9851cfd58a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51cf7dcf-f212-4d2a-9ce0-2d7a5b26947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a36cd-6939-484d-87aa-f22ffeac9311",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c313db-58f1-4be5-b282-602f14a09e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0b5c92-d963-476e-a149-a96c731abd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc6103d-242a-4c23-bcb9-ed9b70838da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbe2f16-b410-4d37-b23f-03c595b2a5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c43fd63-5e5d-4f9a-a76c-8623538cac03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855f521-2a1f-4ec7-a096-72e99b8adb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b42f60-9806-4186-babd-b5da44286ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4c9a8a-7a86-434e-a16d-9c432dca417e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bdbef6-30b4-42a6-85d8-bdee77674666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1daade3-0f3e-4abb-a72f-1790568375bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e64f71-700d-4192-b043-d8786b3df90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff2b85c-f998-47e8-9955-0ff85e2eb21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8e8d02-a084-4b41-a401-00a4b78e5f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82753769-993f-4f63-aaa5-f5572ff640e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d28544-886e-49b2-879a-87a33dc5bd7e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad7261b-53b6-4bee-b481-9748575050a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002f972b-1476-4442-acb8-8aafd9cb726a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2443aa-75ee-4222-9166-9f49423ff09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5988c11e-e0dd-4a16-924f-ea89d37d1b0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc312eaa-22ff-4ac0-9fb4-1bf6c6d93e37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fd75e42-d882-43ff-a778-02245e52951b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cac65-7871-434b-86f3-6759b11d5133",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44b760da-e479-447e-a0c4-9fd14cf95d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3334966f-ad22-4608-8559-31bdca4ff8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ffc362-739b-402c-96e6-ee04037f8635"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c2278be-0a32-4d13-b5c0-697b7f23aaef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4944a078-16a2-4046-b91b-98de1930d58c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f724c7fd-e140-43ca-bbb0-ae19be44a5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e0d3bc8-4a80-4889-8e14-72307525b89f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d77bd34-5024-41c6-bb6e-0de0fec76440",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e896ca66-b96a-40af-8759-cb30558614c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b2a5935-bed4-47c4-be1f-69eebe686b73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76dff923-72cd-4aa6-ab47-a55d8f81d463"
            }
          }
        ]
      },
      {
        "id": "a9535e2c-b1a2-428a-922b-9c674bc38ba6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24235f18-3a87-4596-89f2-c8470ba501b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5879476c-6f8d-400f-a13f-1a7102de1e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3cd5b70c-b3da-41c4-b10c-a1d576ac2d24",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5715d-1d82-4e1a-8c1a-6257b985fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88d4344-67a9-4efb-bccd-1d08ae15c781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174f029b-c050-44db-93c7-e7022b985e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd1cdf4-2606-495f-a4b2-4814374aa17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4d1b2c-7ff3-4634-869b-032cc239649c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f349f8-e65d-4c8b-96d0-d6cbbafced12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c5ecf8-3652-49ee-9045-30fdc3f8e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0333fa5-6915-4739-a95e-138fade17850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf49e78-fbde-4476-a72a-968427a6a728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde15025-b5c1-43f4-a831-c19b49764b1c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df18af8-241f-4da1-a9d9-b9d7758623cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c214cc3-6de9-490c-afc8-5fa3e5b454b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb49cec-d75e-4ed4-bc89-4cf36df3f21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36008a48-49f8-49fd-9d53-be6c34a28c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4722ace1-9d4e-456d-8183-71722ad475e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950bf0c6-3f54-485e-aef7-eac3e52dd408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9377ae-df46-4434-a8b4-1bb857675000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17820b94-6d70-4db2-adc9-1afde861bc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfba97c-5479-4c08-87b7-cdb462d7959d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875c047-0a62-421b-8a90-6f236410fc4c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2392f40-4ef6-446a-a993-71fa4ddf58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be89086a-1008-431c-b8a8-2682c513b045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d896b-d14d-47fc-99b4-3006ef932733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64db2348-f08b-4fac-a572-9cdafabc8faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45077af-4fc8-4a12-9208-dd1ec018366c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09c088-5262-4f45-80c7-1e8cfb926e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cab6bd-f9ed-4978-b088-a8ecd005bf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b3e675-7750-487c-a072-d60662fa7432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dda67de-3a5d-40c7-8d22-35b9abc26723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1f3e1-f623-4444-852f-dd46523ba590",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50627765-08f6-46ba-ae3c-b16504ad104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236ff86b-e69a-4c57-971e-5da16c95e2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1040a84f-fceb-423d-9cc3-2457b5bed6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e3ec12-9fa3-4228-8385-6667fd399a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cf1eb2-7675-4900-a170-3903fb7a90cb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa07f38d-7de4-4219-8d73-86a978a34d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaef6f29-0e9c-4474-8fb5-aa1ed9228496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5f760b-9316-40ea-a3c4-164c7c822a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72718b88-e453-457c-82ab-1cbd4a7e44e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a5418b-5fec-4f68-9d66-526c2ea65a71",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74962cc9-1a40-45c6-b9b1-c1882ee1d456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f48a86a-8cb2-4331-9b70-04ecbbc56a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2309dd-0b49-4c64-90f4-5fdd4823aa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e2df42-08de-41f5-afeb-a6f0a891a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dcb128-9b7d-4339-9162-5292ee55a275",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c757d7a-30d3-4a79-a169-6696d2c2a6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0337ef-de30-4e6b-b5aa-20db8d203273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ea6bd9-feff-473d-930b-0c328d7adc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f672cce6-0b0c-4240-8961-381def2c0e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235d39a1-c471-49cf-bf34-f7316e7d5152",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50ae0bc-94fb-4909-8e79-e556d9e710c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc9ed20-bf3b-4800-a2b3-138787e6f5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860b88d1-ed8a-499c-ae9b-f16946d56cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6deb83f4-9bc3-4ae9-97a6-ed1000c4b9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bafe7e2-c32d-48eb-a351-ffd84667faef",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd365a5-493c-4714-bde7-511e07e7160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2c3734-4f41-444c-bb52-92d6cb5c990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515d269e-8b7d-4d91-bbb7-0fd9748f253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39c00e3e-3c50-4dd0-8252-4a3cdcd31a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e9ae6f-1afb-4ffd-aead-293c06ce59eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c8d368-d648-455b-9a9d-6bd8ff8b06ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1a97cc-86fe-4705-ba4d-066e34fb35ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2c82d-2f30-4103-bf9a-92ac28f0bc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "370c91f1-953c-4811-8eb2-88f126985838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bda909-520a-43b1-abb4-ca3f5011959b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eb7a42-accf-425f-a88d-5bc75ce1c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb412f9-0017-4bc3-b5c0-f7e97aa43c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f802700c-92dc-4361-bc05-fbe47919e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f3a1e5-893f-4ae1-822a-8f52ee9e4166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ce6815-a850-4dd0-8e93-a416337f94cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edebec74-a40e-425c-bbc9-27651272bba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76ef829-5c53-4df8-b2f7-19e2e84ca924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5691366-e9ba-4c2f-9f13-7ef3d122ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd4d300-3552-4210-98e2-f2aaf0d33d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e0e956-8f55-4212-b9e1-d6e693b3567d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af2b87a-7f46-4353-ab7e-9ac7da73b982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80a517b-93a6-43e8-9be6-faebfd502b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944027b3-1306-479d-ba08-a7705339def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0f17e9-a95f-455a-87c6-43829948c1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b300b77-b44b-4fe2-bfff-df56dff03c6d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce643cf0-f550-4141-b1e7-7ee0aad5eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e124a9-1f8d-4e68-bb2b-252f177a2490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6703d663-21a8-4e75-9eb5-743f233d462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "077ec06e-bd6e-4f3b-8f5f-b8a07797032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0f5f82-c135-4d0a-a3e2-490e4461b9a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb9319-2a66-4d42-8fab-b5945a5f16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83416739-e222-49ce-8c54-cbd81e5adc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c46341-d93c-404b-a121-add490d19d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78eedde6-49a5-46de-9ed5-a0afec228a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21db8e9-1cf9-4c4a-95fb-8ba0124ed135",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a15fe-b65c-4b32-ae13-49ad63eaf61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fcb9b3-4377-4036-b9cd-c46ab54cb17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8616db21-61ee-4b0f-bb43-20b1cd94c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa01603f-59ab-4f5a-9c08-a16aeeeeca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4de3ec-e5ad-4487-99a7-d024eebdd850",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46535dd6-049c-4a5a-acc5-33ce805ad371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25470308-9452-4ad0-9b0c-4f71e183d48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88544f50-2a19-495a-a7bb-fa7ec35801b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "457aba10-a21e-4024-81d6-bfd54d825d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812e4bb-61bc-4148-a96e-f3c05e8f53dc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2942fd4-ac9e-4c19-99d3-be8990d51bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a431719-2ecf-4199-99a5-fb037a2ee5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a0ef4c-d56c-4009-b19d-98b290190a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719ce08f-baf4-45c6-a466-21300ff588c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2b3a44-da89-4625-b908-494adabd796e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ba155d-3f24-4c23-b296-c82f446e4b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649bb086-3363-491b-9af0-20b701defbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c71aa5-9264-4a54-b274-b71062f3172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c66528-75fb-4f0d-8f85-e26f5190c8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce0d8f-3b03-4a89-935b-31dea9290c78",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b96931-5fe7-4a55-a008-60ee784dcc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5971a5-4951-4abc-8d2b-fa04672fecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0c6af3-de03-4e1f-978c-0e8f38d92ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "479a1766-8408-4e90-9ab8-28651f862032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a490dcc-dd7a-43e5-8ccf-6afc645cff0e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2c2091-5a08-41cd-970d-3be362aedef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456c09c2-864d-4baf-b8d7-57c2894b0f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7982f6-f7b3-4d36-8d43-de0fe0b74db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9f7ecf-b182-4b29-ae4a-4aad35a99255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00c9cce-3c4f-4b52-bce5-e77366404142",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087a062a-3abc-4b7b-b3c2-efeb7837acb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3a878a-51c3-47fe-99c1-9b34dd052a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96400e1-3d8b-4552-92bf-359c5fec75f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9d7e78-b215-448f-a1fb-c29b9c1b8b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100a0af8-7cf8-4fd5-97b4-21b5a3174c79",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c397123-0c28-477c-b497-9304ff729146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2879679c-a6ba-47f8-b01e-3331390fd8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b066d20-cb17-4fe0-a7af-32fd6bf38ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbcc247-f021-4fce-8c82-ae346111bfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd48258-b8df-4df7-a479-f5e2cc3a422d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807b56ad-cb32-47ff-8135-afc8cb95bb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c03e6d-4291-44ba-bf6d-3e989b392403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd5c18-8e72-4376-85c4-2b9952eb98f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea96831-386d-4d5c-bb29-1f8eb1c849e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d21216b-d5df-4ba2-acad-90056d7d5127",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273a3edd-15a0-4aa5-ac9b-71cdc5af8c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9fb426-c3af-4d2d-82b9-49d8ed8293c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74503067-a6b0-458e-b330-4fa5fbfd9574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9b66a0-5b46-4933-b574-bb5678090e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24cbc59-bdb6-43fe-82a7-3388bb76e5c7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a8e09f-b3f6-4e88-b181-6a72c46b0bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6030b0-dbfd-4065-8797-e7fae86b2e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8290f7-e929-40ed-9984-8ade1416de4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e14f341-314d-4625-952f-d110e19b1cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285601d1-ae38-4c65-9903-1d595f9814d5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d77dc-725f-4395-a5d6-322bb16d4206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e62bfd-ed24-48f8-890e-e2974eb78621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3862ddb2-d3ec-4d22-8d02-ede216ba16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa5aeb2-f92b-40a7-ad7e-8b96a10cf904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0407f6d2-368a-4eff-928d-9902deeb996d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe59cdd-d4d5-4f9c-90a9-d0a660124cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf8ce97-3b33-421e-8ebe-9883f4c7bdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0898ee9-c32f-4867-90ae-b4c76e1ffd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "162535c7-c20a-4ad6-8b52-48a7eb857b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930934ac-11ed-4c82-830c-4c89198e85f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b81859-0c76-4c9d-a637-75a5dddefa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a275b708-63c0-4abf-8335-fe7e467652bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e76ea6-dece-4b63-af4a-a95eaa34327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01229229-ff20-4309-8b52-ae31d011dcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c897dab-fe6d-448b-b6d2-54754a5e9a95",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc61bcdf-acd8-485c-a71c-c5cc8056fa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9374c551-6075-4787-93c6-79f3c71aa307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee7beda-2593-4dbc-b6b6-9a7de59b9d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42915b23-a28f-4816-ab89-6e890ef39ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e70651-4cc1-4c5a-b516-1966cb3e90d1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2df9f-87bb-4c08-8f0b-198d24d4e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65762f0-d917-461f-9727-018f38b2e1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f62c7-7b9d-4946-8cb7-5c3c8d04671a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3592a5eb-21c8-41d5-a1b9-dfe0b6b80380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f83e34-6ba9-4557-a5a1-e37f306e26d4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca6ea13-b602-4fc4-b857-d16c40750a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdc049d-696c-4401-bf1d-152bef8d5354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3bfe72-31cb-4909-b8ba-12723c3da3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39709f4a-28e2-44c8-bf86-7c876ebb6485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35361618-84bb-49a0-a385-9743769491d0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118af55c-8e1e-4d8e-bf7c-8c7358234015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf73b0a0-b0cc-4d33-8e1f-a7f31ebf80e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf4ff81-9c80-4f75-968c-00f8ea96948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f991416e-7d7f-4e82-8299-a49832fd77ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdb9386-c094-444d-856a-b489ce831d34",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6288a31f-a62f-40b3-a6d9-0bfb6bb2d9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5033eb-988f-46fa-8b1e-5375312256f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821eac22-324f-4d4b-8447-85eb69b7e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1118e1eb-b827-47d8-bf91-1aee352279e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3b231ee-6217-48b6-a1aa-10e65e1e0f72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d48a82b4-fc3f-401f-a3dc-a75727a1b39f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54651463-c4fa-4987-ace9-e91742efc9ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63a05243-0e09-4952-a970-aa106946e693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7270ef00-cb7f-4f81-9abe-18ded002cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4250d110-699e-472d-bd78-bfd765b14bd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74176ca9-f686-4137-bed8-232406228521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ff924a9-1114-4630-84de-135c56262c7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23be19b8-f17f-44bf-ab7c-d9382ab69cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11ca8701-7e7f-4cbe-aacf-3e9408c52389"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f376897e-4bfb-4886-802f-60b613da91ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbe63887-70b1-453b-ae1f-490bcf668851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b66ef8d4-f634-4ea4-a633-0ee2ddf4c9ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25434aed-9379-4a30-9494-f2ba8ca18254"
            }
          }
        ]
      },
      {
        "id": "5c358013-3075-4603-b025-44d37412dbe5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18a00f16-8b19-4037-a274-df7d27b8181a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc300f44-2a9c-4db6-b5bf-d6688411b505",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb76c658-9d14-41ca-87d7-bd1b52a9780c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec78429-1b66-480a-8128-3966a00ab7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f346ad6-b9bb-4635-9196-a4649ee2ce72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4938462-ae24-47d5-80ac-a32511eb7da1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0456aa4e-db8f-4322-9621-b3060a77bc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be38b26-4940-4fe0-bff2-41fd048f7fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4060c53-0d7b-4436-ad56-51dedee242bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9da2df-b39e-40e1-8033-ec7eb97073a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eff9f37-578d-473f-9f06-67fde238e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a85c330-99db-4e1e-be92-630aa936ce0d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5735fd7-a2c9-4f03-90fc-986617b26645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91c7734-c004-4c09-8bf4-e9e6f64ac185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14722842-3948-4f07-bca3-93bdcc117c56",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4f670e-c5c0-418d-8469-3a613acd7a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802e15c8-75cc-4779-98c1-d0e8633877c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0876ad-2569-4582-890c-de60d32f8ca6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f316c88e-bce6-42c4-83d4-9368316c9527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaeb105-4236-4ec0-9b0b-682a1b0fa0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c407d7ff-64e0-4eab-8aca-fd4c2bc0c801",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444cda0f-51e8-47bb-b940-afeb02b96070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bfd34a-41e5-4c27-814d-f77d9251b9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d4feae-32cc-40c0-a1b5-17fff7a8c4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aecb3cb-bbb7-4659-b6f8-90b3753100f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e52b2e-4cd9-4241-9166-d2ebaed1ae60",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9d78b-9559-444e-a8bd-1e93c6d13bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c11393-8eea-4fa2-b7ee-1e9510cd3f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d4bfea-1ffe-4133-80b3-7c3490003d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3ddc43-5e76-448f-88a3-cbe783af29e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1347261d-7e26-4966-9986-4b9bb1498334",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31bb8b5-bf1f-484c-b355-c82c0e410f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514f3e01-90e1-4344-aaab-96b55a2f807f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5514e7e0-0c32-4665-8bdd-c32b0c310ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a125e81a-7746-4caa-bf40-3a6fe3479fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726e5a9-bb91-4beb-83e4-850d897c8ec9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a526b34e-6243-47b9-82f3-5462fdb19f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a391547-9c13-4d15-89aa-f52986abf72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124ed97e-e873-4929-9e3f-d9170501742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27981984-3418-41ac-a5ab-817c837cb11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33231551-00d7-4f24-bceb-85295ee9ddd8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6c322b-fe7c-4d09-beaf-15c7f23a81cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfd5ff0-c76c-4937-a5a2-fd55ceab850e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78446081-7821-4453-9046-cccb14028212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986dfae4-09a9-4833-8504-3eec48228012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23115d32-4f46-405b-8673-86818a9b8358",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b332d9a-5dae-45e3-bc80-f8f2b8c1ae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f82eabd-7f2a-4261-9ecd-b5c7d4191515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddef3cb-f85a-4419-83bb-4bcdfe2243aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091f1fbd-91fa-4637-9d79-8240c5f59370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2607c24-c851-47e2-8541-bb050cb4aea8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f43190-7e9e-4bab-a34f-d1dbb4e34410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0799b7b1-7413-42b1-afbd-30941c56ae41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6760a332-fa78-4621-b6c2-67b983a6c771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66fe035-9bc4-41e2-80a6-aafec142c865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14533243-1ef4-4fed-85bc-8bc7299c669c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cc3c29-7379-4025-a56e-9d6b50769802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55aa7f84-2d8e-4b02-8fdd-aa15c9de6749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d635c643-1ebd-403c-945d-bac2c269f2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b66a35-ff5f-4687-a9bc-b2b63ad274d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5255fb3b-3a8b-4764-bb01-8fa739da024b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb4885e-21f4-4d7b-92f7-ab671f25c2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef53db8-c26b-4182-9980-eee510c98f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adaa7b9-b8c3-483a-b7be-a7961f4aeee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eaf47f-03d3-42f3-aed7-93844bfe9e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7b9294-29ee-4833-88c2-0f05d128ddb0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b752b084-c0a1-47b1-8ffb-16384fe73831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db78d0a-cb8e-475b-b2fd-5b4f54a20533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064fe6b-3fff-415e-aee1-79063214c13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bd63e2-7fdd-42b3-bdb1-f44997691e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdbcee2-fcb4-44b6-82c4-128ee3d7a832",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29976873-4d2c-480a-a5b3-85cefa2cb388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a23f94-4dde-44a2-bea8-3d6c31532372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f7c04b-c7f3-41eb-a427-fa128f8ea1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a31b7cd-89f0-4c56-a48b-2e93fd7cae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022338e5-54e1-4032-93e7-7e8433ac3d5a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15d8cf-e217-46c5-91e8-a240761752bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374d61ea-e058-4c64-bf9b-39df9fc5b1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ceee7-83d7-4f09-a27e-9557ca104637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb918a0a-f868-4b4c-93a8-d96872001e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c973569-41c0-49cf-9d3f-e2686c45d25a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae92c081-dc08-4f6b-bd44-5127eac83153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb1140f-325f-4829-af27-8e16fc96e429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e6b1de-28d8-4c06-850c-ba8392a541d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbe7971-9e82-4154-97c9-6a910faa4485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bc9af0-80aa-4c8a-b093-6b4272187786",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aefc4a-0486-4372-a36c-0ef58f485ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14149b3-a42e-41de-92ae-ec92ad59f271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5129240f-d2a7-47cd-b867-9f49b42ef4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d048d544-7da3-4685-9dcf-807f25f45eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb13d64-0f03-4c52-9e80-7ad56ee45c50",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c33d58-b998-4ede-b64e-7c636e714cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acf2489-9b23-413e-bf36-58100211556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994b5c2a-244b-4b0b-bfcd-dabbb5609d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513c28d8-e781-4af9-8a79-a87a3d365188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a70762-1ee1-41ca-afeb-43afb0a722d8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2807dc14-c85f-47ce-b204-8aefd7168df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f63ae9-8f90-4b64-ab02-535fac2324da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc0f51c-34d8-42eb-8fb4-07db8f6c9232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedc3381-3f96-4804-be59-59d4903f5ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f596c31c-9720-4183-914d-ba1b5d73b64d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7882e97e-8d0c-436f-8937-069a4bb4a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50be6cf-d82f-44ba-bd46-9b94a6594a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371c2a58-94e5-4fc0-85dd-c0a0ee4b00ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7c1607-d29e-4fb3-b99d-5c2167836651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975ac657-41f9-461a-a4f5-d3edbfbe0431",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aab4eb-8e4d-411b-8245-a95eae0c2cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782dd90c-f28b-406a-bdbc-25025c6d0f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcbe607-6b68-46f5-a249-e78e7bb60367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca62e33-4904-4ead-9e7f-2d5f64535f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b0b094-835e-4154-9916-3204bbfaf1d6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbacf75-9e19-4879-b9b7-5dadd86a550a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521d7507-729c-48aa-8bc3-1dccf985e957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730bd418-5b63-438a-9a5f-aba128bb4bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd657b1e-cfd4-48bf-a240-9e31de3396ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f013f6-a7a5-4614-b87a-163e4ef759ca",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47e8e9a-a5d8-43d6-98f4-07ce952983aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03baffc5-f193-40b1-88ae-d9ddb4041308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8377345e-b043-4d88-9d08-409a931cee13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5437d6bd-d659-4aa4-9ca8-0a49f2ced5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff61703-1e72-449b-b929-8e293dd2f0f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ade29e-0353-45cb-90cd-b813dd0cfd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bb5060-a4fe-4dc8-8d3f-5517c4f006da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b0a9e7-8266-46be-bc20-2796fbb7e0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da378ec9-88a7-4bf9-90f6-9397e6afd878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d9acf9-938c-42f1-bda2-07c08204750d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c67e2-45f1-4210-a588-ffbe279fac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b4ab8b-774d-4dbe-b0af-004650c82f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49fd6f7-4afd-41ec-98f9-8c2fbaa9713c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ac2c62-e585-4166-934b-01b67b0801cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1ad106-3244-459d-82ea-b0c970b8026b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb62f337-eef8-4eab-90ee-c06182364d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a9e00f-b7b9-470b-b1b8-cc5e489ba4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1bc4ff-46dd-4124-9d83-49bc92d06da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2ba1ad-cb1b-4b71-a9db-4aed323726e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5618821f-b28a-456a-8381-b33177fce564",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f674c81b-007e-44fd-b363-d03704cee2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcad217-a6ed-4c66-8fbe-845c0c5517ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79472ed2-91f4-481e-8a8c-708b555c83db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b64862e-5aca-4bd0-a1ed-c97ddd33c189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a56adb-8b8b-4f6d-96de-72ac659d06a0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d9f894-0564-444e-822f-cead1881ce11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9284dba-279f-409a-b8aa-80b2757c1c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3621a97-653f-4085-8939-0ac367e9c29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b45f9d-2531-4248-9c29-387fb95c20e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d697e16-9f98-49d5-8a8a-7ec78f31a83d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e7e2c-94ae-477d-bb7f-218df0290e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56130ea0-fb71-418c-aa1d-4da390a0872f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c0bbe2-7eec-4a70-8313-86cbb25cd0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e6ab5d-ae06-448b-8124-02db12dc7ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbdd300-308d-41c7-bacb-6fc0f72956ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8f93e5-a5eb-4f03-9eb4-507b2e8bcc0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfc138b-3df7-4fc8-a1b9-25dbcb98443f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68934815-9bfa-4b44-8d4a-f88de422d68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190110ff-4a7d-4a8b-a995-33008a445b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b14ce1c-96fd-4716-881f-3db6ea6338be",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de318b1-b906-4142-ae1e-5b7dae37dea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e68f0a-2a5d-48ca-a24c-5ca9e798f35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e35a58d-9629-4ab8-8dbe-6d2706e97f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce57d038-2ab5-400f-a485-349766867888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfd7889-c0ca-4df9-8b1d-b0f29cf71313",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c99d8ae-00e8-433b-8c50-9555455fea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0d473c-e259-4853-8f4c-a303784e64df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a5fd9c-6fec-40de-8eeb-7730f0f148a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c83566-7fb7-49d9-acea-f8dac83ecf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2713379c-5fbc-4cca-926d-37dfee7556d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0171a01-4fcf-4c2e-afc2-bd02a585918c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e19d03-9f8f-43a8-98da-de4106bcdcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361022f3-302a-4378-8274-fa542984fea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2a8e70-be10-4e0c-adc9-05ec7955fc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8a9d7a-0adb-460f-b1e3-f5633ea07f85",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8cb121-2b18-43c7-9544-08df228720aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340e6cd0-8a39-43fc-9cb0-8203c929e05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbc6634-d717-4c7f-a187-5e6a943d266a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96be4ad3-7fed-42a5-839e-244b8473f2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f640457d-fd11-4f9d-b4c1-fc4564aea5e7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7139fef4-be14-4233-b01a-ed6c4da92cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e743248-4a5c-4132-a265-ef36e53a2522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1480d2-8d1d-47f9-8df2-3a247c358b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7428320d-f00a-4dd6-9a73-e278914258a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684bd45d-f134-4e64-b297-592b2283bb6e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c98165-5750-46e9-bd22-0634fb154a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45197a8-9352-4aeb-902e-b128618f5fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55931da2-71cc-4705-be1e-a4994ab18cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6916de6-d1b6-4675-9f67-59823b7f9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78450c8b-2854-4216-a797-66ec2dcc12ac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf60afe-4e4d-478a-9f22-2caf50e3ec28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa75e343-3cfa-4548-953d-36556f8bc802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3449d2-5387-49b9-be03-6ab37addc2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096d2251-df4d-4d75-befe-0a79e9e369e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ea8adc-19e8-4f30-811b-6d567c5edb3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0a07b5-fd72-47ab-9de1-4f01b033bcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15d307d-9d8c-4b7a-9503-9ed230d96da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e23cdc5-58d6-400a-aa03-bca9f9f174fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8499a873-335e-4d8f-9038-abb48cd30395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e6173-e2af-4b90-afd5-bfd605ff5439",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3420a7-e199-4d9b-8d4c-1a2dc1fe1f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f01b4b3-b2c5-4bda-941d-933ab69e2627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0e9337-f310-4212-93bc-04b57192da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf10bf2-3e80-4308-bc2a-c2b47af68df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdadcb2b-873b-42dc-b817-dc0aa28e266c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64be0a9d-af9b-4896-872d-9f17d43d6e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43de21e-194f-4a6c-9022-52bfac330989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8ce0bb-576f-49d1-bcf6-1a6c049be3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f6f100-d07c-4888-a353-8662961f01dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2031454c-8f25-475e-acc5-18e755f35e3a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73521e0-c1ed-457f-8b83-76a64dcf61e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12215291-7451-4084-9458-98f1508881a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02db716-64ef-4062-a8f1-b2f282e3752f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d73daa-72b8-4827-bb13-b4e792c5941e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8515886b-10ea-4f96-8f1b-ce379d1de8bc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72b4416-1640-4d6e-a700-773f3a6e3684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92223c91-1ef9-4696-a4c1-0742f4355f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a15572d-9255-4970-976e-095e757b1aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8deb51cd-4095-41fb-9b70-09a8e9a4fea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7f081a-d2a9-4051-8ebb-28d32fdcda29",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa3302-09bd-47fb-b7e4-5cabbcca85f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641a45de-a0eb-4724-a105-fa77e3edeb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d65a9c6-5530-44ab-b99a-cd4a79281f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67a58da-bbd8-4b96-99b9-cd85989413e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8be790-c702-4f75-8a26-63c61d6b79e6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47906700-f927-4260-a244-4f15995f595a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10806b4c-254f-454d-9f4c-1f3b6e2cea0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25840643-b6c8-4672-9ffe-ed1f810ac0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38790a6-39c1-44b7-a0d6-2bb7d3ab2a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ba5b7-4821-41b6-8daa-51f4c25c20a1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3feb00-f49c-46cf-a5ca-30f7cee95b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4b35bf-28ad-4128-bc18-777bd1e19681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f53551-1b17-44b3-81c5-26491564e38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce04054d-b14b-4a32-924c-af6f378ab6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1676e6c6-4d08-41fe-aa5e-9d38ce5e5fed",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0e9ce-b993-4bc5-91fe-beb494748617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f65f67-9c6f-4ac9-9c07-3a662a901a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67826a7b-ece0-4750-89fc-9e8dd9aabbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484de5a1-b5b5-4d43-a1e7-a7c989d7c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5eb6c5-a8fb-4392-abb8-3603f78a1557",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd77cde6-6207-43c0-8c21-854c99e98e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ba592f-3177-4d7f-b753-6c0a675164fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d2b696-301c-46b3-bdab-26ff45a01b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66df9df8-53a4-479e-8ca2-cbae22f709de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ddbf47-f827-4b44-811b-d9b230398a89",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce6b32b-0188-455e-af7c-0ebf33ba1d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba351d3-70cd-4a04-b480-237f24ca2e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f649d7-5e0c-4587-b347-6d3bc9059d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cea5ddb-f7da-4e85-9ae7-7e3aa1fe65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8b7db9-d6f7-4d85-8633-93c3edf486f8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a10280-47de-423d-ae35-2902843d74fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857365c1-d51f-4767-ae99-713aa1b6b3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ac5622-5fe8-462f-b4e9-d048ef917baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e182370c-68b3-4de1-b5b8-e73469b8df4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2eabf9-56ae-42ef-92b6-872f8704fbae",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ae4e04-eb61-4c15-ba55-f3e0453b19c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad07ac73-9a0a-4828-a903-16a7c1ce78e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbf1b0f-5ef5-453a-b252-c9a0bbc274c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a77117-14cf-453d-86c0-60a9cc7179fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db72116b-40e8-4c17-a326-11568f0e0981",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaa8764-5290-4196-a008-88a877715ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4624ab8a-0af0-4382-8b59-13961a6adebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915560b8-93ec-4f29-a48e-971ad758006a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b1710-b83e-434a-b03d-83143af83669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c971d-df2a-4a1c-877c-9254094c542d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24351dfe-cdf3-4d12-b428-c1adad638a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe74a0a-ae76-4b4c-a98e-cabd11cd4cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a571cef5-21f6-4403-b81e-14387d96907f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8161db11-f083-42d1-8710-9cd7d87b76f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b5d007-92f1-479a-9c92-2a55f32a8b50",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980dc11-a786-434b-a7d0-8f8e3267fab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f715017a-c0e2-4d70-ac8d-4b9f77a8e442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60ee4a7-0756-450f-aab0-1b08ec8f66a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90432bae-a674-4733-b723-c22dd68f4749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa256773-1cf3-4088-8075-90f2deb111f2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd43415-d6cc-4de3-b9fc-2f078082daa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cffe6d7-b2b3-4099-81a2-1ebc8a6573b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53740636-f42d-4a59-9a0c-a9f508fc79cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8ef59e-527a-49aa-910f-642851e2754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd712399-2dc3-47e3-ada0-2f4f6a0166c1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5db3c6-d604-46e8-8cc0-b00bc3622fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349e1508-2958-46d9-9f1f-ac39ae0a4d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7258b2c7-0de9-45bd-bb65-610cbaa74f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e39ed03-d7b8-4931-a4a9-ee691bb7c560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6a7518-9743-482d-b053-354a823929ef",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2519870f-2596-4106-9004-46e0270cc973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9082279-cec8-4270-9e64-37fde18adad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a6403-ec32-470a-8fc7-c1a14bf03a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7093601-9679-4b40-8bfa-a8ae648e2f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79286a4-829a-4c50-8862-b43a2eebde28",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834f1067-20fc-4ee8-afff-0d098e81c730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4fc6cd-6e37-4ebe-92ea-b0ec50021daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec69f0a-04f2-4dce-bb82-65757b9631bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6806ca-9142-47fe-b8c4-917fd6eef1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b6274b-b490-4bcc-9eec-41d567afa006",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c9700-af66-446d-ac68-d93f08af1f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03f17ec-65d7-45d3-8d36-3a96c3574c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84df058b-1261-4879-8b8a-6df944024eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0ad3b4-29fd-4b05-9845-7b3b5622c362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37353cc9-ccc8-4a4f-9ddc-e876c8ea8595",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fa0ff3-8178-489d-85ce-a68a2c48c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c28455-2186-4b8a-a9a8-d36c519d7467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f20b49e-f7d1-440b-b7d6-bea0116ba891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab149d6c-1c80-44db-8469-16553a040c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d116f92-ba61-473f-84a5-1e68b08c83a9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd45470-380f-4c90-b11a-65e5acf646ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c95fde-27f7-40d1-bb30-018fae8dd38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da50aa-597a-482a-8a5d-6c605375ead4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19f3f9e-797d-4312-ae8e-63cf74c7216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaef6b2-9660-47f2-b1cd-b925ec5dc8a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8164348-a8fb-438d-9aea-f0cdaba14003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038978a8-fb76-422d-883c-880e29d75052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8253a8e9-8c8a-40bd-9c18-fc23ae85e17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36d3283-1b73-4d8c-ac9d-b2f2f0d4204e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ae929e-ca32-47cc-b841-e4b7853f069d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2a6ac9-7cdd-412a-8bdd-469d65fb133e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360bf41e-5726-45f8-a49f-415ac29f1c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b00660-ffbe-4823-bea4-567c08beb67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80817b67-1880-4b2a-bd4c-2d7299608de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab39b4f-a55b-4c56-a005-59d67a06f869",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f5516c-6a82-4aae-b95b-a4de3d9b0f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb14f44-e325-4c9e-9eee-d1bd4dcfc039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c46b68-fabf-44fd-bce3-87cae4874aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e6d6e1-3f32-4d56-8009-6221bef79cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8aa74c-8ba1-4baa-89cc-3546e5d63621",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d5a14-4c51-455c-a044-62c0a9195d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5c0b78-ef2b-4aa2-917c-e5af3ede1f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e153386-30a8-4ee1-943b-8d1a21983eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376c5ee9-7d54-4f7e-8bee-43f3ac3ab150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58f8c55-274d-426b-a4f3-bc45dbbbffd7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862975ef-b476-4a45-8830-a6bd019116c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9aed33-5421-4007-8ba1-45f0f43616b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9269534-4024-4ac7-9160-f0171b551043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e43afe-b43e-47a0-94e3-c7ad35e8f709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0517333c-928c-4049-8de0-b66dadd7a6c0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30ae7ad-610a-4d4f-bb79-08a7a84687e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff551e5-e83f-4460-94ae-50f8704e7672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efa6bb-ffe3-487e-8e65-5316b2ac9bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fc9ec0-17ef-488d-9b7f-e1e14f66f2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f94df2-fb6c-4fdf-bda3-adad11c2098a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12078649-df52-4233-9e1d-43ad66e89439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19f4ffb-5997-4ddd-b629-e3a7c4a787d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a34b817-68ec-4696-a20a-d5583ba28ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f722cfd-f9c9-444c-aeb9-039a51e729c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca986b4-3459-41f0-8a8f-1ab74d8660a2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26251bbe-dc71-4628-813d-df0015adb6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ea2c40-52ac-4926-89ce-1978d49a6e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668964eb-37ae-4a25-a150-af8c3a26b247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec63387-37a6-419f-ba12-5666513f5c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a198e38-1683-45c7-b020-201398bf5fdb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d196766e-1078-49f0-bcb4-127a885d14d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4f12cf-4607-40c1-8465-e4c0bb4c1bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa7380-3fe6-4971-a8df-8ea71d31ba56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a154dce-4cc0-454c-822c-619f0f4b5e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eba70e-895f-4d08-87e9-97224db206e5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcec55b8-a76e-4a79-a9ab-b003df662fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59dfcf72-e5e8-47fd-912a-a3cf09ea581b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b91389-668d-4707-b8e1-a5589558ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef04f69-81a4-4b15-85a1-2f2309077ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf4baf9-b3f7-40c7-b275-130844f7eb15",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9928f6-c8b3-4e11-8d49-30ef3a918542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea205ee2-80c6-4b1d-b31a-a40ea4801c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37db7600-5e46-4b64-89bb-a86929852f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a79fe0-1a30-47fd-b4a5-ba6a8fb85ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae5a136-2dc7-4e1e-80dc-0c87212d4604",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425a8b5a-ec77-4b90-bb70-e2d787068ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bf9be2-3358-4526-aad8-d8eb128afd37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f038994-1d8d-461b-bc12-c988110cbf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0728295-914b-4ef0-96f1-9cf35d824cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114cc434-1dbe-4b45-a29c-4f5de99a9d7f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236498a9-c632-40c3-b046-fe73d4f2f76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0f52e7-a70f-4f0d-bcc4-48e280b39e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da75c88-5ad1-4890-8cb8-2a56691a9954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b99c54-330b-447a-a6ce-9d9b6fc8349e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0194c9ee-39a1-4747-b7d2-0e7e06c42398",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1afb74-f704-4f9b-8ae6-3fb607213836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af361b4a-4349-42a9-8c54-364fc8d84321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e55632-5184-4e54-8feb-94f3eb6ce3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce9687e-3c57-4d28-9826-8cb6cd020ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a825502-2cb4-4dcb-a27c-04a4191d642d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a1310f-6efc-4c6a-911f-81ef8d5bfa5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b11ec50-cf8b-4633-b918-a151d63c66a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c9bdc8-33e4-46ab-9fc2-c8fdc8f10fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dcd0b6-1d2a-45c0-84e3-5f615b9630df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab15107-259b-45f4-9276-0d9d42ccd9c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c4ad1-7507-4b84-ab0e-e073a7dc9ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42ccc28-221d-4f57-8b1d-1f16d30ea308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bd46b0-f74a-4123-a382-8fa4eacde1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb53c7e-0b2e-4e0a-b7dc-f3ad40652791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00286f57-2524-42a4-9c9f-4cee5445a9bb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85e925f-d918-4ea3-991c-312d5ed7763c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dfc55d-a32a-4366-80ac-6d83c262391e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869a322c-7a37-49ef-9347-efa3344a62de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd222b82-091e-4c9f-adab-eec6bf19d21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a0d90c-7340-4596-9eb8-84d7ac776af1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149220e2-5b46-40f3-b0c7-781dd9969ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3e4891-9ac3-44a0-a46e-47c3cd18f14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5910e63e-9979-42d9-ba1e-f661960e5199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa494181-d531-43b6-86ad-a92d2b866d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc55d51-4183-422f-af83-a2cb68a3d71d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d7e1ed-f790-4998-b7e1-eb82275bcb2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0105f6-d86e-445e-b692-14b23d78230c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b42abbd-e4eb-444b-8d68-e16daba6ae77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20ff7c2-0c62-4560-9912-6f080b4c2d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9877831-23ee-4a02-801d-1893b551a774",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70208649-353c-45b8-8062-fd0a2d32662d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8acbcc-d05f-44eb-b68e-6ade511800ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eb9447-06c8-4634-a1c2-f40dd2436294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a472e6d4-48a9-4717-b21c-e3c0dcdc6f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4801b2-58f2-4bd4-8918-e5083f406c21",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2efede-19b3-411c-9dcb-91e08e70c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0a7c27-60b7-4c5e-be46-db997c616b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc91635-14eb-428d-a4fa-86bc56594b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98943dba-2494-4c40-8be7-5cc8f44ea8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dd5de2-689e-4fa5-b615-2d1a15e22eeb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c195e1-48c0-4a7e-9d90-bbfa7f52ba05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493ca212-b1f2-4ef4-a273-198fd7b35bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef959645-8213-4985-a285-e33fba57de4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21870db4-ad47-433a-8acc-2697e6d05435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066b2e63-ee8f-486b-a924-edc9707f0e98",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13af64c-1766-4886-8f48-ab15254e7823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6770ad0e-9a3b-4c06-ad44-c07ca1ffbca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134b4cc3-86cf-4b6a-ad32-b2724c0c5769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086ee891-db38-4103-9dd0-14a7d4da5aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ccb6a3-578e-4cc6-b089-87f659257169",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace6aaa-8542-4102-9385-48c9bf37633e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2428f80-b4a0-4b63-92d2-8ab2d258c42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabacac8-4501-48dd-8832-5ecc30c3a20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0881bab2-a4c9-43c3-9a32-c6330cd75337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00993a75-eb0f-403b-8f52-e1a15809622e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa781e5-277b-4e4c-a7f3-44dd90b8c2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ae2b8e-50e0-40a4-be57-33a739ae3b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30de2a31-b9a6-4a35-916e-b391dbf44b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81465d9-a775-4566-a254-23d3a93f5800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd07734-a267-48d8-90a7-d0e20cf24df6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a355396-f6ce-4e2b-9223-abd0e8041a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae072c34-de61-4256-aaa4-fbcf7105b3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9bdee6-46a9-4145-a51e-1d120c552bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab870ba8-fea7-45b2-897c-f2160af3f0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc440f1b-5282-47b4-9fb8-494532eca4d2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecf9351-4fbf-4aae-9d4f-36dfceba9413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6348243a-fc8a-4f78-aac1-c324d1c34205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683f5844-a4a4-4ecd-b1a5-ea25c1147325",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03aa4df6-508e-404e-af79-d041ae95dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad444a21-67c0-4390-82a3-b919bad49d89",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ec55e5-15f7-4dca-8c76-84c6f7165b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41db396-2692-41e9-be7b-ae32106e86e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06d5ad4-3ba8-4e89-97be-cd09a5abf096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0095025-d33c-41b2-93d5-3970bfabc141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d910d76-0470-427b-a774-81e1f9c9fd0a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afebf9-ec50-44f9-b21a-4872e0454eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbc0d9b-52b8-41c5-9348-4790fee4e637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3416e37-fea0-43ae-8c3d-214fc0b486eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723f3a50-5508-41b1-99c9-f8f4d0288605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffb19a5-31c0-40e1-aa64-47a49118a570",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3503d13-01f3-4e87-b65c-ac5567418193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f631b04-56db-46dc-bc43-bb71cb44a32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b09f351-58d8-49fa-b0c4-0a0be8aef2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10e14b1-0b3a-425e-aed5-f76941e80c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1c14af-27b9-426e-a470-89565931398b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1030bcf-81e0-43ee-9ea1-ad224ba7c07a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d800edfb-c07d-42a1-b8b2-c8f5c6ef2fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8746adcc-333a-49f6-a10b-5ad29a87ab7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4409d9-d2d7-4e7c-8cd6-7355df2ca440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065109e7-23e2-480b-b45f-3929a1c7fa06",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef5501b-02a7-4c53-84b6-832f645f4e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7370af03-a7c1-49ae-aae1-ea0e9573d9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b29df9f-7149-4921-a9c4-9e1ec810fdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cae2f1-a8ab-46b6-91e5-aa20727e2f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe7ca7d-e974-4a7b-8670-b597b0963be0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5202645e-adcc-4732-852f-4c4f7dc96a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d69606-11b8-425b-9465-77775eb89260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28cc83-b022-444e-8387-a86ae5202a8d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00634150-bf36-4fb2-8738-5e0418fa4370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892f87a0-717b-44e5-be42-0379e54c6dcf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7851527-5c35-4f02-8c96-39aa06c5bc19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b35ed8-36d0-4615-a0b1-e4547fc09983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a48c6d0-3f37-4749-a9e6-1158d00e854e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8278cbab-d30f-42cf-aca5-1bd0a35a39d4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81325008-bf83-457d-909a-cbcfd4f3bdf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1be4048c-718f-4529-94d8-413c0d5fd675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6900b1a9-db0e-44a4-a215-cb9d7f4e9052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f78bd7ba-a617-4fb5-b42f-40045b241ed6"
                    }
                  }
                ]
              },
              {
                "id": "98171903-8432-40dd-b919-741d3859a62f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4a55022-df4a-411b-bbd6-59c85b007264",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b76394a-b5a0-4934-b8ad-6405bbe53a43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc1ebb9e-8926-4cdd-a05e-5ef6a7e172d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca273c2-b72f-43bb-8a01-dc0bfc9f592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83b7f91a-3559-4142-b754-383f2fd195d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "791b8c44-a8c1-4227-b584-02c00c20e8fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e831f2-dc63-49fd-b0ea-cd5585c31c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b936348-35f9-4279-8e39-3ac3e6b2a616",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e808064-fef6-41c3-8360-0da0590a6af2"
                    }
                  }
                ]
              },
              {
                "id": "5e437e12-4737-45f5-b4fc-c057b96a3135",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "61e0480d-e094-46cb-aa00-ba49b7d24ae5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe7e9e5-bb62-4b88-90dc-cc59bb0b2e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6698000b-fb2f-4b05-b18e-7273191a1271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d318ca3-d41d-46e2-a9ae-61a7f50b0ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d47d12b-1c56-48c0-8643-4a7b61011efc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7124c89-c72e-4a3f-a5ba-04489cb88eaa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75f43b11-4d0d-4ae0-9f56-a5edbc812c3b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31b78df-62c8-440b-974a-aaa8f718fb2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "042d45df-109c-4145-8c61-7305ef557be4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2ff4823-2f5d-4d36-9b3b-a6bc8b2d5b57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6a7ebbe-c545-4af0-9349-36eedfa83e63"
                    }
                  }
                ]
              },
              {
                "id": "083ea3e7-9b9e-4fbb-bee3-a040a38aab00",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87148365-eeb9-4088-b0be-dbd3faf50551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2c3e744-0b93-4700-b759-8310095cc3ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b95c0cb-6909-41a7-abdb-cd74d93b94bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8aa7cf-c87e-4ea7-b0c6-e4c09668c347"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4874260c-8067-4751-94f2-e9fb79f183ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5b7c2576-8ef5-4629-a8a5-cda0c57a3e00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7638777d-c00f-4d0c-b09c-0d377d01ff19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "536ca83c-bdd4-413c-b2f2-96750a65779f"
            }
          }
        ]
      },
      {
        "id": "22a87c0c-6ef7-462e-ba0b-a0d3fbee976d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d0b2273c-e617-45eb-a916-3584542f9c7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16d84906-f846-4966-9864-bb799476ee78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07b76b4a-cc5d-4a39-8edf-8f5b60b67297",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab1b972-6ebd-45b0-b9ac-0999314c3475",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "63a8d53e-0e4b-4c4a-94f6-97a952d9bdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dad99d-7c76-4eae-93f1-132a8aaadf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aae724cd-0543-4ff2-98c4-9946b1dafbd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "533a66bc-9374-496a-9080-f9ca291571bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a58cd1bc-c327-42ba-99c5-4f4962fea0d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7989160b-ff6b-4947-9a86-490cfbcd6bbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2090dd-361a-49db-b89f-4a8ab60636d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2088296-0e55-4be2-b59d-c5db23dfbadd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a244919-5581-4c02-b9ac-f3465a76dbfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b3a3509-a646-4964-b166-0f64551c528c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d8ac20d-32cb-44de-813a-d6a31c35ec42"
            }
          }
        ]
      },
      {
        "id": "fd01b4d4-b285-4fac-a80c-dce012574c07",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e6bbc92-1cf7-4610-8bac-daf841f56a8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "482c6543-27d0-4bd0-b69a-1869522bbfd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd702142-01fc-4c3e-87f3-48c2ce99502b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9fed41-7297-423a-82a2-f9f920e82e1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db0a0b00-4f6b-4509-ae24-08faab9a0cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e819f301-51b1-412e-887e-61826ba99405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8256c33c-59a7-4b05-9c01-e1a3d22cc6f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3c00c04-1793-4762-9419-ba64838cabff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15c07895-7312-4c69-99b1-e2e4a0431546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bb10b86-5560-4bce-b9a4-94150e7aa374",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3cfde4-1d75-4327-8973-36cb6f39cd3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89008e04-0687-4e5e-9860-1bf6ebaaaa5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "904bf220-6d8e-4357-8b87-13c33cd9ed8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f510206d-acf0-4fd5-bb6a-d74f6d51c52f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38ab4709-f0e6-4e52-91bb-3d90af46e9b9"
            }
          }
        ]
      },
      {
        "id": "d7be9c74-baa2-45dd-8560-6af062a7088c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9333c6de-39b4-4007-9010-92476fa42e0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aed37689-291f-4289-a828-177e734f7d81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7f3d04c-8f02-41c1-9733-68bb429efc17",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e69a69a-83a1-4705-a53b-2ac7fa8027f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1bc2541-dc2f-4990-b17d-04dca5483e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc74818-1d6a-4f15-8f98-b98bdcab2a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f92714f3-9e6a-4cfe-8757-581b1bc03d85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c852da-5805-4885-a8d4-16ea85945df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "873178e2-bbbf-4475-8e30-3661c7c9a810"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48710bfb-d51f-4dbc-8625-3463f1b17b9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94e84c66-b0b5-4524-bd80-85063409d0df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "709526d8-a72d-49f9-9ba4-2b88cfd911d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eefd3dfe-6487-4a72-afe7-8078ba7f244c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dbd8f8e-dbed-4983-b4fa-1271415b2fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f11a6902-9bf9-4d19-b58b-bdaa6c648179"
            }
          }
        ]
      },
      {
        "id": "4323b1dd-f594-484f-814a-fb6375b01e3b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "445f30e4-7b19-44d6-9d8c-ab780e37a0a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5d98560-9cc7-4e4c-ac47-4745a7f21c66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d710d1e-091e-4638-bc1d-dfa244fa3162",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8352b726-e882-470d-8d01-6aef27742e4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53bcb887-5003-4347-a992-c235a4e6fd3f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 303.63380281690127,
      "responseMin": 9,
      "responseMax": 6666,
      "responseSd": 812.3450706362091,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692664318392,
      "completed": 1692664417621
    },
    "executions": [
      {
        "id": "87b5fea2-116a-424a-aec1-83ece4d3783a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "758b1b12-e67b-45aa-91ef-e5dcf19608b9",
          "httpRequestId": "26be2977-85f5-4b79-b064-3a9f2f04f6bf"
        },
        "item": {
          "id": "87b5fea2-116a-424a-aec1-83ece4d3783a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0ab8898d-1c3b-4bb8-ac1c-8422a6b2223c",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "7dcfb846-91aa-429e-b60a-85aa37ee2a18",
        "cursor": {
          "ref": "be1153eb-d749-4588-92f7-2310fa428350",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8d18e176-d58e-4965-9a96-59c8fa14aa66"
        },
        "item": {
          "id": "7dcfb846-91aa-429e-b60a-85aa37ee2a18",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7d29526f-eabe-4542-880a-4b9357407cfa",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4d0167f1-bf65-4e06-b8a6-d571b3d5f8d9",
        "cursor": {
          "ref": "2b198901-08ff-427a-80f0-1345c4501c55",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57c2d41c-555d-4634-a553-41469e1ecc05"
        },
        "item": {
          "id": "4d0167f1-bf65-4e06-b8a6-d571b3d5f8d9",
          "name": "did_json"
        },
        "response": {
          "id": "0c143845-a30a-4b57-8415-fefa222f749a",
          "status": "OK",
          "code": 200,
          "responseTime": 1517,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637ae326-bf78-4847-8238-91fd22596dc0",
        "cursor": {
          "ref": "c26f926e-d1d6-4224-bbd1-840c75fc9bc5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b517cf95-61b7-4778-a3af-6710c63c293c"
        },
        "item": {
          "id": "637ae326-bf78-4847-8238-91fd22596dc0",
          "name": "did:invalid"
        },
        "response": {
          "id": "123566a6-faf9-4489-a266-e65d87cf9bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637ae326-bf78-4847-8238-91fd22596dc0",
        "cursor": {
          "ref": "c26f926e-d1d6-4224-bbd1-840c75fc9bc5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b517cf95-61b7-4778-a3af-6710c63c293c"
        },
        "item": {
          "id": "637ae326-bf78-4847-8238-91fd22596dc0",
          "name": "did:invalid"
        },
        "response": {
          "id": "123566a6-faf9-4489-a266-e65d87cf9bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69350f-ab8b-45ea-8772-fb27ca673680",
        "cursor": {
          "ref": "5c9c3bd7-0182-42ae-b045-0005848d9b30",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aa1a84b1-45a4-4479-82bf-f12f2fb8228c"
        },
        "item": {
          "id": "dd69350f-ab8b-45ea-8772-fb27ca673680",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ebf55347-98e9-4a94-b812-0b85d95aa9ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 380,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ba7b94-76e6-4928-947f-ef8479d66954",
        "cursor": {
          "ref": "ae0fd6c0-660a-430b-9ea0-398c1fa08325",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7585013b-e35d-41d2-a092-f69e9a492c61"
        },
        "item": {
          "id": "58ba7b94-76e6-4928-947f-ef8479d66954",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c12c4aa5-8a69-4740-b3b5-2880b564041b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 287,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879ea049-8eb7-4866-a4e6-5bb8e792db65",
        "cursor": {
          "ref": "186b7dc2-2795-4d18-949b-e4bd811fdf27",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c93b4748-d7ca-4e00-a70c-3137058589a0"
        },
        "item": {
          "id": "879ea049-8eb7-4866-a4e6-5bb8e792db65",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1016e920-2c57-4a92-b85e-a5b397ece69b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa1a099-a6fa-4758-9637-e07913f4804f",
        "cursor": {
          "ref": "9357bac2-e6fb-4b6e-a96a-6586d0c0177e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d01eb8e4-772c-4dfc-8801-311f52c4bc7e"
        },
        "item": {
          "id": "efa1a099-a6fa-4758-9637-e07913f4804f",
          "name": "identifiers"
        },
        "response": {
          "id": "95086540-ca40-4615-b148-0e152375bd98",
          "status": "OK",
          "code": 200,
          "responseTime": 1164,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd01bef-a9bc-4fd4-b60d-44071b152e58",
        "cursor": {
          "ref": "9bf65360-0b5a-4a7b-b63a-339bda40379f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "117010ca-afbe-46a5-9ebe-d930510ac57c"
        },
        "item": {
          "id": "1bd01bef-a9bc-4fd4-b60d-44071b152e58",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85fee477-99cb-41b0-8627-a3764fb99d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c443de8-691b-4d60-9e1d-0281adec8466",
        "cursor": {
          "ref": "d4e72530-93b6-4f0f-83a8-7b0d16dcbbe2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "10d9f845-1ebc-4273-82af-7569c92dfb53"
        },
        "item": {
          "id": "8c443de8-691b-4d60-9e1d-0281adec8466",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6e646fa-fe22-498d-b4ec-fd5488794128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84573088-06b9-4a18-b725-eb76581a01e0",
        "cursor": {
          "ref": "77dac25b-6709-4e02-8817-e3e0490f071a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a08affb-5676-4b0d-b3db-3f647cc15f28"
        },
        "item": {
          "id": "84573088-06b9-4a18-b725-eb76581a01e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9cef789c-5d90-43e9-bb07-14fac3b72ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c023def-d8a7-496f-a74e-388daeae3246",
        "cursor": {
          "ref": "8b1d29d5-8978-46ba-8a97-b84eccad190a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db7bb4d0-f234-4068-8edf-08f9705ae61b"
        },
        "item": {
          "id": "3c023def-d8a7-496f-a74e-388daeae3246",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fd667663-2065-448e-988e-73eeedbc2db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf57e600-7055-4c49-8e15-0a8196a9a2ec",
        "cursor": {
          "ref": "bffdb624-ca00-4387-a4de-cfad69e83eb6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6ae1477-2870-427b-8040-2223b94ffdaf"
        },
        "item": {
          "id": "bf57e600-7055-4c49-8e15-0a8196a9a2ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "da20830b-4bd3-4b41-a47f-d96550b022ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dcd3b8-6d38-4630-b4b6-74b3b4b8839e",
        "cursor": {
          "ref": "2bb1bb3c-80de-43c6-9444-35ca3aa65c85",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99071b37-bf99-4004-95b1-4500ac9f89af"
        },
        "item": {
          "id": "43dcd3b8-6d38-4630-b4b6-74b3b4b8839e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ecef5725-a032-4355-856d-15bb59cf3a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3072f842-3b9e-411e-878d-d2d8319abe68",
        "cursor": {
          "ref": "019541ea-d7ef-4253-812a-65fc6163c65f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da19f24b-078a-464a-8c7d-dee0017ea5a4"
        },
        "item": {
          "id": "3072f842-3b9e-411e-878d-d2d8319abe68",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1e80dbc3-3979-4e0e-b0cf-99acc53b850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165b6ab5-1cf9-48cb-8414-a6557fcce682",
        "cursor": {
          "ref": "d31cb8e5-f375-4dfd-87e1-aa60debd2505",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d9fd7174-8a63-457c-9ff5-c08d4642c46a"
        },
        "item": {
          "id": "165b6ab5-1cf9-48cb-8414-a6557fcce682",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "085d01a2-2e1d-45e7-bfda-1f39fe6d1a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec515c-3c1d-4f45-8be0-c4d8897ed436",
        "cursor": {
          "ref": "61c04faa-802c-48b1-892e-33cb9c52b32c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "aedea11a-0021-473a-aa26-456de25c6c07"
        },
        "item": {
          "id": "80ec515c-3c1d-4f45-8be0-c4d8897ed436",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c1d0edac-d707-4cba-9991-8fd254d63722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3803c0-54ff-4a84-999d-c67ec00bd869",
        "cursor": {
          "ref": "7c4f200f-7f2b-4ffa-a1ca-7ddb32194e26",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3f374ba7-551c-4f36-b756-10effbafe7c8"
        },
        "item": {
          "id": "2c3803c0-54ff-4a84-999d-c67ec00bd869",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "acf106df-89e9-4052-9fec-d70a3609b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce84a98-554c-47a9-bd03-ae52dc5a46f7",
        "cursor": {
          "ref": "6541fcc3-e49e-4e58-a0ed-be0b8a371889",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "57ecbde0-cf43-4db3-b0e4-0e1b8d136d77"
        },
        "item": {
          "id": "4ce84a98-554c-47a9-bd03-ae52dc5a46f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc4883a4-dddc-4cc0-aedf-7a0894624e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d840c5-fb31-4dcd-87d6-5dbbbf0a4786",
        "cursor": {
          "ref": "30b09edf-b654-439b-ae0c-f1513d9df578",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b37ba96-243a-46c6-aed0-a3da1fc7ff0f"
        },
        "item": {
          "id": "e1d840c5-fb31-4dcd-87d6-5dbbbf0a4786",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4d52f824-0ad8-4c69-862a-8b89e5a8138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883f0bf-e55a-4250-a741-e3d19ec969be",
        "cursor": {
          "ref": "7440aee2-8beb-4a7a-892a-113a6bd107a3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7810ce86-8bbc-42ee-9560-294ff3af49c5"
        },
        "item": {
          "id": "c883f0bf-e55a-4250-a741-e3d19ec969be",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0d9aa4cb-5390-41d6-a8f8-adafdf9983c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bb6e98-a1e8-4bb7-8fb6-2b653c01adbe",
        "cursor": {
          "ref": "1ef3c443-4ab5-498f-a235-519e62d11d84",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f3a67c9-545c-4102-add4-09deb074fc85"
        },
        "item": {
          "id": "70bb6e98-a1e8-4bb7-8fb6-2b653c01adbe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2faf5064-49a7-48ed-a2ac-cf0f63bc7287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fed42c-5713-4070-b700-2ca64d97686e",
        "cursor": {
          "ref": "6d1e3e50-8f81-4507-867c-dc39afcc1eee",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e6b3ea4-d1d0-4fbb-bd68-0e633176ba0d"
        },
        "item": {
          "id": "f9fed42c-5713-4070-b700-2ca64d97686e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1935c4d0-0b88-4136-bbf2-1083adf47382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd915e9-2528-4533-9edd-fbcb66e868b2",
        "cursor": {
          "ref": "e9b49efc-3c7b-4249-90e0-5b8722ee6355",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "264d09ea-d4ec-41a9-8bb5-f892c18fe4af"
        },
        "item": {
          "id": "4dd915e9-2528-4533-9edd-fbcb66e868b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ec28e273-c077-4263-be4d-76a5f8d6a911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5296b63-a448-4ca1-83ed-c4a43ec9a663",
        "cursor": {
          "ref": "c50aa764-d5b4-4635-bc14-6b5f5eb4bcad",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4d9985c4-b6f9-45ab-972d-95f64324a13a"
        },
        "item": {
          "id": "b5296b63-a448-4ca1-83ed-c4a43ec9a663",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "942d81a6-6e40-43ef-8a2b-9a84873342f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd46ba1a-b20b-4265-bb7f-31496053a112",
        "cursor": {
          "ref": "4c18983f-bba6-47fc-9020-fae7f5ace31f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4e93b7e9-6f6c-4897-85b1-75e2c3cbd3bc"
        },
        "item": {
          "id": "dd46ba1a-b20b-4265-bb7f-31496053a112",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d367a5f8-acca-4150-9cec-4e34d0cfe126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64946fac-6844-47c2-acf6-3cadc1b65e10",
        "cursor": {
          "ref": "fd9b8c20-38c3-4248-a09e-8f1f51756cdc",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0d6e62a6-9ef7-439f-b907-03c211f363b8"
        },
        "item": {
          "id": "64946fac-6844-47c2-acf6-3cadc1b65e10",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01c92c0d-c4ef-4670-ad01-bd76060eeb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1584b6fa-4541-41c4-adcd-118326849021",
        "cursor": {
          "ref": "ea9f38a9-592c-4b42-a3de-63394923f238",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a1a0e116-631b-4572-a699-49b0ddff4455"
        },
        "item": {
          "id": "1584b6fa-4541-41c4-adcd-118326849021",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3cf862f3-1755-4c7a-bf78-523a9b926cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656d794b-29bb-4559-963f-6fe2fecacb77",
        "cursor": {
          "ref": "fa4198f9-38e1-4afb-8dcd-d54fbde23afb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "221bee3e-35ba-40a6-a104-edbdaa257fc4"
        },
        "item": {
          "id": "656d794b-29bb-4559-963f-6fe2fecacb77",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d546a1cf-a395-4dee-8904-d61aefc51a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e0893d-e3ae-42b3-9f9a-cd72415e9d50",
        "cursor": {
          "ref": "63119bad-8428-4b0a-b94a-a6d022db0cbb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4394a265-44fd-485c-8e87-83d5cacb3128"
        },
        "item": {
          "id": "a0e0893d-e3ae-42b3-9f9a-cd72415e9d50",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d055b768-0ae9-4f62-ad88-ae6d3f75df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa84ebf9-a95b-440f-b504-32dd7f518c77",
        "cursor": {
          "ref": "13269cfb-571b-40ee-adf4-608958d921d4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "975e8d27-afda-45a2-b048-dbdb8d073357"
        },
        "item": {
          "id": "aa84ebf9-a95b-440f-b504-32dd7f518c77",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "63c82fbf-b2e9-4f09-9551-cf0dd8f6ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f534ca27-eab0-4aef-81ef-aec4e2d983fc",
        "cursor": {
          "ref": "0655a88e-e46c-43ef-bf5c-930f5c70e3d7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "051a93da-663d-4217-b6fb-e2e1a7e4fefa"
        },
        "item": {
          "id": "f534ca27-eab0-4aef-81ef-aec4e2d983fc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dc73b9d7-9705-468a-aa15-b88fc887ca65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a13a36a-575b-47a9-9a73-63b9d6238759",
        "cursor": {
          "ref": "f99baab9-e5b9-42f7-8a6b-7baefcdc2ab3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "db55c796-dba5-48fb-bede-dfbed68e3642"
        },
        "item": {
          "id": "5a13a36a-575b-47a9-9a73-63b9d6238759",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c8b9757-863c-4814-bd99-21b2d30b03f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50189194-cae9-4bae-a656-5d160bc0e233",
        "cursor": {
          "ref": "0a4691af-4929-49f8-9d51-5cb95b19a283",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f27918f0-b36d-48d2-b143-3ec142f37a43"
        },
        "item": {
          "id": "50189194-cae9-4bae-a656-5d160bc0e233",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cf8a82a7-836d-4ef0-9625-5f56da649159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a20b34-f7b7-45cd-a849-46706acc06a9",
        "cursor": {
          "ref": "a2e60b9c-4062-4359-922a-119a2c5660c8",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "10328143-6b35-4fa0-953a-b5fc04f6078c"
        },
        "item": {
          "id": "54a20b34-f7b7-45cd-a849-46706acc06a9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea0da23b-a8b7-4cf2-8d03-9d7efa3f0f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed61c2d-ee10-4509-9c48-cbd17164c31b",
        "cursor": {
          "ref": "34dbf45d-7af4-4be3-8ea0-15a5d7d1604e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ab530b16-e9a8-4360-b416-b263441894fc"
        },
        "item": {
          "id": "9ed61c2d-ee10-4509-9c48-cbd17164c31b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d5af3aa2-be74-4516-8ade-84bd1fdcf6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f49c82-7193-4de7-9d2c-1801db990676",
        "cursor": {
          "ref": "8bfc7ccb-6fd8-443b-b0de-199ddbf97d37",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31c1eed9-c853-4408-9d32-0f01819cfd07"
        },
        "item": {
          "id": "f7f49c82-7193-4de7-9d2c-1801db990676",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7ccd98e3-9c7d-41e2-969c-0631fcf93331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825af6c8-1ee0-4324-9ead-c1afd5672687",
        "cursor": {
          "ref": "dfe01512-4c28-4edd-9401-79ec567db25b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d05f9b7c-cd08-417b-b853-433521ef88ba"
        },
        "item": {
          "id": "825af6c8-1ee0-4324-9ead-c1afd5672687",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4e470be1-98ac-4f27-b86b-e45a99bcaf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c977870c-b7a1-4278-8388-9bf59bee0ecc",
        "cursor": {
          "ref": "bdefa07c-c70a-4031-bedb-c7c6e5f9a442",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "418336ce-4709-4ece-a95a-75e52bc40b77"
        },
        "item": {
          "id": "c977870c-b7a1-4278-8388-9bf59bee0ecc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22508b2c-871b-4e48-9e44-5599925b4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfa6dfa-ec83-42c6-8ce0-bf3afa51752e",
        "cursor": {
          "ref": "54273b6c-5cc0-496b-83dd-0d36b63b904d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6b6189f1-d596-4f06-b51e-2cd5ff022b78"
        },
        "item": {
          "id": "1cfa6dfa-ec83-42c6-8ce0-bf3afa51752e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8d00f9a-c32e-4b6b-a535-381274cf12bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4b56b-2361-4ac8-ad17-590412a531c3",
        "cursor": {
          "ref": "76bbb85e-a971-41a3-ba57-f3c6a600c6bb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ee9d52de-9853-4380-a3dd-3f4c203ca141"
        },
        "item": {
          "id": "12c4b56b-2361-4ac8-ad17-590412a531c3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b7ef20eb-e3bb-4da4-8679-fc47a4212ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e71677-0adb-454b-817c-2b4afcea1d32",
        "cursor": {
          "ref": "7d2d20d6-b7ba-4f3d-97f0-d95f668e35d1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5261364f-3f45-4a00-9d8a-fe121339beb8"
        },
        "item": {
          "id": "02e71677-0adb-454b-817c-2b4afcea1d32",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5cbe7ad-1a3c-43e4-b980-73d3c556bac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7303701-dae0-4ea5-b78c-cc90f9a18ed5",
        "cursor": {
          "ref": "e01e6e96-1c94-42f3-8277-10032e2d224d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0d9bbeaa-2e9c-49a7-a80f-9ea012b08138"
        },
        "item": {
          "id": "a7303701-dae0-4ea5-b78c-cc90f9a18ed5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3516dc1a-37bd-46d2-b03c-f148e73e6d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5705cbd-396c-49a6-b7c6-047a13d112a5",
        "cursor": {
          "ref": "c3c73c3b-ea5b-4512-a505-e868f659e2cc",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "90bdaba0-a42f-4871-8f34-b4a05f180564"
        },
        "item": {
          "id": "b5705cbd-396c-49a6-b7c6-047a13d112a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "89a9b39e-255d-4a00-9901-8327598cb913",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 585,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa19d43-d764-4392-a9ad-bd06b5bf75ee",
        "cursor": {
          "ref": "34156d3c-3399-4004-ad68-4173e913c7ed",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "83f6285d-9a76-4554-ab19-ab708099dc75"
        },
        "item": {
          "id": "6fa19d43-d764-4392-a9ad-bd06b5bf75ee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7db85258-b041-4687-a7d9-2cb67482e0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a30e78-6c17-4fb6-983a-6ee01422ec5c",
        "cursor": {
          "ref": "9255fef1-d101-4069-816a-6bc7f57f3066",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8a2d8971-0bd0-4821-9593-d0ba7b3748b4"
        },
        "item": {
          "id": "53a30e78-6c17-4fb6-983a-6ee01422ec5c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7606bba-fa55-42fe-a61f-00318764b4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc064b-6836-4d4c-a52b-b0163deb6115",
        "cursor": {
          "ref": "73204c0a-023a-479e-be33-8430d0c2ba07",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "de4e52ba-f008-434b-83b6-c5fe004688d2"
        },
        "item": {
          "id": "41bc064b-6836-4d4c-a52b-b0163deb6115",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8499952a-61c3-4458-b02c-ca0b9de79b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbe4d11-aced-4e1a-a0a1-8037b505bb05",
        "cursor": {
          "ref": "ed76735f-4b45-4612-8765-c29592d23a7c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "42d80c48-072e-4e9e-9692-55302f014577"
        },
        "item": {
          "id": "7bbe4d11-aced-4e1a-a0a1-8037b505bb05",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c740bde-2459-450a-995f-79cf60258e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75449878-c516-4456-8109-7dd8efea66c3",
        "cursor": {
          "ref": "68fe246d-6c70-4592-a85c-5dddd32e0f78",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c65e1f24-89a2-4ed3-871a-caef63b178a9"
        },
        "item": {
          "id": "75449878-c516-4456-8109-7dd8efea66c3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0192be12-87c4-45b1-8c8e-d85ae263a4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9872f4-02b6-4437-bf3a-375f0b5a2ccb",
        "cursor": {
          "ref": "8a9129e9-e09c-40a6-85a6-077fdda4945c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f7b1ecf0-049f-4355-bf0a-698ad148051d"
        },
        "item": {
          "id": "9d9872f4-02b6-4437-bf3a-375f0b5a2ccb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f718b322-7669-4fd5-8e86-1851fa1b9775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc6eac2-7946-4243-b2f0-b94e94e3c547",
        "cursor": {
          "ref": "b80a7224-22eb-43b8-84f1-eb17b6389189",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18c22004-fc4f-4944-b64f-40bafe782046"
        },
        "item": {
          "id": "4bc6eac2-7946-4243-b2f0-b94e94e3c547",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d125072a-eb1c-423c-b3bc-21bd65bb4019",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9c0ff-0661-4f66-b7d7-965f4000297b",
        "cursor": {
          "ref": "215e68a5-1700-4cba-9426-0014a9e2b97a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "670913cd-8e0c-4bb2-92ec-2b8545e6fa61"
        },
        "item": {
          "id": "44a9c0ff-0661-4f66-b7d7-965f4000297b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a1c9dfc0-89de-4053-8cc8-12fb201cb6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ac9003-0268-417d-a006-5e7d6a0ebeed",
        "cursor": {
          "ref": "19f33516-a541-4983-b6ae-9b5988d810f5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "237bad23-cbc6-4bfc-a2e7-b2dd9351e4a8"
        },
        "item": {
          "id": "75ac9003-0268-417d-a006-5e7d6a0ebeed",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ef00517-2d9a-445e-974f-2f5bae49006e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b361417-9479-4284-b83d-b1ce1615fa4a",
        "cursor": {
          "ref": "9d47e276-47eb-4dea-bf9b-6e1caa4caeaa",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "67cedc3a-531f-4ad2-9b09-9181aa08bbc8"
        },
        "item": {
          "id": "9b361417-9479-4284-b83d-b1ce1615fa4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b17cb4c3-d911-4e9c-89f5-2767a9ebfefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b08b2-bbe5-4542-8b84-486a246ccfec",
        "cursor": {
          "ref": "2eb22262-b41e-4406-8143-9fdee3397d9d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c3765abe-97f8-4811-a492-ead7ac3de6ef"
        },
        "item": {
          "id": "f87b08b2-bbe5-4542-8b84-486a246ccfec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8cda0df5-3147-4b8c-8cf2-61f9203687bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb409bd9-a2cb-4c84-9bdf-68e63aad42f1",
        "cursor": {
          "ref": "25c72d3c-932f-4111-b4d9-3eeb55a3249c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "33f14358-cbc9-4c56-84e5-276ac4de75f0"
        },
        "item": {
          "id": "cb409bd9-a2cb-4c84-9bdf-68e63aad42f1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "90d7e6d1-d5c2-4534-a799-3983d15a28b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72de8cdb-1140-4696-9ed2-0ef97b137002",
        "cursor": {
          "ref": "71d6e022-c37b-42df-ab29-62cdaab631f6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9ec37259-98f7-4571-8310-ce36c581d00a"
        },
        "item": {
          "id": "72de8cdb-1140-4696-9ed2-0ef97b137002",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b8f9d83e-321c-4b11-ae8c-b07e19444a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c534e-1fad-4ec0-af65-a44b960134fb",
        "cursor": {
          "ref": "ad50b3ec-f062-422d-98f6-d6c28d3a0412",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "822f368b-8ef1-43f7-a765-cf00c557eb9e"
        },
        "item": {
          "id": "3d4c534e-1fad-4ec0-af65-a44b960134fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1ff28d94-be1b-4bdb-8d7b-4495dc8df3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29b1bc4-1270-4bd9-916b-0445d6938a45",
        "cursor": {
          "ref": "2dc5a10f-86f4-4951-8201-aa9c3082b0ec",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "627fb49c-abd9-4144-9ed9-3c4e9fc2648f"
        },
        "item": {
          "id": "a29b1bc4-1270-4bd9-916b-0445d6938a45",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "56ea44bb-c891-4d4e-a7e9-4eba306cd6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84cffe9-6320-4799-a961-66197a96e47d",
        "cursor": {
          "ref": "69525732-25d6-4179-adbb-6f48c9f53b7f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "87da927d-48b9-4e7d-8536-ace102ec6797"
        },
        "item": {
          "id": "e84cffe9-6320-4799-a961-66197a96e47d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f9878839-86cd-4ed5-92a4-a828db4e4f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f253b-b54a-4364-a618-43f5580258d1",
        "cursor": {
          "ref": "af78babe-6547-4dd9-96f1-18cbe1f7743c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c1330dc8-2828-4d52-ac38-fecd8fc5335b"
        },
        "item": {
          "id": "398f253b-b54a-4364-a618-43f5580258d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab82b822-8548-4450-a7ae-fcd95545d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469ce240-cdb6-4998-8f46-12d4ea78610b",
        "cursor": {
          "ref": "f6b382ea-b424-41db-9892-eadeed766b93",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bba516d2-deb4-4cb4-9c44-bfd861136d2a"
        },
        "item": {
          "id": "469ce240-cdb6-4998-8f46-12d4ea78610b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ce15e4b4-dab4-4ce6-891e-2a4936f1129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1867ca21-f1fa-40cc-b06d-39a894cf681c",
        "cursor": {
          "ref": "ba66ebc0-1720-4082-af77-235c1d261fea",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c3efdac1-c18c-4f78-a6cf-e75dcf1d7484"
        },
        "item": {
          "id": "1867ca21-f1fa-40cc-b06d-39a894cf681c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c039047-dbb7-4b60-b30e-4418ecfdb9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c8d89-67d2-4dc1-bcec-c8810676cf44",
        "cursor": {
          "ref": "4a309616-c141-486a-940f-d42bafb0a38c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c012bbb0-4dca-4b80-8731-e1f52c97fc8b"
        },
        "item": {
          "id": "630c8d89-67d2-4dc1-bcec-c8810676cf44",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5fd39713-1976-476e-a57b-9146a3555108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d76e31-6c23-49b4-8f63-b12e8901688f",
        "cursor": {
          "ref": "ae11aa26-3fab-496a-bc8e-d3a1c187d366",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b2918375-084f-4958-a196-a293b96a2b1c"
        },
        "item": {
          "id": "80d76e31-6c23-49b4-8f63-b12e8901688f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9acc8e7c-db97-463a-b078-0323b7495944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40306ec2-3a9b-45bc-9208-79738696a644",
        "cursor": {
          "ref": "dbc6c29d-7bc5-4c05-9422-cdd9f3356678",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "07b4213e-6c31-4377-ad65-666b538bcb1b"
        },
        "item": {
          "id": "40306ec2-3a9b-45bc-9208-79738696a644",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "932b6fa8-756e-44ee-9b17-ca5bda57e751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcf7ed0-f836-4414-be1a-67b58121d5a4",
        "cursor": {
          "ref": "142183a8-4ea9-4555-9b60-2d8e4e2d1e5a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ab92bf4d-3bf2-4fbc-807a-91fc882d5a71"
        },
        "item": {
          "id": "fbcf7ed0-f836-4414-be1a-67b58121d5a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fab5e923-1293-4a90-8cc1-be78c9d3536c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4168112c-4be3-4697-8e00-4b1dda499e5a",
        "cursor": {
          "ref": "2c4e2265-17b3-473c-af0c-5686076070b7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f226afb2-320d-437b-b6fd-83be1b4f3570"
        },
        "item": {
          "id": "4168112c-4be3-4697-8e00-4b1dda499e5a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cfbf4c93-664f-46a3-8011-f75f0ee7362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe126a51-874c-4d7e-a7d2-908093007f5d",
        "cursor": {
          "ref": "5f85708b-3e8e-4523-8310-75e7b95ccc43",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "84339456-6bdc-4f2a-b308-c16d1488f9d7"
        },
        "item": {
          "id": "fe126a51-874c-4d7e-a7d2-908093007f5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8fa9bc5e-d477-4eeb-8861-a7535f98e77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b326c06-b933-48df-9d17-67ff6100cd6d",
        "cursor": {
          "ref": "83edbfb5-74eb-4fc5-a198-1e91f4b25359",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3fcc01c5-8e30-4fd0-8c84-c6c69f0ae3d5"
        },
        "item": {
          "id": "3b326c06-b933-48df-9d17-67ff6100cd6d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e53bc1c-bcf7-4b85-8061-b2fa564cd33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bf4df3-5bbf-4f22-ac78-089324326a2a",
        "cursor": {
          "ref": "5091ed7f-3aec-415e-905a-0f352947c9ea",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f055fd6c-ccb1-4dc6-9b75-b9396675e761"
        },
        "item": {
          "id": "59bf4df3-5bbf-4f22-ac78-089324326a2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "edb475c0-a182-4843-9407-f8e863025d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada2e5b4-2a3d-4842-9587-945f9904e772",
        "cursor": {
          "ref": "168abf64-0583-439e-9080-180a4a786b42",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7d9554c6-9f31-4710-b7b3-6b9709f2e564"
        },
        "item": {
          "id": "ada2e5b4-2a3d-4842-9587-945f9904e772",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9096407d-63d7-4969-9780-71b5b3648deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbee884a-5777-40fc-af4d-163e3f44d231",
        "cursor": {
          "ref": "8a46de88-b186-491b-934e-872e711aa535",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "925fda39-1dd8-45e5-8462-879db859fe4e"
        },
        "item": {
          "id": "cbee884a-5777-40fc-af4d-163e3f44d231",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "46b4bcf3-964f-4eaa-bc3c-621f3066e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bd0f43-3e95-404a-8c0f-15b787545346",
        "cursor": {
          "ref": "49486349-e4ea-492a-b651-7f9cd03fbedd",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85ace55a-b765-43ea-9c05-0a15defea770"
        },
        "item": {
          "id": "86bd0f43-3e95-404a-8c0f-15b787545346",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "658ebc7c-f404-4ae8-b492-075e6ea81886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09acae-0ece-4135-8ab7-9274a12fe0d8",
        "cursor": {
          "ref": "c9268ff0-3bd5-4059-b97d-4ccad44cf73a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a1c7698c-d060-4bde-96f1-5deb9cac2f75"
        },
        "item": {
          "id": "bc09acae-0ece-4135-8ab7-9274a12fe0d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7c4619c6-dccb-4b80-a4fa-72446994785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f78f03-11d5-4911-9116-3883d02e299f",
        "cursor": {
          "ref": "d4ebc50e-121c-4620-a572-3a879c33b2c2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "98ab6755-dc2d-4f77-a516-20625a50f0f9"
        },
        "item": {
          "id": "39f78f03-11d5-4911-9116-3883d02e299f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b4a54bd5-8c69-4da4-ba36-c26a741ee64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da3040f-eb87-487a-8793-ac42f25825cc",
        "cursor": {
          "ref": "18f5312c-fd1a-4f66-b783-5eb287b981af",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f6890a00-cc56-4d58-bed5-3a5e19ca823a"
        },
        "item": {
          "id": "5da3040f-eb87-487a-8793-ac42f25825cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7b325184-df46-4a38-ad29-4693a8d88447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a1aa3c-1e4e-47bc-ae3f-076f58802a11",
        "cursor": {
          "ref": "42b1b3c8-f825-4e8b-af72-846386a0ca13",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5b993ede-697a-4fb0-abb0-e34830dc678f"
        },
        "item": {
          "id": "98a1aa3c-1e4e-47bc-ae3f-076f58802a11",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "34b76d6a-48d0-4b56-bd09-8737a6f4d34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5989ff-ae78-4eab-b69a-1bbdfe0d937a",
        "cursor": {
          "ref": "10a04fe5-d5a8-4180-8867-17e90c20b8ea",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94005c41-73b7-4870-89f1-9235734ffbd3"
        },
        "item": {
          "id": "cb5989ff-ae78-4eab-b69a-1bbdfe0d937a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "989e6b35-eac0-4468-833a-26188ecdecc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984c774d-d250-4d43-b224-6f74bb9c066e",
        "cursor": {
          "ref": "f6a44921-9b5c-4808-a150-57db9c68027a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce2c8351-449b-414b-bbd7-d4e27330cfde"
        },
        "item": {
          "id": "984c774d-d250-4d43-b224-6f74bb9c066e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "752f6ce9-d6be-4dc9-a13a-752decc1af79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03be32b-2505-4f57-b1bc-15cead507165",
        "cursor": {
          "ref": "c8f279fd-1f3e-4843-8ade-d8f11bcd4577",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4571d2e2-654a-4e10-824e-3987be5224ad"
        },
        "item": {
          "id": "d03be32b-2505-4f57-b1bc-15cead507165",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "defe3c93-235c-474f-a0ab-d965f533f432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885dc3ce-dc61-4f1f-800e-f3c796f55c32",
        "cursor": {
          "ref": "427b9037-5b44-480b-89f7-d575eb9bb269",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "26e01b14-7619-4e90-98aa-3e547be1dd54"
        },
        "item": {
          "id": "885dc3ce-dc61-4f1f-800e-f3c796f55c32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "939dfb03-8a7b-44d9-aedc-c21733d76bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb18963-12c6-452a-8e1e-ee3abd8f8371",
        "cursor": {
          "ref": "6f359d88-84ea-4832-9a8a-ea139adf38d2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd08ec1a-ffd3-4a92-b7e6-f67af8421412"
        },
        "item": {
          "id": "7fb18963-12c6-452a-8e1e-ee3abd8f8371",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5e97120-9143-4768-b575-0fc0046dee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031deb8-7490-4261-911e-165a8b49b2f8",
        "cursor": {
          "ref": "20cef7a4-4940-4ff4-bd82-bc7b4cf8e284",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09c743cc-5f10-4a83-9112-64c532161ed8"
        },
        "item": {
          "id": "6031deb8-7490-4261-911e-165a8b49b2f8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c255161a-33f4-45ba-bef7-fa32bd5f90c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e204a47-f09b-4a7a-b42e-b6feb85ff61e",
        "cursor": {
          "ref": "5c4390ca-340f-4ad5-b454-9a2db852626b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b71ca97b-57bd-46b2-a511-21337a6f3e99"
        },
        "item": {
          "id": "2e204a47-f09b-4a7a-b42e-b6feb85ff61e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a069f982-b886-4cc0-ab8b-c47a0b9658d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb9cd7-b713-4e5e-ae61-f93b411d3cd6",
        "cursor": {
          "ref": "f207223b-e7fb-45bf-86ec-7a5c0072d270",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5f73de1c-3189-4523-a768-3e2dfe7ee012"
        },
        "item": {
          "id": "bfeb9cd7-b713-4e5e-ae61-f93b411d3cd6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1bde01b9-41bb-403a-bd12-8c655da469fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd2f8e-4c02-4c97-9619-e42604749443",
        "cursor": {
          "ref": "3d2370e3-ba94-4a78-b6d7-63ffec96fa1e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56439e14-c129-402f-aaa4-45f9a1b08e8d"
        },
        "item": {
          "id": "14bd2f8e-4c02-4c97-9619-e42604749443",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fd76759b-ba4c-4067-8667-ba1c5a50a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5da711f-484f-4c4d-bd9b-6ec5dc8c84c6",
        "cursor": {
          "ref": "f905eeea-0b98-413c-abaf-1e84eaae5d1e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a229148-d450-43b0-8556-964aa952543e"
        },
        "item": {
          "id": "f5da711f-484f-4c4d-bd9b-6ec5dc8c84c6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a2fcb8d1-785a-4e90-8606-84a8f533967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515c3ff0-71fc-43e4-973f-61695a791351",
        "cursor": {
          "ref": "2ea72877-8e09-42c3-9e04-d06169caf11c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c08f7638-e5e2-4658-8a6c-475f5d2e274c"
        },
        "item": {
          "id": "515c3ff0-71fc-43e4-973f-61695a791351",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "96b72e22-5465-4c1e-b2ff-5326d5935691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b021e23-c8c5-4929-a1a5-7556b708b49d",
        "cursor": {
          "ref": "82314cbc-3ea2-4925-9aef-0f54cb3c5596",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d62a4cb6-48da-4400-a974-53231a1bef93"
        },
        "item": {
          "id": "5b021e23-c8c5-4929-a1a5-7556b708b49d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0aa9ca4c-1dd7-417e-a9eb-18ec51ecf2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d03623-74b9-40d2-b7e8-6faa3ffe9f97",
        "cursor": {
          "ref": "cb46484c-2255-4453-9932-1f022e6b03a3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "58a4e6b5-124d-496a-a97e-5bec018207f3"
        },
        "item": {
          "id": "71d03623-74b9-40d2-b7e8-6faa3ffe9f97",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9265397-b5e6-411b-8991-97b57e4bb7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d10dc4c-3bfc-4bab-9484-4edf3cd9a2a7",
        "cursor": {
          "ref": "3eb1b5ee-637a-411e-91d7-e390e1f65afb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e4b65f8a-a812-40c8-ae13-910ea20e0a44"
        },
        "item": {
          "id": "7d10dc4c-3bfc-4bab-9484-4edf3cd9a2a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a2d7e7e2-46ee-4a9a-aeb5-e60b66eb9773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720577f6-bf24-415c-a61a-cab18accb584",
        "cursor": {
          "ref": "3699f8df-99e7-4ba2-bad3-6bd3df930a5b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "48d631d9-84d7-4404-b8ca-4b6a94622383"
        },
        "item": {
          "id": "720577f6-bf24-415c-a61a-cab18accb584",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2d1196d5-6fe1-4ef4-93b6-134e70c15fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbf9fc8-21cc-4054-910f-fe3f65745342",
        "cursor": {
          "ref": "e5ef0c60-be1b-4c27-9044-cf00fc3e5bd4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a564fffd-ccdc-430a-8981-3a3dfd348ed3"
        },
        "item": {
          "id": "0fbf9fc8-21cc-4054-910f-fe3f65745342",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "645eb4f3-00a2-4e54-b20b-e6351769dc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cf38cf-9772-4219-b324-a83bc589b127",
        "cursor": {
          "ref": "bc1e6838-5c22-4fc4-9c0d-fbda5d288f1b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e75e0df6-b2b2-4d6e-aeb9-5d7481b14b7c"
        },
        "item": {
          "id": "65cf38cf-9772-4219-b324-a83bc589b127",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "022e1c19-a060-4821-8ade-9390f9479e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5026ea9-2431-4446-a548-45523fb5cad0",
        "cursor": {
          "ref": "f4579983-0c37-44f7-b971-9ae104121ad6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "17e46232-ab00-4c13-81b3-7055b78a628b"
        },
        "item": {
          "id": "c5026ea9-2431-4446-a548-45523fb5cad0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81c05634-e00f-4078-8de5-ec3cad82ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f47b9-92e9-4728-91f8-45e5299b680b",
        "cursor": {
          "ref": "63deca23-727f-495b-9560-29c244e101fa",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6b45e5b4-6c76-4ee4-8d6e-9a2b575a804c"
        },
        "item": {
          "id": "923f47b9-92e9-4728-91f8-45e5299b680b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "df5b306e-bcb6-4028-bea3-11a82201cbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342120d2-04c1-4641-9ac9-7d60718f19d2",
        "cursor": {
          "ref": "c4f299c0-586d-4517-b2e1-6af38dae4740",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a35fd51-c1c6-4623-ab9a-d3c03a86db7f"
        },
        "item": {
          "id": "342120d2-04c1-4641-9ac9-7d60718f19d2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a9519e0f-32a8-47dd-909d-f209915b0c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba6e78b-7900-4dd2-8d20-6d34b22b3122",
        "cursor": {
          "ref": "683d668c-91a9-40bb-ad22-24ced5a144c4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11af1ba5-ef43-42f5-8beb-66cc90e9d2dc"
        },
        "item": {
          "id": "fba6e78b-7900-4dd2-8d20-6d34b22b3122",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ac4abf50-e4e6-41c1-a768-bcb380f52fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083df6b0-6658-42f0-a7d4-a1053d8d5174",
        "cursor": {
          "ref": "632029c2-631a-42d6-bd8f-1ab78f9553b2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "039f5be4-5177-4ed6-9664-1f77166fb593"
        },
        "item": {
          "id": "083df6b0-6658-42f0-a7d4-a1053d8d5174",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a8481c0a-5413-4252-8aef-d896e5588c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cd01d7-c91a-41be-85e4-a4f5b1866e38",
        "cursor": {
          "ref": "90ac83ac-cd3e-4fa4-b2c3-995f9e63198f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3af943f8-068a-4209-9a71-92ac70ee7e0b"
        },
        "item": {
          "id": "c9cd01d7-c91a-41be-85e4-a4f5b1866e38",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "680576dc-d305-422d-b180-6aa27aff48b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5a5e5-c924-4e3a-b07e-796a454c7d0d",
        "cursor": {
          "ref": "86d6e69c-9c21-434a-9469-f597f55164ba",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7b40b63c-bfde-4544-b682-6ee856a51606"
        },
        "item": {
          "id": "16c5a5e5-c924-4e3a-b07e-796a454c7d0d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "988d3b60-6066-4ff1-a87a-19785aa5d7fb",
          "status": "Created",
          "code": 201,
          "responseTime": 6666,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af6b10-54b5-45b8-97c8-0a95e9488ae9",
        "cursor": {
          "ref": "f1533d33-1629-4d89-9734-c6ae8201c391",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "465d2b01-e720-4d8e-8631-93dad1080925"
        },
        "item": {
          "id": "b6af6b10-54b5-45b8-97c8-0a95e9488ae9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "747d3073-04b2-4c81-a95e-0355d894010f",
          "status": "Created",
          "code": 201,
          "responseTime": 5927,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8701f1-daee-4e7b-87b1-e47fd36241e0",
        "cursor": {
          "ref": "61984b77-f01f-4db4-b1e3-36944d43ba76",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1036919b-a97b-4680-a0ef-cfc262161c68"
        },
        "item": {
          "id": "de8701f1-daee-4e7b-87b1-e47fd36241e0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba70c0b7-fc44-4534-8c96-736b09a39c66",
          "status": "Created",
          "code": 201,
          "responseTime": 5820,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfab5dfb-ffd1-481e-85a9-5fec40d6c3dc",
        "cursor": {
          "ref": "49a6b732-af8c-4019-97d1-800a8dae97d5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "679f1b66-a4dc-4109-bb39-d4881364e091"
        },
        "item": {
          "id": "cfab5dfb-ffd1-481e-85a9-5fec40d6c3dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cfe8a011-08cd-4996-a187-676c3cd252bf",
          "status": "Created",
          "code": 201,
          "responseTime": 6527,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb7682f-63c5-4c06-8702-8c513d8c4a36",
        "cursor": {
          "ref": "63f2ac1c-e49f-464f-8d16-ff300f12d490",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0d9cd92d-f2de-46fe-a2a2-484a6b82c137"
        },
        "item": {
          "id": "ddb7682f-63c5-4c06-8702-8c513d8c4a36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31cb87f1-30d2-465e-b2fb-9492eba8939a",
          "status": "Created",
          "code": 201,
          "responseTime": 6068,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "42701ba8-660b-4c5b-8daf-e77ff9d4fc0e",
        "cursor": {
          "ref": "425928f4-903c-49c6-b168-1e8a843c7570",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "87e89956-f008-4e20-bc74-2670bc28ed87"
        },
        "item": {
          "id": "42701ba8-660b-4c5b-8daf-e77ff9d4fc0e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "810e8009-95af-4e29-bdd9-c334bb7ed965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "dfa5753c-ae2b-4234-9751-2c1d1e9711aa",
        "cursor": {
          "ref": "8dc6b9f2-4429-4a17-be78-bf477f47904d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c76eab25-5a52-4259-a78a-e3c70264009e"
        },
        "item": {
          "id": "dfa5753c-ae2b-4234-9751-2c1d1e9711aa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af97f2f7-27a7-4410-a66e-237f267adbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae392427-8d93-4ff2-92f1-13b8a8546da9",
        "cursor": {
          "ref": "4aaded13-b030-4809-b799-5d73f966f327",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "abe7133d-86c8-4792-81f6-4abbabcee00c"
        },
        "item": {
          "id": "ae392427-8d93-4ff2-92f1-13b8a8546da9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c8ff49d-f482-4890-a0dd-f5e3746b17be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac45ad71-ca26-4d8a-b435-9be8a65e0c60",
        "cursor": {
          "ref": "e621a4d7-b98b-4250-9db4-78c5a0a1d806",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bdcd77ec-8795-456a-9a6b-fc06adcfd919"
        },
        "item": {
          "id": "ac45ad71-ca26-4d8a-b435-9be8a65e0c60",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f71c769d-16cd-4886-99b4-be14f742e9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9043ea46-ff22-4ff5-810d-59bde43610c0",
        "cursor": {
          "ref": "f3642d99-89dc-4fce-ab40-2a3cfa45b966",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "25656554-ab50-4095-9aaa-43582ffdb3ba"
        },
        "item": {
          "id": "9043ea46-ff22-4ff5-810d-59bde43610c0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a327e62c-48f3-44ba-b637-7b0797a8ccf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd22854-6142-434f-8af8-2b03bdfac4cb",
        "cursor": {
          "ref": "58564987-c4cc-4424-8983-dd8ec6aa5b14",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bee636c8-af11-4358-ad93-8dc76552f953"
        },
        "item": {
          "id": "bbd22854-6142-434f-8af8-2b03bdfac4cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "882142f3-ee8a-48b0-b8c2-55220c581b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc31a36d-ed62-4d0e-ace4-63623fa640b3",
        "cursor": {
          "ref": "6e02d425-0fa8-4fdc-ab81-162ee3705c4a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a23bb341-00df-4f59-9a71-e016655f61f2"
        },
        "item": {
          "id": "cc31a36d-ed62-4d0e-ace4-63623fa640b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4bb75b3-06ad-433c-abaf-1ee1792cdc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1699b673-49dc-4b9c-a238-a63ae32a2244",
        "cursor": {
          "ref": "6af8d65d-f65e-4d88-bb45-1ea498f8081d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9537dd74-6448-4b09-9454-7c3365b274c9"
        },
        "item": {
          "id": "1699b673-49dc-4b9c-a238-a63ae32a2244",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66a59eac-2711-4861-8f73-8a6772cc6ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38928f6e-786b-48d9-bf16-a5fd1a99e9ce",
        "cursor": {
          "ref": "0a133d4a-527f-4e00-a306-53244c5a7507",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d6bffa09-1e84-4e3c-a881-3e793e0622d6"
        },
        "item": {
          "id": "38928f6e-786b-48d9-bf16-a5fd1a99e9ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7cb77fce-483b-45b2-b79c-549dd1e93b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3074d8c1-15de-4ad4-8748-bc478b77847e",
        "cursor": {
          "ref": "8db70d47-359d-48d9-be2f-d165d8ebb3d8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4352c0f8-695f-4b6e-9d77-bd70ac3a8a1a"
        },
        "item": {
          "id": "3074d8c1-15de-4ad4-8748-bc478b77847e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a154dbbd-2ea1-45af-84af-19ffceea0f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e82303-0a78-4505-906e-c4c28df876fd",
        "cursor": {
          "ref": "4ff4038e-72b9-4738-99f9-4b9331416d96",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a9f16556-aacc-4883-827a-bb6b2144ef62"
        },
        "item": {
          "id": "23e82303-0a78-4505-906e-c4c28df876fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9e4c061-db3e-414c-b10e-12175b1c7623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52fc34b-5463-4180-b686-97c29ff1c7c9",
        "cursor": {
          "ref": "6c008f9c-7efe-41b5-9d15-6f2a63e3234c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d9d81004-7b3c-419c-a52c-1da7ab738806"
        },
        "item": {
          "id": "c52fc34b-5463-4180-b686-97c29ff1c7c9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c797bc1-3857-4015-ace1-4c34573e115c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0299453-c587-4ffb-b985-6fbedc776394",
        "cursor": {
          "ref": "b40883e0-f780-4271-ab46-280d81cafd60",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d8786be0-e380-40f9-8b39-93260e4e0c3c"
        },
        "item": {
          "id": "f0299453-c587-4ffb-b985-6fbedc776394",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b9b2ff58-3cea-4fd9-b94d-fd82ea4616c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58e7ae8-682d-4ab6-8c90-0f36d7aed81f",
        "cursor": {
          "ref": "a256ed1c-1ed9-44b6-8ce6-21dfaf4d3701",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8841da3a-bf47-495a-9e5d-3d76459ce4ff"
        },
        "item": {
          "id": "e58e7ae8-682d-4ab6-8c90-0f36d7aed81f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c39313d7-3405-49a9-b75b-3f74909867eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9241830e-f20d-48c1-bdfa-c8dfe69a6c3c",
        "cursor": {
          "ref": "3139b84b-928d-4eeb-a108-ca229a2f418c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d54beb46-1d48-4abd-8e53-83f6fe587f9f"
        },
        "item": {
          "id": "9241830e-f20d-48c1-bdfa-c8dfe69a6c3c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "53262249-79d0-4bb3-84a8-74e1e1146945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df97a9e-784e-454a-bf73-cecc9ee13b45",
        "cursor": {
          "ref": "1d3d8c22-a832-41bc-ae73-3922b913d44d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "05f189ac-cfca-4bae-998a-ae514ee7c1ce"
        },
        "item": {
          "id": "3df97a9e-784e-454a-bf73-cecc9ee13b45",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ab534aa7-b528-4e11-a550-1f2f7934fe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67a4d02-0ac6-4e5f-b705-a651fcb863fa",
        "cursor": {
          "ref": "0e77f4f4-422c-4936-a7e9-cac9c615cca4",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "36c0fc21-ef32-478a-84b3-ebcb4f2e0837"
        },
        "item": {
          "id": "d67a4d02-0ac6-4e5f-b705-a651fcb863fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8d63384-64f5-4732-aedd-502d11269c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14296ddb-baa0-4b88-84b4-2812c9dfabf1",
        "cursor": {
          "ref": "8644e764-24be-42d7-a2d7-3ddd35ccf597",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e95bb13-0dbe-4301-b054-8b83b286f5df"
        },
        "item": {
          "id": "14296ddb-baa0-4b88-84b4-2812c9dfabf1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "746823c6-a85c-4b77-9b21-8744512f4abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d854b0b1-eb8b-435a-af3f-e0cd55dc9a3b",
        "cursor": {
          "ref": "de393df0-72da-4100-82cf-85d5abb58f2f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0954d267-4042-4417-a3c0-f78814dae907"
        },
        "item": {
          "id": "d854b0b1-eb8b-435a-af3f-e0cd55dc9a3b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "25ebdfe3-6dfd-461b-8e8a-edba2f0fed86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014fbb3-f874-46a9-bc55-f9e53aaad1c8",
        "cursor": {
          "ref": "8fc9b90c-8cc0-408d-a401-eb4f64dd542e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6d8636fe-1b8d-476a-bc89-092d3174e110"
        },
        "item": {
          "id": "7014fbb3-f874-46a9-bc55-f9e53aaad1c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "48eb733c-49b2-4ed9-854e-584fdaae9eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dcb6a2-cc46-48b5-837f-8a6496ba57b5",
        "cursor": {
          "ref": "d89d678a-e9ab-4c00-bc63-8d1813ef2470",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "29190a22-e368-4ef9-86bd-14eae00590f9"
        },
        "item": {
          "id": "28dcb6a2-cc46-48b5-837f-8a6496ba57b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aeec0621-d7b6-4706-bc4b-a9b2a7564558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ebdf6-996b-47e6-8ede-b4304ec9a3b2",
        "cursor": {
          "ref": "9a3fd7a3-ca49-4541-bfbd-10797b99c58c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7dac8b9-8801-436f-be1a-6613ff71c316"
        },
        "item": {
          "id": "bb9ebdf6-996b-47e6-8ede-b4304ec9a3b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "655162bf-d93d-4a9e-ae03-7e25e951b6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b501a0-1be9-4203-b7e0-4b88c70f4d15",
        "cursor": {
          "ref": "d5ac0ef1-ffc1-4ec7-b5ff-a0d6c4c8c8c0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "61aa4c4e-fccc-4a45-b772-4db8ba9f99bd"
        },
        "item": {
          "id": "e0b501a0-1be9-4203-b7e0-4b88c70f4d15",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a795d8f-b8e0-45a9-826a-3975c5fc7eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc117516-e15d-485b-8e06-e558de4fae34",
        "cursor": {
          "ref": "0985fefe-b914-45f3-b40e-f633d9f09420",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bf059c37-a727-41f2-9240-3f06dc2af1b8"
        },
        "item": {
          "id": "bc117516-e15d-485b-8e06-e558de4fae34",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "841269a0-7930-4d3a-a515-85cba1b7a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad63cc6-f757-4d92-9a70-f6922273a815",
        "cursor": {
          "ref": "855f12f4-8c58-48b8-b38c-85d0f802ceb2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "84e9667e-4be8-41f4-8326-fc3bc236e70c"
        },
        "item": {
          "id": "bad63cc6-f757-4d92-9a70-f6922273a815",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a12dc257-49d0-45dd-a59c-d279b4c3d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c61e24-5863-4e6d-91dd-f712159d36f0",
        "cursor": {
          "ref": "12983811-94f9-4889-9a90-67438d79c5d8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18ea8fd7-9f81-457a-bd81-958d6fd9c672"
        },
        "item": {
          "id": "71c61e24-5863-4e6d-91dd-f712159d36f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4c4324c-faa8-4ccb-a085-73be0097f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb2c5ad-8fc1-41e3-a7ae-ef0815128b12",
        "cursor": {
          "ref": "ddb1a237-a215-4ce1-a04b-79c9857a71d7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "41ae4b37-01a8-4243-ad5e-516427c7d521"
        },
        "item": {
          "id": "6cb2c5ad-8fc1-41e3-a7ae-ef0815128b12",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0ab2407-0472-4079-8fb2-0e5a9944d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530e6445-8897-40ff-aec0-32ba420f56fb",
        "cursor": {
          "ref": "e39874d0-0526-4e35-91ad-d212ee0928c6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "54d173c3-aa36-446d-9e40-f7232ee5cfc2"
        },
        "item": {
          "id": "530e6445-8897-40ff-aec0-32ba420f56fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05d6f45b-ae25-4a4a-9f9e-a1ad1afa9176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18a3972-2185-4e8a-a929-a240b9814248",
        "cursor": {
          "ref": "8eec8588-98e0-4512-aa2d-d3579b63c247",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6babc4fb-72b0-408a-b0fd-2816bb2a0a81"
        },
        "item": {
          "id": "a18a3972-2185-4e8a-a929-a240b9814248",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c920f3d4-d674-476c-ab2c-199d53cc7dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570a36cd-6939-484d-87aa-f22ffeac9311",
        "cursor": {
          "ref": "c1794a17-cf3a-4a8c-b45a-70e21a7b41bb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8f0f8ba4-d504-4dd7-b387-d85a2a79f471"
        },
        "item": {
          "id": "570a36cd-6939-484d-87aa-f22ffeac9311",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b1cea1e-8afe-49b4-be8d-96dd471d4776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c43fd63-5e5d-4f9a-a76c-8623538cac03",
        "cursor": {
          "ref": "572cb64a-ca8a-40c9-a31b-52f8cabf411a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0353abec-9d7c-4847-8689-68b7be0b1ffa"
        },
        "item": {
          "id": "4c43fd63-5e5d-4f9a-a76c-8623538cac03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f620db1b-99d3-440a-8adc-6401b410e1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1daade3-0f3e-4abb-a72f-1790568375bc",
        "cursor": {
          "ref": "83ff8fe9-14de-42fe-8ff9-f7aceae95f6c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6f78e17f-099e-469c-abf7-b47fcb5db3c9"
        },
        "item": {
          "id": "a1daade3-0f3e-4abb-a72f-1790568375bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4fd819a3-7b4f-4749-be3e-7509adece7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d28544-886e-49b2-879a-87a33dc5bd7e",
        "cursor": {
          "ref": "b0d8bee0-70e8-4f3f-b871-9b176235e6ba",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c50923df-7609-4a58-941e-2e770875850a"
        },
        "item": {
          "id": "e0d28544-886e-49b2-879a-87a33dc5bd7e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5e1a460a-b2f2-4e9c-b6f8-222d80cc3913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd75e42-d882-43ff-a778-02245e52951b",
        "cursor": {
          "ref": "807980d4-5632-4cea-baaf-6c9fcd89ac85",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3a7ee643-4fda-4186-a9de-8690a3d76499"
        },
        "item": {
          "id": "8fd75e42-d882-43ff-a778-02245e52951b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7a4ebb6b-40d2-48c1-92be-6a9691995cc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5b70c-b3da-41c4-b10c-a1d576ac2d24",
        "cursor": {
          "ref": "18df7e55-81d5-4956-be1a-7c0b302d0cb1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6b234b1d-2e34-4b85-b53f-482fa877f86d"
        },
        "item": {
          "id": "3cd5b70c-b3da-41c4-b10c-a1d576ac2d24",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aaa426d0-3dce-4ad2-83ce-89bfa85fefd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4d1b2c-7ff3-4634-869b-032cc239649c",
        "cursor": {
          "ref": "1148bf8e-37b9-43f0-b5c1-808a962c3bed",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0175560b-4f4b-4337-ad9e-3836c19cb5da"
        },
        "item": {
          "id": "1d4d1b2c-7ff3-4634-869b-032cc239649c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4ed2e17e-2141-42a4-81e3-493f81e32672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde15025-b5c1-43f4-a831-c19b49764b1c",
        "cursor": {
          "ref": "64f08971-a44d-49e8-8375-c9e6e6bfadbd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dec67414-befd-438b-9ae5-8b0cecda2c86"
        },
        "item": {
          "id": "cde15025-b5c1-43f4-a831-c19b49764b1c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb3973d2-a901-4ad5-a46c-cef48ae91f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4722ace1-9d4e-456d-8183-71722ad475e7",
        "cursor": {
          "ref": "5a4aa46b-6e0d-49f1-84bd-118bc30c84a3",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "66f55e56-2671-4164-af6a-da8365915b8a"
        },
        "item": {
          "id": "4722ace1-9d4e-456d-8183-71722ad475e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8a62c6a4-70ba-4c36-990a-4db5d9c99380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875c047-0a62-421b-8a90-6f236410fc4c",
        "cursor": {
          "ref": "62bad8f1-c9ed-4e6c-a0a3-288796e7876e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f7f6b7eb-33b1-40bf-9b8c-836296f00643"
        },
        "item": {
          "id": "d875c047-0a62-421b-8a90-6f236410fc4c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9d8f583f-796f-4d18-89a5-02171b5afd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45077af-4fc8-4a12-9208-dd1ec018366c",
        "cursor": {
          "ref": "f039db0e-76f7-4c96-b6f4-fe3aff3d76a4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6258415b-2628-4b93-ac5b-62f4fbc7895f"
        },
        "item": {
          "id": "e45077af-4fc8-4a12-9208-dd1ec018366c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "704695f3-d65f-460b-a0df-f4ecbc18cab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1f3e1-f623-4444-852f-dd46523ba590",
        "cursor": {
          "ref": "eef83a6e-e007-401e-ba76-194f67f20851",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f1d2ec54-f446-4f23-bc79-2a87c5335214"
        },
        "item": {
          "id": "ccb1f3e1-f623-4444-852f-dd46523ba590",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "90793cc5-226c-4fa6-940b-ce638e8c9155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cf1eb2-7675-4900-a170-3903fb7a90cb",
        "cursor": {
          "ref": "489525c0-9aa2-4ef7-8690-4225ae338700",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2674c762-b01d-4bd8-b05f-aa2f61f41444"
        },
        "item": {
          "id": "f1cf1eb2-7675-4900-a170-3903fb7a90cb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "146fe144-89cc-4d0c-b8f1-81c1ebbf9ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a5418b-5fec-4f68-9d66-526c2ea65a71",
        "cursor": {
          "ref": "40486137-ab92-4ad3-baee-f6fb90bf6c07",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f97c1b14-11ed-45c7-b421-70cfd7a40caf"
        },
        "item": {
          "id": "45a5418b-5fec-4f68-9d66-526c2ea65a71",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c60759ed-0129-45c0-9ec0-44f3e8d13b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dcb128-9b7d-4339-9162-5292ee55a275",
        "cursor": {
          "ref": "fe4c9dfa-66d4-445e-ab33-9a2fb76b96fa",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "53043d33-e8d0-4c72-80c2-94b44fbf9863"
        },
        "item": {
          "id": "14dcb128-9b7d-4339-9162-5292ee55a275",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "edbc1a8a-b02b-435d-bf6d-e99bfbb4f401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d39a1-c471-49cf-bf34-f7316e7d5152",
        "cursor": {
          "ref": "9da42c94-ae0b-4dca-9385-2ce403277303",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d463882b-77be-4068-a46f-c7601b9c4922"
        },
        "item": {
          "id": "235d39a1-c471-49cf-bf34-f7316e7d5152",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "63ae9e3f-0c68-4816-acc5-02f75287bf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bafe7e2-c32d-48eb-a351-ffd84667faef",
        "cursor": {
          "ref": "2eb549e5-4bb8-4a3c-9176-652f2fd5dd74",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "52932683-5809-465f-ae06-92f9d6575db7"
        },
        "item": {
          "id": "1bafe7e2-c32d-48eb-a351-ffd84667faef",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ec584b6a-8935-4d69-a07b-fc4a41b89085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e9ae6f-1afb-4ffd-aead-293c06ce59eb",
        "cursor": {
          "ref": "5b580692-83a4-4bf7-a780-3227affadb4d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e95013ee-6fa5-4a79-9a85-53612b07dad6"
        },
        "item": {
          "id": "a3e9ae6f-1afb-4ffd-aead-293c06ce59eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cbf89b64-89ef-4bf9-a192-c41c8741c813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bda909-520a-43b1-abb4-ca3f5011959b",
        "cursor": {
          "ref": "50cfd010-f84e-4e58-aff2-753cb5a764f3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d74aeb89-83fc-4a3a-9a99-32bb5b2e915f"
        },
        "item": {
          "id": "e0bda909-520a-43b1-abb4-ca3f5011959b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "83b873b1-4bbd-4db8-b571-3760bd792775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ce6815-a850-4dd0-8e93-a416337f94cd",
        "cursor": {
          "ref": "951cfca4-030e-4096-a4e8-c51a614c525a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "451d929c-63fd-4f0d-8089-7b368a1a3dbb"
        },
        "item": {
          "id": "08ce6815-a850-4dd0-8e93-a416337f94cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5dd5761e-7be7-4ace-b535-98222f0a3acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e0e956-8f55-4212-b9e1-d6e693b3567d",
        "cursor": {
          "ref": "9e091431-70bd-4e91-9034-1b4c5905f942",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e5169f82-ff53-4819-bc1f-8d39447e3293"
        },
        "item": {
          "id": "f6e0e956-8f55-4212-b9e1-d6e693b3567d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5c66d69-bfaf-46e3-a8bc-f031978fb38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b300b77-b44b-4fe2-bfff-df56dff03c6d",
        "cursor": {
          "ref": "10da4f80-c87b-4a8f-bba5-6427ba4d855c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4bd5e36c-0022-4f46-93d3-eb764ba734d0"
        },
        "item": {
          "id": "8b300b77-b44b-4fe2-bfff-df56dff03c6d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8eae799-1f6f-4aab-ac0b-92ecaec169c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0f5f82-c135-4d0a-a3e2-490e4461b9a2",
        "cursor": {
          "ref": "bb2648b5-03d5-44bb-afdc-d6a524eb0b57",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "acac9265-32bc-4199-b2e6-f14fd8434855"
        },
        "item": {
          "id": "dd0f5f82-c135-4d0a-a3e2-490e4461b9a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8183534f-8de4-4563-b589-cf9abefc1b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21db8e9-1cf9-4c4a-95fb-8ba0124ed135",
        "cursor": {
          "ref": "18c05ae9-01af-4cc4-81d9-55e1e0e8e642",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0211972c-744f-4257-84dc-340182bfdc72"
        },
        "item": {
          "id": "c21db8e9-1cf9-4c4a-95fb-8ba0124ed135",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f84e41d4-dc0d-42d7-a33c-017d84e430d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4de3ec-e5ad-4487-99a7-d024eebdd850",
        "cursor": {
          "ref": "8d88a863-c85b-4db6-b626-170370159ae6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bb55f2c5-139b-4a35-9ea0-29018e8395fe"
        },
        "item": {
          "id": "5a4de3ec-e5ad-4487-99a7-d024eebdd850",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1185a3b3-3488-4e76-8aab-bcf6bbd5a9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812e4bb-61bc-4148-a96e-f3c05e8f53dc",
        "cursor": {
          "ref": "6b42e6ce-55e0-4375-a7de-cf294072566d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f701ac4c-75cf-464a-9e30-e2e1e73b341b"
        },
        "item": {
          "id": "2812e4bb-61bc-4148-a96e-f3c05e8f53dc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "44b51925-6ec2-4d41-b3fe-31e5253b3a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2b3a44-da89-4625-b908-494adabd796e",
        "cursor": {
          "ref": "ff64857d-223d-47d1-b0b0-4d24f1a06749",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "670f9f0f-6670-4146-99ef-13601432e7cf"
        },
        "item": {
          "id": "ba2b3a44-da89-4625-b908-494adabd796e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e38a2f39-70aa-4b5f-81bf-77f0e98b0fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce0d8f-3b03-4a89-935b-31dea9290c78",
        "cursor": {
          "ref": "c2da321f-6908-4c7c-b9c3-259c95eff932",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dded2a07-9581-4d51-8bf1-0e7e5f578f12"
        },
        "item": {
          "id": "9fce0d8f-3b03-4a89-935b-31dea9290c78",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44d8563d-f483-4ef7-977d-eac5bccd516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a490dcc-dd7a-43e5-8ccf-6afc645cff0e",
        "cursor": {
          "ref": "db3b3949-a361-4bd7-86c6-f0b4133d3bd2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b85cbbc1-6dcf-4ce5-9561-4e0a25e9ff85"
        },
        "item": {
          "id": "1a490dcc-dd7a-43e5-8ccf-6afc645cff0e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7261cabf-99ed-4074-8381-580226459dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00c9cce-3c4f-4b52-bce5-e77366404142",
        "cursor": {
          "ref": "48afa701-c7a6-4ebc-af78-ba4037320399",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "747e941a-94b6-4e88-a802-e50fe1960d88"
        },
        "item": {
          "id": "f00c9cce-3c4f-4b52-bce5-e77366404142",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d61e0a1a-20be-49d2-9dc3-e08115c89903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a0af8-7cf8-4fd5-97b4-21b5a3174c79",
        "cursor": {
          "ref": "fdc27aa0-5be0-4d57-af01-905eeef761ff",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c32a1c51-5aba-4a54-982d-7317595b6583"
        },
        "item": {
          "id": "100a0af8-7cf8-4fd5-97b4-21b5a3174c79",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fffb5dd8-c3a6-4d4a-a146-7ffe61e613b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd48258-b8df-4df7-a479-f5e2cc3a422d",
        "cursor": {
          "ref": "e65dd604-9d96-40ee-ade3-47bc8e345231",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d2711cab-82d0-4dc0-bb13-a9c3460f3ef0"
        },
        "item": {
          "id": "0cd48258-b8df-4df7-a479-f5e2cc3a422d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c48d0393-1e15-44d3-a92a-b34fb82a05fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d21216b-d5df-4ba2-acad-90056d7d5127",
        "cursor": {
          "ref": "4109b129-d2b4-4c53-88bf-b49af41af7a7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cffff8a9-7bb9-45ad-ad9a-8e122d85f5f5"
        },
        "item": {
          "id": "2d21216b-d5df-4ba2-acad-90056d7d5127",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "528875f2-dd3e-45b7-9232-03a9d8d43367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24cbc59-bdb6-43fe-82a7-3388bb76e5c7",
        "cursor": {
          "ref": "83e887ca-eaaf-4339-a76b-91f679096ba3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a69c0086-bf49-4e4e-b42a-797c422a9e8b"
        },
        "item": {
          "id": "c24cbc59-bdb6-43fe-82a7-3388bb76e5c7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0b11eef-cf5c-47e8-8d2e-3cf8cd216974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285601d1-ae38-4c65-9903-1d595f9814d5",
        "cursor": {
          "ref": "a9943f87-f57e-436b-9dee-57acad08817c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c827ba5a-eef7-413f-8f22-9a518d60a7bc"
        },
        "item": {
          "id": "285601d1-ae38-4c65-9903-1d595f9814d5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "540ecc98-86a2-4c07-aad6-9a1b70784de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0407f6d2-368a-4eff-928d-9902deeb996d",
        "cursor": {
          "ref": "b95835c3-9ced-4c88-930d-d91991b8d5cb",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c322fd3f-dc8f-4b7d-a10a-db046bec553d"
        },
        "item": {
          "id": "0407f6d2-368a-4eff-928d-9902deeb996d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66927ea5-bb04-459f-a12e-fb0a82a6bda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930934ac-11ed-4c82-830c-4c89198e85f6",
        "cursor": {
          "ref": "5f2c9f5e-7cd1-4a34-8e35-58a3eca0d0a7",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8f11f695-bd56-4ae5-8ba8-99fd0ea5cebe"
        },
        "item": {
          "id": "930934ac-11ed-4c82-830c-4c89198e85f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8dd1b531-3857-464a-8089-8bbdafbf84fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c897dab-fe6d-448b-b6d2-54754a5e9a95",
        "cursor": {
          "ref": "80d1a060-17e5-483e-8894-2ac7fb5fcfc1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99351538-4cad-404a-a7eb-6bdb7f93cc8c"
        },
        "item": {
          "id": "2c897dab-fe6d-448b-b6d2-54754a5e9a95",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fe5567f5-058d-401b-9083-5a24ece48a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e70651-4cc1-4c5a-b516-1966cb3e90d1",
        "cursor": {
          "ref": "dce25a14-ff51-42aa-af5b-9d966659bde7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "99540a4b-af34-4ef8-bf65-64d2641886f3"
        },
        "item": {
          "id": "a0e70651-4cc1-4c5a-b516-1966cb3e90d1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4dc9526e-4ba5-468d-b8d6-56f41a472161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f83e34-6ba9-4557-a5a1-e37f306e26d4",
        "cursor": {
          "ref": "110dbaaa-2cbc-4780-98df-45ca16ed8d17",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5748f8d0-7e24-4a80-9a85-0a6fe4dbaec1"
        },
        "item": {
          "id": "e3f83e34-6ba9-4557-a5a1-e37f306e26d4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "08b794ed-0565-46fb-8215-40882f81681b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35361618-84bb-49a0-a385-9743769491d0",
        "cursor": {
          "ref": "341c9c83-1880-421a-8d38-5e2a5eea9f45",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "afe40b1a-906b-4eb1-acfb-810c6e1f5282"
        },
        "item": {
          "id": "35361618-84bb-49a0-a385-9743769491d0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "80d947d5-c36f-45bc-9b09-fbe18bbd0e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdb9386-c094-444d-856a-b489ce831d34",
        "cursor": {
          "ref": "b8e9244c-a75b-4d6a-91a0-d68acc0e18b3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6b9d9ddb-7f5a-4513-b031-04862939ce02"
        },
        "item": {
          "id": "bfdb9386-c094-444d-856a-b489ce831d34",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4c79ab8c-6346-487e-bf72-1bc70d10335e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48a82b4-fc3f-401f-a3dc-a75727a1b39f",
        "cursor": {
          "ref": "1dc590a2-f56c-4755-9652-55abcab3d7ea",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dfc8c167-b1c4-408f-9ee6-76ed26a03a56"
        },
        "item": {
          "id": "d48a82b4-fc3f-401f-a3dc-a75727a1b39f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3e7f113f-a502-4c92-8cd5-2913487294d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb76c658-9d14-41ca-87d7-bd1b52a9780c",
        "cursor": {
          "ref": "60c15c95-fadc-41d8-bf73-6a52ab9f179d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6c0fea8f-9886-48fe-ac5c-3c0de5da524d"
        },
        "item": {
          "id": "eb76c658-9d14-41ca-87d7-bd1b52a9780c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64e61639-aecf-4cc6-a04d-96ea5c15c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4938462-ae24-47d5-80ac-a32511eb7da1",
        "cursor": {
          "ref": "2de767e7-4c60-45a2-a121-2422b97e4dbb",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4d662a28-6767-44c6-96ff-e1879b32f2f9"
        },
        "item": {
          "id": "a4938462-ae24-47d5-80ac-a32511eb7da1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c8b7ea93-feb3-45af-9c0d-f0e232837a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4060c53-0d7b-4436-ad56-51dedee242bd",
        "cursor": {
          "ref": "f222461c-2bc9-440e-8a17-c5ae7bd2b986",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f823bf04-6039-4dd9-a8a7-cc0bf2d63db5"
        },
        "item": {
          "id": "b4060c53-0d7b-4436-ad56-51dedee242bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9508350a-9f87-4b73-8545-52e94cebd300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a85c330-99db-4e1e-be92-630aa936ce0d",
        "cursor": {
          "ref": "33b4b52b-8e1e-4c48-bf0c-932c8dbd0414",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ec1ca8fc-d90d-480d-b692-8b82159ae409"
        },
        "item": {
          "id": "6a85c330-99db-4e1e-be92-630aa936ce0d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "10014180-bf26-4e7e-a72e-8a93ab21b8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14722842-3948-4f07-bca3-93bdcc117c56",
        "cursor": {
          "ref": "2746ff32-91f6-43e5-883b-46ab24bd5bd8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b4c2fcb7-01b6-41db-93d8-2542e16c0d03"
        },
        "item": {
          "id": "14722842-3948-4f07-bca3-93bdcc117c56",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3487cc5-b109-43e5-9370-fa2c7d734b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0876ad-2569-4582-890c-de60d32f8ca6",
        "cursor": {
          "ref": "c53b63c5-79fa-4b68-bf76-65226d244ee9",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "81a84b39-c0a8-4611-bc80-b90ce6eab8c9"
        },
        "item": {
          "id": "5f0876ad-2569-4582-890c-de60d32f8ca6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bd3eef6-0cbb-4c15-8f88-cefe3226bc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c407d7ff-64e0-4eab-8aca-fd4c2bc0c801",
        "cursor": {
          "ref": "4e331409-586a-4da7-88ea-549996dc0def",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e890eb70-986f-4640-94b0-028fe3b7fce4"
        },
        "item": {
          "id": "c407d7ff-64e0-4eab-8aca-fd4c2bc0c801",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea6a4288-b73b-4a52-9f8b-4a3f50690191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e52b2e-4cd9-4241-9166-d2ebaed1ae60",
        "cursor": {
          "ref": "d88e2c7b-6aee-4443-b4c5-726bfe9a67a4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "62b1ab24-be7a-419a-b672-1344b66600c7"
        },
        "item": {
          "id": "57e52b2e-4cd9-4241-9166-d2ebaed1ae60",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "31c737f6-753e-4d5d-bf81-f2a72a0f25d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1347261d-7e26-4966-9986-4b9bb1498334",
        "cursor": {
          "ref": "7ec5dac9-3f5c-4488-8c0f-d9cc7ed66772",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ad7dc15-78bd-4c12-a407-865b59c42b40"
        },
        "item": {
          "id": "1347261d-7e26-4966-9986-4b9bb1498334",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f71a3aa1-d479-4e00-85a1-22d861525489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726e5a9-bb91-4beb-83e4-850d897c8ec9",
        "cursor": {
          "ref": "87ff783e-3ba0-41ce-a6d7-24c932679602",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4e61702d-4132-4164-b022-2cd4c40bc230"
        },
        "item": {
          "id": "b726e5a9-bb91-4beb-83e4-850d897c8ec9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c74e622e-1657-4027-b6cd-42be3edbc2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33231551-00d7-4f24-bceb-85295ee9ddd8",
        "cursor": {
          "ref": "77635d4d-c6cf-4c73-b9cc-f402c03adaa1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8338f1d4-723d-429d-9573-a8ad2070aecd"
        },
        "item": {
          "id": "33231551-00d7-4f24-bceb-85295ee9ddd8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "232555de-1dc0-4426-9775-17132c15f34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23115d32-4f46-405b-8673-86818a9b8358",
        "cursor": {
          "ref": "ec8bce7c-d0c6-46fa-8191-27b1924b93a7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b9bdabbc-5a36-44da-8bb3-a874fa403aef"
        },
        "item": {
          "id": "23115d32-4f46-405b-8673-86818a9b8358",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5961c217-ee18-41b2-9095-24470142e2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2607c24-c851-47e2-8541-bb050cb4aea8",
        "cursor": {
          "ref": "1d5cd1ac-421a-438f-a090-3eb0eee1c89e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76dbfdec-d8c0-4f6f-938a-c18042ec84b4"
        },
        "item": {
          "id": "c2607c24-c851-47e2-8541-bb050cb4aea8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f4e6553f-c514-4b7d-9114-46033b7ef333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14533243-1ef4-4fed-85bc-8bc7299c669c",
        "cursor": {
          "ref": "e88497b7-fd7b-4854-a93d-8262cedd8f29",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "286a3e0c-ac74-459d-9797-ab685b54523a"
        },
        "item": {
          "id": "14533243-1ef4-4fed-85bc-8bc7299c669c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "107f86b5-fc7c-4cd0-bebb-0692383ac8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5255fb3b-3a8b-4764-bb01-8fa739da024b",
        "cursor": {
          "ref": "0b3d7b36-43b5-4dfa-b905-44cc7ae4a623",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b7d233b0-bde1-468a-a5b6-0574f89fbf1d"
        },
        "item": {
          "id": "5255fb3b-3a8b-4764-bb01-8fa739da024b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9ab545b5-01d3-4c0b-bf33-2632f98eb2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7b9294-29ee-4833-88c2-0f05d128ddb0",
        "cursor": {
          "ref": "12138148-4cad-4173-a23b-321c580b529c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "05e4b7d1-8411-46c9-95e1-bc3d9d7a8cb0"
        },
        "item": {
          "id": "4b7b9294-29ee-4833-88c2-0f05d128ddb0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c5e71e11-6513-491e-9846-d65fccd176f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdbcee2-fcb4-44b6-82c4-128ee3d7a832",
        "cursor": {
          "ref": "45f6c3e5-e6be-454f-b550-1b6c7b0d7226",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73ff34f5-3bfa-46ab-a227-3fd2429ad979"
        },
        "item": {
          "id": "7cdbcee2-fcb4-44b6-82c4-128ee3d7a832",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "81d6ca99-b0dd-442e-bffe-28647063ff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022338e5-54e1-4032-93e7-7e8433ac3d5a",
        "cursor": {
          "ref": "dd782240-94cf-4060-97c6-90d55e4f10c8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b545f0e6-732f-42be-a188-07c517bf6ae6"
        },
        "item": {
          "id": "022338e5-54e1-4032-93e7-7e8433ac3d5a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2e35bfaa-29f3-4a37-a17c-bbc306e16cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c973569-41c0-49cf-9d3f-e2686c45d25a",
        "cursor": {
          "ref": "87e192b6-8f97-406f-b1a3-18203585c9b7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "70b59e4c-3ccc-4701-9dc7-8c5be7feb347"
        },
        "item": {
          "id": "0c973569-41c0-49cf-9d3f-e2686c45d25a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4775c962-4438-4ebd-93be-50cef9a7c7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bc9af0-80aa-4c8a-b093-6b4272187786",
        "cursor": {
          "ref": "80d1f09c-4854-47aa-acfb-c76df901a1cc",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cfca167c-75bd-4727-8de6-04cc0720165a"
        },
        "item": {
          "id": "13bc9af0-80aa-4c8a-b093-6b4272187786",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0f657f2a-2fca-4b61-9a4f-fd77e2e9ebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb13d64-0f03-4c52-9e80-7ad56ee45c50",
        "cursor": {
          "ref": "243c0b6f-6cb7-4091-a0f9-5e3e630769bc",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b834c314-323c-4a3d-88cc-5435d649bdda"
        },
        "item": {
          "id": "fbb13d64-0f03-4c52-9e80-7ad56ee45c50",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b25ab24d-0c5e-4844-a633-f788c8d4134c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a70762-1ee1-41ca-afeb-43afb0a722d8",
        "cursor": {
          "ref": "b1a5c5fd-6632-4570-96e3-a2607057742d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "65a6ae35-9714-4aaf-8310-b8b510e30f3c"
        },
        "item": {
          "id": "78a70762-1ee1-41ca-afeb-43afb0a722d8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a0381110-98a8-4b44-ac1f-79cb446e50ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f596c31c-9720-4183-914d-ba1b5d73b64d",
        "cursor": {
          "ref": "25d7b400-616f-4cc7-84a0-6f37729cf39c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20dc8490-05ad-42da-872e-c8958c0a6ca7"
        },
        "item": {
          "id": "f596c31c-9720-4183-914d-ba1b5d73b64d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8df910c2-cefe-43ed-8777-0e2af01d3e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975ac657-41f9-461a-a4f5-d3edbfbe0431",
        "cursor": {
          "ref": "2270832e-7954-440d-a5b0-8d77750b5ce4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d9b7e6fa-f54e-430a-838a-ce6d30ab14ee"
        },
        "item": {
          "id": "975ac657-41f9-461a-a4f5-d3edbfbe0431",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fdeb6c26-b97f-498d-b40d-beaad63cf428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b0b094-835e-4154-9916-3204bbfaf1d6",
        "cursor": {
          "ref": "13b4bdc8-905c-47cd-b6c6-72440681a6c0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7062535c-4ddb-41f7-aade-25476afe8b71"
        },
        "item": {
          "id": "78b0b094-835e-4154-9916-3204bbfaf1d6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "69b0f84b-8bab-4a39-a8a5-e3bb4d19a762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f013f6-a7a5-4614-b87a-163e4ef759ca",
        "cursor": {
          "ref": "abe85f49-7239-4856-b279-1586a21fe7d7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f47acc52-d832-460d-a1a8-0110ef8aa256"
        },
        "item": {
          "id": "56f013f6-a7a5-4614-b87a-163e4ef759ca",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "56822998-3746-43d9-9665-ea598131ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff61703-1e72-449b-b929-8e293dd2f0f5",
        "cursor": {
          "ref": "072cb488-0d76-4fc0-8011-c2018a415ed9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a875f4ee-26d0-4efc-85ef-36a1e6407821"
        },
        "item": {
          "id": "fff61703-1e72-449b-b929-8e293dd2f0f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6aeef273-7f8a-4feb-8a5a-1abe90e775e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d9acf9-938c-42f1-bda2-07c08204750d",
        "cursor": {
          "ref": "7973f0e5-f465-426d-aded-741ad623bad4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c39c0235-c968-4db1-8eb1-23274d6cb213"
        },
        "item": {
          "id": "d9d9acf9-938c-42f1-bda2-07c08204750d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "11d0db1a-ad75-41f3-91ef-38072a8eb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1ad106-3244-459d-82ea-b0c970b8026b",
        "cursor": {
          "ref": "4576b4b9-4e8e-432b-b87c-42bd9352a2fd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f160b7e8-6a35-4042-b637-3df068a14714"
        },
        "item": {
          "id": "7e1ad106-3244-459d-82ea-b0c970b8026b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7aad558c-8cdc-4287-af67-6b5fa53e2efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5618821f-b28a-456a-8381-b33177fce564",
        "cursor": {
          "ref": "8de0da8b-9792-4b1f-8698-51e3a40dba5d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "537f2934-a284-42ba-a2e9-8c6a6f4e7dcb"
        },
        "item": {
          "id": "5618821f-b28a-456a-8381-b33177fce564",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "629319d2-d85d-4415-87ab-9c93d934006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a56adb-8b8b-4f6d-96de-72ac659d06a0",
        "cursor": {
          "ref": "6396d0cc-f40d-43d7-94c6-4a2d826eecad",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cdc2e91a-a63a-4007-b8e7-857a6cb3331e"
        },
        "item": {
          "id": "f1a56adb-8b8b-4f6d-96de-72ac659d06a0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "698ec310-3712-42dc-b08d-d5b7cf04917a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d697e16-9f98-49d5-8a8a-7ec78f31a83d",
        "cursor": {
          "ref": "2a8ff1f5-71bd-4c34-9f18-c7967dda3558",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3554924-ce37-4b69-ac35-f6f8680efb62"
        },
        "item": {
          "id": "9d697e16-9f98-49d5-8a8a-7ec78f31a83d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f647ff70-6b85-4f20-aa04-9b86c35f1dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbdd300-308d-41c7-bacb-6fc0f72956ec",
        "cursor": {
          "ref": "924fed75-3db8-4fed-a24b-4379478ff69a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8f8b6798-506c-4920-815c-a046146d6711"
        },
        "item": {
          "id": "8bbdd300-308d-41c7-bacb-6fc0f72956ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c06aac7e-47f1-4045-9705-993589cc7fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b14ce1c-96fd-4716-881f-3db6ea6338be",
        "cursor": {
          "ref": "beb03502-73b1-4b81-a57c-cfeb47c35121",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80562937-af18-46db-b552-be8a670e7864"
        },
        "item": {
          "id": "1b14ce1c-96fd-4716-881f-3db6ea6338be",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "719c0824-e51c-4522-af9e-4a269d408066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfd7889-c0ca-4df9-8b1d-b0f29cf71313",
        "cursor": {
          "ref": "9c6f0209-d290-460d-939c-7205c32c3aae",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "96a36ce4-7231-4d0d-904b-b18781d012a8"
        },
        "item": {
          "id": "0cfd7889-c0ca-4df9-8b1d-b0f29cf71313",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f1560abf-521b-4f20-ab04-a2a02964ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2713379c-5fbc-4cca-926d-37dfee7556d6",
        "cursor": {
          "ref": "c52e2852-6356-4b94-bf99-3ff213e4c6d6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3a1bfa2b-03d9-47b3-9f36-6db3f64fe990"
        },
        "item": {
          "id": "2713379c-5fbc-4cca-926d-37dfee7556d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f39fd294-1a64-4aaa-9e4b-360a08263a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8a9d7a-0adb-460f-b1e3-f5633ea07f85",
        "cursor": {
          "ref": "43caa6fa-8cab-45c0-99f5-1d09ed8a5bbb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5ca0f3b3-0dd5-4c45-bff4-631be0ca30da"
        },
        "item": {
          "id": "5e8a9d7a-0adb-460f-b1e3-f5633ea07f85",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f9e1f02-d309-44eb-b530-740bf6693886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f640457d-fd11-4f9d-b4c1-fc4564aea5e7",
        "cursor": {
          "ref": "28f5e4c0-5ce5-4eb2-8d1d-27a2df597460",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1ce42605-21e2-4365-a045-f2c75f128d69"
        },
        "item": {
          "id": "f640457d-fd11-4f9d-b4c1-fc4564aea5e7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6566afeb-f442-456c-b9e5-b17fa340e3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684bd45d-f134-4e64-b297-592b2283bb6e",
        "cursor": {
          "ref": "012f5307-f84c-4415-bfc9-fb323e2bf86c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ebaef5ff-de54-45e7-bf15-aa3b3dcad8b2"
        },
        "item": {
          "id": "684bd45d-f134-4e64-b297-592b2283bb6e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "29b0bbf0-a189-40e8-b1f5-29abb7f5ecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78450c8b-2854-4216-a797-66ec2dcc12ac",
        "cursor": {
          "ref": "04928c0e-24ad-43be-b8d4-a01ecf9cd9aa",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8acb574c-4941-40d5-b54e-6fe074a5b02a"
        },
        "item": {
          "id": "78450c8b-2854-4216-a797-66ec2dcc12ac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a3f04a5e-8d6b-4ec8-b141-9ee002265708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ea8adc-19e8-4f30-811b-6d567c5edb3f",
        "cursor": {
          "ref": "f5c55eb4-5b8b-4b77-8a93-4e135274e197",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "050bcc3b-ba81-44c3-8ed8-c311e42cabfb"
        },
        "item": {
          "id": "80ea8adc-19e8-4f30-811b-6d567c5edb3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ad5614d8-c595-4733-bb03-7825127908e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e6173-e2af-4b90-afd5-bfd605ff5439",
        "cursor": {
          "ref": "f3e39779-3dd5-459e-9702-1eeb0d149de9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bf38a4a9-639b-412b-af59-f272ed2d7347"
        },
        "item": {
          "id": "2b3e6173-e2af-4b90-afd5-bfd605ff5439",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "17e17a04-2b3d-437f-b9bc-3a6f55a5e948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdadcb2b-873b-42dc-b817-dc0aa28e266c",
        "cursor": {
          "ref": "540dc445-1079-44e0-8cc4-9ea46b52c3e9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12f8960e-1747-4af0-a3eb-7e5e84ed14a9"
        },
        "item": {
          "id": "cdadcb2b-873b-42dc-b817-dc0aa28e266c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "119f422a-7abf-4ebf-8480-c7f23ba9465d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2031454c-8f25-475e-acc5-18e755f35e3a",
        "cursor": {
          "ref": "581b1717-0a40-4c9a-b7c2-8eeeefd9c378",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e98f28d4-875e-4505-a1d0-08748c428428"
        },
        "item": {
          "id": "2031454c-8f25-475e-acc5-18e755f35e3a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fa6ca573-7479-4df2-86ff-d3c44d91de4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8515886b-10ea-4f96-8f1b-ce379d1de8bc",
        "cursor": {
          "ref": "e22e234e-2a96-4da7-a29a-8eb7f0a7c169",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f6a5e65b-4703-461a-a9bd-02866fb56d6c"
        },
        "item": {
          "id": "8515886b-10ea-4f96-8f1b-ce379d1de8bc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "13d09185-745a-4584-a26e-3d45a4aa4448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7f081a-d2a9-4051-8ebb-28d32fdcda29",
        "cursor": {
          "ref": "39a36436-0e43-4ae0-a5b6-209b552098b4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cde22118-734f-4a35-a7bd-ff74c8b2f56a"
        },
        "item": {
          "id": "ca7f081a-d2a9-4051-8ebb-28d32fdcda29",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4a7a2a54-9518-4a00-b3d8-ab7c72e0944f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8be790-c702-4f75-8a26-63c61d6b79e6",
        "cursor": {
          "ref": "62a27d9a-7383-420e-8c33-3ef81c38097e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cfdfc8c1-9e36-47c6-9f84-9f3820bf35ef"
        },
        "item": {
          "id": "1c8be790-c702-4f75-8a26-63c61d6b79e6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "06ef15cb-9204-4f0a-b4b1-6054feccf8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ba5b7-4821-41b6-8daa-51f4c25c20a1",
        "cursor": {
          "ref": "10d6a51c-2b83-4d6c-b9f0-bc0d96727cb5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6ea206d-4313-434f-aab1-f6db8344e0de"
        },
        "item": {
          "id": "a59ba5b7-4821-41b6-8daa-51f4c25c20a1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7f8f8333-0235-4663-8fd1-c5ebc5985b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1676e6c6-4d08-41fe-aa5e-9d38ce5e5fed",
        "cursor": {
          "ref": "6039812b-4220-4fa7-97f5-0f7b9eb3eef5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa647322-2bfc-44b6-bf65-c8604bf7f831"
        },
        "item": {
          "id": "1676e6c6-4d08-41fe-aa5e-9d38ce5e5fed",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0d0c933b-78f4-41e9-bb26-2fec5c2ead7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5eb6c5-a8fb-4392-abb8-3603f78a1557",
        "cursor": {
          "ref": "0e930403-13f1-4e0f-8477-5b11799ad7b2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60f21bdf-3672-4583-91b6-b0e03ef6cf65"
        },
        "item": {
          "id": "2e5eb6c5-a8fb-4392-abb8-3603f78a1557",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d85a8332-ad31-413b-af96-d1c83c6b94c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ddbf47-f827-4b44-811b-d9b230398a89",
        "cursor": {
          "ref": "c53330ae-3e88-4500-acb3-c75d7fb0791b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c350f5e5-b652-4726-854b-c644f498b7c7"
        },
        "item": {
          "id": "c7ddbf47-f827-4b44-811b-d9b230398a89",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59054f09-378a-41e8-96ae-cdeef00cdb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8b7db9-d6f7-4d85-8633-93c3edf486f8",
        "cursor": {
          "ref": "c47f79d6-e433-454a-aa73-55d1f707b149",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0c67be98-7726-4e30-bb58-c82df9fdaec0"
        },
        "item": {
          "id": "9d8b7db9-d6f7-4d85-8633-93c3edf486f8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9e0e9e18-8522-4f39-bb6a-105a1b0ab26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2eabf9-56ae-42ef-92b6-872f8704fbae",
        "cursor": {
          "ref": "d19217df-be4c-47c8-9d43-46ee05f44901",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "de683ae8-31f1-499d-a6a1-e16688941b29"
        },
        "item": {
          "id": "dc2eabf9-56ae-42ef-92b6-872f8704fbae",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f334d74f-b6d0-48e5-a76f-28ece5cf47bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db72116b-40e8-4c17-a326-11568f0e0981",
        "cursor": {
          "ref": "790cebfd-d5fc-4e65-8b69-f90a797807ed",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "611d3760-6bc2-40f8-8f41-098ee97381ae"
        },
        "item": {
          "id": "db72116b-40e8-4c17-a326-11568f0e0981",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3e338683-b5ab-4631-a2d8-ec2ef389117e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c971d-df2a-4a1c-877c-9254094c542d",
        "cursor": {
          "ref": "7223def8-8b99-46f9-91f4-93532ffd6221",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ded58b95-e4bd-4eb4-a4f0-b088c94c9bf7"
        },
        "item": {
          "id": "421c971d-df2a-4a1c-877c-9254094c542d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d4c19ee4-ea07-45f3-ad7b-8e8a1b5468e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b5d007-92f1-479a-9c92-2a55f32a8b50",
        "cursor": {
          "ref": "1de1f0a8-6c9f-4df5-885e-ae1499b3b0ec",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d3c064b1-5285-4fea-a072-edc81d5128e1"
        },
        "item": {
          "id": "b8b5d007-92f1-479a-9c92-2a55f32a8b50",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "efc5f563-54cb-4300-b861-4c5150d22bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa256773-1cf3-4088-8075-90f2deb111f2",
        "cursor": {
          "ref": "a41d3546-330b-4425-aa08-4ed39b4de086",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11c4d08a-ff7f-4caf-a796-068791619e33"
        },
        "item": {
          "id": "fa256773-1cf3-4088-8075-90f2deb111f2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9ff6dd72-5d7f-448c-83ff-b20de5bb86b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd712399-2dc3-47e3-ada0-2f4f6a0166c1",
        "cursor": {
          "ref": "d20cc459-1170-44ff-bc3e-a21a5c41d9ab",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7dd38a7f-d9bc-451b-821a-e7a30f408051"
        },
        "item": {
          "id": "cd712399-2dc3-47e3-ada0-2f4f6a0166c1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa7b7d94-a6db-456d-8d70-2c5d1a351128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6a7518-9743-482d-b053-354a823929ef",
        "cursor": {
          "ref": "ccbb00e3-7076-4e4b-80a7-f57fda491a14",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad5ef3e5-03f6-430b-8f74-f9931abae203"
        },
        "item": {
          "id": "bd6a7518-9743-482d-b053-354a823929ef",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1cd1d0e4-11dc-4386-8209-1aba7c97553b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79286a4-829a-4c50-8862-b43a2eebde28",
        "cursor": {
          "ref": "dd5b06cd-ac40-482a-b537-df96facd5550",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bf5a73d9-7c60-4e0c-822a-c902a3ac56ac"
        },
        "item": {
          "id": "d79286a4-829a-4c50-8862-b43a2eebde28",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f5694d11-5ca9-4ea7-8390-fd7a7b73d012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b6274b-b490-4bcc-9eec-41d567afa006",
        "cursor": {
          "ref": "10190ba4-259c-433b-9cde-d3d4359551d6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6908d89e-61e5-4da6-bfeb-68a38f63da13"
        },
        "item": {
          "id": "16b6274b-b490-4bcc-9eec-41d567afa006",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e0ee286a-9b85-4743-8aeb-f8d54d25c10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37353cc9-ccc8-4a4f-9ddc-e876c8ea8595",
        "cursor": {
          "ref": "9b3a2942-6cce-43bf-b3ab-e88757c88539",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b3fd1852-1b8b-4616-b167-b2701b8b581c"
        },
        "item": {
          "id": "37353cc9-ccc8-4a4f-9ddc-e876c8ea8595",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a2362ef-90f7-4d69-86c6-6c20c0d44278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d116f92-ba61-473f-84a5-1e68b08c83a9",
        "cursor": {
          "ref": "56c2c601-5df5-40c0-88d8-c065e8509804",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c0bca9f-13b1-4987-934d-9463862b1980"
        },
        "item": {
          "id": "9d116f92-ba61-473f-84a5-1e68b08c83a9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "91dd9262-a2c0-4018-9c9e-2dcd1ee85581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaef6b2-9660-47f2-b1cd-b925ec5dc8a4",
        "cursor": {
          "ref": "ce86199c-8b50-42d1-9c9f-d2c2c887734d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37dbf285-d826-4138-be30-89a40c86a2af"
        },
        "item": {
          "id": "7eaef6b2-9660-47f2-b1cd-b925ec5dc8a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0373648c-5a0c-47a4-9ed7-2f9f21fa13ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ae929e-ca32-47cc-b841-e4b7853f069d",
        "cursor": {
          "ref": "38478c7c-587f-43b7-b61e-ed9aaf7fbf01",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3dbf0f5c-a217-4965-816d-074aa7432306"
        },
        "item": {
          "id": "89ae929e-ca32-47cc-b841-e4b7853f069d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2b87dd82-5316-4ce0-b383-313892006f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab39b4f-a55b-4c56-a005-59d67a06f869",
        "cursor": {
          "ref": "632993e8-b001-4236-b27a-19697b34792f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "797ba769-ac04-41df-b720-bfd05ec07c9a"
        },
        "item": {
          "id": "bab39b4f-a55b-4c56-a005-59d67a06f869",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7733ed1d-d19e-48a8-95ad-994eb268f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8aa74c-8ba1-4baa-89cc-3546e5d63621",
        "cursor": {
          "ref": "dfc49c87-f42c-4edf-b85b-3a8ba9a5dd70",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "196e9bf6-3873-48d7-94f2-9b6999b4526d"
        },
        "item": {
          "id": "7d8aa74c-8ba1-4baa-89cc-3546e5d63621",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a44fac03-89a0-4e51-840e-37735096f01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58f8c55-274d-426b-a4f3-bc45dbbbffd7",
        "cursor": {
          "ref": "dd4858f8-2a6e-4952-af03-60e03d371490",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e3a72b8-deb1-4fd7-89c9-f501e8671825"
        },
        "item": {
          "id": "d58f8c55-274d-426b-a4f3-bc45dbbbffd7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "818d318c-4ebf-4f27-84bc-0184610ae38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0517333c-928c-4049-8de0-b66dadd7a6c0",
        "cursor": {
          "ref": "eaac1c32-29c7-45cb-98ec-357e3ea854eb",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ed908a05-bd83-425b-9cd7-5d8e17fb6c7d"
        },
        "item": {
          "id": "0517333c-928c-4049-8de0-b66dadd7a6c0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8a1ef24-55cf-4813-ba47-43a16451a17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f94df2-fb6c-4fdf-bda3-adad11c2098a",
        "cursor": {
          "ref": "e47c59ad-2ecf-476f-bafc-7075ba369115",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a0923fb-0440-40ee-b206-1e3bb5ff727e"
        },
        "item": {
          "id": "69f94df2-fb6c-4fdf-bda3-adad11c2098a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "87bf47ae-9894-4ae1-8985-9d63f7004eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca986b4-3459-41f0-8a8f-1ab74d8660a2",
        "cursor": {
          "ref": "4805c669-d8af-4bf1-bcd0-a6b3595b4d9e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a0e742c9-efd0-4250-86b9-bbb65e6b52d7"
        },
        "item": {
          "id": "3ca986b4-3459-41f0-8a8f-1ab74d8660a2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "63a76604-c45c-4bc8-be8b-0c4500909e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a198e38-1683-45c7-b020-201398bf5fdb",
        "cursor": {
          "ref": "1d483cbf-7c64-4dd2-aafb-b05f627b1870",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b1d07989-0f0f-4e57-b040-25f34c008126"
        },
        "item": {
          "id": "0a198e38-1683-45c7-b020-201398bf5fdb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "225edfb6-7466-4788-8856-db26493e59e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eba70e-895f-4d08-87e9-97224db206e5",
        "cursor": {
          "ref": "d493a127-7bec-4843-a14f-34d598a31de7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "68fb7b28-c1f5-43a1-9522-f73c30f3b5bc"
        },
        "item": {
          "id": "c7eba70e-895f-4d08-87e9-97224db206e5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51804215-4f4a-4c9b-8c32-e1b3a1bef23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf4baf9-b3f7-40c7-b275-130844f7eb15",
        "cursor": {
          "ref": "15b8f2bf-1352-42b2-993e-15b1ffa7f42f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "801a3f88-98ff-474d-b7b5-70c846281ee4"
        },
        "item": {
          "id": "5cf4baf9-b3f7-40c7-b275-130844f7eb15",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "30bd8a63-f456-4df7-bcb1-e3968e0f23fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae5a136-2dc7-4e1e-80dc-0c87212d4604",
        "cursor": {
          "ref": "c7a20128-e10c-4711-8a93-906ae568d2fc",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d7dbd7fb-de24-4a86-8f2d-bd583f05ee3c"
        },
        "item": {
          "id": "cae5a136-2dc7-4e1e-80dc-0c87212d4604",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dd69972d-1c65-469f-bcd0-1286a714a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114cc434-1dbe-4b45-a29c-4f5de99a9d7f",
        "cursor": {
          "ref": "6aa2a29b-528b-4a69-a9a1-22b136d955df",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5dd48060-9585-422f-a374-80feb31f6352"
        },
        "item": {
          "id": "114cc434-1dbe-4b45-a29c-4f5de99a9d7f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7f50b90a-ec84-45fc-9642-df91dc15bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0194c9ee-39a1-4747-b7d2-0e7e06c42398",
        "cursor": {
          "ref": "38d6225e-36d9-4003-9706-84e83bb41990",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4eedf67f-9be4-4f6d-a8e1-0a2fb75cc21d"
        },
        "item": {
          "id": "0194c9ee-39a1-4747-b7d2-0e7e06c42398",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "20212c57-c180-4c0b-94cb-611a4920d471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a825502-2cb4-4dcb-a27c-04a4191d642d",
        "cursor": {
          "ref": "44acde2e-f45e-4b0a-bd6f-64b34d9df235",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f36e77c8-c456-438d-860b-ea7f64287e16"
        },
        "item": {
          "id": "9a825502-2cb4-4dcb-a27c-04a4191d642d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d6aa57a3-10dc-49f5-8762-c36c11a56400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab15107-259b-45f4-9276-0d9d42ccd9c9",
        "cursor": {
          "ref": "28572744-26bd-4224-bcd4-d5910c3ab046",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d570b744-c723-40d9-b1e3-da9e1b3442eb"
        },
        "item": {
          "id": "3ab15107-259b-45f4-9276-0d9d42ccd9c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a7f2438f-20c6-4e01-b403-0586189ee6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00286f57-2524-42a4-9c9f-4cee5445a9bb",
        "cursor": {
          "ref": "d48deb2c-f7ec-4565-92e4-e1006aeae742",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d2f3c367-186a-4f0e-92c6-7c2a724bd1e8"
        },
        "item": {
          "id": "00286f57-2524-42a4-9c9f-4cee5445a9bb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2a0f34ff-0029-44e1-af17-9a4f4388044c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a0d90c-7340-4596-9eb8-84d7ac776af1",
        "cursor": {
          "ref": "8834111c-233a-431a-8fb7-88705971cd38",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "44db246e-88b5-4372-aa65-c0b2f2a97177"
        },
        "item": {
          "id": "93a0d90c-7340-4596-9eb8-84d7ac776af1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f14d616-fae2-4c65-b9d8-b94d849874cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc55d51-4183-422f-af83-a2cb68a3d71d",
        "cursor": {
          "ref": "d57f0659-10f1-4851-8b38-6d52315c7c78",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "13236901-2f5b-461f-aa82-baca74903b05"
        },
        "item": {
          "id": "4cc55d51-4183-422f-af83-a2cb68a3d71d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b6f35166-d175-4248-a03b-93a2713163d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9877831-23ee-4a02-801d-1893b551a774",
        "cursor": {
          "ref": "00f90d5d-fbba-4320-b1df-483adc83f4c7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7867370a-4069-4f8e-b04e-df4c70f25c3f"
        },
        "item": {
          "id": "b9877831-23ee-4a02-801d-1893b551a774",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4f94a0e3-4724-4060-9f8c-f1cd8f91acdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4801b2-58f2-4bd4-8918-e5083f406c21",
        "cursor": {
          "ref": "ff27d706-6ad6-4f99-8fbb-071331b5e4c0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "364831d5-5604-4b59-9395-f20e1d5fcf72"
        },
        "item": {
          "id": "0a4801b2-58f2-4bd4-8918-e5083f406c21",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6b0caccd-6bb8-42c9-b928-fa512050aea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dd5de2-689e-4fa5-b615-2d1a15e22eeb",
        "cursor": {
          "ref": "5326cadc-4c33-4449-a9b0-241c32e6eacb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "32257ca7-3c4e-4d89-8263-2f5d2d7b162c"
        },
        "item": {
          "id": "b7dd5de2-689e-4fa5-b615-2d1a15e22eeb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b619e3be-5974-4fce-ad01-33b6316d6c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066b2e63-ee8f-486b-a924-edc9707f0e98",
        "cursor": {
          "ref": "8571dc01-0a73-4896-afa4-0e5f14c83df2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "96ace327-8f17-4521-a39a-6fa661ea6fc1"
        },
        "item": {
          "id": "066b2e63-ee8f-486b-a924-edc9707f0e98",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "67c67303-e5a4-488b-bda2-0d355b518c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ccb6a3-578e-4cc6-b089-87f659257169",
        "cursor": {
          "ref": "a8e76590-ff9f-4e3e-8286-5597f97e87f9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d889b328-0fdf-469b-8b4f-25467fa95f09"
        },
        "item": {
          "id": "97ccb6a3-578e-4cc6-b089-87f659257169",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "40b72990-e3de-4cf1-b261-53cfd829d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00993a75-eb0f-403b-8f52-e1a15809622e",
        "cursor": {
          "ref": "c81d01ae-3401-4033-aae7-b32df63b512d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "902f3ebf-413f-40ef-9ce7-f4265278df3b"
        },
        "item": {
          "id": "00993a75-eb0f-403b-8f52-e1a15809622e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5a3636e0-acff-4c05-b4cf-9271969e20f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd07734-a267-48d8-90a7-d0e20cf24df6",
        "cursor": {
          "ref": "0b735d7b-1d0a-4c49-94df-3eb05d7694cd",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fd9b9884-06c6-4c61-b15c-49a6aa7dedf5"
        },
        "item": {
          "id": "abd07734-a267-48d8-90a7-d0e20cf24df6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c820a338-19a7-49a5-97d3-56dfdbfb1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc440f1b-5282-47b4-9fb8-494532eca4d2",
        "cursor": {
          "ref": "b34af74b-2536-4d76-869d-e54e36c3d57c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "eec2de9f-2074-4a4f-b575-e262645b6941"
        },
        "item": {
          "id": "bc440f1b-5282-47b4-9fb8-494532eca4d2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1725107e-4a47-4a22-a7e2-8a2f08212f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad444a21-67c0-4390-82a3-b919bad49d89",
        "cursor": {
          "ref": "c5f2d50e-c980-4855-8b6f-e5ba254768af",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "86cf60c5-76c6-4fb6-bbd8-f648501ab191"
        },
        "item": {
          "id": "ad444a21-67c0-4390-82a3-b919bad49d89",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c429673-9b4f-4d54-81fd-d6720b9adef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d910d76-0470-427b-a774-81e1f9c9fd0a",
        "cursor": {
          "ref": "7e361bca-bfbe-4833-addf-43656e62c907",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2fefd0d7-1233-4d34-8f1d-3f5797c838ff"
        },
        "item": {
          "id": "2d910d76-0470-427b-a774-81e1f9c9fd0a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ca61485f-25b9-4494-9206-7505b874addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffb19a5-31c0-40e1-aa64-47a49118a570",
        "cursor": {
          "ref": "c1778ec9-11d6-44f0-b378-7c879b79b8eb",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9e079c4b-1886-4bdd-86d2-f095dfd76749"
        },
        "item": {
          "id": "0ffb19a5-31c0-40e1-aa64-47a49118a570",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "80d500bd-7aa4-4418-a007-393babe7f2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1c14af-27b9-426e-a470-89565931398b",
        "cursor": {
          "ref": "26f9c8b3-72fc-4099-946c-86d7947b8e98",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "638ccce9-4c7b-4f7f-a623-615a2e42f8fb"
        },
        "item": {
          "id": "0a1c14af-27b9-426e-a470-89565931398b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3a0c9c0-81d5-4c83-9584-db48b1ad5924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065109e7-23e2-480b-b45f-3929a1c7fa06",
        "cursor": {
          "ref": "99cccc24-9839-4bc6-bb17-5fd4e3edafff",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0526f21f-7cdb-459a-aecf-1f42ac80dc43"
        },
        "item": {
          "id": "065109e7-23e2-480b-b45f-3929a1c7fa06",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2ec867c1-2df5-4e78-80da-b84376cb3eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe7ca7d-e974-4a7b-8670-b597b0963be0",
        "cursor": {
          "ref": "721410ce-c1d9-4662-8586-6be5546da0f8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fc7a8a45-29b4-40d7-b6a0-077a41948962"
        },
        "item": {
          "id": "ebe7ca7d-e974-4a7b-8670-b597b0963be0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4badf997-1126-4e4a-ae57-b23faea2f395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892f87a0-717b-44e5-be42-0379e54c6dcf",
        "cursor": {
          "ref": "a323cf72-4d15-44aa-a66c-1e0fafd96b50",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "393cffa8-22d4-45dd-a580-ead820dca431"
        },
        "item": {
          "id": "892f87a0-717b-44e5-be42-0379e54c6dcf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0c55cf92-eb1a-4a18-9c47-6ceec0138dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a55022-df4a-411b-bbd6-59c85b007264",
        "cursor": {
          "ref": "61f4eab6-5404-457b-9276-13529aa4c8a4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8746b556-58ad-4332-be6a-1758da6024a3"
        },
        "item": {
          "id": "c4a55022-df4a-411b-bbd6-59c85b007264",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e0a63ce2-aa2b-47cb-b4b2-d079b99f4812",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e0480d-e094-46cb-aa00-ba49b7d24ae5",
        "cursor": {
          "ref": "6e8ed1ce-b347-4763-9c2d-db6b19c3aa47",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e7923a15-799e-44f6-8d6f-1618138ddd61"
        },
        "item": {
          "id": "61e0480d-e094-46cb-aa00-ba49b7d24ae5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "08097854-1b68-4d13-ae42-d415414b6bf8",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f43b11-4d0d-4ae0-9f56-a5edbc812c3b",
        "cursor": {
          "ref": "e307d4fd-ae4e-4aed-aba2-af30b92c1fa0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f0fe314c-9d3d-4ba9-b35d-0e8affb0f18e"
        },
        "item": {
          "id": "75f43b11-4d0d-4ae0-9f56-a5edbc812c3b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7624c192-ed72-4114-8445-8f984dd66bac",
          "status": "OK",
          "code": 200,
          "responseTime": 1617,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ea3e7-9b9e-4fbb-bee3-a040a38aab00",
        "cursor": {
          "ref": "999ebe62-78ca-4025-b182-39d0ece6d007",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "22d60e59-374d-400e-84df-2cd9276e95b1"
        },
        "item": {
          "id": "083ea3e7-9b9e-4fbb-bee3-a040a38aab00",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f0efcf99-6026-4175-9db4-29767d9ba7f4",
          "status": "OK",
          "code": 200,
          "responseTime": 1372,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b76b4a-cc5d-4a39-8edf-8f5b60b67297",
        "cursor": {
          "ref": "36c6b8b8-bdfc-4f08-9442-654c81f8f232",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a18f95db-a7ca-4be5-a35c-dae2fb9c30f8"
        },
        "item": {
          "id": "07b76b4a-cc5d-4a39-8edf-8f5b60b67297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1e1ba1d-1938-4b8c-befb-8fec71b9550e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b76b4a-cc5d-4a39-8edf-8f5b60b67297",
        "cursor": {
          "ref": "36c6b8b8-bdfc-4f08-9442-654c81f8f232",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a18f95db-a7ca-4be5-a35c-dae2fb9c30f8"
        },
        "item": {
          "id": "07b76b4a-cc5d-4a39-8edf-8f5b60b67297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1e1ba1d-1938-4b8c-befb-8fec71b9550e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd702142-01fc-4c3e-87f3-48c2ce99502b",
        "cursor": {
          "ref": "11d44320-3ea2-4d3a-8db0-1f1afd09e5e3",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f53c591-8377-4b50-8690-4c07afbd4c9e"
        },
        "item": {
          "id": "cd702142-01fc-4c3e-87f3-48c2ce99502b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e480a37-5721-4f14-b6df-ea55d2e5f455",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f3d04c-8f02-41c1-9733-68bb429efc17",
        "cursor": {
          "ref": "956e3c8f-5a82-4543-a4c1-8324c4c01e6e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b682968f-850f-4866-b6e3-a51f7d60cf07"
        },
        "item": {
          "id": "c7f3d04c-8f02-41c1-9733-68bb429efc17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4120b288-ead6-4773-aea3-a8c12f591eb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}