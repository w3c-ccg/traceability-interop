{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7b0686b-cf74-4780-9028-aa1d336bebdc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c3fcf57a-cbaf-4902-b454-451f2d2ea7d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c61b47c-6828-47e6-b5c0-7101e80c7b45",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32abeec3-a6a0-4488-91fd-5bc01ec20bbe"
                }
              }
            ]
          },
          {
            "id": "ee3ec393-227f-46d8-a380-c93014db5ac9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d0daf14-2151-42e0-bb03-f5c1f31d6d02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad67247b-b924-416d-8a5d-0722bd9852cf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8fbc198a-60b6-46f1-ae98-78ad6f461f71",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "debddddf-73bd-45a1-82a6-3a07ac16a75b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4fbb7f4-26e6-4e34-8df5-246e7b52e6df",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a1cbb4f-8cbf-4965-94be-3f514909369b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d1675e4-fce5-4321-bc3b-7ca3cd848299"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62a05eca-0368-4d07-9512-1f06ad911fc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "074b6059-bc33-4c9a-b557-3e3adeb34e3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca1479a5-8aed-4b50-b72b-d03d29b3837c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9e0ac5e-9ddd-464d-9283-3c51bdd8903e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80464681-84d8-4bbe-8542-061ec76e9834",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cf341778-f552-4d6e-a8f9-2e729a482eef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb8d6019-d6f8-4147-adfb-68c68cbed45f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d554e3b-a70b-4ae8-a686-2c8fc3704f8d"
            }
          }
        ]
      },
      {
        "id": "924cc89b-375c-4a0f-9e51-5496c7cd5f4b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "20b5ceb6-0473-46af-a548-d076047ce031",
            "name": "Negative Testing",
            "item": [
              {
                "id": "121a0365-edfd-45b4-a620-ef9188bc1ec5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c675116-1370-4905-92d9-c86f890d72a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e834f7-87ec-4d76-b47e-93e57ab438c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29503f71-99ec-4fa7-a474-dddedd61c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1e3784-2530-4401-b1f0-d504fdca506a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15f719d-f9be-4c4f-924f-824b07c324f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ab2f30d-0f7c-467b-9853-7ad921ead770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c0ddfd-00cb-40d6-a58d-e4b0a2deedc3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf19d41-37b3-4b1a-b06b-82cc75043161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf3aa72a-1aad-43a5-8955-fa2bade9ef96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98490642-df70-464f-bbbc-2647fe30f84b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3df3c055-4cb5-405e-8f16-81604a5d2e34",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2da5d0-3b3f-4677-873d-e29eabdb6f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "518e895d-c4c0-4a81-8e25-0d87ccb4e62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bbb9b3-718d-49ab-bd2c-f55fc30bc922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e8f86d-4df2-42fb-8d45-be191e269f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40e560b6-8aa8-420c-955b-bd08b96c4181",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73a79c75-84b5-490d-a28c-3180da14ee45",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69081a36-d79c-4290-8af9-7f3e815f3778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "837553d3-873d-4fed-8802-7199f57a4a25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29c64700-1be9-4561-956c-3e9a1bb985ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "acb7b9e6-77b3-4f67-9c1b-8c90ca494530"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d026af6e-40f0-439d-9da3-54e3cd4e900b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b45a6f08-48ad-4469-9af6-dc52a00c2b4e"
            }
          }
        ]
      },
      {
        "id": "6ee3bcae-ea9a-4122-82f8-78894abc3065",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d953b0cd-3138-4a52-b6b2-0f47ac5fac90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b2c3295-3bbe-4112-97a4-797bf9c5112f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "53f312ac-80af-4fb6-9644-870ee79c2e5a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e12fb19-d371-4c9f-a5dd-a7082aaa5493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c37f64-eafd-414c-bc8a-7a29ab604cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6fb10-18ee-4d7f-94e9-b0b2062de9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb466b13-164b-424a-babd-e03e75a606fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579699c8-6b4f-4047-8288-627019528da8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825c8e2a-21d4-4797-a959-5874cbb0fad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6206b4a2-0326-4f46-bcd6-e0687e71d41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819a3614-60dc-47ec-932a-54a12b25c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e97633e-5d33-497d-985b-854ea35a7d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9108853-560d-42ff-a086-53c49013056a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca2034-1182-405e-ad3a-79ee85f2d6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93da4da-35a4-4e7a-8c1a-fe7695f75019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a5f4c8-6caa-41bf-9295-c435324c8940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f48016d3-5c41-4a30-9ef9-7b7bc202200c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda687bb-015a-4930-8a08-3aeaf2c7f1d9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcb37a0-ab30-45db-bfde-e246773dd0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba9695b-3c0f-431c-be4f-36fdc962d492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f118222-ff9b-4f8b-a888-4842ba2c3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "731a6a4f-995b-448a-b182-70a9d76cbe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1d83ed-bc5b-4efe-9792-1c3f14bc0f24",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a1f732-69b3-4b53-bc1a-b536f637f8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a85319-0d3f-49e7-afdb-33eb86a7a75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9425b9e-9ea4-40a6-96bc-c3e88491d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f13e01e4-92f9-4f52-bab0-38c7650df2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebbe70c-4d44-412a-8730-fb8a313c978c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb4c17-1f24-4283-8718-f58ff3fe3596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323a3e3b-ec31-4693-b34b-6aed6dcdcfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dc1b61-d94a-41b3-b54d-670fac6712ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b66341e8-645e-4952-9c1c-70ac084ba81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620abe0c-b90c-4d82-9e6e-2e415ccd169e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9e60e-dbde-4ac6-8f2d-f9fab68d9ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e1f960-c401-4c42-8d48-1ae7df0200db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cab4b5-efc2-4bba-af10-c33e43d04809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4681b23-e84b-4fbf-bb92-06cffe4de930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aea0710-15a0-4cf7-8547-0d6ca50da303",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4333439b-3bf6-48a3-b6f3-5f2297f47312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7335fd-94e3-48a1-8b39-a7c55650b036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7cdde-e6dd-488a-917f-31b310443bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f13431d-5686-4197-abc3-7dfd9595875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ecd8a6-44f6-4bff-a7df-7534c0843ac3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e42e9e9-d478-4348-ad3b-a2e0037c920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca4bf39-7495-4e05-ba97-ac63366f4fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cadd170-3fdb-4c56-afd2-4263274b8c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19249b39-bc05-4a26-861b-98f432332cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2a5410-02af-4dad-8bc5-c4a3ca92a992",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64d8a71-a3d4-4104-9f34-204d1cae2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7977a0-585f-4873-b036-72148a1be929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6dacd2-4c9c-4db2-b32c-1b2357dd755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3bdd916-0638-4844-8f3a-6415d88bab48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a721a-23ec-4f64-8bb2-d38abf6a2a41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1722603e-dd1c-434d-92ad-518d6c2d6b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dc5019-9b3e-4092-b356-b2d54c87d5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628bf1c4-5558-4652-8656-e2b482f399b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdea2fc6-e9c7-4409-bb5b-a65276864c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51202e23-d0d8-46b0-b74c-6893115260f5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a6a2bf-af42-45d6-ab0a-b3ac927de97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8438c71e-c5ce-49f3-8fbf-a464b6f98d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41e2cd4-44e0-422e-9f9e-ed4e4e08610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26c31cd0-ca1d-4afa-8ffe-76f09c7a5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3338c194-0f02-4b5b-80f3-5af823f09f4b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272e1102-4cc6-4215-a7fe-c167497659b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2903db8-eeeb-45b1-8873-66a06038a749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa78993-02e1-482d-a1c1-3a4f18d0c8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4701036-9c5c-46b5-bb36-f8cb3e7c7387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ae74bc-30cb-41a3-8349-51d35381a6fe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58691116-ce86-43e3-800b-36fe0e39a2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd906f2-958c-4939-866e-5b3536d7142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f83972e-bdce-4527-bb25-60f7fe6397ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c82f78e-5648-4dbd-a3bd-a6b652b46ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9073145-7445-41ab-a4db-6e63e757d59f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb6e08d-89ee-4e1f-828b-f0d5078aedcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6a262a-04c8-4b61-b904-da777583728b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2baaef-4c5e-4061-ba26-9a0dd4e1f68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5315010c-20d3-42d3-a8bb-982eefc8184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbd84ad-1327-4726-b465-94a6270ba6de",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aa6d59-373a-4275-be7e-a54df0a213cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa18e1d-f6f4-4e8e-9983-56a27db74814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9a5a4-61c9-4a76-9bf8-b748d06f387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847fb18f-b4dd-49b8-9458-fe2d4735d234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb3066c-2007-4b99-b83c-1f840917f632",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b843903f-8800-4d45-9b86-9a50e86f3f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2105b30f-ba32-43c4-a2f8-6212748cba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f36955-41f1-4d42-a67f-13d96db5865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd38cd25-b68e-4163-9f1e-b9d11ec6304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e5c1d9-0c34-45dc-9818-f1c5302c06ac",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3989fa46-b215-4905-b1dc-71354135ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fc0523-0e1b-479b-b8a0-5e563f7d9498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d2c607-ab0d-4950-90b4-97aa430fdb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91ab09f-2054-4c49-8c74-143004ba9327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d4aa7f-2174-433d-96b9-e22a853e7ab2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9584864-9a49-4afc-a525-7b9a19456d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699f70f-6381-44c7-9bef-e625e0a09de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905a9b31-48c5-46e2-b3c5-9d986cf7dd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca73a700-59a2-475c-81f7-5f7e5be266ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff3d570-5008-4616-b43b-6db1b515e02e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5fe55b-ba55-4556-888d-474c46d5a508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd8f7c-0a71-4da0-b4c0-395f4f62d0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed443d65-7848-41d6-a868-d5e5861f3a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ec9bb8-c8c1-4778-873d-e14e3a9a2b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bf16c2-68b1-423c-a592-f77fb5ef0316",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f493e53-3452-4cf3-ad97-a7253c92d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffda5cc2-c217-45ce-88b1-a432e46862e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcbd01c-acb7-4766-ad56-e34db981cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86636a6-6144-4378-8e77-015f08afe5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426abf68-b680-4858-ad1a-58b7ba430c5b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5259f656-a6f4-49b3-bb60-f6c2af4e1a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca37442-4aa4-4807-87e5-38fae5462003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ab2f39-e818-4f37-b41f-0d5d07bbed80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c29d795-c3c8-47f2-b592-0ba93e71d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39d5a50-fc10-4659-9e25-cc7b69fec3d1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eb0a71-a8a4-4e08-8da1-a9e6a0b2e200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b979541c-c28d-4f68-9506-474ddc2e76de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba67b07-68a7-4a78-9191-fa8e3b70ec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac485066-e146-433d-92e7-a68354614f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6053251-b2f2-4395-ab37-b1e095ccf0fc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f6509-85cf-4087-9b1b-2c57106616df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773c8372-a69c-492c-b627-4b530a34eb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000b0f5b-92ce-4ee9-b8dd-95c2ecc3634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8b0593-47c3-48d7-ae2d-61bec7124efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f3dae-9950-4e36-97de-a95c3059467c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4411db2-1a68-4bb5-8bac-f03f30ea6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c223dace-1837-4901-ad9c-a0578f570c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a49e8fc-cef7-4f67-98af-35a6d10bbad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "824e5f20-e664-4cd1-988b-98dd69716d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4865f43e-0bb9-4458-b9fa-7ad62430f67c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d554fa-a4ad-4f68-82f5-38bcc0e67612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed9e2e0-a494-43b2-9f83-724ae716a5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c35c0-b296-4692-8fbf-dc61b2e2aad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf88add-c26e-4966-954a-813be1aa93bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172b2424-24f8-4dcf-ad15-90d2f45b0908",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a910a2-6870-471d-90bd-8c5c7c0f6df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859cd79f-449d-49cd-b80f-6ddf01c0dd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b97918-2bc1-4e59-9515-ee703e1e169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ccbcfd-743f-44db-a95f-b062b7322dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f9c13-f157-4cb1-a704-fef49231c86d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013c8135-e102-4cbf-977e-832d480d1ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14050e0d-e7f0-4522-a972-1c25f957984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a007d6a-4429-4861-ab32-c734638ebde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "065a39f7-cf82-403d-8b30-5646a16ef186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c56fda-202f-4922-84b8-25d5d6382741",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01957c1b-60ab-441b-80f0-f6e6103b9d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c7e623-b054-42ea-8b70-4307e9a9f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0282f7-dfb5-489d-bead-5817a458e434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38060b94-c6d9-4979-8fbf-751e7ec3b594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb28844-f073-471c-85e9-88ae2b802222",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f2fb2-eae7-4396-bc69-8a5a8c68ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cdc0c1-90e0-4d00-b49d-a5aa3adb3b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dd548e-3426-4ccf-ab04-b45c41fdf0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f58bc41-7dc2-4a4f-a1c6-016dfe3ca265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffbd10d-718a-49e5-84d8-a8386caab805",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f54e5c5-be52-493f-914a-ce4ac1907c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4976b9-7f70-4977-a213-baa1a00cdb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7ebb10-863f-499c-a94d-72d1b9568590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdeacc5-85d0-423a-896b-4df6ea2b83d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcd7e97-d43c-409d-bbfe-0aad3cfb8517",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352ac1d4-c903-4306-b2d0-8d5058e5c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c4eb50-1f05-4b6c-837c-87eaa53d290b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275f17db-22a3-4328-912b-97e1830c3e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59bc8d8-55f8-431b-80a3-465858db38b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e3d71c-9fb2-4357-ad9a-31a4b90490ce",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0df110-24d7-4839-959d-576f29c00499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08be01f-8f31-4da3-bd5a-587ce1a35410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e62b54d-4286-439a-bac0-59a33503758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "454115e5-2b77-43b2-a1ff-0d35272237d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc47f711-a162-4d60-a433-7ed6c49286f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06676640-65b8-4492-883c-544cfc57d9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbea068-70d1-4658-8994-b2724f21da37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d1f2c-2f54-4ada-b73e-c0c73ab78abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41eaf8d5-ad2d-4024-bdfc-e7fd34765713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367c80bb-e7a4-455c-8bce-02f50d8b849b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94562a74-7041-445d-8aa8-39a1c44bfb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdfcf8c-d6f9-4aa1-a91b-e7ddc96e9969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6248c0b2-6e3b-44c1-a2eb-226237373c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cde26b7d-de9b-4141-a939-92e6311f8846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20191443-7ba0-48e5-b54b-e5728ef9354c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795d5ad2-c0b8-4e11-aea0-28859d53cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aef0c11-976c-45ad-8a2e-2b0df46bbe1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f0471-6ed2-45d5-b6a1-6d5633abea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd5d237-e363-4ce4-a719-ce56c55f8378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bf4fe7-c866-4e55-9f99-bc50a16476b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbffd1d9-e76a-4e0c-88f4-bff91eaf0a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6f61ea-1584-4c1d-b048-ddebae26a641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf32419-2298-4494-bd0c-b86f4899a939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d2e4ee-f260-4d3e-a59b-3b1a61b8710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956634be-3122-4fd9-a3cd-42a97c004780",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ab4cfc-9918-4241-8462-24a4f3e73eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9779cb-fe7b-4ed3-8b33-0bc08ce41d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c20f45-7683-429d-b27c-81fe51887bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e625fb47-152e-4f8b-9658-418227bd504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da496660-9d9f-4a8d-837f-ba3ab8fa6771",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa20b60-beed-424a-9ac2-e80389b9f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748ec287-09f6-4ed7-afec-aefff4bb02c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e330af-a9f1-442e-ba92-2000584a8665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f960eef-9d8a-42ea-8bf0-19c95d45fb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4bf8a1-b43c-411a-80f8-a7b6a7dc7690",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec16f5-d5b6-43de-83ae-6a26abebc46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae04a3b-4f6a-4230-a65e-9928f2a26702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d239b4-45b0-4ba1-b0ff-ce919efcf41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0452bd5e-ea8d-4c42-b2c2-b1130b0391f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28ccd66-1c99-4d0c-aaef-938c1228f74d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a9760a-be7b-481a-a752-f00971131f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5b8968-bc0e-4a03-8215-d2017d12d769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5c659c-58e9-4b2e-8256-c6fdb1ff2557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a150a7d-7fac-4a7b-8fea-77d5c67fb311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44d96b1-d5ae-4e5e-9536-8884df35dc50",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accad356-0419-4752-b434-a2f9ace2e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74892b02-8d63-46ce-8e13-bea1c2625063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f07f9a-2fbf-4bc7-96b1-e0a9b748f049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d2ad64-d957-408e-8d7c-8b9cdd247b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652f223f-3b89-40aa-bfa7-5b2c5b0c08af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2059655a-4f1e-42fe-8793-7167e1f89dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539b0854-d4ad-42ba-8ff1-0d133b063d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bcbbdf-07d0-4993-8588-54a1015e393e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc4f8aa-5abb-48fc-93fe-98a0d5970dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b451a29b-a173-47a0-8600-21833e502bd3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1950f8-7189-48cc-9986-d26b7ef4b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12afcad3-a97f-4e85-a049-2d42770dd7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87748e4-ae33-499f-b693-154276fe6d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "05586d71-cc8f-4c28-9b52-5d7fa0972bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8963ebf2-8c42-415d-b9de-98484f52f1da",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56123723-7872-4cc7-abc6-8b702a721a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623749e6-26fc-4203-bba8-a6eb6e8086e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d8278c-63ad-476a-910e-bcc5173d967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c29b74-8e87-4409-989d-0e10b71fc5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e883051-ce9a-40ab-89ab-53b8bbc4334a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1c73b8-ce59-4a86-a9f8-16e1f682d3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c63272-9876-47df-9987-a68e0f323967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f1e87c-2461-483a-95b9-b2d913141319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c71dad-a655-4634-be8a-d52a155e3e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfcb002-cf29-47fe-bb09-079ddee1c8b2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d8fbbc-85e9-48f3-a03b-bbcdfbd992a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230fbc80-666f-478b-98ae-59a122eedff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a8697d-820f-4f4b-bedb-512e1e1076a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5f5f50-9694-4a23-87c2-7a018c2b30db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3069f4-6fa1-40ed-a272-268652887188",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6893770f-edd4-47ae-8d82-afd595ac7825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b84aeae-11ed-4adc-8a5a-70d98923d77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3ef934-9f52-4a81-b065-9f01dc6606ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4a5ccc-2c63-4980-8a6f-e975bc791731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3db501-6d40-437f-9a92-d12f42f4cad5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8723808-877c-4a86-b420-c10ac103cb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf40e232-b7b4-4a92-98f1-cc9358150932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463e853b-2545-4051-a3c1-161eeadf8edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f15885-8e09-4543-8ea7-a7e8d5927de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3936f-493f-4b26-9b36-6394dda6649f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bd144a-fbbb-4725-960f-81d534731d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c97b62a-22d1-4aad-9f1c-d0afcbfd5600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc8700a-aeea-4a3d-9742-7086b5f6f273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51d35630-501a-4167-a63f-6c5ea2692d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4db7f6a-59aa-4a52-8498-74b0fea02670",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42f909e-4b7e-43cd-9358-be0dd12c37f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b437a747-134e-4c75-9fb0-398b4a27b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65901a8-d5af-48ec-ba35-35f726b4d1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86a55b0-f2c1-4139-b3a1-7739ed59556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ec0fb-f46a-41db-b667-df59d18169d2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9162ce4-a927-4611-b1e7-1bd5879cb9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b2877a-9b53-47b0-81aa-2f09e412ddc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2760e06-d289-446b-9ffb-6fa3865fed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98be2571-a04e-4837-90f9-b0b5aa6a466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1963c63-e7ae-43f0-b316-5a6cca8a70f0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b155fe-4100-49d8-988d-6e3b48e2f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e577fc94-39ad-419f-8c20-274cd86257d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331a5378-dc60-4914-8ad6-1a3c4c71cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9526cbb-820b-438d-878d-11fa701ee0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a880ea-f5ca-48ab-b537-f8345c3ec162",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac09857d-9153-4f1c-9de2-3601c7d79595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e5895b-2349-46a9-ae4b-b91d033430ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da57a017-2f60-4ed3-aaba-e504830bb906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a4d1b4-7cb1-4c80-80a9-42c828cdb607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12194695-115e-4525-9889-9abdd309b32c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759ce36f-6bb9-49ec-aae8-535a0e46596a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167614a9-bcb6-4e1e-8ec5-ab430b897e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d7689b-dd55-4b0d-a9e1-4e1ad34fe462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f708db2d-0477-4607-94ee-a5df850f05be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e49e6c7-d1aa-4011-8c44-e7d985799a79",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662c22f-65c2-49cb-bd31-aa999e31e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bb80cf-2d32-4fed-91e9-014d808ff831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73e3850-5e8e-4b25-9bcf-e49c09e76f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e66773b0-ea8b-42e2-83ba-6bcac5aa45ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689be0ac-ae05-481e-8ed1-85e31e61cf13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24c01d9-e058-4791-80c3-94a2b0635c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d493d872-ae95-4757-9b0a-cf49852382eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f8ae3c-6ab5-48d0-a2df-afa6e5213f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d342c7b-b2f0-467d-becc-039bad4fc728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e647873-430a-4086-b3d4-d7a797bef635",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81f4a9c-0a2d-4feb-8ef8-ba0c0ef74d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fd1cdf-45bc-4ad4-b462-0fae53a52988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e4f162-f6f3-4de1-bf6b-ed55e98500d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1202d087-ad85-43b3-8f9c-b0ba3d7c9e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c96e3bb-3fee-4d2d-9724-7e83aac9ccac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb42d2-3a21-45cb-9b14-62c9ec48d815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf8181a-f551-466b-9885-7118ee41a59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e1136-532b-47f7-a990-9e99857737ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1717eed-d431-4996-a208-17c371792155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d79ca26-b288-44d4-843b-cbc00fec394b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27930367-5de2-4ec0-bfd4-e35a65479b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def59ec4-e7e4-4598-a21b-d5df93f63f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c38c6-ef07-4502-8517-067b5dc79f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15407e9b-cc2d-435c-b978-a9d65edf5e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf5060a-8f1c-4b7a-8f01-3cfd94f6f03e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aebee0-ce0c-409f-84bd-3f632531e11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463ba5e5-40f8-4a69-8f41-63ed58bac1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba85024-8c9a-4f33-a320-4ef715c9698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb38fce0-d6d1-4461-beb5-901b33b8fe73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56cabb-9cd1-4868-a1ab-85955a6590ba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bbaf8a-3757-497d-a5fa-8d41c8437f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1061dd45-2176-47ac-b0ee-b2fbc9da8c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b180224-faba-4f88-83d8-7f95268546d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b72cade-2349-4b82-b2d9-b3d9a167a338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c77f28f-c15c-4c71-a6db-58ca7140c6e4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f17886e-335b-4d0c-91cd-ab28dc57cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e49af7-5cf8-48dc-ba4b-67d412dcbe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b61fc7d-1d20-4392-aee6-b228f9737797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "898d93a6-72a5-4be9-ab73-d8e7e94c0968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdbd795-372c-4809-bcae-a7f99fa08272",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cd4ba9-c1c7-489c-8b9d-8b2c71cd7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f150729-e482-49c3-acd2-e6fb7d644824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89cd253-2971-4c47-a1db-b61f2b18ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "052bae15-488b-4764-a2e4-2326f787ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af4fd6-2b4c-4969-9033-60d5382f39a7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f8b5d-b7af-4955-a9a5-3d706b1bd332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf34f52-a7ac-4db9-93f2-ebcfd858ce4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35151388-76ef-4960-b144-0771c0452c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3df705d-5e07-4de9-90c3-404caf277b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f821d-5a33-4374-a733-9a8c5d986810",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e32513-6920-4069-83ed-a66239dfad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e392ea-910a-494c-9cfb-e34d5948bd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631275de-dcd0-41c5-ae9b-b52c2039c592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c88abed3-08d3-4ec6-aef3-4234a4a992cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c932ee69-15b8-4430-954d-415c60c56783",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c30b9bb-9d08-4e07-89b9-b27a4c002573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73f425d-831a-41f4-ad47-5006f360ef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fde42d-599e-401b-9a8f-524be3042c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a851199-95ca-455e-9dcf-63e1b5c162a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fda099-442e-433d-b779-b40fc78d7e16",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9711448-9282-4f0d-9fd1-27e1308a9222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d664c3-1ea8-4480-ab87-9b4dfe9d6c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42487e36-a315-400d-8470-f1b151e2e2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64685d16-09b5-4d42-aea0-fb69c59dbf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d65d070-50c2-4cda-b6b1-27a5bd033063",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7d13cc-0697-491a-ac3e-78745f0db342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8710ae6-d334-4b72-beed-f7396dc1d686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865acdbb-d686-46f4-bc3e-5a68c2839213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9433317-9ae7-44ec-bd42-26be49b8f704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf21e94-2d46-4059-a5fb-c57403942b62",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffcdc16-fb1c-435c-8c7f-8e447f5a15ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c0aee8-81e6-4687-a48c-009424cac58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7723584c-d01b-4271-b955-64178e0c3555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec73f502-40b3-4529-98c9-b38bbd92f93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e6dc2c-cd2a-48f7-9cf9-0f8e69c4fd20",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd7788-c45c-4bab-b732-9d025e2c046c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a1879-4826-4681-a0d0-a7deffcbf332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1746b556-03a8-48a4-8409-4c9846fdc2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebc6c54-443d-452d-9508-e84df655e316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feec56bf-ac9e-4af1-a7f4-3a623adf6645",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0848b368-3668-4e5e-ace5-aac48832dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239a94f8-cc2e-4f70-b119-c265057d7c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3db048e-0a88-41e0-a63c-db7c7c5893ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5279ba24-e8ff-4879-af0b-6233126ecb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edb86a6-c0ba-44fd-a584-c5c86ff685c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e72541-1db8-4f76-ac79-d3438656371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7de5c15-07c1-49d7-8e1e-8b3ba904efe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c50a2fc-4a47-49da-a441-fd77f9c8ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b48cf3-53e0-4a60-9fe4-09e878880043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69b58e-144d-46e2-b91a-ae71e247789f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caec1324-ed5f-408e-ad50-945955fe71cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac0a578-fa1f-4c27-9aa4-8d8bb404d6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d9f52-69e6-4e8a-a2ce-15a89bfebc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c11c40fc-7f61-49fe-ac49-fe4b792b625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38668016-4cfb-4ec5-9b8d-5bb7f26102a7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52625464-3344-427e-adae-dda2a514d690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1d6dcd-6b2f-4116-98ec-ff609e0cec57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449dd606-cf28-4634-aa50-9a442b9c4b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd69003-4367-48e7-88e4-1d1fb9686be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0771d4-d462-402a-8edc-6a7c0a016879",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868b1bc5-98ea-4ca9-9669-db85e746f2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d5d754-7376-48fb-bfad-fabdae8dd8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96784a4b-fe5d-450a-bbcd-f7a7c9136c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3b19e7-6103-43d4-84ce-776c2aa8e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e4e26-acdf-4589-ba76-90eb19063651",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceadba0d-0538-4363-b18a-82cf88cf84ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098ab710-ed8a-481c-b576-0c1a6405b273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd96ade-1e10-4f03-aa77-8dc4a0d9c14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8efb66fb-3885-4a4b-a6a8-d60be5ff4c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89370014-950f-46cc-9e98-0b3618c9c06e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a9f1ec-32f7-4508-9999-240ec54fb72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac9d117-2aae-4cc9-a0ec-9db31578f17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3595ca0-5f7b-44de-bb5d-a9cdb030f417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "791ad63d-021d-497b-b6ba-930224917f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8bd7e0-0ac7-457f-93bb-0bb7e61d67ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5338199-98aa-4941-8b42-722285660334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0ef3a-4a85-4fba-a9e9-8ffcdeab2255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e417a2f-f0f4-45ec-9e01-4e71dd61127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7864ee-0293-4f68-8c71-b25ea3306cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb02a49-624d-494e-ac6e-9b0d1e14f7b9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf34590-c9c8-45d7-9ff7-9aa419d98254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c08217-57e5-454f-997e-36066417295a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bcdb88-b982-4d92-b100-32c58ef74007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7abdc8-d9bf-48fc-bda5-be145b2d5862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96d87c9-5e12-4645-8eb9-4deb5e3a96c1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a437c-20bc-4340-a098-733b677b0c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49228940-5820-4de7-babe-39f711b09e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878cbf3c-8a2b-440b-816c-9df92fa396e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "055f519f-bb28-4fd7-b575-66306562863e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3840f-a3a7-41e0-abaf-44db7624d3d4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfb424c-280c-459f-9dd9-3c33e2fe4b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e19093-7c31-4282-82b7-0154df2bba0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23167ed8-62d0-4173-a039-4846bde373f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9608a0c7-8144-42e3-a022-ee747a65d1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c875926-1bad-4804-8318-7b5d7bfac51e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ee6e21-b230-489a-91d6-7a2c3cd8094e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf659c5-d867-4dc2-98f0-eb85e2362828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098fe69-83b0-403d-beaa-1802f3bca6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c0e3f7-b400-4d49-8e89-352027a1b09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d89eaa-a698-428f-9f27-26f2b0c64f1b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aefb356-4ab6-4007-98f4-0b734142e536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cded21-0a22-4ad5-ac15-b80c33ea1ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b472541f-fa69-48d7-afd9-06d908bedc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e1e823-df01-414a-9635-552a02c4a59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ef2ab-b3c4-4eac-9227-d3fbd472f1cf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ce6996-4ffa-4057-9163-af447547fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2439eb5-39fd-4d14-9d8c-f4f7c400b0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421bb083-eb0b-4d33-9a78-40758d1d198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8160ac8c-37dc-4c8b-b7a4-db73d17ddc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6ebb0c-468d-49d6-b3c7-7de4c89cc148",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cfcdcc-96c9-4405-b211-b28b83be0227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df47f4ff-7120-4b36-b7ae-a3db8f62e96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66e2589-3599-4b82-97cc-e4b4b731e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3958057-0abf-4d72-b444-5d056c4130fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398d101b-cbe6-4af2-ae54-e6b8cec64b1e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2a6512-56ec-4259-81fe-bd61be7d3618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcd8c56-99ad-4d51-842d-f665de92611b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1340826-1b63-440f-a10d-64ae8d0a274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d89564f-8e8d-49dd-b964-ab464220c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b3da87-8a45-40df-9493-8b5aaccb7dd0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c367039f-7838-457f-ab41-364b8e1613bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4cdeed-50b1-4c75-8c80-1a78b24d8a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20090b71-75ad-4099-962f-99785b40df96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5f946f-0d95-479d-b066-118c63035dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d0e40-969f-4ebe-beba-3e1527c6f8d9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912fbb97-da74-4e62-a319-b93859fb4b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4260665-cfc8-4a89-9b36-6d6a9b4fd4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8d4197-797c-4db4-9cba-807f38b7985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f5386-99d4-4ad2-adae-ba36f2b2cdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a24b2d7-2fc1-4937-92d9-65855a304acc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d103a476-2de1-4370-8db5-ff7b55e2331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805f388c-22c2-4333-b9b9-02761c90fc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d88058-1296-4996-a4cf-e16bb3b7d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdd2bc5-c7ab-4d28-984e-9d1e4d7df897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeb8920-83c2-4cdd-99df-bb39c2797010",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6710af3d-11dc-43a9-b7a3-026cf166094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49179e58-d4d5-48f0-b332-3437a48be06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76af099-4a54-42b1-8f80-eeba22b6da75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ba0dcc-e624-464a-a2e7-3e9d6fb1a49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf91866-5a22-4d68-b601-a979e46f425b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f65327b-04c4-4a8c-8be9-a445b9643581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2e7140f-916e-47d6-83a0-63a2856ee34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b3f3a0-1efc-461c-93e8-78d0c99f3727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc47bf6-ba6a-4a5c-b3ee-1a6638bf9a9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d80dcb4-bc22-4efa-aa64-57e64744e8c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3900c5c1-c914-4540-a587-e65c0fb43b67",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04985ec-6c0d-4285-90ad-25203a310813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f966e47-1607-4523-b220-a50b6516c414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365f9c20-eae3-45ce-8ab6-b04452eca626",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dbcd621-c552-4880-adfd-485adaaabd79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dab92c0-33a9-4e98-9115-2cdceb479fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32686518-7c27-4c7b-bc6c-854ef24ae3d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fc6642d-4dff-4ca4-9fc8-42d8487271de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c99af800-e989-4c58-a604-f5ef34fd65b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70e9ca92-899e-4920-9cde-61f60a03ce67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "540a362a-affd-44ca-b811-2e9da233a98f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "edbcccb6-1c30-4c31-bf37-6001e0434f39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "915876cf-863e-4cbe-8fa1-3bb2e7251f28"
                }
              }
            ]
          },
          {
            "id": "28aa4eab-8da5-4398-9560-d752cfd077c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffd32e25-a94f-45b8-a0a8-cd9a65257261",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "76c0cf21-f981-4a2f-9868-7a90be27d2f3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e4a4be-634f-45e9-af12-9e61fe7b92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "992cbbdd-b78b-448c-9ff8-353c3d6b885d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19106413-f90c-4b82-8e86-9f38e771f02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42854d8-5630-4bd9-a9e4-66f411663cd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8342dd70-bee5-487e-8470-c6b61b37ad23",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b0037b7-bb8b-40fb-9d91-bfedd40314ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a0f4caa-0ebe-42a5-a742-878cc8f64dfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73cd0711-400a-4fb3-9852-77e70a6aaa3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62f0d3e9-136d-44e7-ad6a-94716068e8ca"
                    }
                  }
                ]
              },
              {
                "id": "4e772454-c5b0-47a0-89c4-e4cd535888ad",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7763b9fc-8689-48a5-a8df-c2c3f5ade97f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b6efc94-d50c-42a9-b039-54fb6856549f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea17420c-d76c-4d42-9bef-130df89805f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d972366b-a679-4ac2-87b6-8f2944927994"
                    }
                  }
                ]
              },
              {
                "id": "798dfebc-41b5-4b5e-86e9-278c8e2ed842",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e929b9-8b84-4a00-9b97-f479bde3cb6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0545a8dc-396c-43a9-a2fc-923100806675"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f0447b0-b3b2-43b8-b6fe-1d3bf22195f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63e9441e-721b-411f-abd8-0a36d499520c"
                    }
                  }
                ]
              },
              {
                "id": "7085a464-0259-4234-a98f-d4ea8bb5964c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c32ec262-b131-4c61-99cb-f5ad4ccd1eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a53a2e97-b65a-4d8d-97d6-029aba036297"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fee865e-ca5c-484c-a362-387e84867491",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "97abf2b3-55bb-4f49-a9f6-ab70d574085f"
                    }
                  }
                ]
              },
              {
                "id": "68de6249-81e1-46f8-b669-e804de402ebb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b038a08-597c-4d55-9f97-42bfcfd3341e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6830030-053a-451d-9688-6a4ecf9c4d72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d30a83c-f954-4dea-b11c-82e16b3c3614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e281099e-c633-48ca-b21e-e7d1d130de5b"
                    }
                  }
                ]
              },
              {
                "id": "eb8d93a0-b4c2-4507-87ef-70e013bdad3b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bdbd2e1-58c8-4a11-b170-49071c96b344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "329cd4c6-25fc-4970-ac71-88fb15d20290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b9d3aee-70b9-4e79-811f-1843baa88205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f70ee6e-2e11-4e72-beef-5097f17336c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35f9c510-03b5-4b34-a8b0-6861cd31aebd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4e589e8-eb26-4cd8-93da-5001f321e8cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "328e732e-0dff-4095-b59b-7c7c86ca5c1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77f2aa79-d20b-486f-8987-11045d55d69f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86cad366-e03a-495c-8e4a-3d9cc1d346dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "55394af7-bc8b-4c99-9d1b-a983e96ceba1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "609572ca-616a-4826-94c8-97ede4b80f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b5cfadb-75e7-462f-a7ca-00ae956b95c3"
            }
          }
        ]
      },
      {
        "id": "53f32806-0439-4ef9-b726-21823f0f6699",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "948e92be-be41-48eb-9732-9d891416d1b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8b41549-949d-49c9-9215-03428818538b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ccd1ae2-0efa-4b2f-95da-e885d47c9362",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d3fc87-384a-4f71-bf43-f1684dd2f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86013f6-5c09-4dad-bf40-3c294a2533bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d945e-6b6c-443a-b0e1-5609d3e3ee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f5f7a2-d128-440b-82e2-55c5252ec112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fa4de5-4d01-4b80-a750-d74e7654738e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75cb391-df6a-4359-8f6f-b7ffcd883574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d201ca82-7003-4241-a898-ff514471047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed271f3-f7a8-490b-b7e8-7f07a9830eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a031bba5-4b61-4813-a175-bc0d46c4d0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0cd015-0804-40f0-b5ad-305d88df777f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b833a2-d3c9-4dd1-89a6-139d0c95aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8561ff-984b-483a-873b-ccd81a4861f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07000dd5-5961-454f-beca-96f1ee33ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc76cbf-dee6-423b-8a8c-2f843bdc2f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71715ce9-db3a-491d-b80b-2de82d546e6d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42412997-3ba4-4aae-9fcb-9ce2bf4a7a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035477c6-2def-48a1-9d1a-f21fd58a53fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740137d-4df7-4a36-bf64-bcf52ae05edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0cce24-73ef-4f09-9231-50bbd9d1c921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b4d64-bf7c-4a74-841d-cbab77c541eb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ce2eec-8288-414c-a879-0f15c47e0838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3c7616-3794-42cf-9ad1-94ab9d7327db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3403c-14e7-43a7-b590-1c913e87ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3ac91c-6088-4a09-aaa5-0650cf93f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07622ed-2ecf-4d77-9d3d-829c72d4d1c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b8f905-12ea-44a1-917f-07b9c1f59914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31db59c8-cbae-464f-9b8c-504b57393000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0b1663-99c2-43b3-ab07-dea1d91a284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f62d5b-8e1c-4461-af7d-11d834ef44cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229db246-09e8-410f-9fc0-676b3060d369",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf22ad1-eabc-4487-9a36-886acc480f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0546192b-349d-440e-91e3-022b08769c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128d1faa-decf-40c1-8c57-fbcafcf73c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b513d25d-8cb4-4d39-bc81-215cd41267de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114a021-40f9-40cc-b94d-0457a935b1e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f61d2a-7a59-46e3-b890-8bdbd8547ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0758fbdc-1ada-445e-8424-fbf4c0227d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a4399-8881-4768-bce4-4668c6fcb17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "057a2711-932b-4719-9ea8-ff30d73725f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9e4fe9-85ea-48a9-8162-4ceef673b47a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67440a77-63f4-47f2-b54e-25b73e2c9dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045a5496-c795-4470-882f-1c9402589442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa4056d-6008-45a8-a860-cc1f506568d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42576137-be43-4fbd-9a24-bf328290fec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b464e8e-32fd-4d4f-9412-a9959039f493",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bd2ec6-27ee-4a56-9ce0-62ec8028f97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfa0e5d-aa6d-47dc-830d-ca0ececef18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68239864-4dfc-45ca-8de9-944515d04aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc16f30-74da-4902-a86a-6e328f30ecbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb62e0-f0df-4099-a86d-e3d30e7d3c9a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb6be04-2710-4c07-952a-c5cb5d0d41a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1603a82-0f91-4907-9299-bf8fe21de46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38947584-5ecb-4627-b538-1b1ff3a69a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e3b559-99b8-4067-a34c-ad48d6907356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c7ee9b-55e2-451b-b39f-efcb722e9ad8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2afa0ee-5244-4ed8-b866-5efb9b3cdd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef911b3-448d-4ccd-b41e-6920899ed50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3e50d1-5017-48cb-9ade-f3ca4718284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb7d0a5-b099-4ec9-a0ee-c7de0be92306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f908a1ed-57da-4ae9-ad38-88d85bdc25be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0950a6e-44c3-4ecc-ad56-1be5aee26d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb9e96b-3498-43c8-90ec-c8fcd9ccb516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1e872-f42d-497f-85f7-c27032670ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7520e1-0083-4e95-8781-e07a7b54cfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc600ec-9cb1-419c-8a37-1b8bd21cc8c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87947f0e-4395-4fcf-98fb-eec1d4feea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd3efe3-26c2-4561-b0de-a665e90faad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86fcab7-67e9-4e8f-b8a4-57f02b89c3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cae2d17-a2af-47a8-b025-f05420c6d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f071c6c2-7172-4a92-9d7c-eb0482b0f47a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e67ae2c-735f-48a4-9b84-0d00a43b494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83508523-8f1b-4ff0-9bcf-7d1c77e0b01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3edea5-1199-42e3-8bf1-b392baf3c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3af0aa7-254d-438e-8a21-32b4cdd62585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704c1279-7023-49d8-b977-928a7a410e11",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fa1ec0-f24b-45e1-b030-62f002fb4e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def876bd-cc14-4617-87de-412d66196f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5a213c-9ef8-4d82-b455-cc0bbc830920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c207b8df-2e60-48b5-8b9a-6d87665e9e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f417a005-b533-4e45-a1ea-5bbe6e5c3096",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df9e86f-f13b-4943-98a1-544371c1a5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b06a5-53ee-416a-91f7-de6d1424ac0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fb79d2-5a19-4432-8032-17ec5949e3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc93cbe-4322-4913-a58c-a586b7ec4167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb096a54-3ad6-4f90-8326-85cbab24aa7a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adc610a-cf23-47f6-854c-2b125dd6548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7bb2ab-26a6-4e20-aab4-36a7911c9bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1eff5d-3574-4555-b4c3-f2fc564a973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28208815-5d05-4d0f-851e-173c91368a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1666196b-9cf0-4735-8e56-3a1f50ab775a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f34a7-01a0-41e1-8e1e-c9b958851191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b6b98d-1255-4ae4-bd44-6c0374dd8c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c799334-0004-4ca0-8dc0-e7c10ae80ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3e5023-a129-4b00-89cf-2fbd788f9425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d8bdfc-847a-4202-be3e-2800f31fe42a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52184aa-14dc-44c6-862f-156774c43858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333c4dc9-fd2d-4ed6-9499-2d1a09c59c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfd6191-8d57-40b0-b3fc-d09306f3f004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82927ea8-5df6-496c-b35f-af6bf87e99bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4d0834-6686-4131-baed-0aa3873fd9b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01697dd-b44e-4264-a995-f396dc5e1a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17aab5ee-ef3a-43ba-876a-cd26a075ea50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2db5a7-b6ce-4085-8ce9-de2880f5b54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f90e36d-d761-4cb0-b53a-0bbed89ad118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea4e5ed-2749-4b9e-8a42-d07f90fdde9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d11095e-a013-4f06-8bd1-90436d39f9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0acd874-bf51-4720-bb40-dd39f19afe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3628b3-6585-4eea-a816-548d3e91b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9838114c-68f5-4a00-938d-772721520955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbbe173-e019-4914-bd49-5884acb86e18",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba6d37c-946b-4061-a499-d46a38cdbc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3461c6-62ba-483e-a416-7d54ad8a2dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33023be-be2f-49d9-ac86-c3b811fd17cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c6f262-4c92-4fd2-86d0-40cba053a0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e745d3-9624-4b97-988c-7c9a35e170cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2812476-d85b-4b7a-87b3-02d6224ba7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07347b3d-2d48-42c5-8469-d89241723474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeb2680-21d9-4069-b470-519ab931530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6546983-48b4-46d4-ab6c-8bf3a0b99b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab42496d-c5b9-40e7-9177-93db5723d93e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48d1754-705a-46b3-9ac4-fce351343064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbad4ee-4226-4b9b-8dab-9a4d1e204b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830add80-7866-4445-ae34-2bc0270789e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff8d746-6f56-462b-a780-01adf00feabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354664a6-8717-4082-ab65-18f26ecacdba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae6ae03-df69-42f4-b69e-23d7995d6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990c71d7-2a8f-4fab-8dee-0148bd25bff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02b92d5-215a-49b1-8d89-673887c0d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe1ba73-2a5f-41ac-96cf-36f2051b89af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad766bd0-4efe-411f-a0bc-117bdde97773",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8d6391-87fa-42ca-8056-95349589a737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4263e7-6798-4e4d-91c9-ab9c0eb9b002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48feb1c6-7321-46fc-a66d-43c9d8578a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3236d15f-38a7-44fb-b61b-772d755e9323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36580e69-1033-44fd-ac9a-2debb1d73164",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cba90c-25de-4a45-bdd3-ebcb65405a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0fdd44-dbec-44c4-b068-8ee73ae172c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba766ac-18a6-4e8c-8a31-64d621338325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9a6c98-e1ef-4be5-8fd6-e89f71fa7c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a9e64b-c0be-4c17-8a68-841d30fb12ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1810f0-6116-40e9-a9cb-bea437afc76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a325aacf-8a4f-4e01-9345-ac8725a8419c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97733c0a-633f-4ed5-8777-24d30d6f4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b523dd51-3291-4def-ab27-f41454d6d2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e6ad69-116d-4314-8f6c-1f547a57a8da",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0452be26-1029-47a2-804d-de36ad61b9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d54d8a-d79f-460e-8660-821c3c313af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c3a1f-cf5a-4a96-a389-5babf9ec8f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca63b0b-64aa-4b7b-8f1e-ba6535b015b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78faedc2-b9c9-4ed0-a529-b4d3a12e0f5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3551889e-a83f-492d-81b1-de4ea2d6b3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334da8f3-9acf-46f7-bf5b-5f8fac5dc4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23b3b87-cea6-4170-951f-52d969345544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb27203d-61db-48e4-b9ef-6affd18d7dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ab4da-a6ac-4525-b047-fc850885b90e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560de4fd-edf7-4aa3-b6cd-05611fafbe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b605ebf7-24a6-43fd-ab6f-4abf08cd77c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553c2371-e89c-4f57-a38f-a82c815aa101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a447512a-4fc1-42f6-affa-6799a3598096"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e3c80fa-2f2a-4bcb-a90e-896131dbc855",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cec5731-efa6-4b2b-b017-1cb6230075b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd897d4-495a-4a8a-81b6-32518f3c5eba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e451dde0-2bca-48bf-8c2f-b6c32163420f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e406885d-2e02-49b3-b289-3e0c0e30c160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecca7f4c-33cc-40e3-9bac-c5367da42112"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9465888a-8183-4b71-b918-6f0731a5f388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49244656-351e-4436-ba51-0d33ad961155"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3084cde7-9d1a-4cdd-9285-cbb9ef860a4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f3178a6-9911-4075-80d5-992416d0364b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b15ff71-1d30-4e7a-a724-c70c6051ad9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bce0ea46-2733-45a9-be93-34a4404e1a78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4547e37e-60a6-449f-8bb9-01bfd9a9b74e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11a3bf8b-df23-4682-97fa-c410cd69244a"
            }
          }
        ]
      },
      {
        "id": "eae5ceb1-73da-414a-874a-2afe6c5254a5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7d52bd62-0702-484a-bfcd-820c321ff523",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f230e5d6-92bd-416f-9d59-1299aad77b19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f6a2be5-917a-49e9-8d80-b6c268600606",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d085f4c3-ce1d-4d5e-bc1b-04e7e28fc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9500f8-4af7-4c61-9aae-e7a7d048ebc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ee71a8-a125-425c-a806-f36ac8ce7a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7c0bf4-c9e8-4b7d-8a4b-8c1683a57321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b36faf-b393-47b3-adf3-261df4cf0ff0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e7e74c-d5a3-4902-86a6-ed69c2370fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0a5383-586f-425f-9633-3480cadb86a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f051027-a062-4915-aa88-b8294a969bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee1477e-5640-4910-a500-d62d38f59ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640600f0-23d6-4a6d-8cf9-97d586ca38bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436d995-4296-4e07-aa50-1b9cbaf80952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0e1758-c52f-40dc-a54b-23364fbd40f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f261b0bd-6a32-48f4-84de-2f9f8e3ef89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec9a538-66b5-43be-9a55-e5857757ac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a977463-208b-4314-8e9f-23b0809874b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89186007-c260-41fa-8b79-71d9ae7d02f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4252dcdb-b2ec-457f-a18f-64e5a546c5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ddaa5f-2f75-44ce-ad0d-3b664dffe022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c484092-4eb6-495b-8575-a37b0c631327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9967b75-5d1b-42b3-82e2-286da3d58912",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2c3668-8a38-491c-b5f5-0c0550aced05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd9a042-4ad2-498b-83d3-00e0a0da58b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e95a74b-c2b3-44c0-8c5a-4908d24484c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d2fa0e-fb1e-4191-9bc3-2b3768486e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fcff6e-3201-4b18-8e16-aa17454908e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391bfa19-2f43-4e2b-a230-2277778ab648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e252aa1b-5647-4478-a569-c3856276ecd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fb8d6e-56b4-450a-81ea-9631fe9e2911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc50f9bc-e74e-4dd1-97da-aba8ac7b6d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126a7610-e054-48c5-a6b5-0dee6844c9f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996d28a-ef01-4f73-aa03-d87e6523d254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ab9a51-234f-499d-80a1-8b05c623bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02192d22-9d41-4732-ba6d-4e36b13b0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "428dbe66-9ee5-4696-aaf9-3edf743797d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95bb262-5329-445f-871a-25c7a33903e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4bc9b9-29db-4164-a202-8d0984ccb4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695d4c3f-7a73-4285-8a19-08a2e7dfa7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfaaa2a-fdbc-41fb-bd02-bd89ccd33401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "199865ea-6282-46eb-8654-2bab40073ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1356ea-4239-4eed-a7f9-0d382297ffa2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd8607-21ad-4581-a192-8735247c8b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5a353b-1e14-4620-bc45-d70a7b559067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e37f1e8-4c71-4820-a401-b51cad390296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c728496a-50c5-4c82-b270-d367882e9116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab33978d-7004-46f5-b9ce-eb8a8881f175",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de7c7d6-b695-4142-9c02-f7a3efc7aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059e6623-d18b-4424-8ed5-64360fafd8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6397e49-dd29-402c-9b6b-0468212748de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9538915-e39b-4166-b1ec-4910244af60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc077b6-75a3-4cfa-8125-83ab282a41f9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c24b8c4-7b8a-4c46-a821-b7088d27313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5af39e1-164c-4f44-bd00-699ca17622f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52562bf3-9783-44f6-9639-6b5247cddbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d504c305-4afa-45af-9a2c-bcffc73cf72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cc6439-92fe-4fa4-8926-ba1f9543b754",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb1f933-9030-4f59-801c-71c4ba170b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353d662e-dd45-4030-acff-bf3b473217c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c9055-e0ae-4120-b04c-650ae1d039ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee345e7-dfa0-4c4e-ba31-84c2fdb2ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c16e90-1464-4af1-bb26-85d82a721db8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c264365f-6b4a-4aaf-86b2-5521c3b09dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92969602-d139-41c9-811b-9aa2930764ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd35a2ed-54f9-4d43-aaae-d6d895234346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c8c29a-c08a-49da-9d5e-f7fc56eaf3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258ddfcd-2312-4ea1-bcc5-c09703e52966",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c30dfc3-ae39-4d7a-9652-9724e612ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e054a9cd-4294-4731-9815-4ee2531cf35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407a63b6-4778-4fc7-a086-700220b493d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "786e60d6-9c77-446f-a1c3-a01a7b62f6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bef809-5cf2-42ee-8fb4-d6931a0506ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4062b575-7c08-4f6b-9d8a-6bf778edeb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f3ce8a-0187-427d-bef8-aef8e2ac67f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6514f675-20c5-469a-86a0-3dc31a5eabd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b8f1a9-d329-4f74-988d-89047fbd7ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb4be0-2889-41c2-a37f-4f6f3bb3c1bb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c1769e-9f70-4369-8716-c011f676c718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86c1460-1831-468c-a9ac-e2a11540904b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46978ef0-6d5e-4c5f-b92d-a302227c74b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "414cd584-282d-4854-b8d7-8965e482b7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125c3c19-428e-4b0a-a00d-4abea9018522",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc5e02c-c979-45ad-9659-87cdcfa9bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c4420f-bd36-400f-8d69-1e431c8d81d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8772fc4-bb94-4021-a087-34b8910b630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c32c03e9-96a2-4920-a8d8-a5c77521a6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f445a9-506a-44e8-b5b1-b6207e4dcade",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee0e6b8-a895-48b6-bc54-28b2c70d8e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4927c287-4d4d-485d-8f2d-915c0bff0f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edaeaaf-8f79-42eb-b3fd-386261406dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6bd0e3-3cf8-417d-8aaa-ba28d6eb8186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1948f209-6f05-4a1b-80a7-7f53b6d8fa7c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c11a0ae-23f8-4455-9eea-dbe011ffaeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94548d39-b296-41fa-a24a-8894e6733f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c6544-1b41-4fe6-80f3-32295c6f9e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d026b3a-d74e-4c7b-83e0-77eebabc20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc43b7d-9a1f-4e08-a90d-38ff9a74826c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f1bbb7-75ab-4f42-ac95-85b7a3b3f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02d61ee-4569-4fa0-89ad-823b867309a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a56148c-a309-4eb8-88f8-da3167b2bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3f540b-6ac9-4048-a589-73631534b6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f03f7-6289-4a54-8e21-79ff251f1642",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ce58cc-f4ad-4142-8b32-8bbc7e908697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a506b13-535e-4ee3-8792-570f98a8c4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243494a9-54f4-4f74-b7de-6072e111fd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e317eed-911e-4072-bee8-58d65e1595bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63f9c2a-7443-4b82-bce0-6efa7093bad4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7929134f-798b-4eb5-836d-5e26b32aebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96351368-7d65-48ed-bb8e-9f2af1fd4163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa99610-76e9-46d8-a2a0-132588c95002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "915b2c3c-65b0-41cf-842e-b56a10947c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab16f716-626e-44c2-9dd8-a0b8cbe9323c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78806d9a-27b6-46a6-9289-2ee2443fab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9ccdbe-9f23-4ada-a78f-ed1a3823e126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f559aeba-89a3-40cc-9737-36abd5ffbf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4aba9ab-b858-4e97-a20c-27ef3b0376cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee15381c-1514-40d5-900b-b794f3727351",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804c4ed-f478-4fcb-9dbe-5b7483b64d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3e3f2b-4856-49ea-a708-606d8e06ddda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4afd6-1576-491e-a236-3a4c2dd13cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1437da65-636c-48f5-a8dd-464b7ddd1cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5802c6-b25f-417c-bd54-3608baa01f9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15d62ca-62e5-4608-8dc6-920a915d09b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e58fbcd-f036-4791-91ba-f2a5d783a4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ddbf9-e8ea-49ee-8ec3-e56870f6eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bf99c9-42c2-420f-91b9-6c94c61449c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096ef127-1159-4038-90cf-f94425b1d542",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb52a4d-6333-4ad0-9ee7-c24b6fd79d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff5b456-6bcf-49a9-9dad-aa94f5f4c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6388e8-9569-4c46-b3d6-f0ee701d9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d330c9-90db-4f75-b724-2f2fe48d6eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909bc800-d49a-4438-8a82-3aa054210edc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173d12ba-d5ca-4ec4-bac5-3df8dc7308f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddc4104-1c89-4531-93d8-422f1c452f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c29898-7d19-460b-af9b-3c1446b39ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffe3611-98a8-4cc4-99d7-18f24d47a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b6fcf8-bc30-4a6d-8511-fae89859b2c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7bf671-5551-4bfa-86f3-ed22b611fb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9757c7-fc2a-4f35-9529-8ef29048feac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9656a795-9f03-4e60-9450-4b58a4780715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f08813f-683d-48c5-a279-1c69302aef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc9e10f-7f82-4f3c-922e-70dd6eca0099",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a2870-2621-477a-9e81-922c20c20355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e069921-bdd4-44ae-9c34-b9ba889bc41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda3c1a3-5e39-4846-ae3d-bb67a6b9e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff76ccf-5f04-47c9-af2f-ce444e8c602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8823fc0e-729d-4e70-8f8d-ed4c5ce7aad5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec07233-5b5b-436e-87a6-51503407fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6b5008-c3d9-4e0d-838d-7dab9e338ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c1380d-02fd-43bf-9801-74e82ce57664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af009868-f4de-436f-a710-3e9089b3a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac71256-795f-478f-8638-dc826953774e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf33958-22cd-44b8-a24d-fe385704c78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913312bf-ae75-444b-bfd2-98b65576ee51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd24728-64d5-49b0-9130-b118d88e850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2929da-736a-4a7f-a2b6-86bc96e8da03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab77cc6b-12af-4884-a643-93b5c3faad4f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05375b46-6232-48ea-8b2e-3daac461606e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48340b0c-edcf-4447-b70c-b65ac32a9644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5fd865-66cc-4f67-baf3-3d910a17472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3d21c2-f554-4ac1-baf9-df794f7c3dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79268a89-2829-4542-adb7-2ae08ff33412",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5953c80-6861-47c5-a300-132c96e19966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb3ea90-83c4-4612-9ba6-530397666079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5cb066-e5a1-4cc6-b29d-261b2cbc38a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc61e32-2c9d-4a5d-9ef3-0731a587c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9acf793-1672-4db5-8c4d-4efe65461d45",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f0b95b-8a30-49a7-b38f-057208dce5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b54d43-377a-4f65-9a71-416fb0bdcf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d84ca-8824-4389-a948-6a766fbf31ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9f96b-2499-4871-8d8e-d632a94955ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184186b8-1fab-49ba-aade-733ca8b2292a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7918e44b-d241-4445-a6b9-ba2ed9f0c16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a443604-bc37-4a78-96cc-b4a894fcb1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c12c43-d3df-47e1-9950-7bcc3dbccac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81f2dd3-0e0d-46eb-9cfe-a4f55cabc805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3021b305-33e2-435f-b5ee-60d440c4cc39",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2288fc-b02e-4265-9dfd-c9661c7cf06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5ed847-a77a-460e-ab79-70d4647d2fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ed738a-e3dd-45f6-91fd-b5d8bfbdda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10c50f8-56ca-4b42-9b7d-bc5b5ea7a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beaaf4e-0086-470f-aefc-8f8604b92510",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f07380-df34-49ff-ad98-8194a1322590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db643122-80b9-4356-82bf-de75daf39a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93fc07d-51f2-44e6-8b4d-102dd2edd4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06061f7-92c3-4077-89a6-40fade13a6cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb634e73-537f-4ffc-8759-b1b286ee847d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acb2161b-b705-40af-bad0-39efaab73633",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75029003-bdf7-460e-bbd8-7b920357d25c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64d9e682-23d8-4c4a-8e1f-58009ca33fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53453885-ad16-4c7e-b794-df038946d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad8cb928-48f0-4102-91cf-fcedd527122f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec538046-14e1-48f9-a385-f5831984d486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "541b8975-83d7-48c1-8105-c34aaa97e281"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1441ea5a-cc2c-4d42-bf07-df07662c5f1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b8a902-9e5e-4d45-9f0f-f1dc6db9cfb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c012a3a6-faa1-49c2-baf9-0b5facb2759d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d16691f-fe5a-46d4-a45a-dbbec95e9357"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edf8172b-1bd6-404e-b372-852f833351c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a1060a3-efca-4ee0-9cb2-2ba596ca0a6a"
            }
          }
        ]
      },
      {
        "id": "febf1f74-0fdc-4bf5-b83c-a51e96f4d11b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a66fcde-e4d3-4b9b-a30a-2079559ded91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff58b1e4-348c-448e-8197-2427cb5b8d92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "494bb4a2-d4a3-4a98-84ee-62038db92ad0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b4de7b-304d-4878-93de-a6d89e855c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb61c63b-312e-4fbf-bc2d-9cec79acbd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5865c7eb-9392-4ebf-9288-12c58c18979c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42501ad6-be7f-463a-96c6-d4fe01f73371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe15a0d-3145-48db-8043-b05534c43321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45788550-8ab9-47e2-8f64-4bfcf5070f4d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f34fdb5-87a1-4ffb-b5df-01be7559db94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c933691-b10e-438c-894e-aedcfcafe535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516ff1eb-158d-4301-aac4-5c1c5dcd1867",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb8a5ee-1164-4816-ab98-2b0dd51114d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f2dafe-f3a1-4ae9-b31d-836e8a791609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4cc2c9-954c-4025-a395-7d9730dacb6e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10809bb7-ae82-4ac1-909d-2d5e7354efc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40d4b46-b471-4688-acc6-97a5befea0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae5bd26-ef63-4360-a601-c377a8b973a3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd223a-687e-4b4c-a1f9-c6e57c6dca77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7489a9bd-c1b9-404c-887b-e0d76752926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127d4de8-9a07-40b3-9617-8b3624e3cb13",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528a5057-7954-4670-a6a9-319ca432b934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc8ce25-7433-47cd-8e4e-51b579e1394c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea0ebd0-ec70-44ee-a810-92481357af3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f51aac7-4f63-401b-b74a-96ba71dec5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f69bbe-282d-4d38-9762-06e1d55e4005",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040b49cc-ccaa-43ae-8cc5-c75da0f8d4fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210be088-0ec4-4442-aad1-8cc7898fb15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9066dad-76b4-45c6-bac0-af83fa86cc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db95d296-ff91-4eee-968e-09f1ee100622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f660b0c-998d-415b-ba0e-1abd9fd0becf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b51256-7db9-42a6-85e5-a8cca628df2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8210f54c-cc50-4208-9a5e-456b3dd097ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e361ef2-931e-428c-9157-daa198c48aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba95973-7425-4b70-9305-e6f6b64fdd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13030f7-ea5d-4616-a82c-34c635181c7b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2ff0e3-c094-46e5-9745-8917dd98b376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1ed12a-7a23-46a4-8234-6c6673d444e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f6740-6f03-4be8-9547-eb39463de011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfae68d0-aac0-4663-8aba-a11fb289dcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9970335-7c6f-446d-8043-9aaa08f13191",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad483f03-4c6d-481a-b87a-c2b64dec6d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27719e2a-5253-4d0c-8b89-3857a8d0aadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c6df6-c888-4cc8-8723-da3a463dd47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c3d0ea-d556-4725-8e8f-ca9ff686dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847c9a25-92d0-44c0-ada6-285fa38dea15",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec23ccc7-ef18-4e15-a113-fd7f4a157f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75953d35-911f-4ac2-85e5-cabe6ce4839a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd180b0-cad6-4b26-a52c-a4b4c568880c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b2156b-ba6f-46bd-81f1-5573fea27824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5e7c04-015b-48b8-b346-fd12fda20c89",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecea5741-a8c6-4752-b294-9f2d66b65785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa223992-e5a7-48f4-9f46-383090952801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab443069-d5f2-4ca0-9c70-05a6294713d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060bbd50-6127-4211-b2cb-9c2c20f0207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ac0d6-3187-4f93-996b-ee57152cb8ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5597a-ad4f-4584-9b64-97b06b73ec42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e99d64-d341-4f4e-badc-b86387429e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885f852-7730-45f3-8654-18f2ed54b46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd9bc2b-f084-4aef-8000-0517a537c079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e321efc8-ab18-429e-b373-0a73bfe7bbcf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7fc205-2d4f-498e-ab52-f871e4c24983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176a99d4-910c-4284-a731-0327d46ffe02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a45d266-f1fb-46a7-b616-705523f778b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c76fc40-93b5-4c94-90ad-a6952d7c7f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54897eab-459b-4830-b394-c9355ab23d9c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1985061d-54e1-45a2-a082-86b3a30ef515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaec9618-8ed0-4e08-9939-66086eee5b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0978899-9a19-4f09-a64e-7748f781dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717de1ce-1582-4cc1-b1c0-8ac73778cb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6621140-01df-469b-a5f5-1472a4c08eb4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f8a495-5254-4a3e-b1c3-e0dee0f7da71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1b70b1-eef2-465d-b717-4854479758a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717440aa-045c-4f0f-81d3-f78fd317a259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400a3e68-7354-4859-8b10-215276e93271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159bd8d9-994b-4f6c-ba9e-e5414aad5964",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418fc7a4-d694-4141-bd00-9ff97b69de54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78793ccc-be07-46ec-aaa2-019e5ddac937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95cfb50-0c38-4cc6-b84e-0a307460336b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f694403a-6df2-4ddf-a91f-d025d83e2a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76af51aa-391e-42e8-af15-00ea4f2e893d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bbc363-5648-4284-bf8c-4363f7532c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e89dc4-b393-4625-b7f2-f854aff41247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b0023-ca92-4e95-93e7-c4fa89611195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4471c67a-1d13-400c-9407-145aa65c74ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3751955-bf0a-4f72-a926-f3409d136d59",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d3fe7f-72c6-4e14-b2ee-a17869ba6994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cabe526-6d89-4f28-887e-0c6ee34dab5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0fa03a-fe91-4f6e-b70d-7749ba075322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976f5a74-6c02-439f-854b-4df446e34cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204513d3-a3d4-4b2f-ba7c-5c6675eca35e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c9f731-e11a-4b17-8d96-405a9ffb3617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303d17c4-1a91-4572-af6b-5aaa7b5f3fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cbd14d-a225-4d27-b355-57420d6df671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a331d3-6e8b-4246-a995-6e90c6bdd3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a95a42-47d5-4aad-8c99-6d4150aa6b4d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaac29f-d00f-4503-946b-39babfc826d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bf0b2b-1c2b-4758-98f3-6a938fc47b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e38e6a-d615-4a09-a77c-6ad9d8d77456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6641659-a8d8-412c-a4f6-5066ecb608d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a871d35d-fdda-47e0-8b1c-56a44cf274e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e8f7d4-b882-4a6a-9efb-26ab7559cfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc23661-9d51-48b1-a5f6-c401e032cfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555fe7bf-e076-4c76-abee-0ca64d978141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b34038-8155-4e2b-818d-6279556111d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dced4b7-586d-403a-86f2-c21d3d298c50",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebda6616-2389-47e3-834d-8f6edfd14d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dfd0e46-8d67-48d0-9244-d48a43b8281c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9327e39c-387f-4dbb-862e-d8967d09f0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b3ec6f-0608-4afe-ae76-8ed0c7ba0303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff60fec-6fbb-4c02-afe9-dd6c5ba52ab9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3affb6ad-d2f4-4837-9042-1dafe5a0ca93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cdf914f-48c4-41a5-a30d-7e1c0c731f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eca2484-3e31-46d6-aa82-500a5fb53534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daa618f-dff0-4cf4-b7c9-2cfbc2332cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634a1ec0-6f36-4d11-94c7-286f4b83287e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895a03dd-e7b0-431c-916a-cd298ab0651b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ee3e38-0d28-4411-aee0-9a75a7ba3ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477d603a-d9dd-4ca7-8f45-9da63b31657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612f68fb-3835-420c-98fd-7342f5e9d0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa58795-e24a-4545-94cf-3d8e46e58cdd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c928b15-7248-4e72-bece-d5d2d674b8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63046033-3cf6-4631-89e9-fbec501fecdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbb269c-1310-4199-a8b1-5073a0a02561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e17d889-c87f-4a9b-b543-ae7fac5b5673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d260da7a-f056-481e-9faa-158caa548b21",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e6b4cc-23ea-469b-97d9-19a60ce7e2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ba331c-b97e-467d-b641-e78ddd145a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f74a6d7-c495-4cc0-aec4-271e4764abf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4957aa6-6391-4958-9495-365f613bd088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344355f0-42f9-4031-a000-064eab0c742a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0517cf-0315-4984-a31a-7fbedb9f0317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028cbeef-ba03-496e-8654-73920726473b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a7295-77f1-463c-9b2c-339223c76042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264ddcb5-61f4-4bf1-a379-833c79d47cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727d7b24-fdf1-4765-ab46-21c7df97933c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc54e4f0-26f0-45df-b176-9589a1436284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad654dfe-acd3-4cce-be8e-596a5c96c3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73223933-76a0-4c3a-8f86-65cc5dc59f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4444c2-b369-40b9-bba1-ec96789cfd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19248db2-2f01-413d-a604-ca0827ba688e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92e301-4699-4fcd-b4b8-1512ec9dba25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc695dee-c9bd-4181-a2c1-787f23b51274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78bfd6-93e8-4dda-9af4-62c0f92a923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96553383-41f4-4d23-8a3c-7b2e24e53604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae088d0-23c8-4b26-a51d-e2589d859ae9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9278a370-60b7-4608-bbea-3d1b14c32cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae67150d-d228-4dd3-b552-9a859552d09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb40935b-b218-41ef-aea4-52d02a609d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47376bb2-4e9f-42cc-b8f2-fc3a80767c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59300a25-2955-46a2-86ac-cc2b1d781011",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de03d5d7-13d1-4d59-bd9c-2292c8ed96bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bbd24f-6642-48fe-9130-de0fe1fb3bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f4a22f-abe6-4b57-a032-857d52edb505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e2b10-abdf-43a3-8f14-3171ce919b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa72a68-f86b-4609-8b97-32b34a66ef5e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03cf3d2-91a7-4652-8a93-25e1d33e67f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a973d2e-55d8-43c4-9636-84fb6122d1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c287bbc5-b8c4-4a3f-be9b-ec3610cfa777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dad0361-b3b7-4ad8-92b8-119e8cc72927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4aa91f-d3da-4580-917f-c4c799ea238f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172d9218-74f4-4d2b-b715-95980ab55365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d23c9b6-5b24-45fe-9e98-da520040f435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153794d8-d45f-4915-91b8-3d2019d696ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223cff74-ce25-4f10-a620-9c2d158b203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4ce638-ae4e-4505-8e1b-26e10d927a8b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc335488-11be-4cb0-a015-bb09213b69fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9f5bc3-c6b8-4570-8a11-241f3432a1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e052934d-fd71-48dc-a287-97222c7387f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b35707-2529-4b9b-bd04-d85e9630177a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18119327-f6c1-4188-841b-8d333757c17b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f9228e-0b32-4049-9471-27b27f548efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89fb05a-ca0c-4b11-9684-72de642893cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54759f82-88a0-4a51-8000-9ce994aa6eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9dfec8-715e-4a1d-a3ef-e7a76c69513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9836bf63-59ac-4eda-bdac-416bc4acd0e5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a431ce-7e9c-454c-ab19-e9573c4ad706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54cf6ac-bdc7-431e-9f1e-3c4f8c123158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc4d15-1431-4412-9ac8-75038e055c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1366efe3-07bc-441b-8cd7-372d914aefa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1040bc-c8e1-4456-b618-7314b0f990ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0cf256-5c9f-42e5-9044-11e4e8ffb05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08859628-fcbd-4a8d-8d18-4e0cf3231e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dc55be-788c-4e4f-9fca-b5155e0d8e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327764f3-28ba-4b03-8ace-73d4146594e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6169bf-f0ad-4fd1-9a82-5ff96f2b42fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c01850-07a8-445b-a1d8-d3c06d62d7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b871b86e-76cb-4d2a-8cdc-72655066d1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba923946-dfb2-43c3-99ed-238ade839994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcbc5fe-4b30-42aa-ba0a-b10f7fecb016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db42444c-3030-4d34-b653-ac3a967c808d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b05c52-584a-4d97-8383-61ad39bc61d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a149a1e8-4155-45d8-a362-c1ab686a21b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f4474e-d906-443d-b54a-d3767100e53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9361d47f-dc0e-412e-86b4-066fd0164043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8f10aa-46a7-44df-a574-b03d2662c439",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bb0e77-95f6-4a6c-a0c7-6125f5a57102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6001c91-345a-437c-a0ee-c4fab713de05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e866eb1-6a58-4d63-8f56-02b6f3e2556b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681066fc-a7dd-4063-8c95-2978b69a9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1615908-4470-4d18-8d62-1b4259fe40e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a4914a-75b6-4487-916d-b77d9729bea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7373ec7-2540-4e44-89f8-ce9da37d7446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07020e9f-6bd5-4db2-8fc4-507464717f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791b0524-3436-453f-a265-fa617edbd14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419bb18d-344d-463f-8d40-927bb73f5258",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb89210-445b-469f-8bc6-cab719f01eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1ced72-5ffb-42c3-b998-3ab066934ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4757297c-43e3-4695-8542-8a83152d0707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02544b9c-96c6-492e-a992-96926cc857e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd848aa8-5008-4d03-8830-be2d33348181",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f9368f-b0d0-4dc1-a551-848021270ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4beda62-38cc-477c-8f65-2fb716d96d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64000449-c253-4238-8d9a-11ec45408db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a74d0ce-91bb-4a86-bed2-5aef08a82570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a000af6a-14cf-4ada-a976-44c201ee44d3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4639f9-ce67-42a4-a1be-880903e245cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9f401b-f29e-41b3-b007-661cd0cc1007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561a1f03-745a-446b-8f20-097efb56b5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873984f1-ddcd-4e8f-8505-adcb78453627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91078dd0-2951-4ddf-bdb5-8faf7366da2f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2201f6d4-358f-4a47-87c2-9b4f3bc63f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd23e4b4-9812-4649-973e-eeac3d795dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d247a93-3265-4c5b-a745-becbf8856137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5815db2e-7c97-49b3-b74e-a98fc5e805d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b1b2bd-3384-4fb4-84e0-b4eb632bffdd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c28cc2-e4d9-4f3f-a953-4ae8902a864b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2270ea1-9812-498f-8ad5-969d2be51a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24655270-3990-42e7-b25a-b4e53498a57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961943cb-eb0e-4172-a24d-736436474330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960f6196-9e73-40aa-935f-788b24daf2b8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2c01c3-74b1-4637-976c-9d7a13da60bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5287219a-a77a-412c-89c9-43530d61b0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ced1687-45b7-4a7f-8c86-b3eaac460450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8522a573-f8e8-47a0-a391-ee1374a168a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b13560-73ad-4ee6-aaeb-b7639bb5e223",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabddea8-f17e-48fe-83ff-7e7c42e7495c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1edd6-1a20-4560-b08d-939b1eb08722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911535d8-08f3-4f14-8ccd-bb6b4692198a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6de765-27aa-4b75-bf07-61277fd1ee44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44ec71b-d2fe-4fe5-82dc-7689a45c19a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad8a76a-023f-4c2e-b952-da91c4ed1130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a389b858-3eb9-42a0-b7f1-41152d06d85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f560845-9c80-4145-80da-a2c0d6938917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a7cfdb-a236-41d3-a742-8030bb58f71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a974f863-b8f1-4de8-adbe-4e9d82418b1a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853fb1a-ebd4-4b4d-a6df-d247a9bf6ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0435b229-c6cf-4f6f-b440-306bab6196c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3d90e-fe65-40b1-85ec-080b7d0e5a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41d6785-bbeb-4fad-a159-35ef52d47108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72d4bd4-50af-4f68-bf30-57064686fcc6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e56df6-e1a7-4cb3-9b70-2ee4d0369cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e820e741-8e0c-4ffe-b783-373986a2bf40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c94c037-e8c2-4e1e-a72e-85120f6caf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938b4684-3c22-4210-a72b-d5aca944a57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e8afca-6bec-42cc-b033-3b5c2460f950",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da875de-10ad-4e2a-9fb4-1ea5c24d1278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6daef3a3-321e-4595-b7d6-d1308222e202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a40ead9-59f7-48fc-a04a-7140267e6f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04238164-69c2-49e7-947b-db9f37b89bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cd25f0-ce70-4269-a321-5ef92be5fb7f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0155d-a052-4b7b-8492-3d68c33761dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97258236-71f1-4a02-b5f6-0c77c4ed65d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa39ff-70b6-4233-8d93-012a5dd53df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d160b376-826b-413f-a1c5-4755ba814139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291a0788-4519-406b-9a98-ff5668ff1406",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae7c09-1a6a-48c1-addc-e27ccd271e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3903fe2b-8e7f-4715-ad7a-1b6495b15ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238f001d-2f3d-4bf0-90dc-1e94c1c03900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8584b3b5-efb9-46eb-ae0c-46383a6c5c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999fb429-75a5-4652-a4d3-7366ee34b4ec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5809b7b-1a28-41f4-81d2-e1352862b8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f41c37-8a5e-404e-b912-d2254db1c7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa7d64-6e55-4bf3-b5cf-3b208b7cfa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56804566-5608-4591-836f-8ca315707b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be3a29e-a05e-4d77-b1da-7fce8dcceacd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af343111-94e4-48a8-9501-3b8e676e2529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe3d9eb-aa44-4beb-b2d5-ccf4246b06bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7017be56-5f12-4f34-956a-9da4457aef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feddb19-97b3-4ae3-bb30-176c3260564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b43710f-f6a3-4b7e-a994-25e0995a1269",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1f5e9c-2470-4df2-8e73-65124434013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c06516-a5d0-43e9-86ed-2083e9e1783b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7d2545-c23a-4675-bddd-e7d4a079da9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b1370a-5cb8-4d78-8f7e-706098f3a6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59278bfe-f379-45c8-9080-548a58ee443d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872d2368-a579-4fee-bd53-28aa13de42b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af12128c-1080-48b4-b047-d9aac4a501e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022d6a9f-ab00-43f0-9ac0-d59c166652ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09174e59-5293-4ce3-aa6b-246f410f1de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2be55c-880e-47e3-bd78-792eaa1e8a1c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60965e73-2119-4cc4-bf51-9ca9467b7d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed49f6d-5bb5-46ad-ad6b-32cab6dd3fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3febab-61bd-4b6e-a9ef-45c9b2c8b5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3d7b11-f285-426c-8c91-2fc9ff08a289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e46a95-39a0-4697-b117-2b4aff09e0f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b2d1ca-3d90-4842-9bc3-b6dd560ec615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56444827-c7f8-4b9e-9d71-e788dc37409e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c23ebb-dea6-47a2-a56c-85c4dd906290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616c020b-630f-4378-86d6-45c55e829169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aa90e3-e972-4b48-94c2-e9aef2fbdd51",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9c606b-30fd-4b34-b799-ef1a50ee103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebb3ded-0fcc-463a-8707-12dc0519e88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ff87a-8e0d-442f-8879-ee588419040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a444381-6aa9-4b0a-99e0-74baba251a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9505f288-8c60-4ba4-81a3-029ecc6d3d5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7832dadc-fa9c-494b-b11b-efc0197aa1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eff8d5e-8b92-4652-a165-5c18e9154b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cd37e1-46d1-4882-953a-3732540f69c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e165ed5b-a298-468e-964f-5d532c376207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650231b2-c4a5-4190-a80d-f9f9120b200e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d9b880-4459-49a7-9d74-3db83f7578e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bc5925-ddc1-491f-a23f-8d59fe48f493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc5391a-943e-4521-9f38-6c9d70c00181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80bed50-0358-4c05-bf66-1d5921e072a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fd4214-2209-460a-aefe-b1d7b3ccc125",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49deb5a1-a455-490e-af39-8b8becdeb168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d96260-719c-463b-ace0-150a4fdabbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5abe1-f4cd-4389-b887-53623c393f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0870423a-053c-4f27-8691-f2fb769396eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb4eefe-b6f2-46f4-8a9f-5e8aa8cf7154",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7178d556-f109-4f0d-a132-6bb7510118fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70f85ee-fb6d-43ac-b8a6-3af81cc7664a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fbed80-c2b3-488c-803c-683a1fbfef6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2d0e94-4ea7-4cb0-83e5-a42250b0d043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1757695c-6c3d-461e-a467-faa2d134faea",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0eba7-c242-4035-9dd1-ca3b20bf70fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b24307-5dc1-4e60-997e-35ddb093d476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36a4a6d-832d-4c8f-bd5f-4d0d7fb006ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec76dd54-3ce8-46bb-ae02-1d77bb30cba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9cfbdc-0046-4f9e-9407-f4e38d8f1f9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c363a4f2-6b10-4136-b6d2-c76f3e291e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e219334f-ce0a-4b93-8f13-bdea7b12b82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f77512-bb70-48c3-afa5-950ae5ccc45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd5af95-0966-4fce-916a-38ac17d1319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4767ce4-41af-4156-8588-e487e5c91947",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bcd9b4-49fc-49bd-9ad5-42234e7bc66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54504439-903a-4344-9398-5515ae74b54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5dff04-62f3-4d92-aac6-ad72413d290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9323a32b-15be-4281-bdc1-ddefa62c0324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b983aeda-ab10-49d9-bee5-e7585d1a8e08",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed4c834-3f71-422c-a7dd-fa11195c4b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e9e9710-cb56-4108-aac0-c64616cb9a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3762c75b-0bf8-4345-b549-2c8e5f643712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e1865b-966b-413e-90f5-aa8445d65a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf586e5-416a-4cbc-b91c-460234194919",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea5bf5b-ab29-47ee-814a-9f64663c5c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f34dbde-2842-4990-8d90-c64bddd740db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51254a1-6be3-42cf-9c44-5477d9554579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d34018-3c12-43de-991e-5b44ec1420a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a969c0bf-00ef-48d1-9e92-b725508eaae0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccb7191-b3bd-4e58-adcf-b2c28bc5c6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c48ebc8-0e58-46be-859f-b686fa0ca8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8438d4df-66d9-4ed2-952c-fb547148441f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71705502-ea3b-415c-9897-c1c1011a86ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40e07bd-5ff0-495c-ba7f-3664554c9605",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ead9c85-0f2e-42be-a958-de23cb3f1606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2aecd0-cc6e-4216-ada8-57de490c03cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55512f6-efc1-44f5-8497-1521de74b332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd205d3-9132-400b-bd98-b7e61efe9826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f9e1b-9282-44a0-955c-fb59b7cc4d9c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2297a6e-b048-44f2-9cfc-91fad7efe15d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbdddf1-79ba-43ca-8f73-0ba7f8a615c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b0b3cb-43d6-480c-b1aa-c572aa149ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92894d70-44b1-4007-b465-a1edc63a9ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1525173c-d415-4060-b479-e39e39cc4ccc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf7f632-f0aa-4c29-b310-5be014133fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1118ea11-9810-4145-bcb4-bda8cae6b101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee9d5b-543d-4e6b-9651-6e7f0adb5de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe2225d-632e-45e9-8319-785c39206f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13366184-8cb9-4eb2-b573-e5b3379a4627",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408e9f9f-591c-47c7-a16c-dad3abf7625a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271fdf91-d1f9-4500-a69e-dbd7ed4bffcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f23f591-8f1d-4d6a-81aa-baf19e097c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d89465b-e83a-46f2-b7fb-f35f2f9a53e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b0e82f-e638-477a-b863-070fa5357a95",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69b4512-7636-4a58-ab2a-092974cf3dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee2b838-b416-4b12-8c3e-0ee7fa1f6904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c160a0-7c09-4926-b703-922d264303cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1570961-f6d5-44bd-ad51-c05f34f05ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73ca0b8-e968-4b55-81d1-2c5c0395122e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f1bf14-eeb1-4219-85c4-92334f58ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6c4d0f-8d82-4de1-87a0-da52af11e15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8504904f-f173-4b1a-9488-e7a18637ee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37a28ae-ad2a-4468-a57e-a0847d4e84e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956b96a-b51f-4b92-86c0-c9597b3b6abf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b9831f-767d-4c92-b706-1bd474879786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1c9d6e-f921-4e34-a379-b599f68acd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83639c37-4a1f-4197-a94a-846cf87d24d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d360f6-3df3-4580-b6aa-cd84a852dc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecc7f48-4e23-4720-8df5-f19d4c58d3fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a5fbb-fb65-4016-9ae1-6dd287ee31c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66ac89b-95c0-4bb7-845a-e4ade3f4029f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173bbd0b-3b03-4b3f-b26b-533059e67af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e6f28-5f61-4947-8fa9-56e23c123cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de378d6-4d0b-4f5c-9bf0-8f853e162e4f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad5d29e-4d6b-4fae-bde0-5fd75db29794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba184c6-ce07-418f-9272-ea3422fad8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62557e04-c0dd-42a8-943e-c141cd159289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2243c0e6-56d2-4787-b274-a6848191391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d4f2c5-6577-4a6b-a037-d31d52d1a5bc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9850fa54-7739-4e06-a164-4fee2e005d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c92d98-057f-4814-bb07-dbad7e33233d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640e87eb-2d43-4876-bf06-4cd237de216e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedb0c2e-f8f8-4e6d-b700-b08c57902bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d9e1e4-1a45-4564-b2d2-ad284fedd64b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb2a6df-e04c-4de3-8101-c1ee033cfddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e76b435-4a03-4738-aa1c-e3b8a35237e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6b9c8a-9443-4885-9b33-fd02d0e87140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2564713-54cd-450f-b6ff-d9d6db39c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a49926f-8933-4ba3-aaf0-f7572ee35a28",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a70ad-cbdd-4a5e-a861-ba50397d8fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b1f597-e5cc-4889-89cb-dc63b8bbda4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff47fe-01d1-429f-bb6a-3998f30fa934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46924f21-b76d-49c1-a3da-6f8446027826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63379a2a-ab5b-4ea9-8ee0-89477b93caaf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321ecc90-0a60-4b9d-9386-1591cf71d13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb15a7e7-d1cc-44f3-9810-cebfac7b2232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c23820-3e3b-4703-b7cd-b06fdf224155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1b8d1b-c0ac-4028-b0af-bd5a28350f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af9aba3-58b4-46b8-adf1-6f3b88a8ecea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b904a440-eb80-4a40-b259-6beffeccc958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ea278b1-5d05-4179-bf74-94a4526f1fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7edc2d3-e94f-4841-b53b-e051bf95e519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385673e1-baf7-4765-81a6-c77a4dc8f1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681e2158-9ed2-466b-a2cd-674740109994",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ae232c-1f47-43f0-87c9-41c6651868d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8618830a-5d04-49a8-aa53-fe3c38791bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5170df13-9961-4a83-a225-f368448daf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945d1f51-a6a4-40a9-8eaf-dddcc7629bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4436a02-d8f2-4c52-b991-c4710da9e7c9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560351cb-b1f5-469e-b19f-f04eb9c32d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc670556-8e61-42b4-a38d-23003e9c4dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceda2c9f-9813-4502-aa88-af9b0c2b2363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26609720-8160-4ddf-a48b-184be392ec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d57cfb-0144-4aff-8e53-709798fc20e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f2a848-d975-4a2f-a8b1-322afe597962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa141912-6971-43de-bf6c-5546ed4b470d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2adf1b-786c-4986-a6da-fceabc51522b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbfd8ce-5054-46fd-aeb1-9ddb7f5a0781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94d60c3-9f0c-4928-b144-4c125f208ace",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a144b-e960-492a-8801-516bd590fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c760b7cd-4c0e-45de-b78d-58b0ba20bd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed49227-a784-4d59-9785-ecca10e4ffcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f023fb8-3fa7-4967-9c7d-30f3bd8cbd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d4d410-7ed9-4280-941f-7f28e7e1c91f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b36bf7b-b4be-4cf9-9669-ea91873b03b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b1d0c5-0557-43d3-a1c5-160a515fd35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b638449-44d7-44b8-9ab0-f7355e6e660b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81971f6c-e612-4d2a-9693-6528ad53e72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a076f0-56e9-4dc7-986f-5aef9fedf664",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a26a46-b568-46bd-a5a2-4a2904f9fe7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2737ec-1cab-41c5-a33e-e0d03307e5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695cb06-b758-4eb6-8c5a-09b49a5a875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f98f6f6-e76c-422e-bc16-608f0eea4f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0357f0db-18df-4bcc-af3c-0875ecd11b53",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f089ed14-27d9-4172-b07c-99952b0335d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9407adb8-f9f2-4b13-9405-31adbd6cdda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4b50d2-9ae1-4215-a77b-ceb4335f4c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0462c77b-791e-4cc8-aa47-f187cca74639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0158bfe-a231-4cad-8b38-88f95b43afdb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28973113-fe3b-4252-b30d-9e720ba432e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa6e82a-b706-49ea-980a-751e6f8da541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea77959-f93d-40ad-8f3c-6a1ae10224e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00629da7-e2b1-4db7-a912-491305c7a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144fa7fc-3f44-4763-8d9e-b1f7d52c91c1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436196e2-eaba-40b4-bc4d-f035e77716f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55040517-7fad-4181-9b9c-c8fe6b08141b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e876f4-583f-49e8-9e6c-8393ff4b2b10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bd807a-3d4a-4d3f-b264-372bae89abc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a873cf-0917-494c-95a3-efb361a8279f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9210d3f9-1f92-4308-acc0-c191ed30793e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a3a74e-536d-4e70-8801-afe1b0ab0a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03260e8b-bee9-434d-a4ad-81af425b183e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1162027-b84f-4c54-9a81-6f4c40d9f782"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ffa7e0c-7d8c-4cac-9198-23ba9798a2cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d12db98e-9320-43d4-984d-19c3a9bfa00e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc852aa7-d3a4-4449-8f3a-599840345089",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26206d2b-f568-40f4-bb5d-2d8539909686"
                    }
                  }
                ]
              },
              {
                "id": "fa5d1f91-0eb2-4de4-a046-db8c976adb30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d258f706-0b06-49a3-81af-c6fb7a42b302",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27ad84a-88d9-4205-90a9-3df92bda28c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b38fd661-ca15-4d25-beeb-03ac66034c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9d9cfa-ef45-4a7c-87b6-249d4dca6b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4814ebf0-02cc-456b-a95d-999c611e651b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67e08c6a-ab26-42d8-9ca0-a87b72064453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "288adb2a-9cf3-43c2-8e87-4262164cc697"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44c1d73-f9d3-42ac-9752-65b4acc13c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "063e47e5-a67d-4a2f-9be2-554d1c977303"
                    }
                  }
                ]
              },
              {
                "id": "4b66e60c-5df5-45b3-b013-ea536bb7683c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bf1e7468-935e-465c-8d2f-5af4acede2a4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9302d7c-71d6-447b-a92d-e305e4429b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1138941f-59c3-4f90-90ae-831764795e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a89ef8-6196-4ce7-b2fe-3a7aecbc2d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f30502-745d-4456-b87b-ab2350a814d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a7cec34-1ece-4856-831b-ca469bb786ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a4f667e-fc6a-42cc-ab33-e541304d2bb8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce10e26a-2202-4655-9590-a36f5794f566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef31ff8f-79a5-4e11-9010-78d257647ce3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06de4e67-196b-4fac-90db-9ce1ad70fabc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dec5ff4-46be-4fc9-ba93-167b056b1a19"
                    }
                  }
                ]
              },
              {
                "id": "7fa9671a-6812-4011-8e29-e596aad74d07",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06766d4a-34f9-419e-aa8e-4e2920789e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "507e94ba-010a-4788-b3fe-8658fb48a64e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a5aec32-8495-472c-be5a-5f71a2afc25d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c3b142-4ba3-4c11-9843-69b064adf774"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af91ffaf-db98-4fa0-be76-3b010b88d9d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a21f82e3-92b3-48cd-a1b5-db2c0b9fe9ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f6e08a4-9019-4317-a301-db58098b7d0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "209e586a-0860-45bf-b907-a0824908a828"
            }
          }
        ]
      },
      {
        "id": "5eb24439-c0a3-4f4f-b49c-bc784df1dc0a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "af8aa798-45d6-48cc-b145-587ab27082c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d7cca17-b450-4709-bdca-aca57993127b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f31eaa52-f467-4f93-880c-970ce465bd1e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4b0d51-b4fb-4289-a652-2688252af0ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8fa2f25d-a0f4-4d16-9472-0ff6dfc71c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f8e436-e2e1-42bb-b8b1-fb1897dc4a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b74bcb60-284b-4651-88a4-e5fd2d577bf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ae3dc56-d90e-4113-b751-995f6e60179c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02143d6-3b44-4780-83b2-deacc15eeae4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8d4e93-cd21-428d-962a-2ed699110ea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d30821fa-667b-4346-bfb6-e13f8acf8e3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15338ce1-52b2-4405-a535-287ca73e6317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fd3a87e6-179c-4257-a6ed-ee733dab5ca3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a45d46c-9ae7-452e-a0ca-30f1f5a1b03d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "704ff1f7-8153-4d91-85ec-4a2dcf65e2b5"
            }
          }
        ]
      },
      {
        "id": "687eb64f-af10-460f-a1a9-4a66465d44f0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "473a4e13-5f7a-4211-ae43-3887d4c98afc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b310700-0977-42db-8321-b39fc7cfd02c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60033030-5a89-46c2-82e5-9340d8c3b7f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589a1f93-73ec-4ed5-b7ee-c2300e7f714a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b8f971-837f-45b2-b232-ae6b718eb717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ae192-53d9-437d-8999-02fe812037b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2086234-0e81-4747-ae59-e6d7e7d85e79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baa88f97-720c-4327-a987-756e42d2930f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e0880e0-6e5f-449e-b8a6-dfaeb15f2113"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d564d4-8001-440e-9bb4-5605d37d1e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd9b5d8d-75a7-476f-9b17-b0077d677d71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8aef436c-5b2f-4389-93e5-fbed32bc0d9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ffec5bc-d5a2-4475-bb61-e87bff8905c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f27d09ff-32d5-424d-95f1-20bc789e43b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a11de168-01e4-42d9-b111-e5014a260d8c"
            }
          }
        ]
      },
      {
        "id": "992225e8-2e9d-48df-b2ee-f04c89abdde5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3b094a8f-c4f3-4dee-bd63-99f8c7c3a10a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "648a4b20-1d01-428e-bee1-0eec90396941",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c0d16ab-c30f-40c6-9496-8e1a1a7f33d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d663ea25-3698-4f2e-828e-35e6f327020b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50451b04-fc61-40d3-ad5f-dc67aecda0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d39ae4-9e5a-40dd-b582-93d4a489f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36ce0673-4965-4f56-a82c-54157b6b2357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0be622f2-a782-4512-a4d4-33906a194f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e475b16-34d1-4e45-a273-adf2543e98c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f56fce7c-8c35-42f5-ab7f-5fcecda65f2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32caa0e2-40cf-4582-95cd-5d778ae8cd3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99560450-76cf-4d50-8061-7a1861494e67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37fa9a14-4698-481a-99c1-7a267b0bddfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbb45467-6e17-4a31-b3aa-f73a60284d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b665ce10-083f-47c1-92c9-52bf3a627920"
            }
          }
        ]
      },
      {
        "id": "26e408e2-7e10-48c5-baad-42db10194e12",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77e4ddd-c2b2-4f2f-aae5-bd6362da198e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0ba69aa-4612-4c54-9413-c92b5f1fe65c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b4737e22-7dd6-4e2a-85f0-7049c3fe6b47",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc8adf92-8c6a-4e34-8c6f-a75e1a8db43e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d4f26b3-6e46-4a32-8eef-fc176dd6bd37",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 102.82807017543861,
      "responseMin": 8,
      "responseMax": 8356,
      "responseSd": 539.5662799324425,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708043610280,
      "completed": 1708043648565
    },
    "executions": [
      {
        "id": "c3fcf57a-cbaf-4902-b454-451f2d2ea7d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dfe7c72e-8a0c-420c-af1b-020fa8d9169b",
          "httpRequestId": "89db39fa-cfbe-4ed6-baea-cbe23d783fc5"
        },
        "item": {
          "id": "c3fcf57a-cbaf-4902-b454-451f2d2ea7d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0cb00216-605b-43a3-9455-67749a21b190",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "ee3ec393-227f-46d8-a380-c93014db5ac9",
        "cursor": {
          "ref": "37ea4dd6-bd9d-46f7-9a56-44e4eccc88d5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b03e8768-9934-4d2e-a89f-8a0ef6671073"
        },
        "item": {
          "id": "ee3ec393-227f-46d8-a380-c93014db5ac9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a9c30838-8bdf-4c16-b754-8b7a5677921a",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c4fbb7f4-26e6-4e34-8df5-246e7b52e6df",
        "cursor": {
          "ref": "84a62f29-9059-4164-9962-504daefef0c5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6c1f3ff1-0e7d-41d4-934e-60503b6ca38c"
        },
        "item": {
          "id": "c4fbb7f4-26e6-4e34-8df5-246e7b52e6df",
          "name": "did_json"
        },
        "response": {
          "id": "67fc4d9f-2b6f-4596-b825-825635e296de",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c675116-1370-4905-92d9-c86f890d72a8",
        "cursor": {
          "ref": "34cbaf1a-0d31-4681-8ccc-ab8f5245d610",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e02dcc5d-bf79-49d0-8b16-f38197b5e264"
        },
        "item": {
          "id": "5c675116-1370-4905-92d9-c86f890d72a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "d87e29a7-c56b-491a-976a-7aacebb832f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c675116-1370-4905-92d9-c86f890d72a8",
        "cursor": {
          "ref": "34cbaf1a-0d31-4681-8ccc-ab8f5245d610",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e02dcc5d-bf79-49d0-8b16-f38197b5e264"
        },
        "item": {
          "id": "5c675116-1370-4905-92d9-c86f890d72a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "d87e29a7-c56b-491a-976a-7aacebb832f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1e3784-2530-4401-b1f0-d504fdca506a",
        "cursor": {
          "ref": "80b3c4b3-3766-4f6b-b803-55a91fa81473",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2d0bf252-b879-4790-9e54-1ecb69dd9785"
        },
        "item": {
          "id": "5a1e3784-2530-4401-b1f0-d504fdca506a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8f73c95c-eeca-46b0-a5a4-cc9c8f49779f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c0ddfd-00cb-40d6-a58d-e4b0a2deedc3",
        "cursor": {
          "ref": "8c92d7a8-bcde-4883-8e22-61b11ea1340d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "84f6fbbf-0bd7-4484-ab05-a09a74b6205a"
        },
        "item": {
          "id": "89c0ddfd-00cb-40d6-a58d-e4b0a2deedc3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "502ab943-1444-4c40-8ff3-6d2500f397d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df3c055-4cb5-405e-8f16-81604a5d2e34",
        "cursor": {
          "ref": "58d91c2b-3b0d-4fd1-9123-263a43e96042",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d87782d8-14e6-4e0b-9858-ed48146318db"
        },
        "item": {
          "id": "3df3c055-4cb5-405e-8f16-81604a5d2e34",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5463ca3b-3dca-4ffa-b705-68fec100ef2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a79c75-84b5-490d-a28c-3180da14ee45",
        "cursor": {
          "ref": "2245d8dd-fddf-4012-b40e-5d65eb766cbb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "695996a3-3f99-4f63-9c9e-d97eb9241405"
        },
        "item": {
          "id": "73a79c75-84b5-490d-a28c-3180da14ee45",
          "name": "identifiers"
        },
        "response": {
          "id": "a7088083-c91e-4e91-a399-25dfafef9b0b",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f312ac-80af-4fb6-9644-870ee79c2e5a",
        "cursor": {
          "ref": "94c19314-f6fe-496b-8ac6-ece3476be379",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbbbcec5-6eff-46da-a424-3889e81fae40"
        },
        "item": {
          "id": "53f312ac-80af-4fb6-9644-870ee79c2e5a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "76de4f9e-0661-461c-8130-75eb287e1bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579699c8-6b4f-4047-8288-627019528da8",
        "cursor": {
          "ref": "f8aff6ca-61b6-4b73-ac3c-a110db65c454",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa970c24-40b0-4a0c-999e-b25b7809479f"
        },
        "item": {
          "id": "579699c8-6b4f-4047-8288-627019528da8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae500c4b-f403-48e1-96dd-638b5c87e195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9108853-560d-42ff-a086-53c49013056a",
        "cursor": {
          "ref": "7364bfe3-f0e8-4f6f-9b22-a8f15611704d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b2678a36-073f-4c49-90d1-dc5acc9e8a48"
        },
        "item": {
          "id": "e9108853-560d-42ff-a086-53c49013056a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a7fe8ed5-9a05-4a0f-a29a-0981c5373da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda687bb-015a-4930-8a08-3aeaf2c7f1d9",
        "cursor": {
          "ref": "dcc52fc2-402a-4ed8-b167-48f5f32b0787",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1390e256-99f3-4613-bf56-e1ed38c134f6"
        },
        "item": {
          "id": "bda687bb-015a-4930-8a08-3aeaf2c7f1d9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ef146e52-808c-45f7-b9bd-d7b6ed025bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1d83ed-bc5b-4efe-9792-1c3f14bc0f24",
        "cursor": {
          "ref": "9fb14051-7833-4ccd-b739-106b014b39a0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f960c3ff-20ec-49c7-94c8-f4679ecc91e2"
        },
        "item": {
          "id": "8e1d83ed-bc5b-4efe-9792-1c3f14bc0f24",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ae74b6e1-bc04-4008-8e89-8c8d0ae342b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebbe70c-4d44-412a-8730-fb8a313c978c",
        "cursor": {
          "ref": "aa93b301-9b1e-4375-a6cd-116ba10d94d2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "370a3233-6c81-4134-95b6-1c8948e7340d"
        },
        "item": {
          "id": "5ebbe70c-4d44-412a-8730-fb8a313c978c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7b07db61-974a-4950-871f-c095123c6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620abe0c-b90c-4d82-9e6e-2e415ccd169e",
        "cursor": {
          "ref": "5743c2ed-19bb-42b5-a974-7e2960517996",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "071f6397-fd01-4034-baa0-926033525ff5"
        },
        "item": {
          "id": "620abe0c-b90c-4d82-9e6e-2e415ccd169e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a21857f8-315c-4b7d-80c1-88f967638467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aea0710-15a0-4cf7-8547-0d6ca50da303",
        "cursor": {
          "ref": "ee051d67-e2f4-4aab-9d2b-6b612eff798a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "37a55e08-daec-4c9b-91ef-48df3128c0f6"
        },
        "item": {
          "id": "6aea0710-15a0-4cf7-8547-0d6ca50da303",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3656631e-0545-4944-884e-1d2e8ace33f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ecd8a6-44f6-4bff-a7df-7534c0843ac3",
        "cursor": {
          "ref": "b1a41dee-469f-4594-9f2f-e45b659353a5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3d272765-6e5f-4d01-bc58-1a2928e5b59c"
        },
        "item": {
          "id": "80ecd8a6-44f6-4bff-a7df-7534c0843ac3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3e5c0fd7-b0b8-4150-a0e5-f2ae1a3c594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2a5410-02af-4dad-8bc5-c4a3ca92a992",
        "cursor": {
          "ref": "7c6a3b9c-dd2f-4751-902d-1d6c28ba6ea7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f46b374-c851-4d92-925b-839454996544"
        },
        "item": {
          "id": "fe2a5410-02af-4dad-8bc5-c4a3ca92a992",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c54cc1c5-61db-477a-a5fe-2b85170f20a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a721a-23ec-4f64-8bb2-d38abf6a2a41",
        "cursor": {
          "ref": "c82817e0-a8ac-4ea8-8b66-652e8b1bcfb9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "319fbdc3-9bd5-4006-a9e2-450edf1b1e48"
        },
        "item": {
          "id": "1d6a721a-23ec-4f64-8bb2-d38abf6a2a41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed901de2-cae3-4ab3-aa0c-cc3609a0b2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51202e23-d0d8-46b0-b74c-6893115260f5",
        "cursor": {
          "ref": "66f7b7e4-2721-4fa7-b059-fc88d7b61595",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a9da3e36-ccc3-4260-8fa6-6fc8e0ff637e"
        },
        "item": {
          "id": "51202e23-d0d8-46b0-b74c-6893115260f5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1c3f4bba-9441-469f-90fb-db758411ec49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3338c194-0f02-4b5b-80f3-5af823f09f4b",
        "cursor": {
          "ref": "55277f54-78ff-45ef-bd04-6d67021358d7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05a74ba1-7ec5-4d79-9c09-0ef81bae9ad8"
        },
        "item": {
          "id": "3338c194-0f02-4b5b-80f3-5af823f09f4b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ed9290b0-2b0e-4c40-82e6-160024b028d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ae74bc-30cb-41a3-8349-51d35381a6fe",
        "cursor": {
          "ref": "b0e77af2-8cc2-47ab-b973-a9102d189f83",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "190432d7-84d5-4697-aad9-01f69aed983b"
        },
        "item": {
          "id": "61ae74bc-30cb-41a3-8349-51d35381a6fe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "10333802-202b-47c3-bdd2-417090b29de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9073145-7445-41ab-a4db-6e63e757d59f",
        "cursor": {
          "ref": "a15cd5c9-9c72-4093-b3e8-85d97092655b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a4bc88c6-6f88-416e-a922-a78db4f324f2"
        },
        "item": {
          "id": "b9073145-7445-41ab-a4db-6e63e757d59f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5aff41b0-3166-4e50-a85d-b15964f9efd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbd84ad-1327-4726-b465-94a6270ba6de",
        "cursor": {
          "ref": "6505f870-783c-4dbf-811c-2f0177a84812",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3ecbd881-7193-4b0e-ae01-31770e39befd"
        },
        "item": {
          "id": "2dbd84ad-1327-4726-b465-94a6270ba6de",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f0ef40e9-e720-4022-ae5b-605dd3d0e16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb3066c-2007-4b99-b83c-1f840917f632",
        "cursor": {
          "ref": "61f21053-c29d-4f79-9b29-8432a962ba21",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58cf95a9-5480-4999-b2c7-88e5c24af0cb"
        },
        "item": {
          "id": "2eb3066c-2007-4b99-b83c-1f840917f632",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d608deb2-7d4f-4f95-9b67-ce867d7ceb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e5c1d9-0c34-45dc-9818-f1c5302c06ac",
        "cursor": {
          "ref": "ca63c86e-477c-4886-8af9-2bd58a92d894",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "571a017a-f245-4aaf-b401-0581981884ec"
        },
        "item": {
          "id": "79e5c1d9-0c34-45dc-9818-f1c5302c06ac",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15638197-b1f9-48a4-bb68-08f3c3ccdc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d4aa7f-2174-433d-96b9-e22a853e7ab2",
        "cursor": {
          "ref": "6c821e37-3a59-4478-bd55-68b49ad485b7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36025832-1c1c-47e6-8629-87675d12b34c"
        },
        "item": {
          "id": "25d4aa7f-2174-433d-96b9-e22a853e7ab2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "73b49d0d-4a34-4d66-8690-6fedbca5f178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff3d570-5008-4616-b43b-6db1b515e02e",
        "cursor": {
          "ref": "a3b01080-fa67-408e-b1ea-4c74c697fd23",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4d9b5f9-e4bc-4cee-8459-82090641aefe"
        },
        "item": {
          "id": "0ff3d570-5008-4616-b43b-6db1b515e02e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "54010d08-0518-465e-8c8c-845a4f09b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bf16c2-68b1-423c-a592-f77fb5ef0316",
        "cursor": {
          "ref": "afd45c8f-801f-4b08-96aa-3dc56a25c6e4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aa6d48cb-9a5f-438f-9446-31662fd6fe33"
        },
        "item": {
          "id": "b3bf16c2-68b1-423c-a592-f77fb5ef0316",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "efc22eb2-e884-4ad4-8749-8d797a473070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426abf68-b680-4858-ad1a-58b7ba430c5b",
        "cursor": {
          "ref": "d9d017d6-3aae-4563-adb3-2e72415c5e37",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c20fbc4e-0637-4db0-afc0-15db8e84aff4"
        },
        "item": {
          "id": "426abf68-b680-4858-ad1a-58b7ba430c5b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85fc3367-fcd8-42e3-9859-889622c6e954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39d5a50-fc10-4659-9e25-cc7b69fec3d1",
        "cursor": {
          "ref": "6a308706-e18c-4877-9a7d-9d474585a48f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9afc1cdb-0aaf-46c2-995b-61dc80d6e38b"
        },
        "item": {
          "id": "b39d5a50-fc10-4659-9e25-cc7b69fec3d1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "231edf79-7554-4443-bb13-f561ebb21724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6053251-b2f2-4395-ab37-b1e095ccf0fc",
        "cursor": {
          "ref": "74690fc5-eba4-44ae-9042-0fbe988f7db7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7cd66720-c85d-48bb-9cb1-42799460938a"
        },
        "item": {
          "id": "a6053251-b2f2-4395-ab37-b1e095ccf0fc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "318aaac2-4e8a-4e94-9d99-dd1e861364e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f3dae-9950-4e36-97de-a95c3059467c",
        "cursor": {
          "ref": "79972e0f-1a33-468e-9b5f-68016548682b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b47d96e7-df44-4a34-830d-837123e59b80"
        },
        "item": {
          "id": "989f3dae-9950-4e36-97de-a95c3059467c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "084e54f3-7798-4a84-b7ac-87ea92780a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4865f43e-0bb9-4458-b9fa-7ad62430f67c",
        "cursor": {
          "ref": "047cffc5-f2ff-45be-835b-ab6b7d1dff02",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "51670e92-7a89-43ac-9b74-39bb8cba0c0e"
        },
        "item": {
          "id": "4865f43e-0bb9-4458-b9fa-7ad62430f67c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ac733351-c1e2-4a21-812f-400ce8ff84c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172b2424-24f8-4dcf-ad15-90d2f45b0908",
        "cursor": {
          "ref": "fee8f471-a8be-4e1f-9485-da975bc1cf1e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d38ce48-2135-4c75-9982-309c57567f7a"
        },
        "item": {
          "id": "172b2424-24f8-4dcf-ad15-90d2f45b0908",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1e8b77f7-97bb-459a-88a2-908472e3e8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f9c13-f157-4cb1-a704-fef49231c86d",
        "cursor": {
          "ref": "3c886dd4-7dfd-4a9a-992f-547d5578ae9e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "10b23f36-9706-473b-a6a9-4b8756ac835f"
        },
        "item": {
          "id": "505f9c13-f157-4cb1-a704-fef49231c86d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ed01e602-4ab8-40ee-8f0e-e1da28fde97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c56fda-202f-4922-84b8-25d5d6382741",
        "cursor": {
          "ref": "1f894061-6bbb-4e87-b95b-e3f395a30854",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c267f27-1abe-440a-979f-6aa2cd0776a8"
        },
        "item": {
          "id": "f1c56fda-202f-4922-84b8-25d5d6382741",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9262fbb8-a2ca-4eb1-9f43-0bcbb24e7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb28844-f073-471c-85e9-88ae2b802222",
        "cursor": {
          "ref": "1489bb5a-6fda-4326-a7c2-bd62a5e38efe",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8a4a5d1e-aca3-40dd-a8a2-bf6d476e614b"
        },
        "item": {
          "id": "0bb28844-f073-471c-85e9-88ae2b802222",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f57792f6-7199-4482-929b-ec1836e4bf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffbd10d-718a-49e5-84d8-a8386caab805",
        "cursor": {
          "ref": "3bf05f35-41d6-4332-b765-52d80fbadf4e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e49c53c1-24be-47da-8957-cfd87b3f2cf1"
        },
        "item": {
          "id": "0ffbd10d-718a-49e5-84d8-a8386caab805",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8538d801-31f1-4254-9a0f-029597c04434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcd7e97-d43c-409d-bbfe-0aad3cfb8517",
        "cursor": {
          "ref": "e6a94d0f-b763-4556-9784-0d54a1118d65",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "de488e4a-cb09-4b29-bb8a-fb59fa0e66be"
        },
        "item": {
          "id": "7fcd7e97-d43c-409d-bbfe-0aad3cfb8517",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5c200ed4-c136-4624-9eac-a00e20b39fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e3d71c-9fb2-4357-ad9a-31a4b90490ce",
        "cursor": {
          "ref": "4575b9e3-a3fd-4a3b-90bf-438ea3a83445",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a99c9b6-e2b9-45b6-97c9-d1778cf57f2e"
        },
        "item": {
          "id": "52e3d71c-9fb2-4357-ad9a-31a4b90490ce",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9ee378b9-ed9a-415e-b81a-d1c9ad77d480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc47f711-a162-4d60-a433-7ed6c49286f0",
        "cursor": {
          "ref": "3867028b-f87f-477c-a385-695d06517d9f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "930a7fb7-d21b-4cd6-81d9-8e169ef7c997"
        },
        "item": {
          "id": "fc47f711-a162-4d60-a433-7ed6c49286f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fecb1ab8-d2e7-4eb9-aea3-6d2f9e785a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367c80bb-e7a4-455c-8bce-02f50d8b849b",
        "cursor": {
          "ref": "adcb5185-69a0-4f02-9377-3e8947f3e7ad",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c78c4f09-3862-4828-b4a6-35d42d0d6de1"
        },
        "item": {
          "id": "367c80bb-e7a4-455c-8bce-02f50d8b849b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "345995f6-1f9d-4b19-a7fc-2c172c1a76e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20191443-7ba0-48e5-b54b-e5728ef9354c",
        "cursor": {
          "ref": "f1b20db7-de6c-4f0b-8b96-820e3ff31a3a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "170d2709-87be-443f-a6f8-280712b1e213"
        },
        "item": {
          "id": "20191443-7ba0-48e5-b54b-e5728ef9354c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "793793f9-4d67-461b-b952-fca894396e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bf4fe7-c866-4e55-9f99-bc50a16476b5",
        "cursor": {
          "ref": "2196650f-4c00-4448-b01d-2c0982265c7e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4e1d2869-d164-4cdb-b908-f99ef1c669d6"
        },
        "item": {
          "id": "09bf4fe7-c866-4e55-9f99-bc50a16476b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "545ecddc-6810-4eeb-894a-6cb740352a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956634be-3122-4fd9-a3cd-42a97c004780",
        "cursor": {
          "ref": "ff9391a0-a4b7-4e10-a621-2f4095ffa5e3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "12cf6e24-0de8-4c03-8b6f-7ff1b8b2fcd9"
        },
        "item": {
          "id": "956634be-3122-4fd9-a3cd-42a97c004780",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5ec169e0-06ac-45d5-badf-903916148b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da496660-9d9f-4a8d-837f-ba3ab8fa6771",
        "cursor": {
          "ref": "0c0087e0-ce9e-45f2-9a42-d0392b711beb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0dcb53f-3593-4ac2-89cb-ce9050ef8a00"
        },
        "item": {
          "id": "da496660-9d9f-4a8d-837f-ba3ab8fa6771",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b34b61d0-c35c-4209-954a-b5748ebcbae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4bf8a1-b43c-411a-80f8-a7b6a7dc7690",
        "cursor": {
          "ref": "1af0da1e-ff67-4bbd-a8cb-34c227bee259",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1b0bfb06-26fc-454f-ae4c-d971b544347b"
        },
        "item": {
          "id": "ec4bf8a1-b43c-411a-80f8-a7b6a7dc7690",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0df6ca99-e99f-4975-8f3a-55b58f59e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28ccd66-1c99-4d0c-aaef-938c1228f74d",
        "cursor": {
          "ref": "287957ca-8949-4124-b731-94aebb3c513d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1b27cd05-21d5-4e84-a120-f0229f334566"
        },
        "item": {
          "id": "d28ccd66-1c99-4d0c-aaef-938c1228f74d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a447476-8bcd-424e-91b4-0d583d7751c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44d96b1-d5ae-4e5e-9536-8884df35dc50",
        "cursor": {
          "ref": "b491945c-80c4-4dd7-b868-98b3798aa898",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0f40db97-bae4-4648-b853-a5ec54990bfa"
        },
        "item": {
          "id": "d44d96b1-d5ae-4e5e-9536-8884df35dc50",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bbc10423-dc8c-4c64-93f3-230af7d6123f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652f223f-3b89-40aa-bfa7-5b2c5b0c08af",
        "cursor": {
          "ref": "b0729b11-1e86-4230-9cf4-aabaea9ecb9d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ec5b7c8f-a16b-444c-bf60-b8c99fb9a48f"
        },
        "item": {
          "id": "652f223f-3b89-40aa-bfa7-5b2c5b0c08af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b003516-ed54-4696-9665-f4106f6b5bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b451a29b-a173-47a0-8600-21833e502bd3",
        "cursor": {
          "ref": "48635f19-a12f-4d38-a37d-734449504c84",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "22f10509-468b-4886-a7f5-0025029879e1"
        },
        "item": {
          "id": "b451a29b-a173-47a0-8600-21833e502bd3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "692b125c-8aff-434f-be92-f274fe709f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8963ebf2-8c42-415d-b9de-98484f52f1da",
        "cursor": {
          "ref": "22023717-230e-4e8e-a7b0-cbae3f583a82",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f2353f6-2303-47e7-b1d2-a0a47de13d9c"
        },
        "item": {
          "id": "8963ebf2-8c42-415d-b9de-98484f52f1da",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9774d58d-b2e4-4f39-88db-91c7591a02ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e883051-ce9a-40ab-89ab-53b8bbc4334a",
        "cursor": {
          "ref": "5429da5c-3bbc-4a05-8555-eaec76f5598d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87414c2f-89ce-4711-89d6-eb9aee2ea7a1"
        },
        "item": {
          "id": "2e883051-ce9a-40ab-89ab-53b8bbc4334a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fa3459ea-6859-4faf-877d-d121ec6203ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfcb002-cf29-47fe-bb09-079ddee1c8b2",
        "cursor": {
          "ref": "d6dfc82a-efd9-453c-a9b1-a13ca46f3536",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8f542d31-7fa8-46ff-9fc6-45deb3736421"
        },
        "item": {
          "id": "8cfcb002-cf29-47fe-bb09-079ddee1c8b2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9874841e-c993-4d9c-83f2-9731e2e22ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3069f4-6fa1-40ed-a272-268652887188",
        "cursor": {
          "ref": "7329ecd5-8f76-41d8-84a1-16f79376e97b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fba0bcb7-e53c-4214-a6db-d9af1a8540d5"
        },
        "item": {
          "id": "5c3069f4-6fa1-40ed-a272-268652887188",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2129072e-39a1-40b1-a627-c02cce73fa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3db501-6d40-437f-9a92-d12f42f4cad5",
        "cursor": {
          "ref": "96a6a0a0-3e68-41de-bd19-c4ba0b5c351b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "37f3c961-830a-45f6-ac18-281e418cdb2e"
        },
        "item": {
          "id": "bf3db501-6d40-437f-9a92-d12f42f4cad5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b371e0e6-8c3a-4e36-9a9b-ee1ab63c2d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3936f-493f-4b26-9b36-6394dda6649f",
        "cursor": {
          "ref": "f89e8c79-e180-4282-90db-7ef8031933a6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8ef22931-9088-412a-bea3-b9ab4f61dca8"
        },
        "item": {
          "id": "e4f3936f-493f-4b26-9b36-6394dda6649f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1132ac4a-e979-4b1c-aa9f-19b03d0cf0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4db7f6a-59aa-4a52-8498-74b0fea02670",
        "cursor": {
          "ref": "193adb9a-64a4-4186-8a49-49c13c952eb5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee91fc7a-533b-4de3-a15d-9ced168137ef"
        },
        "item": {
          "id": "b4db7f6a-59aa-4a52-8498-74b0fea02670",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6eeb0164-3755-4e0d-b7f6-35453c9bbc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ec0fb-f46a-41db-b667-df59d18169d2",
        "cursor": {
          "ref": "90c2aa04-0b72-48e5-8d7b-71ecc6f813d4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "96ff00a7-8a2f-48c3-8c34-c7ac7b373c48"
        },
        "item": {
          "id": "267ec0fb-f46a-41db-b667-df59d18169d2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "45dd3070-540a-4652-bc88-14cabd9d3c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1963c63-e7ae-43f0-b316-5a6cca8a70f0",
        "cursor": {
          "ref": "31be3465-9f77-4256-95d3-e5d715d8e10d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8c8e55a2-3442-478b-908c-faa4fc917cee"
        },
        "item": {
          "id": "e1963c63-e7ae-43f0-b316-5a6cca8a70f0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "56684d95-452f-4b31-9067-dbb8b6b4746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a880ea-f5ca-48ab-b537-f8345c3ec162",
        "cursor": {
          "ref": "ef0f1dd3-9590-4323-84bf-56fa3c377f56",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16c2f0ed-f13d-4187-8653-90a63932ddb3"
        },
        "item": {
          "id": "53a880ea-f5ca-48ab-b537-f8345c3ec162",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5afe1653-7b33-4c17-9d55-679bf3b881e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12194695-115e-4525-9889-9abdd309b32c",
        "cursor": {
          "ref": "0d40cb7f-3964-4247-9300-2f2455d07290",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f8e5814a-e364-4006-a952-8391a5026b48"
        },
        "item": {
          "id": "12194695-115e-4525-9889-9abdd309b32c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "500082f7-4a26-4138-9e13-a0edc0b7afd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e49e6c7-d1aa-4011-8c44-e7d985799a79",
        "cursor": {
          "ref": "8ce82eb3-cc34-4aa8-89f9-62922e743e8b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "206c488a-b6ec-4511-957a-7626cd9eb9b3"
        },
        "item": {
          "id": "8e49e6c7-d1aa-4011-8c44-e7d985799a79",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1979a2d1-12e8-480e-a788-b2ef0e56cf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689be0ac-ae05-481e-8ed1-85e31e61cf13",
        "cursor": {
          "ref": "0705d3f7-9568-4810-bd85-39f4b9ca3f43",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2a58b363-0231-4584-9b66-f697c5381c12"
        },
        "item": {
          "id": "689be0ac-ae05-481e-8ed1-85e31e61cf13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c487e804-c437-4a52-a15a-8587f687eedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e647873-430a-4086-b3d4-d7a797bef635",
        "cursor": {
          "ref": "e8e7740d-beef-4f39-aaf5-b24c77d363a1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d5fa9870-ee74-4480-9b8f-4abd0bd0a8f1"
        },
        "item": {
          "id": "1e647873-430a-4086-b3d4-d7a797bef635",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f0565f2e-ddf7-4222-869d-d40c6a459cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c96e3bb-3fee-4d2d-9724-7e83aac9ccac",
        "cursor": {
          "ref": "28553a81-be09-4992-ab62-fa3bedca9057",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "620f7fd3-d350-41ac-8f74-915db256de72"
        },
        "item": {
          "id": "9c96e3bb-3fee-4d2d-9724-7e83aac9ccac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b7daaa1-9b9f-472d-bbc9-3377720153e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d79ca26-b288-44d4-843b-cbc00fec394b",
        "cursor": {
          "ref": "a7c9c0c0-4298-4b3e-8d9f-1a851e1ff25e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3ad1964a-a61d-4eff-84cf-3ba7ce236920"
        },
        "item": {
          "id": "5d79ca26-b288-44d4-843b-cbc00fec394b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "57c78c3e-a1a0-4011-85be-9af548458d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf5060a-8f1c-4b7a-8f01-3cfd94f6f03e",
        "cursor": {
          "ref": "e7d83f20-180c-4023-bd83-b928002a9070",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "745e3e2d-5068-4b31-97b7-78d86d34535b"
        },
        "item": {
          "id": "aaf5060a-8f1c-4b7a-8f01-3cfd94f6f03e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "46bd9881-daa1-4f14-a1cf-38f385e020f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56cabb-9cd1-4868-a1ab-85955a6590ba",
        "cursor": {
          "ref": "b214767d-c028-4d42-845b-cc2514d791d3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df66293f-1f19-46f6-b456-d36ff806e94d"
        },
        "item": {
          "id": "da56cabb-9cd1-4868-a1ab-85955a6590ba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ed762deb-bcae-42d6-9693-ff213e08d3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c77f28f-c15c-4c71-a6db-58ca7140c6e4",
        "cursor": {
          "ref": "8e5c6db1-afda-4200-af28-1b040d00e4e6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a84413b-ea63-4dbf-8884-686783cffb36"
        },
        "item": {
          "id": "8c77f28f-c15c-4c71-a6db-58ca7140c6e4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7d68db47-229b-41c9-8a25-edb2ced9fc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdbd795-372c-4809-bcae-a7f99fa08272",
        "cursor": {
          "ref": "acd73fec-ba45-407c-8128-aab9a1f25ed2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3b70e86b-9ed8-4911-a0a6-ebc1f75ad8ad"
        },
        "item": {
          "id": "fcdbd795-372c-4809-bcae-a7f99fa08272",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38047e67-ce4a-48f6-bed3-622878c1f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af4fd6-2b4c-4969-9033-60d5382f39a7",
        "cursor": {
          "ref": "fad04f4e-e2d6-459b-9db7-86f56d54a5df",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aea45ba5-936d-4f7d-aade-05ccc54c7ffe"
        },
        "item": {
          "id": "e2af4fd6-2b4c-4969-9033-60d5382f39a7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0efe2550-175c-4bd4-8ee4-28f0452f5be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f821d-5a33-4374-a733-9a8c5d986810",
        "cursor": {
          "ref": "8cf697bb-4b2f-4950-8acb-f2d20520050e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b2b40618-16e2-465a-984a-925b9216fc78"
        },
        "item": {
          "id": "7a4f821d-5a33-4374-a733-9a8c5d986810",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9d9e2121-33ae-4bb2-b9d2-347c501a143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c932ee69-15b8-4430-954d-415c60c56783",
        "cursor": {
          "ref": "76c0565b-1ef9-400f-b097-a6835fdcf423",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "28e60d04-f775-44c9-9883-09c685bf382f"
        },
        "item": {
          "id": "c932ee69-15b8-4430-954d-415c60c56783",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ddcd7b4c-1bbf-4aed-81dc-7532e70d58ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fda099-442e-433d-b779-b40fc78d7e16",
        "cursor": {
          "ref": "14c023ee-d450-48b6-b474-239551089579",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "38b059f0-c232-401f-8c2c-0596270e3b2d"
        },
        "item": {
          "id": "28fda099-442e-433d-b779-b40fc78d7e16",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eb43f5db-aa15-4a87-863b-27752d00f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d65d070-50c2-4cda-b6b1-27a5bd033063",
        "cursor": {
          "ref": "51b3268b-10b9-4b6d-acce-6bec1b3eacf3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cf9109d2-9fd4-4fdd-9306-2756f0460105"
        },
        "item": {
          "id": "7d65d070-50c2-4cda-b6b1-27a5bd033063",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "375f4599-5675-4e7c-800b-95e27f1b1ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf21e94-2d46-4059-a5fb-c57403942b62",
        "cursor": {
          "ref": "7ada7868-1fc8-411f-a6ab-a3cdcb91fc22",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fbe027a9-3958-4011-b590-80e2890710cd"
        },
        "item": {
          "id": "3bf21e94-2d46-4059-a5fb-c57403942b62",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d9676cc-d26e-4c08-8b14-caa66edaf1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e6dc2c-cd2a-48f7-9cf9-0f8e69c4fd20",
        "cursor": {
          "ref": "ae94ab50-acde-4c31-b93c-d28e72b0ebf2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c7225c1f-b5ca-4cfa-984a-4dfceddf72e4"
        },
        "item": {
          "id": "c2e6dc2c-cd2a-48f7-9cf9-0f8e69c4fd20",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "974001e7-880e-4de6-92e4-a4d3169da797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feec56bf-ac9e-4af1-a7f4-3a623adf6645",
        "cursor": {
          "ref": "91afe3d5-6d79-411a-9cd6-c2af2c0929a0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "67a0d602-2f89-4228-8be8-c7e9c3989f15"
        },
        "item": {
          "id": "feec56bf-ac9e-4af1-a7f4-3a623adf6645",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cb2146b0-ce2b-4dae-88d9-fb4fd2e6754d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edb86a6-c0ba-44fd-a584-c5c86ff685c3",
        "cursor": {
          "ref": "c4cf35c9-1f9c-4be2-8fef-f02d510c906b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d215699-d11f-4b01-ae5a-a5fb9dede83c"
        },
        "item": {
          "id": "7edb86a6-c0ba-44fd-a584-c5c86ff685c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "82b5770e-7967-43a0-a3ce-49ddbfc7e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69b58e-144d-46e2-b91a-ae71e247789f",
        "cursor": {
          "ref": "2e09ef2b-d19b-452a-962f-a77ec1130a06",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c726abcf-1ba7-4c80-981d-81c0ad48ff05"
        },
        "item": {
          "id": "ab69b58e-144d-46e2-b91a-ae71e247789f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4be0edda-fede-4936-95fa-e5efedfbe821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38668016-4cfb-4ec5-9b8d-5bb7f26102a7",
        "cursor": {
          "ref": "6c3e1f2b-1902-4821-869c-82f4f7010bbf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "056f3ce8-86ff-45cc-8f33-1435499e458d"
        },
        "item": {
          "id": "38668016-4cfb-4ec5-9b8d-5bb7f26102a7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "89dd5077-777b-4af0-867a-3fc0625196e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0771d4-d462-402a-8edc-6a7c0a016879",
        "cursor": {
          "ref": "f7aee506-5fa2-4be0-b311-d8f03518938c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ca16aeef-4750-4523-a6f7-e2d276e53e79"
        },
        "item": {
          "id": "4d0771d4-d462-402a-8edc-6a7c0a016879",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "920250bd-c514-401b-983b-243f5e0b0bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e4e26-acdf-4589-ba76-90eb19063651",
        "cursor": {
          "ref": "05d76d6b-b6fe-4678-b3fa-7678667731bf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00f24647-0a9f-4064-858a-f8e8122df84d"
        },
        "item": {
          "id": "a93e4e26-acdf-4589-ba76-90eb19063651",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ddf2177-4ab2-487a-b84d-f42f2bcf1ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89370014-950f-46cc-9e98-0b3618c9c06e",
        "cursor": {
          "ref": "b494abe6-e024-4b89-83eb-dbed335975ae",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e9ff5482-e07b-48d0-9934-58e44646660c"
        },
        "item": {
          "id": "89370014-950f-46cc-9e98-0b3618c9c06e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d3f4052c-7b7e-49a8-8f9d-fac46de8776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8bd7e0-0ac7-457f-93bb-0bb7e61d67ec",
        "cursor": {
          "ref": "5b8444b9-0e11-4a50-90a7-9de191cf0040",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a3d7e9db-e586-455e-ba6d-e77bf7ae7f50"
        },
        "item": {
          "id": "1e8bd7e0-0ac7-457f-93bb-0bb7e61d67ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1c9ee8e6-1229-4aef-b575-68377ebd52d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb02a49-624d-494e-ac6e-9b0d1e14f7b9",
        "cursor": {
          "ref": "d4f0d6f1-f336-4d0e-8215-aa07bc063c55",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "19120475-b80b-4d96-b405-48d435ecb047"
        },
        "item": {
          "id": "4eb02a49-624d-494e-ac6e-9b0d1e14f7b9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8a3f5097-a44f-474e-8ca8-156ca13d1ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96d87c9-5e12-4645-8eb9-4deb5e3a96c1",
        "cursor": {
          "ref": "880a34a0-c32c-4d03-8487-a2e240fef502",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5093a6c8-ddca-4ee9-9247-d0d8af34bf0f"
        },
        "item": {
          "id": "c96d87c9-5e12-4645-8eb9-4deb5e3a96c1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db46bbc4-8b47-44b5-aae2-49785eeeca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3840f-a3a7-41e0-abaf-44db7624d3d4",
        "cursor": {
          "ref": "2e526a34-636b-4a09-8b73-08c55bb4b345",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7b75c48f-52ab-4d54-bdac-1b16f6e57502"
        },
        "item": {
          "id": "5fb3840f-a3a7-41e0-abaf-44db7624d3d4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58913a39-465a-424f-ac73-44aa921357d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c875926-1bad-4804-8318-7b5d7bfac51e",
        "cursor": {
          "ref": "6316ce5d-de24-446b-ad8a-3d507373c514",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5e5014d2-0956-400b-8275-f8a6655a5c74"
        },
        "item": {
          "id": "2c875926-1bad-4804-8318-7b5d7bfac51e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5879afe1-a7be-4991-9fbd-905a31511405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d89eaa-a698-428f-9f27-26f2b0c64f1b",
        "cursor": {
          "ref": "26a692f8-a129-4ab0-99b6-39aeb9d70af5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7bcd825e-5fff-4c4a-9bb3-7512a4432e2e"
        },
        "item": {
          "id": "92d89eaa-a698-428f-9f27-26f2b0c64f1b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c82fe65e-c1c5-4372-ac39-43f403b404a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ef2ab-b3c4-4eac-9227-d3fbd472f1cf",
        "cursor": {
          "ref": "941aae04-bf0a-47db-8da7-0b2bcc0626bb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e736c04-a525-446e-877e-6f0aa8493c1e"
        },
        "item": {
          "id": "660ef2ab-b3c4-4eac-9227-d3fbd472f1cf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d429895e-f20f-4e67-9ee5-a79d8c596da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6ebb0c-468d-49d6-b3c7-7de4c89cc148",
        "cursor": {
          "ref": "3ca5779e-1a8a-4429-be9e-813689ef2d07",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f6fa7191-c899-4c72-8ba3-68dd3447c29a"
        },
        "item": {
          "id": "2b6ebb0c-468d-49d6-b3c7-7de4c89cc148",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "01049c3b-766b-4659-8a4f-10ee3159a2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398d101b-cbe6-4af2-ae54-e6b8cec64b1e",
        "cursor": {
          "ref": "b21ab429-25d5-4bef-9aaa-d0c6add4f648",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "368f2d3d-8ccd-4d47-95a8-8bcd0b9b86eb"
        },
        "item": {
          "id": "398d101b-cbe6-4af2-ae54-e6b8cec64b1e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8976bf8e-84c4-4e52-8d77-9f113a182c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b3da87-8a45-40df-9493-8b5aaccb7dd0",
        "cursor": {
          "ref": "3879f656-62f1-4ed8-a881-d637dc983b95",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ffac7f0e-cdfd-417b-ba07-a02fbfa9c89c"
        },
        "item": {
          "id": "81b3da87-8a45-40df-9493-8b5aaccb7dd0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7a00217a-fbfd-497a-8255-14d6f018c022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d0e40-969f-4ebe-beba-3e1527c6f8d9",
        "cursor": {
          "ref": "006e212c-2771-488a-add6-f31a73573a54",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "15fb2503-e90e-433c-8468-bbc34ffdd480"
        },
        "item": {
          "id": "758d0e40-969f-4ebe-beba-3e1527c6f8d9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a77eea96-bb3c-444a-b810-713e2392507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a24b2d7-2fc1-4937-92d9-65855a304acc",
        "cursor": {
          "ref": "de25eeb6-8766-433d-bd64-107ac8cc9d93",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cc3578b1-e632-467e-ba39-32e5f738a241"
        },
        "item": {
          "id": "8a24b2d7-2fc1-4937-92d9-65855a304acc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fb0035b5-9665-46d5-82e7-86d16a7fba04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeb8920-83c2-4cdd-99df-bb39c2797010",
        "cursor": {
          "ref": "6ea738f5-ad49-49e8-9b94-0c63e9b4d927",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a6ea10ee-127f-4994-bc30-895d955d7aee"
        },
        "item": {
          "id": "7eeb8920-83c2-4cdd-99df-bb39c2797010",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a33cba77-b40a-47d4-96f8-e1802fb04515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf91866-5a22-4d68-b601-a979e46f425b",
        "cursor": {
          "ref": "8c36934c-5282-4aaf-b16f-8ff64d8a8d44",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3763dfd0-40b8-4f68-b327-14b0d669b7ad"
        },
        "item": {
          "id": "abf91866-5a22-4d68-b601-a979e46f425b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "36cc483a-2788-41c6-994c-0ca5d6706ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3900c5c1-c914-4540-a587-e65c0fb43b67",
        "cursor": {
          "ref": "6fe43f25-bb20-4e2c-9d7c-0a88d2ac8ec9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "df4e5d04-1360-4b02-b757-dfecbe1bac18"
        },
        "item": {
          "id": "3900c5c1-c914-4540-a587-e65c0fb43b67",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "245b80d9-0af6-4a3d-beb0-a7538a7a56a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c0cf21-f981-4a2f-9868-7a90be27d2f3",
        "cursor": {
          "ref": "a4eedd44-b6b4-4956-809a-d1db66519bf8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7b09170c-463d-49ec-95f4-e750607a3cc2"
        },
        "item": {
          "id": "76c0cf21-f981-4a2f-9868-7a90be27d2f3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1895930c-9a05-4710-8eef-5dee8d67990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8342dd70-bee5-487e-8470-c6b61b37ad23",
        "cursor": {
          "ref": "b5f0dc3d-2e9d-4cfa-ae2e-a7c13d75e249",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "588585c0-804c-4db9-8545-8132437d88fd"
        },
        "item": {
          "id": "8342dd70-bee5-487e-8470-c6b61b37ad23",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e5cef2e7-2619-4ba3-8a01-36aa831c56f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4e772454-c5b0-47a0-89c4-e4cd535888ad",
        "cursor": {
          "ref": "6c91aa44-e93e-4859-bbfe-f54384fcaa8b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8ef8b603-a4aa-4416-9895-da516afadfec"
        },
        "item": {
          "id": "4e772454-c5b0-47a0-89c4-e4cd535888ad",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "381646f9-6852-42d6-aeb0-c5cacaf320eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "798dfebc-41b5-4b5e-86e9-278c8e2ed842",
        "cursor": {
          "ref": "6f348b48-393b-401c-8219-2f321fe697a8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "25b59780-2677-4b16-bf43-2ec9816ff69d"
        },
        "item": {
          "id": "798dfebc-41b5-4b5e-86e9-278c8e2ed842",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f2f9404-d820-462e-a86a-a31c2dfef9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7085a464-0259-4234-a98f-d4ea8bb5964c",
        "cursor": {
          "ref": "a92afa6d-5f61-4099-a868-e4a8eb3aac4c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8f286c9a-2f09-49fd-8779-69cba5a95307"
        },
        "item": {
          "id": "7085a464-0259-4234-a98f-d4ea8bb5964c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "09df9565-3213-47d4-87fa-3f6a41d69423",
          "status": "Created",
          "code": 201,
          "responseTime": 8356,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de6249-81e1-46f8-b669-e804de402ebb",
        "cursor": {
          "ref": "491648ba-c2f5-4913-a12e-4d5473139f1f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a79868e3-5f75-407d-a08a-8e5f6726acfd"
        },
        "item": {
          "id": "68de6249-81e1-46f8-b669-e804de402ebb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "362529c6-ab6e-4936-bcc6-21f3c769f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "eb8d93a0-b4c2-4507-87ef-70e013bdad3b",
        "cursor": {
          "ref": "d2cea41e-3c3e-4810-9775-c80081c755f2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d7bf2a31-4c31-480c-ab15-290ef7e16ac8"
        },
        "item": {
          "id": "eb8d93a0-b4c2-4507-87ef-70e013bdad3b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "24dbbc4e-b442-4cd5-b51b-eec4c31f8a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8ccd1ae2-0efa-4b2f-95da-e885d47c9362",
        "cursor": {
          "ref": "57cfe7a4-9c33-4470-a6c0-7ccd28e8d620",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e0c15e84-e567-4f53-8278-db0bbbfa84c2"
        },
        "item": {
          "id": "8ccd1ae2-0efa-4b2f-95da-e885d47c9362",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da0fee4e-c92c-4735-973f-43bdbd460e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fa4de5-4d01-4b80-a750-d74e7654738e",
        "cursor": {
          "ref": "0a2d6ed1-bd46-4fcd-9cd1-578418b83ca7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8c60dccd-1234-4b64-aa3c-ea00e655ca81"
        },
        "item": {
          "id": "b2fa4de5-4d01-4b80-a750-d74e7654738e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc023d89-3ef7-453c-8a0e-4b8f64fc2f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0cd015-0804-40f0-b5ad-305d88df777f",
        "cursor": {
          "ref": "7e248ea9-54cd-44f5-bed6-45e6e6aca515",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0f22163b-a142-416d-a8b4-538a5a72d10c"
        },
        "item": {
          "id": "db0cd015-0804-40f0-b5ad-305d88df777f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9baf7a67-52c5-4543-919f-c98e11e13468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71715ce9-db3a-491d-b80b-2de82d546e6d",
        "cursor": {
          "ref": "816b0f85-bc52-4253-9c20-6b3698bdab64",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9184fb9c-7167-4831-bf18-3e1175e725f8"
        },
        "item": {
          "id": "71715ce9-db3a-491d-b80b-2de82d546e6d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2258e88a-5a4c-49b5-ba96-0347791fb4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b4d64-bf7c-4a74-841d-cbab77c541eb",
        "cursor": {
          "ref": "ea2c2023-0261-4804-9844-ad71d8dcdec4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0746128b-46fe-4d10-a60f-1789266fa66b"
        },
        "item": {
          "id": "d01b4d64-bf7c-4a74-841d-cbab77c541eb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15deb3fd-8e8b-4171-9475-e2366dd830d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07622ed-2ecf-4d77-9d3d-829c72d4d1c1",
        "cursor": {
          "ref": "2674f497-0fe8-4171-ae72-5faf131ee014",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c5a9bb79-0d28-45e2-8064-3b6afa50dd5f"
        },
        "item": {
          "id": "c07622ed-2ecf-4d77-9d3d-829c72d4d1c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68de2d37-fe2c-4a0f-8e54-8dddb3ec2626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229db246-09e8-410f-9fc0-676b3060d369",
        "cursor": {
          "ref": "e5489047-c40d-4739-b3b4-21cb69da85ba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a47dffa7-031d-4baf-a558-6dfbcc91f4a9"
        },
        "item": {
          "id": "229db246-09e8-410f-9fc0-676b3060d369",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "500c4b48-a4e5-4b6d-8d75-dbec3ef8ce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114a021-40f9-40cc-b94d-0457a935b1e8",
        "cursor": {
          "ref": "ac530dba-8fee-4a8b-921a-1cf9122ee807",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a6b3b159-82c2-4770-91d4-93b90f2bd436"
        },
        "item": {
          "id": "4114a021-40f9-40cc-b94d-0457a935b1e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cf4eacee-4888-400b-89e5-1be8661ef826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9e4fe9-85ea-48a9-8162-4ceef673b47a",
        "cursor": {
          "ref": "4b778126-3345-4630-b042-4377a488d2ce",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cbbd9c2a-0411-4bbc-aead-98ca4a8b4e36"
        },
        "item": {
          "id": "5a9e4fe9-85ea-48a9-8162-4ceef673b47a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfce2bcb-14fa-41cc-a708-00937864cc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b464e8e-32fd-4d4f-9412-a9959039f493",
        "cursor": {
          "ref": "e59bc04a-4e25-4a93-b76b-0872fe389fe7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fbc374a6-f9ac-4920-bdc3-2ce18e4604b6"
        },
        "item": {
          "id": "0b464e8e-32fd-4d4f-9412-a9959039f493",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "224fe4b8-8b8a-4e1e-be20-d523d24cb233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb62e0-f0df-4099-a86d-e3d30e7d3c9a",
        "cursor": {
          "ref": "1710037a-9830-4f09-92ee-27f7bdd53cb1",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5fb6fbcd-3166-4387-8a4d-36546ddb2050"
        },
        "item": {
          "id": "efcb62e0-f0df-4099-a86d-e3d30e7d3c9a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "76c00552-764e-48ff-8d66-991c9b1d6faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c7ee9b-55e2-451b-b39f-efcb722e9ad8",
        "cursor": {
          "ref": "11287de3-c713-4ef2-a6fd-2d75971cac80",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "57b20899-47fa-453d-b33d-daa92bb43877"
        },
        "item": {
          "id": "84c7ee9b-55e2-451b-b39f-efcb722e9ad8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0aef0435-d314-4f1e-8313-ab9a403d8fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f908a1ed-57da-4ae9-ad38-88d85bdc25be",
        "cursor": {
          "ref": "7c9199c6-9602-4c83-8af0-7ce37bbb3dc0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3477b445-0e5e-467e-886d-6e194daa0bb8"
        },
        "item": {
          "id": "f908a1ed-57da-4ae9-ad38-88d85bdc25be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "290635bf-5614-4684-9c13-16239ae7d874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc600ec-9cb1-419c-8a37-1b8bd21cc8c9",
        "cursor": {
          "ref": "71c63173-16c0-4111-bf96-dbff749315c0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "22ee9b32-f622-4dfc-b818-c70a00a12f5a"
        },
        "item": {
          "id": "3dc600ec-9cb1-419c-8a37-1b8bd21cc8c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1415dbfc-7422-491b-bba3-1a508739fb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f071c6c2-7172-4a92-9d7c-eb0482b0f47a",
        "cursor": {
          "ref": "fe715c5b-3351-453d-b73c-35a156c9bd60",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3f5f555-a0c9-407c-8088-be6bd8b09b30"
        },
        "item": {
          "id": "f071c6c2-7172-4a92-9d7c-eb0482b0f47a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b63e3396-8336-4803-9265-444f1551547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704c1279-7023-49d8-b977-928a7a410e11",
        "cursor": {
          "ref": "d85e6f6d-f234-471c-b091-7e9677e8e287",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b1eb3f93-fe39-41d3-acb9-b3da9a98a4c0"
        },
        "item": {
          "id": "704c1279-7023-49d8-b977-928a7a410e11",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "27d41470-cec0-4e9a-ac49-dd4770941ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f417a005-b533-4e45-a1ea-5bbe6e5c3096",
        "cursor": {
          "ref": "f3f898f3-621d-466c-85fa-79754960dc3a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "562935d1-1583-4f13-8c4f-d6a576d06897"
        },
        "item": {
          "id": "f417a005-b533-4e45-a1ea-5bbe6e5c3096",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b17d02f6-bdc0-4a5d-830c-2f01e429031b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "cb096a54-3ad6-4f90-8326-85cbab24aa7a",
        "cursor": {
          "ref": "9ce1f13c-7c92-4ff2-bd3d-be3b86112c84",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0944b817-f94f-44bc-9c1e-932c1a2cfca5"
        },
        "item": {
          "id": "cb096a54-3ad6-4f90-8326-85cbab24aa7a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac3160d7-a6b4-4971-96fa-22d6eaaef930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1666196b-9cf0-4735-8e56-3a1f50ab775a",
        "cursor": {
          "ref": "9b1fcf2a-8980-43af-9c84-182f50d8e914",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5ceef825-a47d-4363-87ce-dde3b7aff79a"
        },
        "item": {
          "id": "1666196b-9cf0-4735-8e56-3a1f50ab775a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "34422fe4-548c-4db6-849d-ab81a21c5fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d8bdfc-847a-4202-be3e-2800f31fe42a",
        "cursor": {
          "ref": "502f2b1b-d14b-4326-a026-e8b005d21ce2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c85ce7b-dae1-4e78-bff8-76036e880222"
        },
        "item": {
          "id": "f3d8bdfc-847a-4202-be3e-2800f31fe42a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a5eb9d3-20a4-4ec3-827e-3f0a13076cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d0834-6686-4131-baed-0aa3873fd9b2",
        "cursor": {
          "ref": "c1f04b3f-f610-4b28-85b6-6081ae89c2b5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0118bc24-b287-47c8-aefd-55980d221dd7"
        },
        "item": {
          "id": "6f4d0834-6686-4131-baed-0aa3873fd9b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3153c35f-2092-4387-b331-d1a827bcf032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea4e5ed-2749-4b9e-8a42-d07f90fdde9f",
        "cursor": {
          "ref": "bd5c1f59-b77b-48e1-a908-78f42a162b30",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e798c92e-9e0c-498e-b46a-37937eaee4e4"
        },
        "item": {
          "id": "8ea4e5ed-2749-4b9e-8a42-d07f90fdde9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d9ba5fe-d021-4d48-a5d0-eaf1e5d22c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbbe173-e019-4914-bd49-5884acb86e18",
        "cursor": {
          "ref": "a64d3849-3604-4ba4-b6c2-ca986bf29a74",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8ba4023b-3edf-400e-a7de-0ddd6dbe9ea2"
        },
        "item": {
          "id": "8bbbe173-e019-4914-bd49-5884acb86e18",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f4aa813c-843a-4e3a-b0e1-af288d5c3b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e745d3-9624-4b97-988c-7c9a35e170cc",
        "cursor": {
          "ref": "bf1a0b10-7602-45ee-ab13-058a357e8761",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3fcccf09-3254-4992-8f2d-aa05012ef036"
        },
        "item": {
          "id": "58e745d3-9624-4b97-988c-7c9a35e170cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "21b1e4ee-9029-428a-85cf-8452a17caea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab42496d-c5b9-40e7-9177-93db5723d93e",
        "cursor": {
          "ref": "49a08480-3f19-427f-82b8-20beaa78c7dd",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "969c81bf-c290-4210-9237-f267c2a456ca"
        },
        "item": {
          "id": "ab42496d-c5b9-40e7-9177-93db5723d93e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dbac5dd7-e167-4782-b1a7-476965f3921c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "354664a6-8717-4082-ab65-18f26ecacdba",
        "cursor": {
          "ref": "d8c668fd-df1b-442f-97c1-a25ea622adb4",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6aaf740-c8b1-4550-9c09-07f46ffe0d24"
        },
        "item": {
          "id": "354664a6-8717-4082-ab65-18f26ecacdba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ddab8fe1-9fc1-48df-b010-0328be59c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad766bd0-4efe-411f-a0bc-117bdde97773",
        "cursor": {
          "ref": "ad961622-371b-4d95-a76a-d362fc520c3c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4f1bb20d-3372-4a15-845c-f1b3c504f95a"
        },
        "item": {
          "id": "ad766bd0-4efe-411f-a0bc-117bdde97773",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "415a46f0-c597-4d5f-b534-f3fae79580de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36580e69-1033-44fd-ac9a-2debb1d73164",
        "cursor": {
          "ref": "ad373d21-5ea2-408d-bbc2-1c60bf174026",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9c19e0cc-df00-4517-8760-97dbc4728bb4"
        },
        "item": {
          "id": "36580e69-1033-44fd-ac9a-2debb1d73164",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37296b1c-83b7-474b-b96e-ad30a91ff2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a9e64b-c0be-4c17-8a68-841d30fb12ce",
        "cursor": {
          "ref": "270fcd23-a91c-4423-8687-6a98157fe7ea",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "84577c93-f062-46ae-b586-fdd800fa861e"
        },
        "item": {
          "id": "c6a9e64b-c0be-4c17-8a68-841d30fb12ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8eb2bc26-5654-427f-a0a0-39ffc1ed6156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e6ad69-116d-4314-8f6c-1f547a57a8da",
        "cursor": {
          "ref": "4167df54-b89e-4660-9f3a-d46aad904aed",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8079c0de-9710-4657-b469-892519ea6e6e"
        },
        "item": {
          "id": "c2e6ad69-116d-4314-8f6c-1f547a57a8da",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97f244c4-e4b2-4fc4-853c-19bd315f62e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78faedc2-b9c9-4ed0-a529-b4d3a12e0f5b",
        "cursor": {
          "ref": "2ab1d752-4b88-4706-a1be-01bdea079bca",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6046a05d-da7c-4a25-994a-9db5561370a7"
        },
        "item": {
          "id": "78faedc2-b9c9-4ed0-a529-b4d3a12e0f5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8cd40e43-0c96-4de2-880c-f201b16002b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ab4da-a6ac-4525-b047-fc850885b90e",
        "cursor": {
          "ref": "63538317-a4b1-4735-be6f-a1e4718523d3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b1e801e-4574-48fd-8e93-25ce72df11d8"
        },
        "item": {
          "id": "3d0ab4da-a6ac-4525-b047-fc850885b90e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ffa8957c-0e0a-4c9a-ac6e-4fc303109700",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 115,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9cec5731-efa6-4b2b-b017-1cb6230075b9",
        "cursor": {
          "ref": "b4f4fe24-13e0-445c-bd9b-e6be549af336",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c8763a4-da8d-4ea7-a636-9016b7ebe044"
        },
        "item": {
          "id": "9cec5731-efa6-4b2b-b017-1cb6230075b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "977b798a-22bf-4050-899b-dd63a7dbe6d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6a2be5-917a-49e9-8d80-b6c268600606",
        "cursor": {
          "ref": "c20c5154-6b55-41a3-b7ca-410a2feab690",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "df36c5e0-66f3-4d70-af0e-8460893c8a2b"
        },
        "item": {
          "id": "4f6a2be5-917a-49e9-8d80-b6c268600606",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35ecfe85-7697-4892-9b23-497a4076f4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b36faf-b393-47b3-adf3-261df4cf0ff0",
        "cursor": {
          "ref": "0ae48ebf-568a-4f45-a4ad-fe9f128cbd30",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c7fe24ea-a0ae-4a27-9fd4-830902686bcf"
        },
        "item": {
          "id": "c8b36faf-b393-47b3-adf3-261df4cf0ff0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "74bed41c-cafd-414f-985a-0ce01135a1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640600f0-23d6-4a6d-8cf9-97d586ca38bc",
        "cursor": {
          "ref": "72b5a1ae-7afd-4d3f-a088-544c4afc736f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d667d6ac-ca88-4986-a181-5335b0262b16"
        },
        "item": {
          "id": "640600f0-23d6-4a6d-8cf9-97d586ca38bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "84cd0b5a-ae4e-4c36-b9f8-014a12b9942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a977463-208b-4314-8e9f-23b0809874b3",
        "cursor": {
          "ref": "94c00bfc-ec0a-4771-814c-bde673f38af3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "465453d7-dd15-4f95-99ab-5a04553a8611"
        },
        "item": {
          "id": "4a977463-208b-4314-8e9f-23b0809874b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f45e20e0-0ceb-4a14-98fd-02241ee818f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9967b75-5d1b-42b3-82e2-286da3d58912",
        "cursor": {
          "ref": "260d32aa-501b-4167-89a8-01f6361f6d26",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "107d2529-321a-4af0-8763-968f6763ec97"
        },
        "item": {
          "id": "b9967b75-5d1b-42b3-82e2-286da3d58912",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "275cf87b-3130-4334-a817-edd2c444df1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fcff6e-3201-4b18-8e16-aa17454908e9",
        "cursor": {
          "ref": "416e88d5-de78-458d-a82d-83608a5ced17",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1ec141fc-56e0-4ded-9eb8-0f6de9edff37"
        },
        "item": {
          "id": "47fcff6e-3201-4b18-8e16-aa17454908e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8b5dcf9-233f-4247-8676-c602150ec71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126a7610-e054-48c5-a6b5-0dee6844c9f3",
        "cursor": {
          "ref": "e2a69911-0052-46a6-9bf2-9827ed924f9f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5097fe80-44fc-442d-92a1-4175053b9943"
        },
        "item": {
          "id": "126a7610-e054-48c5-a6b5-0dee6844c9f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2ce61db-2cd4-46cc-8ac5-2862a38bd601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95bb262-5329-445f-871a-25c7a33903e8",
        "cursor": {
          "ref": "b47fcf9a-a3e9-41e7-8b01-c4512d63b2af",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6fec58eb-de9d-4533-9756-04e063f25f78"
        },
        "item": {
          "id": "a95bb262-5329-445f-871a-25c7a33903e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9fc9114e-d4ac-4967-ba49-c5b1aa52a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1356ea-4239-4eed-a7f9-0d382297ffa2",
        "cursor": {
          "ref": "03adf141-19a4-4ea7-83bc-a7c518716d76",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e96039fd-c885-4107-ac2e-2bd0d72cb8b0"
        },
        "item": {
          "id": "bc1356ea-4239-4eed-a7f9-0d382297ffa2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d00066ea-01ed-480f-907b-5740c9289df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab33978d-7004-46f5-b9ce-eb8a8881f175",
        "cursor": {
          "ref": "bf8d856b-6bcd-467b-b13b-c19985c2b932",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "45f5d16d-8648-4af2-bc9b-86423ee2e0b0"
        },
        "item": {
          "id": "ab33978d-7004-46f5-b9ce-eb8a8881f175",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "545d27e2-7fba-40b5-ae34-23090619633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc077b6-75a3-4cfa-8125-83ab282a41f9",
        "cursor": {
          "ref": "36e70df5-d110-4fbb-a942-4cc2c75e6973",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a161185b-b157-44dc-af9c-6dffe44214b5"
        },
        "item": {
          "id": "5cc077b6-75a3-4cfa-8125-83ab282a41f9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4cca3437-9d72-40d0-9d7f-693a9e44d29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cc6439-92fe-4fa4-8926-ba1f9543b754",
        "cursor": {
          "ref": "e2bcda73-7829-4482-9e4b-bffdc85392f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fad07465-74b8-4592-93cb-f0f4c78d8f12"
        },
        "item": {
          "id": "f6cc6439-92fe-4fa4-8926-ba1f9543b754",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e70f28de-b384-4bfd-a8b6-487a85e3bbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c16e90-1464-4af1-bb26-85d82a721db8",
        "cursor": {
          "ref": "a87077d9-3d02-4b16-b431-1e1464be60af",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f91e686d-d8ac-4245-9eea-968aebb6a0e6"
        },
        "item": {
          "id": "e2c16e90-1464-4af1-bb26-85d82a721db8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d359288d-54f5-4d80-a5cd-83c2c0da2fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258ddfcd-2312-4ea1-bcc5-c09703e52966",
        "cursor": {
          "ref": "07ee682e-bcdb-4cf9-9ca9-a55f44218c24",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b97da4be-9b18-4124-9073-f96e50efd0c3"
        },
        "item": {
          "id": "258ddfcd-2312-4ea1-bcc5-c09703e52966",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7b5663d-fb2e-4274-966f-38f52e523d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bef809-5cf2-42ee-8fb4-d6931a0506ed",
        "cursor": {
          "ref": "8b99e551-3467-411d-a8f0-5712525a64ef",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a7ddcde0-ae2b-4821-bd0b-5a71979d4c5e"
        },
        "item": {
          "id": "71bef809-5cf2-42ee-8fb4-d6931a0506ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2573dd10-58c6-4bd3-afbd-5985f238b3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb4be0-2889-41c2-a37f-4f6f3bb3c1bb",
        "cursor": {
          "ref": "84862a2a-10f4-4130-90ee-8a64b4241ab1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44cecc99-5185-4aca-afa8-b4d1b0611874"
        },
        "item": {
          "id": "86cb4be0-2889-41c2-a37f-4f6f3bb3c1bb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72215061-b818-4248-a09d-dd0c37c1cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125c3c19-428e-4b0a-a00d-4abea9018522",
        "cursor": {
          "ref": "301ecc2c-1ae0-4edb-9efb-4180b7fce97b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0a4cb19-e277-4d3f-b5bc-16bd896591de"
        },
        "item": {
          "id": "125c3c19-428e-4b0a-a00d-4abea9018522",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db6b256e-51f4-43e1-803f-e74f4788c4d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "96f445a9-506a-44e8-b5b1-b6207e4dcade",
        "cursor": {
          "ref": "5e8a217f-bf9b-476a-9d43-466bd33950d2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e45cab27-be75-4981-9b2c-386dfdc823d7"
        },
        "item": {
          "id": "96f445a9-506a-44e8-b5b1-b6207e4dcade",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00f3c668-1080-43df-ad7d-6dc9727407e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1948f209-6f05-4a1b-80a7-7f53b6d8fa7c",
        "cursor": {
          "ref": "3fe6ac1c-76c7-4ef8-b3d1-02d3898ac4e4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6ee65cf2-cb69-443e-91b5-940184eeddf4"
        },
        "item": {
          "id": "1948f209-6f05-4a1b-80a7-7f53b6d8fa7c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a75d274f-9635-4692-94b1-038ecfb30e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc43b7d-9a1f-4e08-a90d-38ff9a74826c",
        "cursor": {
          "ref": "328e115d-2b6d-4b8e-a1d8-ee50be109743",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3322b515-e0fa-4ab0-bed1-a2e22f909b92"
        },
        "item": {
          "id": "adc43b7d-9a1f-4e08-a90d-38ff9a74826c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ff5a6f9-e2f7-4211-9eaa-deb4ef384071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f03f7-6289-4a54-8e21-79ff251f1642",
        "cursor": {
          "ref": "535b29d3-f504-48f1-884b-3536fb1b8a5d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b0565d0f-7089-4aad-a871-7af5ba9f481e"
        },
        "item": {
          "id": "1d6f03f7-6289-4a54-8e21-79ff251f1642",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "369bc8bb-d722-48d0-a5ee-23414e5b456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63f9c2a-7443-4b82-bce0-6efa7093bad4",
        "cursor": {
          "ref": "91d06140-63bc-4ae2-8064-8c1cc7921ffe",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0fea1bbb-039b-4d8b-a0fd-74862f12f534"
        },
        "item": {
          "id": "d63f9c2a-7443-4b82-bce0-6efa7093bad4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ba66fbf5-d246-455f-8455-bc7373b03dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab16f716-626e-44c2-9dd8-a0b8cbe9323c",
        "cursor": {
          "ref": "3681ce06-cd40-4026-8514-0222ea6f34ce",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "642c840e-33f7-4458-9123-0fef3b4c7f1c"
        },
        "item": {
          "id": "ab16f716-626e-44c2-9dd8-a0b8cbe9323c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "791204de-7931-4bba-b783-40b1c550b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee15381c-1514-40d5-900b-b794f3727351",
        "cursor": {
          "ref": "dbfa27e5-38f9-4e74-aa14-b7e9486c1c00",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c63cc0db-dc79-45a8-a171-5ce6e5c4339b"
        },
        "item": {
          "id": "ee15381c-1514-40d5-900b-b794f3727351",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88983419-1ec3-44f8-b533-7df91c76be98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5802c6-b25f-417c-bd54-3608baa01f9d",
        "cursor": {
          "ref": "05ee51a3-3f4c-4b9a-a1c6-40c9a9fb8e0c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3596d60-c39a-4807-bc86-50e7a57e6329"
        },
        "item": {
          "id": "9e5802c6-b25f-417c-bd54-3608baa01f9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9aaaeab9-fc9f-4e41-a86e-6418e4f19320",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "096ef127-1159-4038-90cf-f94425b1d542",
        "cursor": {
          "ref": "167c07bf-2dc9-45af-8c10-8f2e910dfa3d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cccdfbdd-9a2f-4100-8d91-222544033df4"
        },
        "item": {
          "id": "096ef127-1159-4038-90cf-f94425b1d542",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "020d87c8-3a84-4aa7-800a-c55764eaa975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909bc800-d49a-4438-8a82-3aa054210edc",
        "cursor": {
          "ref": "eb38ebeb-2e9f-4b84-a735-0db705b10115",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4da13dfb-31e7-4f96-ac42-5e6423b2132d"
        },
        "item": {
          "id": "909bc800-d49a-4438-8a82-3aa054210edc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26b8aea3-5f2c-4d5e-aa0e-4167e0e78050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b6fcf8-bc30-4a6d-8511-fae89859b2c2",
        "cursor": {
          "ref": "79ee6e93-9377-47c0-9fe8-f49b435f50a9",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c561da9-05b6-45c1-b460-6eaf170b8071"
        },
        "item": {
          "id": "51b6fcf8-bc30-4a6d-8511-fae89859b2c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "84c5fc19-7eaf-49a0-a570-105a2867e286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc9e10f-7f82-4f3c-922e-70dd6eca0099",
        "cursor": {
          "ref": "ec86c53e-f833-470e-a601-f3f9e5050a6e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "62a81498-a07a-471f-af05-2032130e096f"
        },
        "item": {
          "id": "8bc9e10f-7f82-4f3c-922e-70dd6eca0099",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ebacd30c-8950-469f-ab7f-f4bda5e1af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8823fc0e-729d-4e70-8f8d-ed4c5ce7aad5",
        "cursor": {
          "ref": "598a0090-88bd-4fa2-a2c9-3e3da3914e2b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba956cda-6ead-4777-bf80-79e11504f6fe"
        },
        "item": {
          "id": "8823fc0e-729d-4e70-8f8d-ed4c5ce7aad5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c1875465-a20d-4262-9cbd-937c48d20ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac71256-795f-478f-8638-dc826953774e",
        "cursor": {
          "ref": "99b9bf9c-0324-4e2c-a7b8-b0e6ba0785c4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "02f03dc2-2329-4388-80fd-bdaa4def364e"
        },
        "item": {
          "id": "1ac71256-795f-478f-8638-dc826953774e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b326d0af-701d-4578-ae7e-8cfad5ff27a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab77cc6b-12af-4884-a643-93b5c3faad4f",
        "cursor": {
          "ref": "fb965f5e-2fb6-4153-9520-43ef32ae3d1c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b93ac0a2-7006-4852-b103-34b76ea949f4"
        },
        "item": {
          "id": "ab77cc6b-12af-4884-a643-93b5c3faad4f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4da4f1ff-3779-4652-afef-404ba74ed6d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "79268a89-2829-4542-adb7-2ae08ff33412",
        "cursor": {
          "ref": "59697332-5db6-44b8-a25d-046f97ab61b1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e89aea6b-6f9b-4aa9-a543-f3aaaeee41e4"
        },
        "item": {
          "id": "79268a89-2829-4542-adb7-2ae08ff33412",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0a013920-0585-4537-b29c-8a81c53e1554",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a9acf793-1672-4db5-8c4d-4efe65461d45",
        "cursor": {
          "ref": "38764f97-460f-42cd-a4b2-89e9eda7647a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c138aa0d-08c1-488e-80b7-88e4e410d7ec"
        },
        "item": {
          "id": "a9acf793-1672-4db5-8c4d-4efe65461d45",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "025b9ca7-583c-4ec5-a94b-4562afaf7ecc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "184186b8-1fab-49ba-aade-733ca8b2292a",
        "cursor": {
          "ref": "97cad1b0-ab70-414e-a169-373859eaeb1e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cc6fe180-244c-4f82-bc5b-d777e592f315"
        },
        "item": {
          "id": "184186b8-1fab-49ba-aade-733ca8b2292a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5312face-4096-464f-95fc-62b51352d1c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "3021b305-33e2-435f-b5ee-60d440c4cc39",
        "cursor": {
          "ref": "d1769905-20de-40a3-8f71-92f999e55944",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ec1f7e7c-ff48-42ac-9333-8238f7779155"
        },
        "item": {
          "id": "3021b305-33e2-435f-b5ee-60d440c4cc39",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3d8e7c19-d90c-42c7-975b-cbb1e9d54ac5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8beaaf4e-0086-470f-aefc-8f8604b92510",
        "cursor": {
          "ref": "47944f12-e3ad-40f9-9df2-b33c255b2bea",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "454882e5-9e7b-44c4-aa0c-60a39866d886"
        },
        "item": {
          "id": "8beaaf4e-0086-470f-aefc-8f8604b92510",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e1573a10-83dc-42bb-bc3e-996b9e6e3b6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "acb2161b-b705-40af-bad0-39efaab73633",
        "cursor": {
          "ref": "f2fb8247-e0ec-4146-ada1-0fd061001220",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "122d00b0-7dbf-41e3-acb4-9c8aa058972a"
        },
        "item": {
          "id": "acb2161b-b705-40af-bad0-39efaab73633",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "27b6a0e8-f1b4-414c-b32e-439178091618",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494bb4a2-d4a3-4a98-84ee-62038db92ad0",
        "cursor": {
          "ref": "b4696fe6-e8bd-400f-adbf-f233b6942d3b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4e82ba56-f186-448b-84a4-ac0049d6d2eb"
        },
        "item": {
          "id": "494bb4a2-d4a3-4a98-84ee-62038db92ad0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fb97995e-210d-4b10-97de-baf0c419b6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5865c7eb-9392-4ebf-9288-12c58c18979c",
        "cursor": {
          "ref": "e6df56f7-6f25-4037-a4c8-fd42a489be57",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "74ebe2a6-1071-499d-a4e7-1f6b4edf7a7f"
        },
        "item": {
          "id": "5865c7eb-9392-4ebf-9288-12c58c18979c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "77424653-5f81-45e6-840a-15e268bc59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45788550-8ab9-47e2-8f64-4bfcf5070f4d",
        "cursor": {
          "ref": "e98e5a11-9080-47e8-abe4-ad05f403f950",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b09e04d1-6925-4610-8dd8-92dec7666af1"
        },
        "item": {
          "id": "45788550-8ab9-47e2-8f64-4bfcf5070f4d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0f15efb8-dc3c-4552-8972-f8073c23efcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516ff1eb-158d-4301-aac4-5c1c5dcd1867",
        "cursor": {
          "ref": "841dcbee-b920-46d5-acad-1566600bda17",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3ca23a68-ba8a-4c79-aa46-f500c363ff3c"
        },
        "item": {
          "id": "516ff1eb-158d-4301-aac4-5c1c5dcd1867",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b6fbcb0c-12a4-4615-abc4-4b3b84b10fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4cc2c9-954c-4025-a395-7d9730dacb6e",
        "cursor": {
          "ref": "4733d671-daee-416a-b234-ea94aaea764b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5c6cf90f-fe73-41c6-8abd-09f7a2796346"
        },
        "item": {
          "id": "4a4cc2c9-954c-4025-a395-7d9730dacb6e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e81f0bf-f74b-4e4b-a7ce-914cabeca8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae5bd26-ef63-4360-a601-c377a8b973a3",
        "cursor": {
          "ref": "be3f4aad-bf18-45a9-87ca-8519c51fc98a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "458f7f58-cdaf-4e7f-bbe6-36ff367eae1e"
        },
        "item": {
          "id": "3ae5bd26-ef63-4360-a601-c377a8b973a3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4a8bc9e1-156c-40ff-8145-a96a34327c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127d4de8-9a07-40b3-9617-8b3624e3cb13",
        "cursor": {
          "ref": "40d40249-0ade-4425-9c61-b969b2fa6f67",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4fb9a0d0-8ceb-4fe0-9680-e4688450ecba"
        },
        "item": {
          "id": "127d4de8-9a07-40b3-9617-8b3624e3cb13",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d7965352-8703-4d63-9572-1cea7088ea00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f69bbe-282d-4d38-9762-06e1d55e4005",
        "cursor": {
          "ref": "38885f16-a560-4523-89e2-d271d477b59f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "98e34bd2-e152-447c-9139-c3fbed3c1e1c"
        },
        "item": {
          "id": "49f69bbe-282d-4d38-9762-06e1d55e4005",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25483cba-277a-46c5-ba55-d35da3314de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f660b0c-998d-415b-ba0e-1abd9fd0becf",
        "cursor": {
          "ref": "0e69047c-8472-45a5-8a91-1cd5903f896a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7a0d670b-3df8-4e86-91fe-931dd99a37f8"
        },
        "item": {
          "id": "4f660b0c-998d-415b-ba0e-1abd9fd0becf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3fc10b64-460f-4074-bd30-d07bef670e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13030f7-ea5d-4616-a82c-34c635181c7b",
        "cursor": {
          "ref": "851855d5-b165-40a6-b35f-0286a1a17023",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f83ff974-0c8d-48fe-81ff-d07ef3672091"
        },
        "item": {
          "id": "f13030f7-ea5d-4616-a82c-34c635181c7b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c0233c31-2d69-4628-bb12-e854970a0863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9970335-7c6f-446d-8043-9aaa08f13191",
        "cursor": {
          "ref": "8fa4bbda-81d1-4779-9b75-cddb8b1535b2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "89ddd872-45e7-453b-bb4d-83b5710ec8a0"
        },
        "item": {
          "id": "f9970335-7c6f-446d-8043-9aaa08f13191",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71fd893c-b4ef-4128-b833-4f7c62624988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847c9a25-92d0-44c0-ada6-285fa38dea15",
        "cursor": {
          "ref": "3cb3039a-b689-402f-8da8-e8fed7fcbe66",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "64f9537d-4afe-4843-a4bb-069f0441a568"
        },
        "item": {
          "id": "847c9a25-92d0-44c0-ada6-285fa38dea15",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8aa44ae0-32ba-4f9e-92f0-2f71b82b00d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5e7c04-015b-48b8-b346-fd12fda20c89",
        "cursor": {
          "ref": "1dd6f363-2cce-4c4b-ac79-9713ddaeb4d9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8315a4ea-85be-4a5f-9d7e-98495e8c31de"
        },
        "item": {
          "id": "fb5e7c04-015b-48b8-b346-fd12fda20c89",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d05a3e05-7018-4a72-afe2-9832b49b075f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ac0d6-3187-4f93-996b-ee57152cb8ec",
        "cursor": {
          "ref": "fc78e9a7-35f7-4d0a-a22e-ccd65065cba7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ab596a0d-4449-4027-b149-e00ba6a9aa1b"
        },
        "item": {
          "id": "4a7ac0d6-3187-4f93-996b-ee57152cb8ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b2a9461b-5efc-4c1f-9aa5-fec2bd5befd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e321efc8-ab18-429e-b373-0a73bfe7bbcf",
        "cursor": {
          "ref": "32db0bc7-3a20-4524-a4c6-3c198ca1a93f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6ac5a390-3e55-4c3d-ae24-8be75934dc54"
        },
        "item": {
          "id": "e321efc8-ab18-429e-b373-0a73bfe7bbcf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3703c1f7-f22c-4e40-9098-6764b4398235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54897eab-459b-4830-b394-c9355ab23d9c",
        "cursor": {
          "ref": "a881c200-be5e-4d68-9f24-401b4d043a23",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8aa94ac-5366-4836-b177-cf77066b6c3b"
        },
        "item": {
          "id": "54897eab-459b-4830-b394-c9355ab23d9c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9917b082-8d3f-4130-8aa2-37672a7b0d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6621140-01df-469b-a5f5-1472a4c08eb4",
        "cursor": {
          "ref": "80b72c77-778a-46e3-a931-a324e365c4de",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "218f8d81-a779-4963-83ae-d522d45bdcad"
        },
        "item": {
          "id": "e6621140-01df-469b-a5f5-1472a4c08eb4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1c6e0b28-c60b-4169-9f43-a791924ce62b",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "159bd8d9-994b-4f6c-ba9e-e5414aad5964",
        "cursor": {
          "ref": "3be8d19a-16a6-43c7-9eb7-6b4e80382e74",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0a8d1a7f-7960-4c01-a433-4dba93e1c019"
        },
        "item": {
          "id": "159bd8d9-994b-4f6c-ba9e-e5414aad5964",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9ef85f09-163f-4e0c-9a7e-b91090804724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76af51aa-391e-42e8-af15-00ea4f2e893d",
        "cursor": {
          "ref": "5ee6d6e8-3a32-44f4-8be0-1b648d2847e2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "857b4cdf-41ac-4890-929a-05ccc01568da"
        },
        "item": {
          "id": "76af51aa-391e-42e8-af15-00ea4f2e893d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4bad352d-a900-4cba-b4c4-2dedfc4bb949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3751955-bf0a-4f72-a926-f3409d136d59",
        "cursor": {
          "ref": "52bdc246-e95f-46a0-8ba5-df065e6f9ff9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f385945-81c4-4dd4-8fb9-c1db0f12cb7e"
        },
        "item": {
          "id": "f3751955-bf0a-4f72-a926-f3409d136d59",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "05f11f33-328d-4bcf-b5cf-1c01d6884fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204513d3-a3d4-4b2f-ba7c-5c6675eca35e",
        "cursor": {
          "ref": "174f53bb-3021-4f6c-a7eb-f75385c52ffe",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6ffd8cee-c366-4725-beb6-3f67c3a94698"
        },
        "item": {
          "id": "204513d3-a3d4-4b2f-ba7c-5c6675eca35e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3ca469b7-9d40-4e9e-ac09-e66fc1f251f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a95a42-47d5-4aad-8c99-6d4150aa6b4d",
        "cursor": {
          "ref": "41d93e0e-f247-4fde-a201-2707c37c6fad",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0af3801-e66a-4a34-a1be-f78be5d0f78f"
        },
        "item": {
          "id": "91a95a42-47d5-4aad-8c99-6d4150aa6b4d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "58ac50bf-0ba2-4bc4-86cd-3b22c094ebfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a871d35d-fdda-47e0-8b1c-56a44cf274e4",
        "cursor": {
          "ref": "b5da392a-5337-4794-86b9-ee69c4ec5088",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7f79c1cb-3b00-488f-ba9b-e4c11675083a"
        },
        "item": {
          "id": "a871d35d-fdda-47e0-8b1c-56a44cf274e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d9be2868-fce9-4236-a6be-f47834e35312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dced4b7-586d-403a-86f2-c21d3d298c50",
        "cursor": {
          "ref": "5b6b049f-d1e1-47e0-9391-ad843308ee46",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8508c680-f23e-434e-9766-7bbf3b602a2b"
        },
        "item": {
          "id": "6dced4b7-586d-403a-86f2-c21d3d298c50",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fc0ed895-6843-4bd5-a957-cc642c2e8b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff60fec-6fbb-4c02-afe9-dd6c5ba52ab9",
        "cursor": {
          "ref": "bf5d7ef1-76f8-4e8b-8251-21a687db8a3a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c73059bb-27a5-489e-9cca-1000debc79f7"
        },
        "item": {
          "id": "3ff60fec-6fbb-4c02-afe9-dd6c5ba52ab9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b2ddf405-dca6-4baa-b47a-35e663ddd395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634a1ec0-6f36-4d11-94c7-286f4b83287e",
        "cursor": {
          "ref": "645b5a53-c1cc-4c35-adb5-84551541da59",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b470e57-8b46-4b25-bd90-83b2cab7b98a"
        },
        "item": {
          "id": "634a1ec0-6f36-4d11-94c7-286f4b83287e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c70cda08-9e0b-48e5-86e0-9f3a3a046c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa58795-e24a-4545-94cf-3d8e46e58cdd",
        "cursor": {
          "ref": "56c7481c-09d0-43b1-b6bc-8035c01094b0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f4e3a684-b200-4bbc-b4cd-78bdd5ffa04c"
        },
        "item": {
          "id": "6fa58795-e24a-4545-94cf-3d8e46e58cdd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a6d32f40-ba7d-46a3-990e-6d368d73a7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d260da7a-f056-481e-9faa-158caa548b21",
        "cursor": {
          "ref": "ad2a2c1a-ce78-4d4f-be78-d9adb09e806b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a527bef3-d4b7-4109-9e30-49c6e52ced0b"
        },
        "item": {
          "id": "d260da7a-f056-481e-9faa-158caa548b21",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "885737b6-705e-403c-a3c0-4b74cc432518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344355f0-42f9-4031-a000-064eab0c742a",
        "cursor": {
          "ref": "0c9668b5-915b-42f3-b0b3-5ca8f3577f49",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dd6cf927-9358-43b2-b767-81973ab7293e"
        },
        "item": {
          "id": "344355f0-42f9-4031-a000-064eab0c742a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b45bfadd-32cf-4086-8160-bee4546e616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727d7b24-fdf1-4765-ab46-21c7df97933c",
        "cursor": {
          "ref": "9a912060-f7bd-45a3-a1a0-26aaeaf362c9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "103725bd-3e62-49fd-b165-3409620e5f9a"
        },
        "item": {
          "id": "727d7b24-fdf1-4765-ab46-21c7df97933c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "91b5d65a-d828-44cb-8cba-3f787f2c88cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19248db2-2f01-413d-a604-ca0827ba688e",
        "cursor": {
          "ref": "9b79a3c7-7a5a-464d-92c0-d001e1cd82de",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "098e8773-238e-4abf-8ac2-2f69c11470d4"
        },
        "item": {
          "id": "19248db2-2f01-413d-a604-ca0827ba688e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bf15d95c-ddaa-4e9e-a446-320bfaad3136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae088d0-23c8-4b26-a51d-e2589d859ae9",
        "cursor": {
          "ref": "0c0ca594-d5d9-474d-945c-25b4ce3a441f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a037de20-a188-4e44-97af-246a4274d0ba"
        },
        "item": {
          "id": "cae088d0-23c8-4b26-a51d-e2589d859ae9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d749226b-506e-41d0-8c72-ce38f7c4071e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59300a25-2955-46a2-86ac-cc2b1d781011",
        "cursor": {
          "ref": "29b911ee-09c6-4868-b48c-8ea4875b057e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a7c9bfa4-cf63-4b28-b35b-e013903f06d0"
        },
        "item": {
          "id": "59300a25-2955-46a2-86ac-cc2b1d781011",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c5506fae-ab05-4747-ae1f-8df5eb4bebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa72a68-f86b-4609-8b97-32b34a66ef5e",
        "cursor": {
          "ref": "1c4c1c7f-1c4a-4849-b928-ae2b47853b55",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0592efd0-645f-43c6-9d5c-75670eb337a3"
        },
        "item": {
          "id": "bfa72a68-f86b-4609-8b97-32b34a66ef5e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0398b933-6da7-469a-9f14-8b9d4c424003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4aa91f-d3da-4580-917f-c4c799ea238f",
        "cursor": {
          "ref": "36476ca6-43a5-43c8-a067-aec88204c173",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f8264adf-baf8-4301-a226-65bb8c94f052"
        },
        "item": {
          "id": "0f4aa91f-d3da-4580-917f-c4c799ea238f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ebdafff5-ab3c-4754-a25b-b910d773e259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4ce638-ae4e-4505-8e1b-26e10d927a8b",
        "cursor": {
          "ref": "6d35dbfe-ae41-4f0c-88c7-fa2ba62973a2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "63dab8f2-7b9a-4be5-8de7-036bad7c6f02"
        },
        "item": {
          "id": "3e4ce638-ae4e-4505-8e1b-26e10d927a8b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c7f83eeb-679e-4225-85ad-f1c381559e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18119327-f6c1-4188-841b-8d333757c17b",
        "cursor": {
          "ref": "6a0f720a-44d8-436a-9893-49d477f3e494",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "273da6ea-60c1-4dc9-8223-e78194f0bd09"
        },
        "item": {
          "id": "18119327-f6c1-4188-841b-8d333757c17b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f7945183-a95c-413e-a86e-f5457d806634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9836bf63-59ac-4eda-bdac-416bc4acd0e5",
        "cursor": {
          "ref": "48f2949a-ac66-48be-adae-b1c18eec5846",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "80551132-6a6c-4708-92bc-4df3294538e5"
        },
        "item": {
          "id": "9836bf63-59ac-4eda-bdac-416bc4acd0e5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "898a9a69-ccca-4b10-a9b6-d2b64c858866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1040bc-c8e1-4456-b618-7314b0f990ce",
        "cursor": {
          "ref": "3e0822f4-aaaa-4870-8572-20a9517df9e9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d6d02faa-bfe8-4820-803f-37e2b0eccb6f"
        },
        "item": {
          "id": "cb1040bc-c8e1-4456-b618-7314b0f990ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "596fc385-8e22-466c-a5f8-1532dd537a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6169bf-f0ad-4fd1-9a82-5ff96f2b42fe",
        "cursor": {
          "ref": "49ce463f-cc44-49de-a8e1-e5216aa85c2a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9396c181-9be2-4783-9adb-e35e2af25388"
        },
        "item": {
          "id": "6c6169bf-f0ad-4fd1-9a82-5ff96f2b42fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53a01e61-50f7-404a-bd57-c08eb17b7a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db42444c-3030-4d34-b653-ac3a967c808d",
        "cursor": {
          "ref": "980b61ed-29e2-4744-aa09-0afad6ee5009",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1bc2cb49-c394-44c8-98f2-c4325e544dae"
        },
        "item": {
          "id": "db42444c-3030-4d34-b653-ac3a967c808d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7573c20a-5272-4188-ae2c-6f7f867690c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8f10aa-46a7-44df-a574-b03d2662c439",
        "cursor": {
          "ref": "a1b769c3-c70b-454b-a9b5-d418d6ec129c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "66e23346-0e9e-40a7-8a0f-9854ed178e19"
        },
        "item": {
          "id": "7d8f10aa-46a7-44df-a574-b03d2662c439",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d1843f98-bc27-4211-9895-2c50592d49d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1615908-4470-4d18-8d62-1b4259fe40e5",
        "cursor": {
          "ref": "add52c91-3d28-4275-b5a9-e1378b3ab583",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1bf72f47-8353-43ac-9e44-0c8abd4bf803"
        },
        "item": {
          "id": "c1615908-4470-4d18-8d62-1b4259fe40e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2ca06f2e-ffd7-40fe-93cd-cf73787dc2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419bb18d-344d-463f-8d40-927bb73f5258",
        "cursor": {
          "ref": "f84be4b4-251f-48ec-8c5d-4d7395671805",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5fb7536c-34ab-4622-8f90-44878c32590a"
        },
        "item": {
          "id": "419bb18d-344d-463f-8d40-927bb73f5258",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a1eb483e-6319-4953-85bf-89293154eecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd848aa8-5008-4d03-8830-be2d33348181",
        "cursor": {
          "ref": "3d2b7251-d406-406b-bb79-3ceb8a27662f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "86850748-e742-48d2-9ec1-2960f1b259d6"
        },
        "item": {
          "id": "bd848aa8-5008-4d03-8830-be2d33348181",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4fd09eda-1e80-4fdf-b5c3-94d97490b7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a000af6a-14cf-4ada-a976-44c201ee44d3",
        "cursor": {
          "ref": "2d4b0cb6-8463-4959-916b-44f4b5b3e432",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80423a15-57e0-41a2-b59b-23e04cd4fde7"
        },
        "item": {
          "id": "a000af6a-14cf-4ada-a976-44c201ee44d3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ec0d1882-24f1-4fa2-9437-a9191c8a8e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91078dd0-2951-4ddf-bdb5-8faf7366da2f",
        "cursor": {
          "ref": "d64c629b-1d62-43fe-8e81-ef4cc74f09cc",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b4067453-e745-48db-907c-3fac7032d7f6"
        },
        "item": {
          "id": "91078dd0-2951-4ddf-bdb5-8faf7366da2f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b100ef77-1cc1-47e7-b3ae-10dbb2074de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b1b2bd-3384-4fb4-84e0-b4eb632bffdd",
        "cursor": {
          "ref": "c321d8c4-59d3-4be3-9fcf-8b198686d54a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "66dc15b5-795b-4dee-92e2-6b84ee32cae8"
        },
        "item": {
          "id": "84b1b2bd-3384-4fb4-84e0-b4eb632bffdd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c6d7809e-6cf7-4806-9af3-e4b4195b6c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960f6196-9e73-40aa-935f-788b24daf2b8",
        "cursor": {
          "ref": "2681b951-ea4b-49b1-9701-5658a78cc8a1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4d282105-ed52-43d6-9e31-309922965aa1"
        },
        "item": {
          "id": "960f6196-9e73-40aa-935f-788b24daf2b8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ff140c0f-1e3c-4605-b1b0-65c60a80d192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b13560-73ad-4ee6-aaeb-b7639bb5e223",
        "cursor": {
          "ref": "72d8f7af-0625-4f63-94f2-09f9d527d3f6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e8a4ff0-959f-498d-9f84-2f29e81c65c7"
        },
        "item": {
          "id": "59b13560-73ad-4ee6-aaeb-b7639bb5e223",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "517f2a85-418a-4076-b19c-c4e41a233898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44ec71b-d2fe-4fe5-82dc-7689a45c19a4",
        "cursor": {
          "ref": "683d51e2-ad40-44bd-be36-0f7ed3e8bdbc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8fcea3cc-4a06-4020-bc7e-fb9c076dce7e"
        },
        "item": {
          "id": "d44ec71b-d2fe-4fe5-82dc-7689a45c19a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4f9c8fd-75b6-4149-9813-3c76e857be66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a974f863-b8f1-4de8-adbe-4e9d82418b1a",
        "cursor": {
          "ref": "6e16f2b3-68da-4b0e-8333-4b94c9ea0d93",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4d4e1ca2-2980-410b-86a2-16dd76e6ba02"
        },
        "item": {
          "id": "a974f863-b8f1-4de8-adbe-4e9d82418b1a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7b879772-f8ea-4558-8477-fc0e8806726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72d4bd4-50af-4f68-bf30-57064686fcc6",
        "cursor": {
          "ref": "8fa6de4f-8ee8-45ff-8842-b0ce73328e22",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e7e1dc53-549e-4657-b686-e1d6581e6902"
        },
        "item": {
          "id": "b72d4bd4-50af-4f68-bf30-57064686fcc6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "915820f1-f809-42d0-95c0-1c8250f7f9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e8afca-6bec-42cc-b033-3b5c2460f950",
        "cursor": {
          "ref": "d064f356-bdde-49bf-8b3a-52eb16f53ca9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c62c988-ed90-44d6-86aa-7198aa51f965"
        },
        "item": {
          "id": "b0e8afca-6bec-42cc-b033-3b5c2460f950",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "940f8450-5511-4d3a-98b2-5192cd434418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd25f0-ce70-4269-a321-5ef92be5fb7f",
        "cursor": {
          "ref": "85a3cf50-728d-49d4-b8eb-a2635cd82426",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dd64784b-4e92-4f5e-9e01-62cc8e39ce28"
        },
        "item": {
          "id": "e8cd25f0-ce70-4269-a321-5ef92be5fb7f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1b908456-acec-4ea1-ba33-016ddb764fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291a0788-4519-406b-9a98-ff5668ff1406",
        "cursor": {
          "ref": "dffc29b4-7163-49b4-8f2d-689b5665b212",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "425e5480-4482-424b-868c-21e1ce1cac22"
        },
        "item": {
          "id": "291a0788-4519-406b-9a98-ff5668ff1406",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "27b9e9ab-0efa-4706-aae4-e4fb1cce3fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999fb429-75a5-4652-a4d3-7366ee34b4ec",
        "cursor": {
          "ref": "29703396-a2ff-47b5-8573-eb5567b7efb1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "383696aa-08af-4511-9eb7-7397cdeab68a"
        },
        "item": {
          "id": "999fb429-75a5-4652-a4d3-7366ee34b4ec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3184e14b-9c49-471e-acc0-f52a174718cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be3a29e-a05e-4d77-b1da-7fce8dcceacd",
        "cursor": {
          "ref": "3722cc9b-8752-4d35-92c5-2175a2cd9389",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9b1ebe8d-5418-45bf-949b-10d9c4f8175d"
        },
        "item": {
          "id": "4be3a29e-a05e-4d77-b1da-7fce8dcceacd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9692d511-73bf-4270-bdd0-7181dbdb030e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b43710f-f6a3-4b7e-a994-25e0995a1269",
        "cursor": {
          "ref": "a8d5ba6d-7b13-403e-9ff5-c933e3673c83",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "be02e901-d7bc-4a0f-990f-bbc05ba6d464"
        },
        "item": {
          "id": "6b43710f-f6a3-4b7e-a994-25e0995a1269",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "567cc9ea-7342-4129-b73c-1ae85c6c0f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59278bfe-f379-45c8-9080-548a58ee443d",
        "cursor": {
          "ref": "0e7a8171-65b0-49cd-80f4-55ec2b8e827d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "931b6e5b-cdf9-4999-955a-9af6fced4a44"
        },
        "item": {
          "id": "59278bfe-f379-45c8-9080-548a58ee443d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0fc467ee-f49d-4b07-922f-27214f63ef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2be55c-880e-47e3-bd78-792eaa1e8a1c",
        "cursor": {
          "ref": "fc0795cc-0d9d-4384-96ca-c802b9053374",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d1c1b70-c988-48bc-a67d-534804a16ff1"
        },
        "item": {
          "id": "df2be55c-880e-47e3-bd78-792eaa1e8a1c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dc57ff66-cf86-4a8a-8a97-f28e7587dc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e46a95-39a0-4697-b117-2b4aff09e0f8",
        "cursor": {
          "ref": "0d6a0bc4-62ee-4859-8d19-dbae5a1cb607",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5927f164-ae23-46d4-ac02-098b85e17117"
        },
        "item": {
          "id": "17e46a95-39a0-4697-b117-2b4aff09e0f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7dcebc21-b1e2-4e5c-80a5-e1138d093ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aa90e3-e972-4b48-94c2-e9aef2fbdd51",
        "cursor": {
          "ref": "0cf091b4-d7f6-49f8-9667-45dd83dbcbb1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7bfe72c4-60f0-454e-9f44-dfaf922a38fc"
        },
        "item": {
          "id": "d7aa90e3-e972-4b48-94c2-e9aef2fbdd51",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f47e1ee0-c370-42a7-9e9f-2d7d82a819dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9505f288-8c60-4ba4-81a3-029ecc6d3d5f",
        "cursor": {
          "ref": "cfa5523b-82ab-4050-ad79-ba58d0775683",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7f0cd65f-7377-44a1-a2f6-eb3da86d24e6"
        },
        "item": {
          "id": "9505f288-8c60-4ba4-81a3-029ecc6d3d5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b6e9163e-946d-430e-8022-6b6ec148e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650231b2-c4a5-4190-a80d-f9f9120b200e",
        "cursor": {
          "ref": "7122c7cf-bcbc-4120-98de-12ca39c51a90",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "98102edc-21ea-426c-83f0-78240040a293"
        },
        "item": {
          "id": "650231b2-c4a5-4190-a80d-f9f9120b200e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "207dc956-f2df-45d7-8674-c931e1319591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fd4214-2209-460a-aefe-b1d7b3ccc125",
        "cursor": {
          "ref": "cae62552-7404-4908-9622-9146cc352d78",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "42e65687-a116-422e-a31c-956f26014f9a"
        },
        "item": {
          "id": "59fd4214-2209-460a-aefe-b1d7b3ccc125",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "561aad7f-c6f7-410f-acdd-08b77bcae0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb4eefe-b6f2-46f4-8a9f-5e8aa8cf7154",
        "cursor": {
          "ref": "816b4037-953e-42ac-a883-38e89c5b55e6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22cf618e-0d16-4599-9564-65137b8b1410"
        },
        "item": {
          "id": "9eb4eefe-b6f2-46f4-8a9f-5e8aa8cf7154",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1860f9bd-4502-432e-8469-5e652baf0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1757695c-6c3d-461e-a467-faa2d134faea",
        "cursor": {
          "ref": "7667cab8-2fb1-4633-b54e-c48815dbbf18",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6c1f7f7-0fea-441d-be7c-2f54b63239c1"
        },
        "item": {
          "id": "1757695c-6c3d-461e-a467-faa2d134faea",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ac6faad8-108b-4d03-9390-d9e01dd398b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9cfbdc-0046-4f9e-9407-f4e38d8f1f9c",
        "cursor": {
          "ref": "7c55be11-5975-4165-b2fe-669fce84f90c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a6ab90d-a7ff-48ec-86c7-06665e9e1033"
        },
        "item": {
          "id": "1b9cfbdc-0046-4f9e-9407-f4e38d8f1f9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6519dee-a0bb-48c9-b17a-86697d244990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4767ce4-41af-4156-8588-e487e5c91947",
        "cursor": {
          "ref": "49db8a01-09c2-48e0-9fc5-5266df65bfe9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a359419-453d-470a-a8a5-4d845726b733"
        },
        "item": {
          "id": "d4767ce4-41af-4156-8588-e487e5c91947",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "634f861c-35eb-4e33-a33f-75149d9dc4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983aeda-ab10-49d9-bee5-e7585d1a8e08",
        "cursor": {
          "ref": "4ed51cca-f114-47cd-b0ba-e243ded23003",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13ac706f-8af1-4198-ae00-922f963ddae7"
        },
        "item": {
          "id": "b983aeda-ab10-49d9-bee5-e7585d1a8e08",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0175b6bd-2f5c-4d2c-b2ab-e261bbeab2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf586e5-416a-4cbc-b91c-460234194919",
        "cursor": {
          "ref": "830cde4d-bc76-4fe8-b25b-5e1033f82819",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "146bce1f-211a-4d00-a5b6-20f25eeefba2"
        },
        "item": {
          "id": "caf586e5-416a-4cbc-b91c-460234194919",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "09b13d12-6020-49e5-b9a8-369cf418b709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a969c0bf-00ef-48d1-9e92-b725508eaae0",
        "cursor": {
          "ref": "66031063-d562-41fe-917a-ca7acc28cfdb",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "60bc1e23-797d-4ac6-b233-770cd44b6e60"
        },
        "item": {
          "id": "a969c0bf-00ef-48d1-9e92-b725508eaae0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4bca331d-9139-41bd-8964-99a68e8fb097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40e07bd-5ff0-495c-ba7f-3664554c9605",
        "cursor": {
          "ref": "5409bb1c-9a3a-46ca-8ee2-ae7a6b716393",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1a7a45ee-e388-4319-b940-70f9bb84879f"
        },
        "item": {
          "id": "c40e07bd-5ff0-495c-ba7f-3664554c9605",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "38794030-5a2a-4574-b9b4-7bae6e08a88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f9e1b-9282-44a0-955c-fb59b7cc4d9c",
        "cursor": {
          "ref": "e29aac6e-234a-49c3-98b9-e433c2d07b7f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6b549361-0756-4e93-a60a-f8e0b9ea9ab8"
        },
        "item": {
          "id": "bb7f9e1b-9282-44a0-955c-fb59b7cc4d9c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6cce01eb-5be0-48f7-b507-cb82f63b1902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1525173c-d415-4060-b479-e39e39cc4ccc",
        "cursor": {
          "ref": "73e5736e-489d-4e11-866b-029bc325ac1c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "408fc8d3-cc17-4d89-8a6e-993469b2a186"
        },
        "item": {
          "id": "1525173c-d415-4060-b479-e39e39cc4ccc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e33abf9e-1b9e-485b-8851-903840f7be6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13366184-8cb9-4eb2-b573-e5b3379a4627",
        "cursor": {
          "ref": "f49ed94e-78ed-4c04-b5ee-f9a1fdeb57c8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04ac985f-7766-4167-b744-e69d86142e9a"
        },
        "item": {
          "id": "13366184-8cb9-4eb2-b573-e5b3379a4627",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4aad36e7-0326-4dfe-8211-8b605b948c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b0e82f-e638-477a-b863-070fa5357a95",
        "cursor": {
          "ref": "60b49047-7081-452f-97db-a69293a5ccf2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "65a3af90-dd8e-460c-bcef-23d19431a65f"
        },
        "item": {
          "id": "a1b0e82f-e638-477a-b863-070fa5357a95",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cf3b859e-6200-4417-ac63-a7c08f57e685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73ca0b8-e968-4b55-81d1-2c5c0395122e",
        "cursor": {
          "ref": "d99e5999-6f12-4285-88d1-33640ec82b87",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6692d9e8-ceed-4530-914b-0217e870e891"
        },
        "item": {
          "id": "a73ca0b8-e968-4b55-81d1-2c5c0395122e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b2d0860a-d3fb-41c7-96a6-6a90974c87f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956b96a-b51f-4b92-86c0-c9597b3b6abf",
        "cursor": {
          "ref": "82a08648-dc28-44fd-a5b7-d23fe93b0ef3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "14bbfb21-0500-4c00-90da-db7a3a170148"
        },
        "item": {
          "id": "e956b96a-b51f-4b92-86c0-c9597b3b6abf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "84053251-df57-4b11-af87-9aa2e1a59f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecc7f48-4e23-4720-8df5-f19d4c58d3fa",
        "cursor": {
          "ref": "62087b4e-e684-4a05-9d46-66e2d187ad0b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2c74cd72-e576-41a8-8529-a28054c91192"
        },
        "item": {
          "id": "fecc7f48-4e23-4720-8df5-f19d4c58d3fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92f855c8-c06c-4dab-a8c4-c7d7ffa0ed38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de378d6-4d0b-4f5c-9bf0-8f853e162e4f",
        "cursor": {
          "ref": "f8cb2dfa-ece7-41fd-84f1-acd068658edd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "74434c7c-6b74-47ea-8f5e-7bd5833b52c3"
        },
        "item": {
          "id": "1de378d6-4d0b-4f5c-9bf0-8f853e162e4f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "034324fb-5fab-47f2-b6a2-e0214a85d7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4f2c5-6577-4a6b-a037-d31d52d1a5bc",
        "cursor": {
          "ref": "e6f529a6-f699-4101-ae62-4022a46f93ad",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0ee2336e-7a1a-48e6-9b91-fde97349b54c"
        },
        "item": {
          "id": "b7d4f2c5-6577-4a6b-a037-d31d52d1a5bc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e619e76f-15e0-42dc-a7ea-18005c2001f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d9e1e4-1a45-4564-b2d2-ad284fedd64b",
        "cursor": {
          "ref": "a02e6c8f-2df1-4f7e-9d82-d5116a7e30e1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "07443d3e-8900-46a3-9461-2e8b9d2f149b"
        },
        "item": {
          "id": "81d9e1e4-1a45-4564-b2d2-ad284fedd64b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d03b63de-5f5e-4920-a0a3-824747e3cce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a49926f-8933-4ba3-aaf0-f7572ee35a28",
        "cursor": {
          "ref": "f15c5a75-095d-4a03-b514-0537415fcddd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c776bbfd-541d-48f5-9c45-a6d65e65ef6d"
        },
        "item": {
          "id": "7a49926f-8933-4ba3-aaf0-f7572ee35a28",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64f823d1-0310-4c6b-95bc-7c04fa7dca56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63379a2a-ab5b-4ea9-8ee0-89477b93caaf",
        "cursor": {
          "ref": "3424f6b4-2180-4e1b-a6c0-8fd614d063fe",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "29e5effd-129c-4aa2-b9e0-8ec776b46996"
        },
        "item": {
          "id": "63379a2a-ab5b-4ea9-8ee0-89477b93caaf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7c6f7a68-05d8-4ea7-9f31-8649a6862949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af9aba3-58b4-46b8-adf1-6f3b88a8ecea",
        "cursor": {
          "ref": "3393fa26-329a-4182-b946-38f6d11dc992",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "35651db6-96f9-40bf-b95d-f6ad64665821"
        },
        "item": {
          "id": "2af9aba3-58b4-46b8-adf1-6f3b88a8ecea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dc4103b1-c6b8-419d-ae92-59bbb4b487fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681e2158-9ed2-466b-a2cd-674740109994",
        "cursor": {
          "ref": "f58d18bb-5c1c-4c73-ac3f-c96d28a07ab8",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2014324d-3b3e-4af8-bf48-44f7fdc35306"
        },
        "item": {
          "id": "681e2158-9ed2-466b-a2cd-674740109994",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cdcb5570-2bbc-4992-ae19-7cd6a3f2e492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4436a02-d8f2-4c52-b991-c4710da9e7c9",
        "cursor": {
          "ref": "d748600c-6ba3-4af5-bae8-18462f56f1ed",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "36f98325-8546-4ba5-bb5c-ee94ae85a5f4"
        },
        "item": {
          "id": "a4436a02-d8f2-4c52-b991-c4710da9e7c9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "082c8258-7b8c-463d-b089-13e4e94c4279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d57cfb-0144-4aff-8e53-709798fc20e7",
        "cursor": {
          "ref": "e629e80a-eaec-4c8c-a0ec-26cc8a45bf7f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "301d38b5-f277-46c2-90cd-e82a9a505fab"
        },
        "item": {
          "id": "88d57cfb-0144-4aff-8e53-709798fc20e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42ad1932-57e3-428b-8bfe-6b53a31add57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d60c3-9f0c-4928-b144-4c125f208ace",
        "cursor": {
          "ref": "3bf7c99f-7665-4bdb-93f6-511318bf0214",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a935fa4d-a7bc-41fc-aad5-ee6fa51f20e3"
        },
        "item": {
          "id": "b94d60c3-9f0c-4928-b144-4c125f208ace",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2a98be22-33cf-453e-b5b4-c4903e1882c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d4d410-7ed9-4280-941f-7f28e7e1c91f",
        "cursor": {
          "ref": "c714b47b-8189-47f1-8fe9-41c411d43b86",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bc814142-8f90-4f0a-bdb5-3d3924c46c4b"
        },
        "item": {
          "id": "72d4d410-7ed9-4280-941f-7f28e7e1c91f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e09825c8-3077-46cd-ada9-1c507e6baa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a076f0-56e9-4dc7-986f-5aef9fedf664",
        "cursor": {
          "ref": "1a546e3d-0d41-43be-8689-8ad521a8a9ea",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "02305256-937d-425f-aa46-22e4aa519a59"
        },
        "item": {
          "id": "39a076f0-56e9-4dc7-986f-5aef9fedf664",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "152f9a7c-6af7-4656-85e5-8d7a288325a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0357f0db-18df-4bcc-af3c-0875ecd11b53",
        "cursor": {
          "ref": "28e858cb-b39d-469a-a5fb-9c9cee49bb0a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "641d041f-bae0-480b-90d7-0399908b2fa8"
        },
        "item": {
          "id": "0357f0db-18df-4bcc-af3c-0875ecd11b53",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9889beeb-fcea-409e-a1f1-0842d15c2173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0158bfe-a231-4cad-8b38-88f95b43afdb",
        "cursor": {
          "ref": "efe300be-d717-4a84-8134-8330b5eb5351",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e2f609ec-62fc-4b57-a32b-13cb302b4d8b"
        },
        "item": {
          "id": "f0158bfe-a231-4cad-8b38-88f95b43afdb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54d86772-cbca-4c52-9e40-e714765246eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144fa7fc-3f44-4763-8d9e-b1f7d52c91c1",
        "cursor": {
          "ref": "36a92a7e-c24b-4241-a196-b0995c0fdcb4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f4bcc7a4-db38-4f89-b3ec-b9e27316c255"
        },
        "item": {
          "id": "144fa7fc-3f44-4763-8d9e-b1f7d52c91c1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8ddb0caa-73f1-4a51-ac6c-7f7d3a1d0bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a873cf-0917-494c-95a3-efb361a8279f",
        "cursor": {
          "ref": "f02db48f-3992-49e4-a5ce-c3144c06ef57",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ec273f8d-655f-457c-a21f-d9efac26c430"
        },
        "item": {
          "id": "a1a873cf-0917-494c-95a3-efb361a8279f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "42196587-a199-4f4f-afc2-a8645298d5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d258f706-0b06-49a3-81af-c6fb7a42b302",
        "cursor": {
          "ref": "04bc1a2c-14a3-4b7c-8aa3-50bdf9ddc1f8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "24a61c98-4206-40ba-bdeb-a9629d6b9b28"
        },
        "item": {
          "id": "d258f706-0b06-49a3-81af-c6fb7a42b302",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ccec3946-e5e3-47e5-b8a2-664f65ac4ee5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1e7468-935e-465c-8d2f-5af4acede2a4",
        "cursor": {
          "ref": "3f3aeebb-4b95-4670-a5b2-a4cc52620b16",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "18c2a587-cb11-445f-9941-39a6a1c96ed4"
        },
        "item": {
          "id": "bf1e7468-935e-465c-8d2f-5af4acede2a4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "29948268-0594-4675-a76c-d35fa11c3f5e",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f667e-fc6a-42cc-ab33-e541304d2bb8",
        "cursor": {
          "ref": "9d657540-6d8d-4db4-a296-113aa7c088d8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cb2d4cca-1c37-4ce6-80e1-fd6bde81a49b"
        },
        "item": {
          "id": "2a4f667e-fc6a-42cc-ab33-e541304d2bb8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "77409cc4-7185-474f-85c6-d7ec2b9a72ee",
          "status": "OK",
          "code": 200,
          "responseTime": 2467,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa9671a-6812-4011-8e29-e596aad74d07",
        "cursor": {
          "ref": "494f58d9-6216-487c-888d-b53ca53f4571",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1d7f2a3a-5023-4189-9184-b67b8180f615"
        },
        "item": {
          "id": "7fa9671a-6812-4011-8e29-e596aad74d07",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "977b7626-9763-46f3-88bf-44a98c311a82",
          "status": "OK",
          "code": 200,
          "responseTime": 2639,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31eaa52-f467-4f93-880c-970ce465bd1e",
        "cursor": {
          "ref": "762516c0-aee9-4a4f-b526-373536b19777",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c516b3fb-2e29-4fcc-b761-f8378d8786bd"
        },
        "item": {
          "id": "f31eaa52-f467-4f93-880c-970ce465bd1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe0a064d-cf87-437f-8148-ced4d3f2617c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31eaa52-f467-4f93-880c-970ce465bd1e",
        "cursor": {
          "ref": "762516c0-aee9-4a4f-b526-373536b19777",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c516b3fb-2e29-4fcc-b761-f8378d8786bd"
        },
        "item": {
          "id": "f31eaa52-f467-4f93-880c-970ce465bd1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe0a064d-cf87-437f-8148-ced4d3f2617c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60033030-5a89-46c2-82e5-9340d8c3b7f1",
        "cursor": {
          "ref": "7bc28dee-e557-4d87-aaa6-52cc0a637116",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "334ee855-43ec-45d1-8817-f0737e9c68e1"
        },
        "item": {
          "id": "60033030-5a89-46c2-82e5-9340d8c3b7f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "90a88bae-0d46-4a73-8d42-af7d002f1ed2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d16ab-c30f-40c6-9496-8e1a1a7f33d8",
        "cursor": {
          "ref": "6e1ecde5-5af9-44f8-91b9-514fc08c5467",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ba3c798e-ed8b-4278-8abc-c3849e130a95"
        },
        "item": {
          "id": "4c0d16ab-c30f-40c6-9496-8e1a1a7f33d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab25fde3-5ea2-4fd0-b792-5a4a62405a7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}