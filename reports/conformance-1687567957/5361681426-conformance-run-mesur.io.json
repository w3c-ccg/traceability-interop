{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b3a8c1ff-c4ea-40bb-87ec-b21bee7ae129",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4d2ffa1d-7588-4484-ad0c-aadd099b7ea6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3529a6ba-d86d-4277-aa75-518e2a1c3646",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "62415f05-45dd-4448-9202-6678768ec7ee"
                }
              }
            ]
          },
          {
            "id": "0942a7c0-7fd1-4057-b627-71642da6fe66",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de9f95e7-77e4-4304-b271-803ee9c95ed5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c335a316-98d4-4daf-be59-2c3b3a0b2adf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3aa7cb27-9a59-487f-9135-317e4c47bf16",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6163189d-03e0-4b53-a105-58fa42260a64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d31a0df-84cb-4908-882e-4a677731c2cc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad9480f-427b-46b7-a0a9-b45076fa6023",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00784c66-68ef-4002-a208-237d3c8c60d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9668151b-5183-4df7-bea9-979ff56c6f64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4544374b-d186-496a-94f1-d72e57ed7d72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "caa8432c-2060-4218-aab4-469a405d0c09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ca4dfc5-de88-4f9d-95a2-68f4a4927640"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6ec6c2-3a1b-4d1f-a238-35ef54683c92",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "83ba24e6-3acd-4d5c-9a5d-bf9c740fd87f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49733245-1100-4a27-a03d-59e03e745c5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2b195f2-a6ea-4c66-87ec-634b646aeba0"
            }
          }
        ]
      },
      {
        "id": "19ec5b0c-de34-4644-8112-623f38c6d14a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8c28c709-cfe6-4358-9f3a-b5581f4e4f95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58272352-0176-4cc6-be48-521f0976b14c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08257e36-58fd-4e43-a515-67f3f24c84b1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb5a7ce-a8b1-4000-830a-431ffee899cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8183c7e2-2f79-4e5d-b57c-7004b41fd459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d587b-95ab-425e-8b6a-ff68956ce65f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370f006d-ca2c-4817-8637-d581934d9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ecb25a-277f-452b-a859-ddc46d755fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd9ab8b-0713-482d-aeff-f003b6d2604b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50651dc2-efca-4ac0-bf2b-c4145652707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f8450ed-95b6-421b-aac8-c72f2190a232"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47fc921c-2105-494e-8c85-b115292886ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1bfdd4d-1304-4590-b192-5dc450a5e9be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2d3f77-af63-4a5c-aea7-14a0b721c106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f77c6e-0cba-4dec-bf67-820261aca7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a0a6f-3596-4635-8b01-8577237264ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6014c6d5-dc6a-4bb5-b582-53633fcd909d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "230ea56e-6adf-49cc-adc3-669479df58e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e57719a-1400-4594-aa6f-dbfee695f9a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83d8c7c2-ccb4-4f90-8480-4bd37b1cb017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "77236fb1-c8ae-43ce-b625-9f6bd405b486"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5e1ee34-b9ba-4565-a0a1-dd4fba1e6922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a13baa92-be97-405b-9ec6-4b078873ff64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69049189-12d6-4caa-afe7-3154ecc68a59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9855684-b219-4aed-8d84-e0c77de76042"
            }
          }
        ]
      },
      {
        "id": "636a5c82-85af-47dc-b0dd-824c238a7423",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "820b6f67-e23e-4694-9d4b-bafb4524242a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2c78d81-9b53-4383-9fde-ec893aa13559",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d29979a-0fa5-4710-b96e-02c9307e997d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbce499c-749e-4a3b-86b6-8bbf6d742185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16303d8-53ef-49de-8286-d13f7e2da7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93b84e8-42b6-4873-8467-f4f645f58735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c88c290d-fa46-4d34-978e-9350d28e4340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11776a-c7a6-4b81-9cd8-6556c16c82b7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2926c73c-5d17-45cc-9947-42c7f76b1734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693adf10-c89d-433a-96f6-5e5bbf5c0f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfe5a79-2458-4196-a5b5-d32914ac9607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "236bc58b-5f9a-44e4-82ae-0063a3535b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b6b625-3c99-4d24-a84a-5c9806b072f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb5bab-257e-43f1-a732-c1f333aea625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b606ff00-0530-491b-b239-7ced2d658a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee547f91-a3d6-47dd-aa12-3b44d5688cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de8506ea-de38-4cd7-a90e-db2c42851064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09880d31-baec-4d3f-b42c-7fbe1cf0558f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234b76d9-19de-432f-a76d-54b567215334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f00375-2e1e-442e-9d4e-2644ba562803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e765ac6-ecc3-4684-999e-095018aee650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd2bb26-f9dd-4143-8950-c068fb7037e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1cde13-c863-4991-abe7-cbdcc946a917",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b348aec-2473-4932-b2d7-c1ecd6b072e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c0203d-646f-44f5-9b03-8d3782933c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5f989d-d5df-4568-81ac-6f22e05b814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb62cc94-5af1-402f-945f-fb4cb1f99a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b85c54-d24f-4808-8577-d6c5830cd7f0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dc21a3-2d1b-41db-baa2-f10fffeb1a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2610bf66-0b03-4373-be56-ddf351de4eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62466cc-331e-4d23-9ff0-977418a8532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac5743e-194e-407a-a7fa-3038ac08c00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5050b82d-e8dd-4e86-ba73-a3b7801e74f5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d370c1-4c21-42f9-86d3-495e328e1d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd910e75-ba75-4a82-b6d0-6e88b842b213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb452ed-f101-4ab0-be79-c6c2771d8178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e20963e-0043-4086-8129-7e2733cddb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad4c152-ee95-41f9-9679-d5e519108e18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f867c8-c1a9-41ce-b667-5cbaee851cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20ba3ab-93fd-41f9-8af5-53e715ba6300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a02a2c-8777-4be6-9154-4338dae147fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc39b55-c9fc-4cda-9390-9191c558c812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3926611-8e9a-4fc0-9a46-db066be8c213",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d20cea-6014-49a6-8bea-013ecc2d58c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369c9ab2-c545-434c-b830-67882d2435e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1140de-d500-4e7b-b7b5-8acb5bf3f7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c7ac6b-c4f8-42b3-8341-1f1028bc54fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bc0d8b-017a-4e7d-903f-a0e4ede3429c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bfe4a1-3c7d-4f66-9148-e19282592d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be34950f-8329-4da1-be84-b0262aa1e8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da50f5a3-953b-48b1-9e1e-e3d8afa0ca24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9efcf60-81ee-43c6-a0b3-8ddb999641f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2081cb09-704e-4663-8e02-940b2b6a2cc4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef857d99-c7c1-4778-acbe-60ce92da7b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbed42c-27a3-4130-a746-01bcfc4c9088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3869c738-cefe-4b9f-bc06-e0a3b8ff1465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e40bf18c-0d8f-4bcb-b851-531d7ee88f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d1e341-f968-4724-9ab6-7d60d9a36c03",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1781852-72e2-4f5c-8438-84732ce88a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c08689-2f86-42ab-b761-3daa9270255d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d38317-94e6-4cf8-a231-86de3e50aeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6951f752-1f8b-4508-91e8-e6cf567f8b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148c7c83-6493-4fe1-ba9d-3436eac7c629",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a82d2b5-2b35-4b48-8bef-3e20066c0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4232656-7f7d-41a3-949b-62222181f6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fcab15-ef9f-4826-9cc7-8ecaf418c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d875d79-9e04-404f-820b-36a2856e4e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206eeffe-c9d0-45b7-991c-c4e7ef798066",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b44847-31df-423c-84e1-6b8907325774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2adb2ee-fe6a-4b2b-9611-8c55e85a110b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8c62e-f94f-4bb8-92f0-a42ed3c6ec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1a0cca7-6ed5-4636-a6f8-454a0dd45013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4726c134-fb66-4cb9-8dc9-4446886fb597",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d380aa9-edf9-4e80-9561-39b59b930b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeed8946-e255-4390-9dff-fe9703540a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc708ea-71a2-486b-b73f-001f0960a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77965144-c381-41c7-a808-a515e02d79da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0826cb9-4428-47cf-8505-5a1865e5799f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa4bd0b-b2fb-458b-8a7a-0169a4bbdd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505595db-9bc8-45bc-b50e-103d61c54155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af522d5f-bc08-4529-8713-779ef9c50e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46460c6a-0e2c-40b4-8a7e-2ac2f0d8b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5522cb92-4e76-4cf8-8a80-6344d87f5546",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1cfad4-2324-4c5f-bf09-1ba07da074dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f5063-6c03-43b2-b080-03559aa31cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ea842b-60ac-410a-8721-3b9081767f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f71c9bef-d84e-435a-81f6-2e4aea451e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6619f5e9-46ec-4a6a-a9e9-a6926fdce6f8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f79f5fa-4b46-4e02-83fc-f2cc88b072df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8a8a9f-b8d5-4a01-baa6-afabdda65517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81c40b2-bc8e-4565-8c1f-8a4eeda3a492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be074b3b-5305-46f7-862c-461ffe13a43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f237840f-efdf-444a-824a-c716badc052d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bfa5b2-50fe-4ea8-a69f-e6d0a016ef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc4982e-79a0-431c-9f10-e213a412aca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3349eaba-aeff-4e71-b85c-bc749cd2ffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0238a377-1716-4dbc-97ba-531cc0b00647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c99ea69-6dbf-418e-973d-faf446121359",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3746ce8-d417-4f56-9510-42e7bfeaa539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526b0216-9d24-4690-9b8b-8e6c343164b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a5aaf4-63d5-4f80-a6b2-69fd62f18f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4b0921-1392-4981-b4f2-42bd222c30b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178f8965-a93b-4cc4-ba54-1866bf10f271",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397bf043-2932-454e-adc2-f8efb6c564fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0998bf3d-6989-4dac-b4d6-22e7bf80cbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4abea7-241e-4210-a0dd-dc6d8ea2d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad516ee6-dbc0-40ce-8c3e-ceda238bea8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c983b3f-03cb-46db-abb1-ae5689581e84",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b98e3f-8649-42bf-981a-62ce8f26eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954f90c-67b3-45e6-9ecd-96cf4e799a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea402863-8838-424f-bab7-66ac22cbaa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4882f1f-01b6-43aa-bf1b-cd8ae2c9f448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2582d-6ba5-4ff2-9f03-e622044f9e07",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9f0116-171c-4e8d-9422-9da71dc3388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970ba69b-1b61-47fd-befc-0fb891b42c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f7ad4-dbbc-48a2-a283-3ba0d5d4441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a32a133-dd5d-43a7-bf35-2fdf5b763981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffad9b8-952f-4578-881e-25abfe70374c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02adbb68-7886-44d6-aba0-494daf851489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bdaa42-42da-4e8b-a540-2eebb8cbd5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe41ab02-b2a3-434a-9593-5dd31991878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5264c0ce-ad77-40be-acfa-7d566a6275ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c27d05e-7217-4553-8336-6d94b2fffc67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b1117-08c9-4941-bf91-3308d7529cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9300921a-831a-45cc-b580-15c1aee461c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9a69c4-c879-4219-b310-fbc8a97481f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef31926d-ffd9-4607-985e-329286b19c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e582fc10-247e-4a15-91b1-33736e98b85f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f4bdd-ea38-43c0-9662-9fc71740eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ac7d03-0b26-49e9-b640-1528c2e9336e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9308cb1c-7252-4107-8302-5c553e0bb4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c64edd4-f28f-4b9c-841c-435a50ed7310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5885f5e2-d677-46a4-bff4-24e0611835b0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24f975c-7d59-46cb-8aca-e8fdc55a7cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06458e69-03d4-44a9-b070-17cf19058958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fd98c3-e9ff-42d0-bdca-095681e18655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1049197a-f144-4de8-8de8-45872748f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e5e289-e148-4dae-9431-10b5d3558ac2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c148e21-8038-4c24-9179-238228a95201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfb0b56-b5d2-45c4-91ab-580c8ca9a654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ee4a5b-263d-43a7-a371-45e1226e47c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b32839-9929-415b-be64-9caefd57be84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c0df89-838f-4e6a-8884-485ef11310fd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1536d73-92e3-4031-9c5b-06d9a3a87cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba81cec-a1e1-4280-af03-040e9935d039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a392ab4-a0c9-42eb-a7b6-4ac15e4557fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f19830-cbac-43e2-b872-c9c74165e7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f648ffac-5acb-4075-82d9-2c97877990bf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6519ec-de20-43bb-a8cb-8d5c139bf2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85905228-e8f0-40ec-957c-228976d83940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc8926e-c436-4876-8735-0cb21517a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb66c754-8a3b-4bab-9325-398d442c6cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cded7f5-abb0-4cad-9148-2491b1f15e1b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eba8d2-3112-46dd-99f1-a89d39f789f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739850d8-62d2-4755-a7cb-be526b676f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d8dd12-1998-43e4-896c-fecd34c59ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "567b8535-8d21-4343-bf00-0251ef823a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c91ee1-f694-48b3-bcf1-8dc94fcf299c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea4d4ba-9341-4307-821a-6d5ef20c56fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36ec556-8aa6-4bdc-9456-693ade897edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933ddfab-33e6-4876-a7e0-bdeef2b7f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27b175b-56dd-4051-a3e2-a090dacad77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25fe466-e526-4bb3-bb13-4b499788bdac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89011c7c-6136-4320-ac58-8c704b8ee1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35364933-e719-4d15-9860-33b6d1b98b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2502eb0-bbfb-4817-a83a-2f34b56728b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3812705-af11-4aa7-a158-c323eb2a5e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee90f73-69e5-4061-b4ef-257dd14f933a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f36f06b-37c3-4569-8c16-8d27d6819e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bf28b4-0e9e-49bc-a555-2a05af28fe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a63abc-d279-4ffc-b9c9-c8edc5401830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6154d53-de4e-4ee4-b425-1aea38892775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe78db10-33b8-47d3-bcbd-444c34c83b8f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75686cb7-6708-44e2-b361-73fb1c4d2c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afa8bb0-29df-4b83-8fae-f9d5f6a48434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25cebff-8f55-4ec0-bed9-7e243682174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b6921c-4a88-47c8-8f9b-ba92cb7af75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320486f3-5f31-468f-b8a7-b953f953e1d5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333fbdb2-6be0-4eae-926e-b7cdc91b3103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6903da-35cf-46d6-8a3c-e9527ffa0be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9032acda-9d13-4e8d-a4e2-03db5195b4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ca9108-e6c8-4242-8710-8515a5e98aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069219d-1d1f-40bd-830f-2f9f9eb38cd2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b52656-b07d-4dc9-9ee3-0a861f15f8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb981e83-c141-4275-9145-e79aea8c14b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c310d40a-2799-432f-b45d-4ec4607e51df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d247e3b3-d879-41da-8401-479c9a9a7fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc63b64-4323-4506-98cd-05df99bb3424",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790d3d4c-128d-4507-b682-79602b2cc87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2193ed16-0b90-4c4d-bb13-51093147d2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffdfc4e-1949-49c0-b8f6-eeddb2e1de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a996e70-ed43-44e1-a999-7c375b00183e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d425000f-ce73-46b7-a2a6-4a679c15efdc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564b5210-fa37-4baf-81a7-c020f7fa0056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c282c6-bef2-41d9-ab69-79fc594d3931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a426dfcd-11a7-420f-a13a-597c2b598c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a7a36c-90d1-49b7-9f69-75259d8da518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c784d77c-a928-4add-b8e3-16527404a54b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51b8722-12d7-492c-882a-1f5a1dc5393e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee9cc09-68f4-4adf-bdf5-0898999a9b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db824538-4513-415b-89c7-1e6cc678eb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8facaa-31d0-49d4-89cc-3d3d132b718d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610284fe-d185-4e8b-aa8b-66d9fc0bef4c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c041bf-45d0-4bad-970a-b1eddd76bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478a82d6-2d4f-4dd7-a615-29eb2aa22f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea335b-1392-4431-aa04-36a23d3585f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e07dda0f-c255-44f3-9e2a-7851c86e86c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75598699-bf92-4095-a000-baead5018cf2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82ffc36-b7e4-4dbe-bc53-8b7f6be5efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a7e22c-672f-4c26-a776-1f1b4b6d5871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27f59a3-ae7b-4d77-b146-e2e76f407e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2fb5d8-03d8-45b4-a5d1-b46f91868038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2427f3d5-8c54-44c0-8ae7-b1196786b8d2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cab0cd-96b4-438f-a73e-717ba61d6efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d91fca9-b6d6-40d6-90e2-0d006157cae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ba98b-9ac4-4275-9a29-d7d3b691c217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c158a773-7f40-47b4-8168-1debc5a41176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c54af7-9deb-4e19-a158-58233f836ae5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9fdc81-52ab-4a8d-a9c1-a91aebf65d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19981943-fced-48b1-9a73-d0ad08f5c33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14904a8-8743-44ee-8cc1-791888b0e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76bf34aa-85f1-4b04-96be-4a9d6b4c242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202e54c-4b97-45dc-ad61-d06ec3e9d3bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab334567-79bf-4db6-8fa0-fa18f29b931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d1f39b-941a-46de-a7e8-7ea6d69212c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ba089-9109-45c6-9d3e-ecc2eb993cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1263ef24-06db-45bc-8edb-2cd866e52902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fbac7c-aa65-4485-9881-7bb4cf1f6fc1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe4bc9b-2df1-4eea-b8bd-1bf777f1004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba08a705-3ecf-4c39-b403-1ce58be986ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e7ac65-6173-4564-ad3c-d37e0573ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27487b65-08a7-4810-9e3a-21c576658df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2d7597-2f8a-4682-92b2-5d555c61704a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15d5134-54d1-408d-ac74-5976f33f3549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e33577a-06bd-4139-aff3-e85ce0732358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa19b51-74e8-4273-bf43-0461a76c8fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7d136e-bec3-4ea3-a4e4-d9e44a72d6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc457465-46d8-4fbc-9777-43c1cd9200da",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52c04bd-f514-4532-896d-cd24aa444845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bd4ad1-78df-4868-aed0-931049660b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1117fc9-e80a-4a8f-b7ba-bc5eed8f8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e628141-7743-4832-a18c-afaf0fbc3129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10013dc7-ae94-48ac-a294-181cb6afc6f6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa6d7a-7279-4283-b448-7ee7930d312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a297713b-a8de-40b5-825f-0f1417050000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074970e3-5eaf-4363-8749-75cbc17c393b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e0bde5-5fce-4ade-8fe7-8a3a9faae4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b341a2f-55f1-4792-9155-ebbbac6772f1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d7da3c-12f1-40f0-b966-37de29a66804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81529b35-1967-4afd-8872-b50735b3576f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8fe355-ab32-4b2c-b8b4-1e7c6d86448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24f6f7ed-f6cd-4ff1-942e-5b0b873a32ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71349e72-8071-4a8e-898c-cd74da269686",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e271d6de-6d42-43cf-a24b-6c1b76dd7d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9706c35b-b3ad-47e6-a147-22588641264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8c0d82-8b4c-489d-81dd-2785014e21dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfe6afd-bd38-4956-b6da-a4f9a10675a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bab937-a90b-4db9-b21e-2aa4b4d9f1af",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44deda34-8307-4ca9-a855-03f465c6ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c508d4-39b8-49fc-877b-161c873253d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859155dd-94ed-4323-8ab2-c8b13c383e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5a67aa-d6bb-4704-8304-f41e49c48f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a43a9-7279-45c2-894b-acd3ebd49f4e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af1da4c-04af-4abd-9d46-8a3d8ca7a09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bda396-f99e-418e-ab67-61354f40a936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f4cf72-2186-4cb8-a4a6-a2b24e3680d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df282741-8bdc-489c-8065-03a423f034af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a676237-324d-4714-9b09-ebafeb97a799",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f97a758-b645-430b-9a9f-c34f674b29d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b5e145-bcf4-4b3f-846c-0d5d7570b28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b41c3-1678-4d73-a801-17552a236461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b906ebe-162c-4e99-8cc9-9747dde242a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db7fe29-c4c0-4aa8-bcb7-16af1ca720f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95eb614-9abc-4dd6-8a6f-554c93343499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383218b9-9f79-4e46-9186-5311284dc4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977a8e0-6153-4c5c-b00f-510b40abc622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d1d58e-239d-41e9-ba3e-f5f7a5bfed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c381990-2251-4ccc-8cee-ce43d7298a7d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a49972-33cf-4206-9e10-a623a01fd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea60e355-a346-40dd-9e08-16a654f438a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea378ff-c2c7-4fdd-8429-e53f27b3d244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87c056f7-d42f-4703-a132-7b113f9eaf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ab85a1-3aeb-4038-a041-eafca0dbb2b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ae2ec-70da-4152-985d-7f310f439c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1aa6c5-42f5-4994-bfbb-c75c334e74b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5a40e1-f3d8-4a26-ba1d-9beffda0b4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "720a5336-dac9-4878-a8b9-0db35a572114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b56cc-6132-49f8-892e-b03063b32e1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b66388-1c9f-4448-a08c-1c00d6dae0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae78338-aad7-407b-bc1e-8fa3f848df7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f01172-1f96-40bc-b37f-dbf49be64249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f6da9-e780-4409-8f6d-41c1ea603f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590b9d64-2fc5-4592-8f7f-32bea536db0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ace603-01d1-426a-ae7d-e2510d269d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6385fa-2e52-4ec9-9c4b-0b4f47e61a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b811ef9-593b-4f77-b280-283090680858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a605026-2206-474f-a334-efb91fc9fb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0a59af-bf20-492e-890a-b51c51a3170e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a645d20-934e-4f76-abf8-eed723cd78ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e373cb1-9c63-45e9-9ae4-0c7ac8facfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddfdb93-4772-460a-875a-1218518ae1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbff0096-8520-491c-9996-f3e14c3a0493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fd1fb8-90a7-4eba-a7bb-7bb54a68169b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acaa013-9833-4d45-ba3a-c0954357c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d11cb9-e080-49bd-ad86-94b88bd6137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645c3be8-52ff-4475-9619-462a1b4262a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7f7598-c8b4-41df-be05-8ae0ba5e2450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d4f15a-4242-44a0-adb6-2a9dced5871d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f8c0e9-8108-4821-8fde-9113da5abedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581c9b11-9136-4190-98fb-9caa6a3978ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af913515-c925-455a-b8ca-bd5b72bf1bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6d81bb-530e-4447-87c9-c1eed7fb84c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd469a26-af1e-4e6b-a3e0-0dd8465bb60a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfcc927-d0b2-488d-b98e-c493aa14ea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dbd8db-4ee1-4e50-88ac-a2476998daf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e8a53c-4d4a-4e62-a4c9-ff120deff7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "55949521-9540-49b4-98cb-0cae612d7c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce0bfbf-af64-4d61-961a-5ba4557750ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b684f41a-70b2-4217-8188-b703e4357fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab90b2ff-c4b2-4f13-aa17-3e86cf0a3138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04144a1e-d6e7-4526-b75e-0513510338bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f006a05e-c846-48a1-90c3-b705817e913a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a867aa-589a-4857-b652-f8c0ea323136",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffae125d-45a7-45da-918a-cab534d3a14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4c0ce8-a362-4471-b7b3-eabadd52a775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21aee7e-eca9-4935-bd32-bb7a994bce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce02b4e-a85a-4d68-beaa-e885a66c0cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd697e7-7d15-4e72-af9f-9c0efd7bd23c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5b948-61ab-4239-8c4c-f37bb2854b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889f0c9a-826c-4579-8005-6ef8c0005968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c198d6d6-7a83-485b-8d8f-b20884f22228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4fd587-cffd-4343-ae0c-20d1855882b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e720b3-baa3-4389-84ca-763fd8c332f0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1599bc7a-541b-4e9e-a553-cf44b5a331b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b83c255-6f2e-4175-866f-5d75a2f96e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4d8d0-47ee-4c7f-b515-5bf118ce9b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f41ecd07-b5cf-4720-a752-36004db22c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deb1a12-acc8-431b-8932-a57ebbefc853",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a45b082-4901-40e2-9360-1896172b006d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aece4517-797d-4509-9594-17d3133f0a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5616ba3-e217-4745-90aa-3cc7bc29f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06304c4-3ece-441e-95d5-d144816fc244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b4057-dd29-428e-b9fd-f42dcce180a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eab36e7-0863-459c-9fb9-0f109184428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a4cd4c-2587-477f-863b-22b62a75f68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a16396-461c-4e1c-a9d5-6467b14fc2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d70874-b5d4-4809-931f-a8eab82ca95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b4c7a0-fe08-4873-8bed-673653961b6e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86424a0-335b-4979-be5b-4d61f9187c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dfbec1-7c49-4476-b431-efbb9d9c8c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c3194c-a8bd-438d-bc48-fe276fc098ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0622d9fb-b6d5-45d0-bf83-872a74cecd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552217bd-2215-4006-a014-16a8da5b2bcb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef646b6-64a4-4426-841b-31807091b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc342a21-2062-4341-9c27-ccf833ae9874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c8d49a-26ff-4411-be1a-8d95994e5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a111fe8-9f15-4290-801f-9871743df874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77c0c3a-0c86-48d9-aa48-fa6c282ce456",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6f298-202a-455a-88ce-73e12be3e4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbc4553-b19d-4d93-9bc0-6feaa1ea3a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667936ca-b172-47ca-bbbb-af68f423297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13291d8-3f65-4dee-a8a4-43fe660b69f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ccd73e-b538-48b6-8494-52d490c5d3e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c9e00e-1004-417a-9447-8d0ab4510f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c44386-8ca9-4a12-94c7-424d3fd0a9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf5afac-902c-499c-aa2a-4bfc28730492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84751f5-c9d1-4f20-8744-e87fdfda106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93205548-920e-44c7-8b05-7ca71342c4d6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2127010-4241-4f4d-bc24-6e5b0bcce489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b9ea2c-4251-4002-af9e-924618e244bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5e16d3-8bea-443e-a107-9eabd98d5973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7e47e6-f3e6-4304-a77a-e6f5e2f5fd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd02af52-af4b-44f9-ae3c-08e780c4d8a5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6396a61b-6a59-4562-a956-3642bcb287c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c29e6c-3f58-4155-8e25-c7f7dd45697e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f36d2f1-17b9-47fd-b066-95ea0722ed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15456d4b-c1c4-4436-a703-d3f04c0910e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4bd528-bc2f-4e57-81d1-a766687fb0d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6317703-7474-481d-8d64-27a10280dda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d981b4b-5077-41c7-a8d0-5f7a96ddef60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a05c09d-f0a7-414a-869b-c6504e8538e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f74c36d-6d20-4892-ab5b-a72b5d51af49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bde5bb-f8f8-4d3a-8982-c3ce0ab75405",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89e133a-0663-42ee-9576-d59d97886d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256a92cf-a99e-4e82-b0d7-216497c868e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05355790-a84b-4c06-85da-a18a18adb187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab06c9d-678c-4c0c-a9cf-70a734f83fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e36499-6581-4561-9094-d7137cf58c40",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e391f33d-9349-4885-9b0f-bb555997a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d745a2-bb9d-4a7e-b490-d43eea6c9b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd2a8eb-315d-4865-9873-9ef6f42cc41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df4c885-ec84-4f04-b0b0-761a3c3643e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f2b243-a1b7-4c85-8a30-24db7ce89c32",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a89142-fd20-4f97-b774-759057b571e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc66e99c-f702-44f7-bfa0-5e3bdcea31ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43992193-af5a-4c08-b86e-316ed99f8752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd143d3-0ecb-4d1b-8fa9-32ee89b2bb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11ed5c7-2653-4fc7-af33-dc5f3d124a1d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae1c42-aa42-4ea3-b375-9b254d4dd963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77e8644-49dc-42b8-8a08-91f815b62c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f823e78-8fb6-4dac-8268-5f6e4af44bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20b4e24c-74e4-4afd-bfca-bac0d372728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c585e1ef-98ae-4e98-a507-824dec74cc17",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c0491-a819-41dd-8cb2-bc7be5ea688a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9890431-be6e-4d5c-a570-6cf571b1e0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431c14a0-e60b-44c0-b3fd-b8ad483cbb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba1a496-7fb2-4e57-a499-0396d5c1fd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1517a1fd-3cc5-478b-a93e-ebf8313e86d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93b3abc-0c13-4c6a-86bb-421e0bce35a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e489d3-9ca5-4a9d-b271-0640deea659a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e33710-ac2e-447f-b0a3-a77b309ffb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ec4d28-9ee5-411b-85bf-58553bc34316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854a2aa0-1859-485b-9505-15a351d1585c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b3563b-05e3-4c0f-9bc6-a17c21369c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bff71b-c4bf-42c5-8841-c19c279d2060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ea233-3750-46de-94f2-a889d641efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "730b90bd-1c97-4a48-ad53-c92282df5323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e31307-05ae-4925-b553-8a7a11700aa5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eca9597-1b76-4ae7-9d77-2c5adb46f701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c06e27-e151-48ec-ad03-f9103dd5c48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d9b1d1-8ec5-4fa0-b5c6-61b14d0a41e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1ebfdb-068e-4d0d-9c64-6bc33684c515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12925492-e8b2-4afc-8302-83f4573fafe3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5480a3bd-c986-442c-925c-c371ad782f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904b8dd3-f763-4c3a-a1e6-19beeebac1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a190a1-5917-4b89-83af-a25c58cdcec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28a9ab21-9499-496f-a47c-679dcfeb9b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac13d4-30b3-4d46-b6a6-c1d89b37d449",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02189235-af49-4d67-b0c1-86d65f2d87d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1dc1a5-fd04-437a-9311-85a56ae19e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9dd208-c8f1-405b-a099-9c6d506d11da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95360f91-d4ad-4a76-9e11-aa6e0935646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4b588-adc2-4a4f-b61e-59d83cbcc312",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0804b325-127f-4d64-b9e9-ca9824df8b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead42864-d1b9-4a13-aa62-7569a1e1562f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224df4c3-14df-42f3-a571-7356b3aafbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9b0fcf-ee35-40f5-92fc-0605518a1ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb95ea4-b850-469a-a186-5cdabcdd3f23",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b020a7f-7afb-496f-b7ed-2f69bb80f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5d68b9-960e-41c3-993f-14fbd43909c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ac7d1-5e93-4cd5-9007-49ef98941833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8850aec-b950-4599-871c-531da2d10a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9ad2f3-0a91-4ba5-9e2d-360a4697f90a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c51bca-56f9-4e71-8a6b-62bbe96ecb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bdcb37-6580-4499-9e67-231669f67de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a7460-ad93-4884-8bc8-6fd6b412d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59b339e-ef29-4c17-872e-9ce6e40c9735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb2a61d-f015-4b2d-bad2-e54b46aa77b7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e986c2da-176d-4851-a86c-6a94f0ba4962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4076dbbd-c15c-4e3e-adb7-8fb31c0816f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a6caea-ec0a-4fc0-8ce7-9dbf6962879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7739da9-d8df-46b2-b797-a5131f81fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52114787-7a3e-4bb5-80db-3aca4810846b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a8197-77d9-4f08-9f77-52cc90dff1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1904448a-989c-400a-a7e0-843c2687ccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0875f19-418b-4195-a2a0-7c703393eee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5484bfc6-381e-42bb-b0f0-1d3406b422b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d91fb3c-8931-423a-938d-0129b4d0475a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfe1762-7bf9-40fc-8921-1638e48cf9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ffce1a9-ebd2-410e-9e9f-da9f1e73141a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fc9360-654d-4ebf-9718-432d92ea2e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "98c757a3-ac18-48fd-bb15-d0c615873694"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a25af44-f724-4564-815c-b03b59ad773f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6268ef0f-6319-460e-8cce-d808e3f3e8c6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49985299-938d-44a2-a499-2876a51d6785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "471eabe8-9096-4c08-b37c-e9be54fc1233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60539cf-89d4-48c5-a19e-f5e599195604",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "059936fe-7944-4296-8469-7c9b1b4fe31c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de4bda53-761e-4c39-a0cc-9ae85684567b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f00b6911-1424-47d9-8f9f-bb43169d7519"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3acbc626-fe94-4f48-bbef-3968c7f6d5d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "884d6292-6437-42ca-b62c-501e39435e9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88c9479c-91b7-49de-9c54-1c87d75ce031",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6dcf504-aca5-4502-aaff-d72429fe2eec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37f05e4f-c9f2-429e-b727-5794e657e4d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02c0e388-b095-4432-a4c8-05431a994425"
                }
              }
            ]
          },
          {
            "id": "1fef0a51-32d8-4bbc-ad9e-451fe36e1bf3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96081a6c-202e-4f5f-b7e9-c443b548b0f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37f9ee31-ed2b-4824-a37a-e5cb0e4f81c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f588ad7-81ef-4d0a-8ba5-cc9457ac0d64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58602ef5-8e08-4653-a8c4-8f3cae29d2a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8b33c56-f817-4c39-903a-241f0be93245"
                    }
                  }
                ]
              },
              {
                "id": "088fd43d-6f45-496e-9dd9-befaf92323b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4517162-cfeb-4225-ab3e-4260de9ce51d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f0f2086-f030-43e5-a11d-9963f3598b91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6be7305-fd5b-4edc-b08a-a3a25bbdd455",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf40d907-f940-44a8-861b-20b3f4ac8d16"
                    }
                  }
                ]
              },
              {
                "id": "4cd40e2d-3f45-4f03-a899-b2b3c2df1864",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b8da244-8538-4ebd-9b69-c274db6074a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7fb624c-6b92-4889-a43f-bbd114a58a31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df4ca37c-c23b-4f4c-acb4-663b80765b2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95c5a921-d8fb-44a6-9935-cf9c3d0cd5b5"
                    }
                  }
                ]
              },
              {
                "id": "806308cf-5be6-4774-85a2-7da80f7610f9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d6dec9-3d04-4ecf-a216-ba4623ca0068",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a82e8a-83e2-4cab-9658-48138dfeaaf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d960d78c-45da-4a91-9bd0-5abcf26b9982",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c6c5177f-ea68-4421-bd2d-d136c8fc51db"
                    }
                  }
                ]
              },
              {
                "id": "85643404-dc8b-42bf-a5c6-59500e706c88",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8469c30d-f6a3-4911-b168-e5be162acecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a1740b8-143c-432e-9c71-f2848664b2f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd9975d0-3db0-455e-bb43-79a1011080f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9d4c14e9-c817-46d6-b1cb-ced78eba4b15"
                    }
                  }
                ]
              },
              {
                "id": "d648878d-3380-447b-b6bc-6e5788288fb0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d8a2d8c-05eb-4d6d-87ac-a93221852ec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "924a5c30-597e-4049-ad3c-7e90492cb5ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37da1473-c5fb-4eb9-a9b5-055d35bb7eb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8cdfba21-acef-4b99-b5f0-62f371449c54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48ec461c-fc26-42bd-a33c-3ac1aa9efe8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "461b2873-554b-4cf8-91ad-d175e493b31b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a25ec48a-f56d-455f-aef1-aa2ea8eb20af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22b29469-ee7a-43d4-a7fd-92379c2875bc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd51651a-ce65-469e-8f15-518cab7b3031",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "719e4239-adc9-4ca6-b3ce-2ea3f26385ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc5b653d-8b31-40b5-92bf-ef46aa96be3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dff04b1-af7c-43e2-a0b7-cfbf7546a8bb"
            }
          }
        ]
      },
      {
        "id": "cd5fba4a-eda6-42f4-be64-6f848c6d2406",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "56adfa99-6c2b-4dd3-a213-e2bcf5bb7169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89cf3865-118e-4c99-bd34-94ed0100af41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30f40f82-a6ac-4748-9daf-0e7c6c77ea83",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d365ae-bf33-42b2-a5f6-80a6720af727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dda8102-d81e-4ecc-8725-3de8c18007a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8b2e05-4896-44bd-9d3f-9ac0638f4299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f18c939-71a2-4960-8f91-53068a2772a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53406ed6-34db-4222-8991-4276852aba64",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9411c8-5a3a-41bb-b685-b559632ffd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ca9a56-8643-4f4f-8a31-e4ab88fb06a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c787082-34cd-438e-bd37-c4292f925157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc4923f-8903-427d-ab3d-96272545fb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c256f598-4322-4dec-824c-07f8f7a90e0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235eb0cb-4415-4810-ad0f-d3701b1e9959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9daff0e-ba19-4ddc-b783-e7e92d1ad053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a01efe-d694-453a-beed-24e4062365ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bfdd8b-0182-41e3-8fea-49ee4f4c22b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458babde-395b-4fef-8ead-2d0b5551ddec",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf937dc3-7970-47a8-a2a1-eab5267c4543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7217c62f-7f56-41bc-94e2-ea911c4fc936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2f2d50-5cac-4049-8283-46a4b401cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1ad58d-7b33-4a93-86f8-bc64eabf436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1900a77b-0a1d-431b-9179-bdf0a5b418d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81b0695-ef77-48be-8909-0e52de55db43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4cf680-1239-4a78-a782-f8d65f41fda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a2e112-2f1f-40fc-848c-6b1abfdc4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1965ca4-65c0-4efc-879b-b7057b53fa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7e4218-81c2-4503-9d95-2791a821dbff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81823d-286e-4bbc-9305-ee600ab0ed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd896dd-d144-447b-a146-6319c3ef0544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5be2a9f-edc5-45ca-bc49-6eafd2bea28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dded6345-1ba0-48dd-941e-5d4fa35cdd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc567d3-1666-4305-9949-359cba74e59d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda6ec5d-c079-4cc4-adc3-24e5c85faff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acee7ff-b09f-4c18-8598-3de27cd4433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc6bb3c-63d2-4aae-a000-53b2e9ef9a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdac6af9-f77e-40d8-84d9-9b4511af845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040e4ea-9b5c-4f9f-989c-7779bc3f85b5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d118d-d27c-4b2a-9136-962984b44cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44f6fd0-fe55-499f-bb23-dbac915929f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da449b3-9ca9-44fd-95ab-5225252e1bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dd4334-f36b-47a9-a352-71ea38c97ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc53f07-8610-4063-a2ce-463bb0f9442a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a4a56d-8504-42ba-925e-921783e2f6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3fd767-111c-4a52-91b0-101999892172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40e70fd-a969-40e9-b372-064d187cc2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "171a54ed-5036-498a-8e04-b012d7619195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c1d72-8f0d-4add-a486-c0d99a9ff1f5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3a6d20-b16a-41d8-abb2-b45869af0885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2a9d73-72d5-4e3f-8ac5-29a8e3c271e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1d729-b248-4e67-904b-d679adbc1d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "710e5e99-56cf-4695-aa7c-7bffb661c630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965b7bb6-9364-4d53-b282-2b878ee034f3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691aadd-1120-4b5d-8181-835fd0ed674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd127659-4124-4f3d-a39a-08ed798b1c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4f3f0c-9015-45ab-98fa-71e15542c0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04282763-b92c-4176-8923-baf7a1e2df72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fcf6f8-7fef-43f3-b283-f864623c32b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784261ef-ee35-4f63-995c-267a898a97d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36bb639-0116-4838-807f-598c3541f138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a95208-a779-4520-9cab-2a97ebd0594d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58804963-c265-4c56-8f9f-d395ee0b55bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059e3352-5788-466a-aee8-dc81dd27667e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b2d63-2c8d-40bc-a4ba-082c8b244a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910f69bc-0753-4037-8531-942a80bcedc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762a022-6a60-40f6-b753-f61f37fd8a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "551b8ce9-03f6-4f94-bb8d-e9f3fda4a4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ddb83c-1c31-4303-830d-6a0783c0f392",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c3d6c5-4a03-4986-ab31-cb7108253876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdd8bf5-50ee-4f47-b5d0-a8477dd62b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb091d7-38da-42e3-92a0-6717324f05ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1903969-4b94-4ffc-bdcc-d3ef6e592700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e665d8-53a2-45d1-80bd-3cc4028922f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d9d5b3-361b-4569-885f-6c2cd973d674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead03d98-4a62-47cb-8922-63c4546faa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02865f4c-d498-4041-9c1e-977edf2777ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "decf37dd-a934-4ab2-9073-d37caae042c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec62c13a-9bd5-46a2-89b6-b078a9254641",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747c6d21-4e0f-4eb1-a2f5-6c3e226a2f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01a356d-be6c-4025-bafd-f4d6a66b39f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9544842-f283-4faf-bcfc-99b46e1a212b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20c96dd-9c1b-4453-b405-5642a51f445a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f12680-ed4a-4cbc-8517-61c272b1a7a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e5b7b-43dc-4682-9c84-9f6a36a2ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d60da5-f6af-4886-931b-97206f42e7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301e534b-c408-470d-a2d3-a7ff13b5b0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e660d41-3ba8-404a-89bc-2493aefb6568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eaa71d-6ef0-4ab1-953a-d9982ad04112",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1b192a-6654-4f7c-914a-9ebefc11a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313f5f85-4afa-4c97-9465-50363471c493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cbc18e-1657-4c71-80e0-4b921c25c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "686429fd-b87c-4c79-af5b-f808ead1dae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961ff0ff-844d-4a20-a4a0-41054b9d119c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e696e3-c1f0-4b25-bbf0-3813a028fa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2b3d14-8bb1-436d-81a0-d62efe45fe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14332f-59af-4684-8a8e-c972e883ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "726ba1c9-bbba-4f8f-9275-fa70d3a881ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f8fbeb-4c52-40b5-be77-07a02e54de0a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f072b682-18f8-4d28-a687-8a0d0d4750c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d889e94f-55fa-4281-acd9-ed1baf4ed567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a6d950-d246-4234-991d-64f30e9ecf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5b0460-29ac-4708-8395-0e3e47fa6d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b94a098-9705-4bf3-ae5a-41813d18b6f3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa26076-e145-4503-8318-f9b85a9983d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32e1f01-7d0f-4e2d-825a-602334d554b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1aa5e2-ae13-4b70-b47d-4851348adce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "414739b4-b3ca-4eb1-bcb5-dbe707822040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b084b9f-36ca-4b01-afbe-1f2eef393171",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65193d59-9479-4dff-ac48-ec268e9eb17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702d323a-965b-4147-9c83-9297ed0b272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3a63f6-5c74-4620-91fd-798f73f6e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa73da42-1104-4b54-be56-369f1367347a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3aed1f-6412-4242-a353-be344fee892c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c7e9a9-f61e-4e9a-a9ff-64742b9ce2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ab01a2-f139-41cc-a39d-98fed8540801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf50671e-13d4-4c87-a197-98f7b3577061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39697d92-c343-4899-a1e4-01990879ce0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07388ec-28cf-4738-aeaa-2c6e058a5a6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ec55a2-76d4-47d4-997e-c76cd86aeeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9a4cad-1017-475b-bb42-65d5ebb382ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355582ac-f245-4c45-9f8d-718fb94847a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6739c62-6d02-4e23-87ee-906f6f710c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038d7731-453a-412f-a214-e374ab38eb1b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcbab67-7acf-491e-987e-52fe40b88e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce09656-8a34-446b-90e2-4612d6df488c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebcacd5-3781-43e3-9be3-c1fe923e0ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32546c48-8ff8-4e61-ad05-f66499715bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9f512-17bb-4629-80ef-a9d85c10f430",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe323a4-eac2-4291-94a7-2cc764b026ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e70e1d-0eb8-43bc-acfa-0bc24edf4a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7d454-d20a-4dac-9954-b0766faf7ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6a1553-4f79-4a6c-bc74-aa2ee216f0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348ba1f5-138e-482d-ac9c-711f1320707c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2355b7bc-a180-4484-b3d3-d0de5582223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052096e1-eaf3-4a4d-a2af-52b98811ea05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc99847-3ac9-4405-ba6c-7fd25e5a4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0ac6a-4115-48a2-863a-94633237048c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1f44e2-1506-4ec0-80e2-df5eb45c5b3d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b61e9-d442-4d7f-bb12-42f0fa1baa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eab9088-1277-4746-bd4b-6d6d53b27977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d574e4fb-bab6-40de-a2b2-e5b5dd8ba2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95daf34b-603c-4301-a87a-54e82e676f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a4d275-2036-42f6-bd89-3bbc2c9d15fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e334a5-d9b6-49ed-8639-5064fa7fd7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0467f71c-c41b-48bc-9294-7fdc4df509b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc7a0f6-d8d2-4f4a-ba17-b795d2dc885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13652825-80c8-48bb-b1ef-15825223f668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ad1dcd-343a-411a-a2b0-d0052fa3ba0d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042aaea2-82e6-45ce-b64b-6b81d7d17650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e97874e-c3f5-41ae-935a-be74797ce1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d7cc8-80da-4d29-8a97-fe19f2313d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e84872-b2fb-43f4-a94d-588931f5d575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220a438-d3da-4078-8462-4ddafc21d7e9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae7affd-f345-40e9-b61c-09c668337c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c766edee-8570-4605-95ed-941eddabe151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a7de7a-29cf-453a-b7f4-6bd9c03b326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "451d544c-4324-47b0-a21a-c492360943fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694a316e-15fc-43f2-8c8a-20433c9b1dee",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc9cf84-5175-44f1-ba70-352a55d52ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7303a31-303b-4cf3-b4ce-9d9a5d3df450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af803fb7-4b83-489f-a40a-99dc9c38f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230dee4b-5d1a-478a-81aa-d59d438e677c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9082f47-3a6c-4de0-94f3-1532be1ae08b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5002e24-965e-4edd-8f6e-36c7dac32370",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176435b5-eed6-4f07-8b05-280b67313b46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "600758a2-ab47-4186-b87f-49c170efe3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c2f8c-6831-40d1-9b06-bb39f9fb752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "746e4d4d-5410-4a37-bbb6-17d0f10e38b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c75237f7-beba-45a2-b683-71839cba7641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1a4ddf-368c-49dc-81a4-a913dd56f834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "197865bd-30b4-4616-8519-7ac25ab1c247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28de852c-7857-46a1-896b-d1d65aa4578e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b916b302-8bc2-4fb9-b5e8-2595a189df47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30b0612f-7881-459d-9f7d-c15d8002430c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db5d14e2-c4e4-42db-91c1-fd92b6ae72bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1c27425-697a-4178-9caf-e8c0b94bc846"
            }
          }
        ]
      },
      {
        "id": "98bf6a55-150a-4ede-ad54-cfb1e82506b6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c4b8db69-aae1-4635-a59c-58c481e44cac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3deddf47-7613-4338-9357-cb70d683e188",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c201466-b73a-41e4-af38-cb4a041a26df",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91538a9e-9cc0-4651-a33c-500c584d8611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2806731b-4877-4dea-b7a6-f50a55d47a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf155002-1a07-498b-8141-b3d09234456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af9ed40-4a0d-40b8-b864-f7b287dfb8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c08e684-c763-41bc-8989-d44f450e2fa0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ace562-f6d7-4a14-ba2c-c2284c5de888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc75e915-1492-422b-b5dd-a916871d164a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79673884-6559-4325-9995-944da1f15872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcc208b-2aaa-43b1-9c25-ea46419a5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ff22c-a362-44f1-be8d-02452540df64",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ab49e3-8229-45cf-b485-c1f288c962ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4da0839-5da2-4602-aaff-a4aeb863fa8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fde21b-4762-48c0-95c1-8a893edaa917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10c0f10-480b-429f-8f29-fc9706495107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cbf6f6-5526-4b96-b5fb-74928d953ed9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5790c5da-e017-4f5d-8571-8018e6442e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451f327b-8359-4b44-9286-403054fae9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207f0cfa-55ba-4e0f-b2f2-c16620cc096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa3fff3-db7c-4bbe-ad92-1cd44db414e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f4a18-b6b9-4b2c-bb22-779a9b47a68a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff85174-61ee-4240-b2e0-989cfc20fdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8437bf03-3526-4501-a169-f1f6d6480566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94795325-3ad0-4f42-a697-93175929b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0981818e-fc7d-4245-81ec-0ddca832f950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b936a60-e19e-473b-bd0b-b337c030f925",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa080435-a8d7-434f-8641-2704fb6c5639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2e0d61-1c8c-4c1b-8705-dac9795a3214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f9e4a3-a701-4de3-b633-bf6f4fd03bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf0151c-a350-49a0-851d-bc9aa0ef42d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b497e-86f3-40a8-9502-a966bd65cb24",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea586a-6d7d-4b2a-b949-f20c6f4b854a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0965c7-6474-48a0-a38a-72072e2ddbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a696ca-2fae-4619-8f46-ed4866141676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "813b6153-a363-4050-85e8-6742e09105bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491184ee-a8bc-4649-9b3e-079e1ca644a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba430897-6217-4cc5-aec2-959cc78ef511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62034644-5a62-4ac6-a382-c3af9978ae95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5042e88b-7a96-462a-9506-e8df4669a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d35d36-d310-446c-a878-a7c2471cf441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb6e6a3-bb53-4aa8-9c8a-a2e368a045c2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c12bde9-550b-4dd0-8600-96df0a748910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c001dee-dca1-4a34-9c26-f123aa8c2070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5a0de-4560-486f-8270-a91d3345b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ca5714-34c0-466a-8fd8-38eaf14ef483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ff4544-df5c-4c5b-8c76-1e5d9f5cbfbc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9edb87d-63a3-4c52-9bfa-e03f30e803d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2aab66-0b06-43d5-bf05-fde85c393b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86365f9-1e1d-4a1c-872d-b823b0a68fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e85dab0-f67e-4dc8-a300-40c0578c1f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8c0cce-2688-4eea-8082-f09bbaec2b02",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e392df04-9d7f-47d7-ad00-cf84ead898a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00269c87-ae65-4658-ae09-e1ddb31de1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4765dc72-0678-4c5f-b51f-217d9d784174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22d88977-990b-46dc-8385-90596dced54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63cbd88-d2b9-48e0-ac39-2aec9e3bbed9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47287944-7a2b-4a9e-91a1-64225d4c528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecb7090-fffa-4e08-85f7-9c783e86e258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc97dcc-3cbb-44f6-88c4-9ecb08dedad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30d43f73-4e74-4393-a6b7-d80e633feb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d09dcde-dfe7-449e-9e52-0e2f4d84c8a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f320bfb-a333-4dc9-9f0d-bdb73ef08e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d5417d-453a-4063-951e-92c3df8fc263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8e47c9-e6e2-4628-9627-c06f97728c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42000c15-256f-47be-a1cc-1cec9f15ec13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1235ab-a791-46b9-aaf1-64428a02094d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335d3c11-432c-4d65-b9a7-abe79adfcf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9abc2b8-15c2-4056-8cfc-c9515bd04fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5933fa17-a11b-40d5-ac48-b7549a5c4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "259ce7cc-b434-43b8-8b39-459276c743c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b6115c-282b-44b3-8aea-04afdf12a96f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca32419-4f9b-40bc-8d77-ae595d68cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb2db7-c8fc-472d-ac18-55fb6cf8aba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a4738c-bdb6-4e67-95b6-6dcf8ae2defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddf2f3f-4abd-426f-868c-3cc9020c8142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32df78ce-d599-4b1d-8157-2be87261d169",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad898ed4-63dd-4bb8-bbe9-1f8a785404e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6295e0d-e7eb-4de4-8bf2-419022f57114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6550cc35-f30a-4406-afe2-c82a220d4894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b33b1de-25ad-4e5e-9a56-9c4314258854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9268097-ea1e-4a94-ba29-1f4fcb1f5a91",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e14477-520e-4adf-92f7-36def9de6e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a90bf40-dff0-455f-95f5-8a3619b4f0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08caae71-a4a8-4b14-9fe6-c5853cfccd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0843cc-fdc0-45d9-b9c4-3349f1e1f940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aaa6ec-3091-43b0-8d32-fe443a8ce388",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b2b77-5f2b-4308-922b-653e27b40468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478bcf9c-5a00-45cd-ba83-63b3a64694b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf746db-e3f0-46e3-89a3-b2454961c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09a9b76-684f-4fb6-843f-bd27832e553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06dd506-d30f-45f1-b489-83f11808889e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd35f98d-fe72-4502-b91f-617b479698cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7150150-5c0c-4253-b2d2-a03f3b5d4c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3380e4d3-6d20-4c37-a6bb-4d1487f778ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e67d3f3-6158-4eb2-af40-c54aa7649a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcc81a7-a7cc-44e9-bf30-63cfc9652429",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229592e3-49a7-4294-a33a-ea717adf5e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddb67d3-85b3-4056-bbef-8462f513dacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47fc83d-2116-4bde-aded-ff70157b7058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc729e89-ed28-4557-86f3-9fc78de2e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55584c9-52c0-40f9-b594-393c7d7e2679",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb4e471-b23a-48e5-aedf-dca806352f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9920324d-5a8d-4be9-8971-1d525a414716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a49fc34-6a8f-4482-8440-7d9457535f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "333803f9-a8dc-40cb-a9f7-8fea4b7c3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af352c90-3773-4f03-ad50-910e99eefe1b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3609750f-9d02-4c19-af6b-d6d993cf7128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce543e5c-9826-4ddc-898f-d781e20c3f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763bf0de-2f91-4915-b968-c568f3da9dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc3c31f-2d11-4bf2-8979-2a0b04770a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b83f06d-7dfe-4f20-b31e-5cc2d3c60a97",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c108e8-56c2-485d-bf96-0dcbcc04daf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a7904e-7712-4862-9444-f11adfa256dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a239283-457e-415e-b2c7-7a6914e65de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4d710e-45a5-4114-9574-0ae55f3e1ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5005092-7b5c-4b48-9b79-cd8d7aaa95d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f33f5e5-9d62-443a-a331-0d17a544cb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f34dd3-0823-42ef-a112-d6e99f75f479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef193618-1591-4bfe-86e1-1ce96533e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "300e094e-3df4-43a3-8140-5536827d78ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c356d6-bedd-41e6-82aa-215011114fbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ea8d0b-c4a0-48f4-89e2-91f64947eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12beaee-7a9a-48ba-8b1d-b6f93fc362d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2451003f-816b-4ff2-bdce-8b982645de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b15903-3f0e-4cfb-bf1c-a999eb0bda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd095974-eb1f-4deb-8890-161bde1bbb06",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdf8afb-16df-469a-8006-5511d7507d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d980b2-771d-4b4d-a2ea-5cb5c1a4e544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa9dfea-e8dd-49a0-8aad-4a1889df5dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d28c85-16b9-4cd6-ab29-0be32c26bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763c806-db4b-4744-a671-745b5daccc6d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c95660-ad47-4610-af87-de5c63193359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dcdc28-fde4-4767-a092-c5ef32f8a5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc3aaf6-7ad5-43c1-a722-98389e5cda13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3272da0-984b-4ee7-b2f6-832f1c52f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce6d501-ba6d-4eaa-bca4-564f74204cd8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75de466e-ce48-433f-b199-b39327dbac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e78264-9a67-41e2-9454-d74000b60e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae98de0-4eaf-4cef-907d-24d5eb8c5339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8563cd03-385d-47c1-9b1a-9ea027cb28f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c5f6c3-9a6b-4c88-8263-747b9d2a6f65",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2838b-2be0-45e4-9aa8-54914363ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5319747-fcb9-40fe-b1f2-0c3d17cb040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b06a4-c127-40b1-b73f-acaddc0c8778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e8098c-c84a-4948-a8cc-ee9d93221301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ef5948-151e-47bb-8e76-c8728ae97a59",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f7707f-7110-468f-8274-a1582a4d1ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ecfa0d-d92e-4132-befd-f3c999471382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fc196b-dbad-4efc-9af8-5ff7cd65b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1eb3913-55b1-41c1-85b0-08ee36b11a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f84ccbd-081a-45ce-905c-265661e1ebce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d4db6b-e894-4dcc-a2ce-e8fd73f13d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994bec9e-4c75-43e9-8bf5-516cf317e3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b199595b-0cbc-473b-9980-9b4439581641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80ed2045-b8c8-44e5-bcab-b8ea2a59f98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a9f86b-6cdf-44d6-9380-a3088e8bbd3a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd58553d-c8c7-438b-8649-d59b874ba456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705fbd89-ed93-40ac-84ce-25273f6f845f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e878bc1-93bb-4233-b5c1-60bb6c75f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "416c7f52-1442-4821-b972-5a00a71fa137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8933239e-6fe1-475d-ba97-7e02936c2556",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc67590-9c51-4962-af10-f35909435f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a05414-0488-45a0-b119-6a81c4419af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4104d30-520d-4ea7-929a-6e5633921a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6efa228-7f42-42f0-a413-d72e2d00850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63437a2-7c49-4a60-99ad-5c53bdcaf3a7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55b343a-4c08-43b2-a464-edf2f703ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671a1a07-fa4b-4b6b-a1b0-bedcec1b2ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f51cbc-3e42-464c-8d37-b5c306e63808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46cfb0b5-4252-4de5-a740-bcb13d3f7aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4144b645-4ef2-4bd9-a877-d6248518b78e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242cf401-0795-4ba8-a9e6-23df55e92447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960fa9ec-9665-4702-9caa-cac7aa0c44ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f0a87-a59f-4bb4-b6fc-9f9e0e897c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5d60ed-260e-4b7c-8727-375fb75e6918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aa37b2-64cc-487f-9a9e-560906dbe56c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad54c483-b359-4154-9d7a-a6f7fe4e5d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c1b212-e951-44b0-b0f0-7f459aa3d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be908c63-fb7e-4721-ba2e-1446375ad2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1278af49-0e3b-4a48-b50f-affa2172d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db54a541-c55f-4ead-8e3f-473313b90b38",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16484b5e-6a87-4893-89db-28db53b4c657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4339031-24f4-43fa-8ae8-9e3eb7566263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31fe6e8-d04d-4c8e-8ea0-67ae583314b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29df86f9-295e-4c9e-80f2-8cd21161f9c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9163b81a-5cbd-43ca-a30b-a662bf829086",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72fc8774-beb4-4e0c-bda7-c9d8e7a35644",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a850276a-9616-4e43-92c4-91983bef3f58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2aacbf74-7204-4777-bf42-8be7ee724ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1c001-505e-4038-a522-e5c3181599f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0fdbe2e-e3a4-4b62-bb19-c7c2021e8b16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d2d0749-3a88-4a66-b6f8-9d3b6b999fba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdc1ac19-a666-4958-a7ce-0fed20aed467"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22cd7f5-b9df-4952-8dce-3f6981126696",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01ec3e41-e2cc-4172-8cfb-b4ff5f3cbbee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b4aa2d8-df78-4b55-8e71-e8a637108230",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b644a464-e7a4-4772-a0be-3161d7091f4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22dfe6aa-cf06-40c4-8aa6-7fd7c004f956",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c79af07-ab89-4cc6-8b46-133b2bd95f5c"
            }
          }
        ]
      },
      {
        "id": "635a7f9a-29be-4c26-80fa-57971a544a8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "80878553-08a9-46fa-8389-e30badeda8d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92602229-ef96-478e-9832-50413104dc90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58b74b1b-8076-48d9-a2b2-e5d60c5cc0cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426720d3-7695-40bf-9e6f-5b938a270b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8e9fdc-4c53-4e18-b45e-f20cb195320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364451cb-de4a-4711-a444-201e7b0a12aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25218efa-2ca8-4f82-bbd0-835f016c67be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904dfe3a-1347-4b79-b3de-6e375aa8a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7de046-306d-49de-b801-67c3d8a9e9c5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c03801-e0aa-42ee-9319-59f9a21585ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597e59fb-9e1a-4214-bc37-c426862d1462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f41da1-9679-4ffd-b5bf-23546561a5f9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c715bce-923a-4322-ad97-eaf28da27cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916debfb-856f-42f9-970c-022898233716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307d1f62-bc56-4aea-8338-eb8ccc380564",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84bae0e-9a60-4f1f-babb-e0d58b4deece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc3c853-d03a-4298-aa37-a487cd6f8a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1cedf-b9d0-4e02-a0d6-e36f3ea086d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9707b-472b-48ab-b5a4-029fe4c0e6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7245100-9c88-4d96-bf4d-5db5a5cc61bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699698b-057e-45c2-8448-f8a476b08ba9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba5f07f-b6c0-4c55-828a-97f2b273b679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f04857-ab69-4487-9fca-3994ef9a8c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b139e-dab7-4968-bc6f-26954a7c1d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf81674-17b2-411d-97ee-30acd61d5637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa660dcc-4fbf-4657-9a87-2addc9a35e35",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ed5806-eecf-43b3-bf29-4759eee0a89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf38102-d185-4ada-a93d-96b3eebe494b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3be517-ac75-48ba-b223-0daaada04e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d6d8e5-9fe8-4cb8-9eca-b2d3f7876b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0f889e-121e-42c2-8984-c3b9c0e7d2ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd001b5a-f48b-45fb-8d6e-dd7bdc3f2dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1025edb-f981-4ea0-8a13-34fddd69fbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf47a0f5-06bc-4fe0-846b-4e147966d3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed329466-91d0-4402-85bd-57362797382a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c63fa3-1c5b-4e0c-bcb2-4067cc2ee848",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58507ca9-7f01-4dd8-822d-0025b4ffd7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c23c5d-6f9d-4ab1-82bd-a10b8085ae46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3735e906-1576-4ef7-8e48-6e5afe15aa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c1b0e3-f1db-4b26-93c5-c1abc4a2d51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefe2ec3-24b8-417f-841c-4e01c90fab76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcee0e2f-aebe-416d-bd5b-054ced83e428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cab75e-b439-4063-be80-f9290beabaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d26b49-209f-4b40-acc0-258d0d41358c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b11506-0fca-4026-b658-8bd4e65ff490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32986292-1277-4993-a595-2ba804b15355",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b85f59-1b94-4e54-89ae-cceb70b37ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32efa0e6-3757-40dd-9480-69933b8c7d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1d8170-f815-4415-a3b3-bfe71605445c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238eb74e-5a11-421a-871f-82a87a3887a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792f04e-4ea6-4d90-a814-b62fd166429d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e386a06-9289-443a-ba8a-9216ce388b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a8deee-bdb1-4b6f-aaf8-f96f8c44d764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37a03f7-4392-4d46-bd81-cef0544322a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b836bd3-66c2-4010-837b-8fd24ffcc70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49a72c4-a3cf-4ac2-9dac-4edb41e7106d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c90e2e-9ecc-48e6-9bcf-279450804017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5f99cb-5f22-46e3-89cf-24ce5f973e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03df53c3-ad2a-4bb5-8b4d-335793303e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02138649-4953-4efe-93b7-66e905c805b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39418bc4-f058-451b-8d8a-68bba0a704fb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573b6f61-632e-4984-8f6e-cdcab8cddcee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ff38ee-6ac6-464b-b255-14e36155f59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542925c5-61c3-40d0-abab-7a877cc5099c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f6e722-d3a8-4248-9acd-98ea701852bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb366fb-8434-442e-9f93-8b354136cfbb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179cf2fd-366e-45fb-87cf-410f2b4ee34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bb0bcb-0bc1-4f72-9eab-a9b110bf16db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95696305-5af1-406c-957e-db4fbea10293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82805d64-f1f4-43d3-99e4-7a96ca7e230a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b264d344-38a3-4c04-9086-7fa3b94ef544",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487bbca8-212e-4afd-acfe-f8450270aecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15219c1-e96a-4265-ac23-0faa48f0d582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a1689a-a71f-4069-a3ab-6eb495356ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb807526-d310-4b8a-9bec-d36a7ee365f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07edb7c0-cf09-4283-8eed-855a517960bd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3b5ab-3e3f-4879-8ab7-fd7ee0bfd538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d6d1ba-2557-4fb4-b4aa-7e89465d36dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df76ae-d742-44ae-906e-042a47499677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd0f8a6-af09-48d1-be5b-b1a292ccaed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50d466a-0f16-460f-b5e5-8315c1ab00b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba0c32-f0f9-46f1-a217-ee97b7a5706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171d2117-d8f6-4552-86d3-69e530eafbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7417e542-b14f-40f4-9ed3-5f9af2c520da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a9de1b-8998-4b46-a092-ce96de142528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a218c11-a0ff-4f62-bab7-d76dae9c5e53",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde11a26-6cbc-4eb8-a6de-08cbf952907e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236cc1e3-9714-4c95-94ee-b04e60254c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8f1dc1-2567-418d-9e9e-890be65033a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cb603f-83f7-4bcd-9f97-754834b5a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d0fd31-0a8c-43ce-ae53-0ad1c0dce9c7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2051dcff-afb3-45cd-aa92-90ea8d8d05e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c2ae63-2975-45fa-8477-db0b99a88cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad190218-401d-4e15-8f14-ac7c12c0b4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e12e7c-565f-47f2-a9a1-f46a1b103392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9919d3-a9c8-4538-8a1e-755a61587acf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750df509-505a-4f7a-99a7-35548433f4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ded7b8c-0f8d-4dde-af4c-7fb4c621fdd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc54ca9-ec27-42bb-af3f-9dd81fe56e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd509e7-8e0a-48da-89e3-de899970f6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2003aee-f46a-4408-9935-cd0604423b78",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cfd39f-c221-4537-86a3-55bf011b7ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d88b14-1341-42dd-a50c-9b6911bcd2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eadb18-0910-4ba2-9ee8-c444e563d970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20092790-4a10-453c-b915-6a156b325113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea43a8f-b480-4029-8332-db4b7440831c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae26041e-8199-4ad6-8ec9-8bac3b84fa55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e46363-06f7-4d46-bc44-f6b0f104ba6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450febd6-1f98-4e6a-a061-333bbf1be611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63d53e9-cd50-4494-adc5-06b18961adbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd10c0-cb3c-4f77-a09d-7c048a490f56",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d15440-b78a-49dd-8ab9-eb14cede35df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933bc2f7-ab83-4fec-be6d-9553e3c9e1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf1b23-5426-4ecb-94fe-8133d74f5faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfabd6ac-13f2-4b5d-8e0f-4d8b24c6516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97844d67-72a4-4591-a42b-7b94a8cda3bd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2882928b-2881-4ae3-a141-b94817e659bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309d7094-b02c-4510-838e-4a513767c698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b0a1d6-b840-41b6-bc2a-79c3780ad610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2654a2da-925a-4229-945d-bae817697be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d56817-38f6-4fff-86b4-f43bf0884239",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6026e64f-889f-4db0-b1e2-069fecb9ef93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51211bb8-fef2-4693-8d9d-5e4101b7a55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88611b1b-ed0f-481a-9b79-dce4cd232962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916da736-84d2-4664-a5b8-e808472d9051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13dd321-1286-49d6-b79d-13cc2999c1a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baae652-64cb-4f6d-a422-7313f4d619dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858d2b09-99f2-4d38-971c-9f43b340467e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12868436-f534-4090-9419-b39ad7706e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2944a348-f90d-40dd-bb1e-6862f2e7e2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f887e6a1-e5f6-492a-bf41-a3d8660eef39",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b436a9-996c-4b4d-823f-06bcd05c1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c75c0d5-f775-47b1-a77c-4240bb336a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1cf23-707b-4064-9b32-eef424d2b3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f42a83d-5bc9-49e5-9af8-232492f7285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6a329f-ed91-4f13-ba46-080123da91d3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42259a9d-f068-4eee-8c0c-e52fc16c7fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689f7637-075d-4404-a49b-326fc9d14bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce91389-9f13-4d09-9486-0815f2afcd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c98b0e-13ba-43f4-94d4-b685be1f55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c5c6db-ed00-4acc-998b-f74f1bbfb70e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3817c-88b7-461c-9078-b3a1c3dbf4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598a049f-87dd-41bf-a2e3-29652a64a51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2495fa8-1db6-4b07-aac1-5e088eca4a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a64415-aaaa-4917-9433-a4931c94c5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00573f45-c52b-4509-b0f4-bd0c379a34d7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f10881-c58f-459b-ae44-00f72038b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c1dbcc8-6221-4201-ac77-0e37b9598e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2646c2b-b4c4-457f-996e-ceac050054cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8288c6-ac82-402e-96a2-d5a59c5eee96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe50815e-2317-40a0-8569-5ceb5bc93212",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea2f466-97fe-462d-96b8-b73222b30e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208d1ccb-eff1-4b7a-9859-829541f11f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1a43e-4b7d-4926-acc4-13e6c7b4cbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bffc190-7fdb-4697-8693-1772238bdd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45286b1b-80be-4faa-8909-e5a6c078ae4e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e91e6b-ccca-4627-871c-ea847e9d37ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3a6dca-5c2d-4c4b-8ef3-4d980811ee39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f251f82-f26f-481c-9407-7a39779a988c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6f66c1-4873-40b3-a8e4-55bf73210478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4409eead-7b11-43b4-838a-13c992fb19cc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a3401-c8d2-4674-b7bc-3dc78b82429d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a0c32e-2f63-45f7-8b61-1fdaf0cd3e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f9cb46-26e9-4edb-9a57-8cb9b160b6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cae03c5-6aaa-449c-9b00-e502d4088a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccf99fc-b5cf-4932-b7f3-0d018cfa506a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf62240-3346-408b-b7e4-16906c61e6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64946904-f259-475c-808f-fdac0e3c8753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd13eb9c-2c7b-4b4c-84c7-0d4190ab9b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f45e88-e6b2-419b-8f06-26fc6622eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd2f374-8af8-4fd9-bee2-ecaf3ae84f56",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d74702-6458-41bb-89d8-ca9ab7247e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ee839e-7466-435a-b496-71097f350c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118578d-7da8-4af1-a91f-cad4e9948c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e78522b-f991-4497-92d2-ed242d8b414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e385b0ee-ba8e-40dd-89d1-c62695820882",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9f6a20-3d58-427f-bcdb-21701621a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a96a4cd-6461-4615-96de-25b3e97d03ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0017eadd-3632-4f18-b28c-27101c6ecf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393edd7c-7e5b-42be-8eda-3f08bc4f65af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f403d5fd-e228-49fb-93b7-ad29dce716d0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedc7b6f-8430-4e17-96a0-ce07c76f3721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92397e0c-833f-4b67-9ed4-9c7b5e610f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7588804b-2177-4a98-8e25-eb1d8c5b3b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5e38bf-d46b-46e0-9157-fdc00a8f766a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985af7a2-805f-4e63-ade3-2249246ef963",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1fc23d-a422-42f6-a7dc-278273eebf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3519e446-ba2c-42c2-8596-b35a35d305f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2a016d-f36b-49c6-9280-450b2fb2c830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9c4b1f-ecf0-4f6a-adf2-dc99d691aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f76d9b-5cd8-43d8-9585-a1c89bd7b77c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea30e11-9e60-475c-b29c-57facfd5932c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2c00b2-b985-44bf-af61-227c3bd5a93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d1eb78-e9e2-4f12-8728-1267f51a04f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eb249a-839d-4dac-b2b1-c5ba07d5b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d45c84-51e9-473a-bd5e-6dd4ee552bc0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dde7cd2-9771-4e65-a939-7adb605b0a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b89f2f0-6881-4bdd-9654-0813de67c074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75b735c-fcb9-4cd3-a3c0-cddf49536a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a7ffb4-77f0-4bf4-bb7a-d46a6c431435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acec080-3e85-420c-8592-b1673b7895e2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a1409a-9a10-4736-aa9a-b33b9691f1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e5ef1a-a800-4214-9227-76dd1e148f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e34cf9-f19a-453d-aa83-46d05f852d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ac1b41-6104-4b38-bc0a-de3c24f27fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0385882-53a0-4e65-a2f3-ab00704cf138",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e259ab71-e6c9-488c-8921-b1e68ed239b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca5a64a-287f-4266-a013-579d6c0a3b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b29af05-2e3e-4563-b233-cdafd1657848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710f047f-e98a-406c-8586-5e1a983f2776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594c481-c110-4b60-b11a-e0c405d1b704",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857cc513-98a1-416e-95e7-c20a88adf073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c906538-920d-4b29-8267-cd9a7c2c0f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38276956-adab-43f8-9e2b-76031401380b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89234415-e8ff-4586-b253-cbd3aca5eac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa9abf-f74f-403b-9bbf-aea2719856b3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc2b16f-b86f-4aa4-8843-86abab4d6361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1aa679-162d-4a98-adf4-68cf0e41ef67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f83b0a-0401-423c-aca5-a419cdae4afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cc340e-89e4-4995-92f9-6eb34aa004d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d724a412-736c-42f4-89ad-ba34c81c500a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3d8bbd-40ce-40a7-bd84-8deb80466354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be050c19-bc36-4399-88f7-c417147c60ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f268735-96bf-4e23-b9cd-3006ae45c972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20934e26-fd73-46be-b4bc-5346b1831638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf4e03a-1ce3-4605-84bb-498aabe993a6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21134ea-f972-4cce-9dd6-1937655f4373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e242dc4-e75c-4535-b065-8f36defcca99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eb1d88-e323-4b8b-a9c2-907317d7f462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f3a7ab-5e16-4826-8674-9e4edd642ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685929f4-aa26-492e-bc08-90559e078acb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ba77e7-40bc-4da3-ba21-9161dd5d0bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd9405f-1d93-4416-92bf-b01fe59d06ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff76e5-fcf8-40e0-a558-0e1c738b5da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a8b088-e340-4c2e-a6e2-7dcf1b91d9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcb59e9-17a0-4650-9ef6-b95203ec068d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea93b9f-f1fd-4c5e-a12b-29c424f03992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ab1d33-4dbb-45fb-9849-fae17e30f643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12b3358-86cb-441c-b7d0-8053f73c5647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae84f709-0fbe-40c9-b826-f46667b6d1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a4052a-645d-4ceb-8d25-683d61223417",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec30ca30-ab59-4226-b15b-ad09930e915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c823c27f-27b9-47bb-9481-cca09a59bc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f225c519-9b6f-4103-876b-a3f815c0da92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd69751b-4a1f-43ac-a328-163dd2c52067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2343626-da46-4a36-a732-f52e441f9613",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e1479-a49d-4d6f-91fb-d6fa1a067c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541ae9e3-bb51-4960-ae77-5d3f2cec5a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9636d9f-4cd9-4504-b7dd-37e99680ef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03064916-85f3-4c72-a176-aa2980111f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e8f5c-1685-4bf1-a94d-2cbc6a7d1a19",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6b3277-c114-468a-92a9-9495b189ddd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74acfa16-5671-431f-a1dc-8b87d3da19ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406b0f50-e65c-49ea-85ba-ed6ed1569028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4028a0-19c3-40d1-bf9f-24982b3909ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ac2ac4-18ca-4630-99c9-352d281f2c78",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a925e496-0010-4f2d-9cdb-4dbcc2a46546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652586bc-04f8-48e2-8022-e4c9488157f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad24bee9-9066-4677-8e11-489da1db62e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48cf019-0023-4d5b-a31b-460a5aa87b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc5c66-dbc8-49c6-856b-b897285d3904",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3568d6ea-0cf9-454d-a22a-a71114cdbc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e07e3ee-eb1c-457a-af5f-f9082c2984e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e2f425-436a-4c0d-b224-9fcb3f7b31ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0433bb-8182-481a-b17a-2bac2fd9607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30d4920-f884-4122-b997-a258af741bd9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169847fc-85f8-4770-baa4-1640e0f32882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d2c57-16fc-4abc-ac0f-7fc8c206aabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975ffb86-83e0-4ad0-b98f-4d55559cd9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5917888-b871-4c9d-93bd-07ba0be82251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e63296-229a-4aea-b51c-f2ce5b88d4e6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8517df4-ec11-45a3-97f5-48e1bc7532ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627820be-ff71-440a-bb31-5681ca28b62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6f4d7e-bd9b-49e7-ac38-f97a4a72cf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512651c6-c3d6-43ba-95c6-15ba0b8a1295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18664135-8b3f-4c77-9421-7943c4bbe4f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f5c842-2f5b-4c3b-a0f9-8bcff3cdca73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d6781e-2dd7-4fd9-a0d2-ab010cd9e8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf9d4f1-2583-4a94-bdb2-e2740f2083eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c42eb30-8f92-4fd3-afc4-f81dbb94ee96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29e5f25-efdb-4910-883c-dfd2b2c1cf67",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28594a60-825f-4762-a66b-31cbef5edfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2d9247-a040-40ca-b46f-a2edd718bad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab50d87c-f560-46a3-820b-ce0fcd767467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a469b00b-0df1-489d-bd7d-d760bccf4748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ab1ca-ae50-4261-b25c-d8e4caa1317c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5fb611-fb9e-4afa-8be0-49a374cca2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347f77a4-1089-42df-8b3d-75323d58b350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadbeb46-6094-420e-8b2e-41bed8eb6fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08046cb4-f582-4546-b78e-9429e32dcace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23dd26a-804b-40ca-b41e-194bea7bff2b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b8e52d-46b2-4624-8da9-3c7f0327e880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd712d6c-963f-48df-8776-35c2b6351616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e58fe8a-d29e-421f-99d9-3a7e3042bef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462502fd-cfa4-4244-847b-344b9e5e73b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626c335c-9ad4-49df-b3fd-629801b1051c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec857a74-efbf-4c73-beba-9266a1d6943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e472277a-d79d-49f5-841d-1725e73df91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e564f66d-354d-4ddd-9561-6095d86de6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f71a0cb-09a1-4515-85b8-588db4250c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0201ec-a56e-4a3b-aa33-7f2c4650bd32",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86668985-9936-4f10-891f-497fbee5d40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef25c07-13ed-4575-90c7-cfb9bd0b4982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73112be-7cee-458f-bf23-aa94b1b65494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01049de8-b199-4f88-826f-315d25c6b6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69481f3-1bb2-4cb3-ad75-e0287e98e99b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab415b4d-7b8c-4187-bfed-47b14744b6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ff7022-fcf1-4e1b-98ca-7f4e7bed1b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34629dc7-cca5-4369-b186-de691919aee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bfdaf9-325a-428d-a880-86dd6ad375af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8324c18d-57ef-434b-b974-b26a163db5a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74425c51-f65d-4388-acf9-092e00cfbdb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f9f8b4-674f-49a9-ace9-b7a4aa46a59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d025f-63b2-413b-a8c5-4d8d17f069e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ed338c-4827-4439-b17c-5597c35b9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c988cd97-d5c5-41b6-bf9a-500c6d43766e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f86ba1-2f53-49af-8b09-180e8e374227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476bbd6c-18f0-476d-ac6e-d33fb3ec38f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20eb79f-7569-4d70-83ee-89d739b2cf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c99592a-3ac2-40b5-934e-5e250358563a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a2a486-d25d-42bb-9fcd-45da18785a76",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe91348-6dc1-491d-8b4f-df46898d9c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a2397c-d9d2-420d-8c6f-c6f5b63da0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c4412d-28f6-402f-b543-eef34e1b2b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ba71ca-3bee-40bb-b36e-30b36e1e3f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7442b4b-19d6-40a9-b285-cd88dabb690e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b761268d-2c3e-431c-8b2c-3e2727da751a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff8f656-b029-4003-85fa-383f3363fae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea389e-dfb4-427e-bea1-439a7d4feb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9833a3da-5022-470e-bb90-1f245c96796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626830a2-3c26-435d-9f01-4b312cad79a9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a56cdff-a08c-40af-bef7-332bb74bba73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f387041-9e76-48e3-8ac6-0da1dbd4f767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992627d-e262-4672-b26d-248f36def7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dfe643-dcd3-4def-ae59-c3652dd53b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bcfd5f-13ae-4b10-834f-1eaf3efdac2d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b2caa-8224-42f8-9aea-3351b2ddf174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d363e524-f34f-4b5d-9309-21e4285f0cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ab988-a37c-47dc-9915-54d74e88717a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae13ce5-cb7a-499c-b406-0d6e94bc729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021a6fb0-c462-42ee-98a4-c7779081c312",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f52edac-e23e-488a-ba38-55e4a0da7246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3adcdd6-b254-4eba-a322-7745354bcafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cabd99-d577-453d-9319-3b8e3d763f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e249e237-87fe-4b79-a5d1-666c884f0ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0dc46-338b-4798-aefe-f855be7d5e73",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cce2c19-6db8-465e-8df2-9bbb295cac6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73055e39-73c6-4f1e-9271-e0d19ac872be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728ff65f-6d48-4edd-ac62-5577cecc1dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1da4b3-bc4c-48fc-bc5c-550af61ecff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df77588-4581-492c-9291-63a24eacf8bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38b5233-d089-4456-b9dc-101fa817eb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822fe94b-4b22-417f-b056-bd552532fb66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a391fa1-4eae-48dc-a2b5-1bbbf9143dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72174858-958d-496d-b164-a26b70b49a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26861339-1a50-4076-ab34-89db73e00021",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44bce30-d9a7-45f3-8b4f-cd2a70d9d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7479817e-f456-4461-8871-bb8de1923756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8bf2a1-767a-4595-b964-90021036e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0f0887-7b4c-4217-9ae8-012eb4824fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a96a5c2-49ed-457d-b6a1-4aaf572583c3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb109e-d9c0-44f0-b45a-a8ef628f1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e119276f-18cb-4362-b91e-ffe12ae3aff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d75167f-7645-487d-92e5-2478bc7ff7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b87915a-d483-466f-8545-97f2161b02c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84505ffe-4df2-4e3c-a287-7c9ef1d54632",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6757f18-e701-4417-9851-89f96b0aa65f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab85552c-b435-4d8c-ba69-72fd9f7bcf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f2dda-f8f6-4fe9-9d56-94ef45b8ee76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d981857-26c1-44b2-91fe-1ff8a7d2b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946b210-c858-4287-827c-b309a68ac2c4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d441bf-283b-46c0-ae14-f0fad72b2ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4922bd01-2c4c-4715-a456-ef9d1a760848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a008f9e9-f85d-46ff-ae52-e45d4eb992c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e95f691-96a8-44f1-98ac-a8c70999e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96db870-ad2c-4117-8529-b58722028b29",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5528b-64ea-40c5-a5b0-f580b0f07455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113e2997-1171-4a80-ac3e-b98fb0a79802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b3665-dc75-4e3d-ad0c-94e2f7ea10b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cbc3d5-5016-421d-a071-23c9cc0ccee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea29fba-f4a4-4ba1-b5e0-b3b544b71d11",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70fb9c4-f626-45b3-bfd6-826561c77515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b727762-fd2e-4f15-980e-b8e2a4175185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9938c-1302-4a52-ad90-5e32e28367d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441b10f8-fa9d-4de7-a1f3-5d1e9407a8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1690071b-74a7-4561-963d-8f4c28b14a3d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89750449-0c40-4fea-ac4b-d6ce8b4866a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c85b112-7bd3-4869-a393-5626155f5fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61a268e-658b-4493-b096-a766e85389e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e25847b-704c-4912-814e-a046e26fc462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384d2e9b-10ac-4d29-8cdb-896e44078b21",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6377ccbc-c333-43ae-ab41-6d6798333b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83696f14-67e7-49c7-8f10-af4a618f5702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdac24c-c886-4989-b94d-46327578992d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0c9610-3587-47ce-992c-bb194101b41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5707261e-70c5-42c9-94d4-14d9cee84f9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95a6e3-9201-4960-a56f-e32c6ca368c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9954a929-8123-4acb-be74-cebc468b06f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1f2365-3f2a-47e5-8dd4-2b87ead705a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f170530b-e508-422c-bf04-ae910efa25b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c828b24-aeff-4dd3-879a-2edc25304d1d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939e0c8-7704-4446-93ca-6c973d29c2bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279ab19f-0529-489c-9667-b0d8f383b96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9310e3bd-e28a-4960-a9ee-1f718705c316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f7eb5-1b09-478c-8acb-796fc5e8ce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea30f15-2de2-4135-b5df-4c69c9d07143",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634cebdd-75b4-4291-bf47-257e0878cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61a71fd-499f-4807-baa9-4771dd9998c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aceee0-0381-4aee-935e-fb3b91bfcfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014634d7-c558-41fc-8987-593a585335e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b075f296-a653-4826-9787-0a732981fb22",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a490487f-1b92-4b28-8461-212445336e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba0e08a-d43c-46c9-93a8-375751b4ebd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153fcc7a-3643-480a-ba9e-aa1ee9f7ec79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934275cb-30e0-4b45-a309-311659e0c262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd021a13-1d61-45d1-8b09-05bd3716e3f1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e05db6f-c978-4f5a-a1fb-8cb4461e3ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630fc771-3ade-4bee-8749-57a019684949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b53b4-c703-4e58-8b20-448ff0c0f873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762ae4d3-07f2-40e2-b2ff-8e1af684f111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c19e73-2fb6-4984-86b7-380187395bb9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da31e5c-ae10-428e-90f4-c3dc33dd9e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62c31b9-4b89-4e10-b0d9-1cd91e976deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893be43d-f7fc-4e02-8217-e17cb03a67b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca8ee2f-ba2e-4954-a85c-27219e190bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3960ce3-5153-4d6a-ad4a-4a77166c77af",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3714ed03-8cb0-44ae-892f-a167db952be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c4c506-3e7d-4cbf-b5d6-87530645497e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c71fc6-5875-4aeb-89f4-b48e41d2b097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12571666-6556-4257-a860-d07e7992f0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05be7806-d6f5-4387-b994-346b28cd1c76",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07027f76-7a9f-4c13-a18f-0c36957ddf36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ef8f99-244d-499b-88a7-af3b224cdb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f0525-f961-4b7b-8312-44a302da8765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848e581a-5c35-4fc2-bb16-feb21c5468aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2d88b5-6505-4027-8768-ed9b852ee7e3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf4258-f07a-470f-9278-4cf45a574c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d7ee4f-e980-4d35-beeb-f1ee6390994f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da5974c-8910-48f7-ba1b-0843df149103",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0328b119-1985-4b3c-ba53-dbcef2d2e7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f36fff-794c-4956-8322-d753a0bbe2c2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec020255-e725-49a9-a0e5-6c4f66328eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad1b3a5-1d04-4838-9ce5-f72c79fa023d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b9019-3765-4dea-bf28-30fd407f4010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a4ffdd-e40c-451c-8306-9e30912352ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45099de0-4c76-4602-ab65-e5bcbedd0fcd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bf2993-e292-4d6b-af31-5f4d5e637f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28a0239-74bd-45ab-b5ce-12cc6d3a1e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f36580-ac54-4d4a-bfc1-184bf8d628b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df014f85-8df0-4a90-a647-947c1055ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417de995-bb36-4eac-8174-e80616a853aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26620574-82db-4c5f-84d1-439282425bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504c7fd7-5657-4cc5-a97a-ea59b2ede0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffb5288-b12e-4d4d-8628-fdbbfe301dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7f2446-1079-470b-bd82-ce249b13ea11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a596c0f-b991-400c-88d7-91b77386727d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fb8983-e830-46b3-8c0b-e91775ae7aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29a7dc8-2093-49ec-b2ad-8efd322b2182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba9c28b-20f2-4558-9a65-2db3fcc199fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8869dd4e-b5c6-4ee7-88c1-6951b614d1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c185f8c-fb5d-4cf7-bda4-99490480bf94",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7be8b37-2792-40fd-a3ef-55d168e79b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2938a47-45df-48fb-937a-7b41ab93a2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0274ad7e-7ab0-403a-b517-c4ab7074958e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833e3850-4820-4b9c-9653-1bb7f4547105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c807ab56-b7a0-4528-813f-41b55fd75061",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30890910-af31-4914-884a-45690ba2db93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec297fb-1f73-437c-b4b0-c9aa62f98355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4235ec96-045c-4408-b7c0-e429bd8cfdcf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f820ac2b-0e7d-46db-9894-0b3168390077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6c2539-8454-44b5-9d66-764b1347ec83",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7646012d-e76a-4193-a6cc-4e6400b4ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba19b93-9ca7-4221-aa2c-3c5f76b507cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e4db17-10b9-40f0-b88e-bcf218ba8cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94cb1c9-7fa7-4137-ac64-81fed264527b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db458519-8422-4cd3-9d3d-50b80120f236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d204704-430a-4d2c-88f4-13a98197c833"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e5fd99d-fe9b-42ee-9e39-4924a302bdd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3038869-0e94-4ddb-837f-0bc5d20685e2"
                    }
                  }
                ]
              },
              {
                "id": "c355c33e-29be-4641-a129-3b2a9884e110",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b5c848e-991e-4cea-bcc2-321d167e2526",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e430a22-dd19-4e0c-b36b-4c968b9d1d06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9bb5be59-65a0-4814-ac55-36c497e4c6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a51b96a-f4d1-412d-89dc-8a98fe87d581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02f989c4-a15d-44ef-ac9f-718959b86c56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d42c2ce7-16d8-472c-af32-7710dd1ad5f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c6cd39c-571e-42d9-ac70-c5809fcdd6bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "886cd6dd-167b-4c5e-b0a7-29e18f43d892",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d20ee5c2-f0c3-45fe-8637-515aea2fcbe5"
                    }
                  }
                ]
              },
              {
                "id": "9649e2d9-1cbf-42f6-b0cd-84ddbbf59746",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9cecc53-8708-48da-9a88-1a4926cb4d01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9d9588-2826-467f-8dff-33d30040058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3726deed-7244-48a5-a149-62e627718489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e2af0-c511-4611-a420-c77693b6ff53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eae083f-1776-4539-9785-163fa5868eac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63de3820-42b9-4660-80b8-dfc72c06cf28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11a3ef54-dbba-4696-a581-1ab4ce0299c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09915095-a906-47ea-941d-fc534a23a2df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "315eb5bd-bb0d-4daf-9e39-177028a5b94a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b7d3619-6890-47e0-b682-5a08621ae37c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "733c6c57-9942-4717-8b5a-be3d5991251e"
                    }
                  }
                ]
              },
              {
                "id": "d47e806b-32df-4a89-bbe8-7710852052e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f555bab-1ef0-490d-a1bf-4b3fc05e6a8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac83ded5-c01e-4ef7-a606-4743cae2e6e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc79084c-6b17-43f4-b6cb-998d1b3a2cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fc572d-bb3d-424f-848e-6f8406e3b301"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84903107-f006-420e-9fab-a8c6aefae1b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f48a6bf2-49a5-48b7-9ffe-d1331e65ecf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "050ef5d2-d0e1-49ff-b50e-113be8b997c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54afe830-39ba-4168-9955-141ddf914e45"
            }
          }
        ]
      },
      {
        "id": "5feae843-dda7-4fc4-bf4c-2a96cc9d2dbb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9ffddca7-575d-4577-bbac-76ac3ec74dd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82cea533-bf26-43ab-acea-d119228c4750",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1394bce9-34f8-41bc-bec4-8037a7891778",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1c4449-ae59-4fb3-a9d8-6c94293211e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5156c534-a832-4791-81d2-f874d23ea316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789bb14d-6013-4077-a901-06b15384016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7cda30-fe33-4d16-9c7d-79526b44f1c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ab13de1-63a2-41c4-b7e4-837da8d2a7b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ba7e7de-ba86-4fc4-a468-505aec97b64a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72267dec-a44c-42ff-a360-0df5e3226af5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c8ab6de-70b3-4c05-8133-a9cec5a88f4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e4bc719-8e85-49d0-99ee-366aa7e60909",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f75e3025-9315-4ab1-a825-ca2c2c6ca4e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ed997b3-6ddd-447b-922d-92f152ff5569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23100a6d-33d6-4c13-acd2-ee93a4eecb0b"
            }
          }
        ]
      },
      {
        "id": "98375485-5452-4a4c-aaa7-6d091d711a70",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46d27cc1-c2d9-4c7e-9a84-0079c5aebc58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59fbeec3-d329-46bd-9eed-d7a38c56fc39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5932b7a3-2ff1-4653-b261-902ad69d8782",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7c5abc-7ae2-45f9-b9ae-8a56bd57137c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c66d1fa-44aa-4c64-8e5f-d78ef2e15a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13514376-f587-4fb4-a652-aae920300393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ab8c318-f822-49fa-873e-f6bf9a436656"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a73dc09-4078-43e8-901a-5ae6585fd4de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34ad7433-7fbe-46a6-a861-15002dfaccfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c3cd73-4e77-4732-894c-074501db8792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0c08e9d-5360-41be-952d-ddc92b63a8f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feaa5171-a65f-4296-8c45-f4db86bf7066",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82d1df0d-6c0c-4bb4-9335-e84420c8ac98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe3a9714-0d9f-4ebc-bb85-1d0c4d7a3135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daec7f38-3471-4c41-8978-29f4340030b0"
            }
          }
        ]
      },
      {
        "id": "1c145e65-065d-41b0-a80d-d6cc602f3053",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "649e8294-e1da-4d63-bf34-9a8b8b2a20d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a233fc0c-b8cc-4815-a815-6af95f1fe016",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "250138a4-3c4c-4127-932b-fc8b53b9375d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15132ca9-8f81-490e-b701-02c3ce0c166a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12d1110d-df9c-4e0a-b08f-959676fc0d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226c1744-76fc-443a-a4b9-3211f68261f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "350347f3-e133-45c8-a73d-11761bb81db4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4f84c42-32c7-4ff9-9438-4d3778af3570",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c43fcc98-3a33-4d56-9850-9efd1946743b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79760a62-1a29-485b-ad92-44e99ba9443e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d8dfa20-e0d8-4153-aeb0-652fa8477333"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b205898-ebde-4c13-a6b4-0eef826e30b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ef38ec0-1114-4fa0-97e5-472641d4e398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32b90f31-de45-44b0-b98c-1c65fd434ada",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee7a6dba-08c1-4a1b-96d4-c3c2be981213"
            }
          }
        ]
      },
      {
        "id": "0fb9c7f6-e971-466f-9e56-471040bac45b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "610a4af5-049d-4837-ba28-abe8a4c45922",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06f916a5-60e9-49a4-ade3-e92b2d7e24cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2220efdc-b67c-4bfd-9bdd-2acfe71bc05e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "188c6809-9594-4c6c-8bc1-eb9c1c042137",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3628e8f-c015-4449-bd16-3a79d53009c6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.15492957746478,
      "responseMin": 8,
      "responseMax": 312,
      "responseSd": 21.358870497727665,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687567587139,
      "completed": 1687567620481
    },
    "executions": [
      {
        "id": "4d2ffa1d-7588-4484-ad0c-aadd099b7ea6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6db4d805-13ba-4bf5-b6d2-7a08b62d5fc9",
          "httpRequestId": "b1772c93-63e9-4bd3-b12d-aab50b827381"
        },
        "item": {
          "id": "4d2ffa1d-7588-4484-ad0c-aadd099b7ea6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3869d49-d097-417a-bed2-28832fc03c35",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "0942a7c0-7fd1-4057-b627-71642da6fe66",
        "cursor": {
          "ref": "16d8b619-6c9c-47cb-9824-50e08b822da6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b6ecc23-b04a-4b6b-8981-459e4bac4202"
        },
        "item": {
          "id": "0942a7c0-7fd1-4057-b627-71642da6fe66",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "482b12bb-bf0b-4d46-90e6-26d95c06de77",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "4d31a0df-84cb-4908-882e-4a677731c2cc",
        "cursor": {
          "ref": "bf7cd578-ef4f-40fd-a940-53d91cf15d5f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ca3920b-1a9f-46c3-b7cf-bcaa3e1b125a"
        },
        "item": {
          "id": "4d31a0df-84cb-4908-882e-4a677731c2cc",
          "name": "did_json"
        },
        "response": {
          "id": "66651f5e-bfa7-4ee9-94c9-3f4a2605c21f",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08257e36-58fd-4e43-a515-67f3f24c84b1",
        "cursor": {
          "ref": "b7a1281c-4517-486f-9d32-b88e0944dc1b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ee5719f-02b4-4846-9964-bcd221c74f1c"
        },
        "item": {
          "id": "08257e36-58fd-4e43-a515-67f3f24c84b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "22295e50-07b6-4a55-ac71-dbc1b9f993ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08257e36-58fd-4e43-a515-67f3f24c84b1",
        "cursor": {
          "ref": "b7a1281c-4517-486f-9d32-b88e0944dc1b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ee5719f-02b4-4846-9964-bcd221c74f1c"
        },
        "item": {
          "id": "08257e36-58fd-4e43-a515-67f3f24c84b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "22295e50-07b6-4a55-ac71-dbc1b9f993ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d587b-95ab-425e-8b6a-ff68956ce65f",
        "cursor": {
          "ref": "d36830f6-267b-43ba-bd64-2892a37a6a59",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d657a20f-2e58-4e0d-a5d9-787406d50d47"
        },
        "item": {
          "id": "563d587b-95ab-425e-8b6a-ff68956ce65f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f13eca2f-a66e-4813-813b-c0942c7d6a70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd9ab8b-0713-482d-aeff-f003b6d2604b",
        "cursor": {
          "ref": "e532b641-b6ec-45e4-9d39-feb6b02586cc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c28e3c39-483d-421f-8d9d-928da66eea04"
        },
        "item": {
          "id": "bbd9ab8b-0713-482d-aeff-f003b6d2604b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a17406c4-ce1e-4f02-a14e-636446175214",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfdd4d-1304-4590-b192-5dc450a5e9be",
        "cursor": {
          "ref": "5c9fb12c-21c0-4c86-9ccc-7f9339b8d265",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dfc683d4-7ef5-4342-ba4d-ec17060df24a"
        },
        "item": {
          "id": "a1bfdd4d-1304-4590-b192-5dc450a5e9be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38e787a1-cebb-4e82-9247-882d72ddc9a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57719a-1400-4594-aa6f-dbfee695f9a3",
        "cursor": {
          "ref": "8137ad2c-54d3-4fcc-8f64-2be2e0e2c23c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "063cd2ea-a57d-4d6c-93ed-fb37d238f845"
        },
        "item": {
          "id": "4e57719a-1400-4594-aa6f-dbfee695f9a3",
          "name": "identifiers"
        },
        "response": {
          "id": "4592ca52-5f5e-4a93-b67f-98bd2816d7b5",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d29979a-0fa5-4710-b96e-02c9307e997d",
        "cursor": {
          "ref": "ceeea1aa-1523-4ed9-9a49-d454b962749d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6c462999-23e9-4e47-bad9-d131d5e3c22a"
        },
        "item": {
          "id": "8d29979a-0fa5-4710-b96e-02c9307e997d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cd4086ab-6395-4dce-b6a3-e234e721e378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11776a-c7a6-4b81-9cd8-6556c16c82b7",
        "cursor": {
          "ref": "61acc1a3-8f6a-441c-8f13-e0c97a545ac2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7a65861b-1262-4f4f-a869-07e977d3adbc"
        },
        "item": {
          "id": "db11776a-c7a6-4b81-9cd8-6556c16c82b7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a8383ca9-a4eb-4f04-9870-55fc8131802d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b6b625-3c99-4d24-a84a-5c9806b072f8",
        "cursor": {
          "ref": "420b5dbd-48b3-48bb-8734-f705f991e493",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cbd9d6a4-788b-4125-8dcc-20d0125704a5"
        },
        "item": {
          "id": "57b6b625-3c99-4d24-a84a-5c9806b072f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4d5967f6-4518-4fd0-855a-cfee08e6fad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09880d31-baec-4d3f-b42c-7fbe1cf0558f",
        "cursor": {
          "ref": "bc084514-2fc9-44b7-8e70-36943aeb293e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "55561f3a-e183-4a06-a52b-e082b644f01e"
        },
        "item": {
          "id": "09880d31-baec-4d3f-b42c-7fbe1cf0558f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cb276955-3c64-47db-976a-6057d3d01d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1cde13-c863-4991-abe7-cbdcc946a917",
        "cursor": {
          "ref": "e07f5893-43e1-48e5-90bb-81f5d324406c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3a29a64f-5785-4c51-b833-e9445a3c0fbd"
        },
        "item": {
          "id": "dc1cde13-c863-4991-abe7-cbdcc946a917",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "544f324a-fea9-4bea-bf8a-0a1f0c431a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b85c54-d24f-4808-8577-d6c5830cd7f0",
        "cursor": {
          "ref": "7a7511da-b699-430e-948e-d47ca5239161",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e53f21c3-c786-403a-a61a-1651054832c4"
        },
        "item": {
          "id": "b4b85c54-d24f-4808-8577-d6c5830cd7f0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "12b9e238-0a5d-4899-87a0-fd4eefb278b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5050b82d-e8dd-4e86-ba73-a3b7801e74f5",
        "cursor": {
          "ref": "ca7763dd-8d2a-4113-be58-1790531d1ac0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "01fafd22-d22f-4145-80e8-775eb8237b60"
        },
        "item": {
          "id": "5050b82d-e8dd-4e86-ba73-a3b7801e74f5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19a2a1be-5689-4d00-8c24-abe3f20f18f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad4c152-ee95-41f9-9679-d5e519108e18",
        "cursor": {
          "ref": "537575ce-0b92-40cd-b3bf-42b20b763824",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f45e03a2-236d-431b-847b-0cc3da394226"
        },
        "item": {
          "id": "2ad4c152-ee95-41f9-9679-d5e519108e18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "63f2da64-1d2b-4fd5-900e-dc8c30977b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3926611-8e9a-4fc0-9a46-db066be8c213",
        "cursor": {
          "ref": "ad540652-6caf-4b69-b4bf-6cb7bf4820b1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "74545db7-1936-438f-b98b-202e20644ebd"
        },
        "item": {
          "id": "f3926611-8e9a-4fc0-9a46-db066be8c213",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b4eac460-32b4-4504-bb99-44d253b0afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bc0d8b-017a-4e7d-903f-a0e4ede3429c",
        "cursor": {
          "ref": "4ec77f11-96ee-4605-afcb-99bc43239965",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d4c545ec-e735-4e06-a2d7-16cbabb4942e"
        },
        "item": {
          "id": "a8bc0d8b-017a-4e7d-903f-a0e4ede3429c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6152600b-a696-4605-8b11-ef03baba24f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2081cb09-704e-4663-8e02-940b2b6a2cc4",
        "cursor": {
          "ref": "30f7b29b-c2ad-47db-9c9d-89dfd4de91eb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "692b2230-e9bf-4c5d-be3b-2bf347f94ed5"
        },
        "item": {
          "id": "2081cb09-704e-4663-8e02-940b2b6a2cc4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5dc9b4c1-c6af-4b17-bcd0-c80ebb7fa27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d1e341-f968-4724-9ab6-7d60d9a36c03",
        "cursor": {
          "ref": "9abba40d-a661-4754-8f64-ad6e40c6fa21",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ff250cb-176e-4c81-9f49-29e998e42096"
        },
        "item": {
          "id": "77d1e341-f968-4724-9ab6-7d60d9a36c03",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "478b9b4d-d506-468f-998b-54b4ca1ab068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148c7c83-6493-4fe1-ba9d-3436eac7c629",
        "cursor": {
          "ref": "97320f1b-85e8-400c-861d-099de0fe142e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b249da95-5657-4f91-aea6-087b00bc1291"
        },
        "item": {
          "id": "148c7c83-6493-4fe1-ba9d-3436eac7c629",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a1a45d44-583c-4d60-bba2-8e7aba3687c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206eeffe-c9d0-45b7-991c-c4e7ef798066",
        "cursor": {
          "ref": "ad36393a-1928-498c-b2aa-2f67358fbb71",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "08ac40fe-b3fe-4179-b2c2-e5d43221a29f"
        },
        "item": {
          "id": "206eeffe-c9d0-45b7-991c-c4e7ef798066",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb4cddcc-ea74-46c9-9f43-c7a3e334b2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4726c134-fb66-4cb9-8dc9-4446886fb597",
        "cursor": {
          "ref": "114381c6-7933-45c9-8170-9471062cca76",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5898e10b-9f66-410f-a33a-e3abeb0763a0"
        },
        "item": {
          "id": "4726c134-fb66-4cb9-8dc9-4446886fb597",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd74ca53-9df5-4af7-951b-3707eae410ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0826cb9-4428-47cf-8505-5a1865e5799f",
        "cursor": {
          "ref": "66b57346-77d7-4911-9afa-6e9f9797693e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fe24843a-7cb1-4fc2-a398-ccc3cc937943"
        },
        "item": {
          "id": "d0826cb9-4428-47cf-8505-5a1865e5799f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3af35817-fdc8-4cc1-a44e-846b11695e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5522cb92-4e76-4cf8-8a80-6344d87f5546",
        "cursor": {
          "ref": "60101e36-bcc3-446e-be18-9c51bda6fb13",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44ce5010-3c3b-41de-afe9-a516df1f1906"
        },
        "item": {
          "id": "5522cb92-4e76-4cf8-8a80-6344d87f5546",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "01c43900-887b-4c31-bced-53daf60ff9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6619f5e9-46ec-4a6a-a9e9-a6926fdce6f8",
        "cursor": {
          "ref": "21d99125-6139-405c-b2c3-38e35cfe458b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2bef149d-75bb-4779-ad6a-ea713b966577"
        },
        "item": {
          "id": "6619f5e9-46ec-4a6a-a9e9-a6926fdce6f8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "afb93ed2-f727-49cc-b60e-12a51a27ade0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f237840f-efdf-444a-824a-c716badc052d",
        "cursor": {
          "ref": "49f88153-29b1-4222-b161-d5e1bf6b1834",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5d6447e9-8bb1-4bfb-aa7b-5491045622eb"
        },
        "item": {
          "id": "f237840f-efdf-444a-824a-c716badc052d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "30a3a678-b070-4f5a-adb6-53c884799cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c99ea69-6dbf-418e-973d-faf446121359",
        "cursor": {
          "ref": "ed61942d-0e32-406c-ab5d-8f0d713ee567",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "59efce19-bd4a-4885-a02b-be2bb8577192"
        },
        "item": {
          "id": "0c99ea69-6dbf-418e-973d-faf446121359",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7508e940-e16f-40a3-aa6c-dba4862f00c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178f8965-a93b-4cc4-ba54-1866bf10f271",
        "cursor": {
          "ref": "ade64b9a-deef-4b68-b27b-eb504bb0f868",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d9228eed-2334-444d-bf29-fab91af83e3b"
        },
        "item": {
          "id": "178f8965-a93b-4cc4-ba54-1866bf10f271",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "09789e4c-4167-4a6a-bc3b-fef9ba9d2957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c983b3f-03cb-46db-abb1-ae5689581e84",
        "cursor": {
          "ref": "f7af0616-e0ef-4ace-b445-6b5e5e607535",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5ccd0d9b-0a6a-4cc1-be68-b0743e9dab51"
        },
        "item": {
          "id": "3c983b3f-03cb-46db-abb1-ae5689581e84",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8c029170-1337-49c9-bac6-a4cba57787df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2582d-6ba5-4ff2-9f03-e622044f9e07",
        "cursor": {
          "ref": "61b919ce-b88f-4b8c-9633-3e2617e7199e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bc07c594-140c-4663-89c0-84f84bd2c2b4"
        },
        "item": {
          "id": "d5b2582d-6ba5-4ff2-9f03-e622044f9e07",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0a833274-bd56-41fe-a7d2-cbdd59d1ce7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffad9b8-952f-4578-881e-25abfe70374c",
        "cursor": {
          "ref": "d21f595a-8a77-4376-9515-8f00049f3796",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "826b1e97-7cac-4295-8a59-4df50aeb473d"
        },
        "item": {
          "id": "7ffad9b8-952f-4578-881e-25abfe70374c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7b5662af-2c2e-47b5-b0ac-7318698a392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c27d05e-7217-4553-8336-6d94b2fffc67",
        "cursor": {
          "ref": "46bbe9e6-b80a-4c03-b53c-e82ada70cda1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0888064a-17b4-46c8-8bd4-110da146731b"
        },
        "item": {
          "id": "3c27d05e-7217-4553-8336-6d94b2fffc67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e9edf2d6-c190-4b0f-86c1-cfc491294d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e582fc10-247e-4a15-91b1-33736e98b85f",
        "cursor": {
          "ref": "af9ed438-6757-4bf6-84d6-67803ed77999",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe546b87-62e9-49c8-9d7c-e2bcc0d2e601"
        },
        "item": {
          "id": "e582fc10-247e-4a15-91b1-33736e98b85f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9f5e4dfd-659e-422c-ba4b-dc502ce9ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5885f5e2-d677-46a4-bff4-24e0611835b0",
        "cursor": {
          "ref": "57b146b5-f65c-4434-9c77-ba85e852c5e4",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bfd6d56e-1d9d-4dc4-b6ae-5edb425ed8a9"
        },
        "item": {
          "id": "5885f5e2-d677-46a4-bff4-24e0611835b0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "06e2672a-0d26-4217-bcbe-325305f387a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e5e289-e148-4dae-9431-10b5d3558ac2",
        "cursor": {
          "ref": "c21d631e-3f2e-4b5c-bf08-679959763d8d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3e4ec323-261f-4e69-8892-2f662e7f72a6"
        },
        "item": {
          "id": "42e5e289-e148-4dae-9431-10b5d3558ac2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a03596ca-89d7-40ff-b80a-22cf3e739a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c0df89-838f-4e6a-8884-485ef11310fd",
        "cursor": {
          "ref": "8c3363f7-ce87-41a5-8b9a-af3e97011103",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a0efdf8-0263-4a51-af4f-127e30e3d312"
        },
        "item": {
          "id": "53c0df89-838f-4e6a-8884-485ef11310fd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8f1a863f-fa3d-4cdd-9a75-cc3e882f9f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f648ffac-5acb-4075-82d9-2c97877990bf",
        "cursor": {
          "ref": "5fb74b6c-35cc-4e22-84db-94e3accd62d2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8aba86b6-9b2e-47db-a280-bbb16d45619e"
        },
        "item": {
          "id": "f648ffac-5acb-4075-82d9-2c97877990bf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2eac2ffc-e755-4f86-8e01-3244cb6fbb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cded7f5-abb0-4cad-9148-2491b1f15e1b",
        "cursor": {
          "ref": "eccc8409-1e15-4f56-a2ed-5e875dc96951",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "45441d8f-4f11-408c-8ea1-102d5fe4e451"
        },
        "item": {
          "id": "7cded7f5-abb0-4cad-9148-2491b1f15e1b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "359e881f-af96-45c8-a4dd-b3f2f14088dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c91ee1-f694-48b3-bcf1-8dc94fcf299c",
        "cursor": {
          "ref": "cf15d036-fc76-4279-b2ee-53bc9aae8230",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1662c56d-64d7-45a0-bca2-93f7c2b3eaab"
        },
        "item": {
          "id": "05c91ee1-f694-48b3-bcf1-8dc94fcf299c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5aa8ab4f-73dd-48a6-9003-acdc3ba53038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25fe466-e526-4bb3-bb13-4b499788bdac",
        "cursor": {
          "ref": "02c41ce8-df60-454f-841f-eed98df784c4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8538e80d-0b73-48e1-9eaf-ce24277e2669"
        },
        "item": {
          "id": "d25fe466-e526-4bb3-bb13-4b499788bdac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "49efa000-f4b4-41a4-9f79-1dd0a8394473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee90f73-69e5-4061-b4ef-257dd14f933a",
        "cursor": {
          "ref": "818e28ba-6f60-4642-b47f-b45260c231fd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e47e57f8-c0cc-42b1-80a8-fd0209fdda9a"
        },
        "item": {
          "id": "bee90f73-69e5-4061-b4ef-257dd14f933a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5bb38321-f12e-4fb4-bb79-0216efcede75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe78db10-33b8-47d3-bcbd-444c34c83b8f",
        "cursor": {
          "ref": "54cda2e8-9361-4d65-9fbf-99208dd0c655",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f0c189fb-2a13-4f13-84f4-d3c8b98a2c46"
        },
        "item": {
          "id": "fe78db10-33b8-47d3-bcbd-444c34c83b8f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "660d37bb-d7fd-4cc3-932b-471194c2082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320486f3-5f31-468f-b8a7-b953f953e1d5",
        "cursor": {
          "ref": "fee706e4-d787-4451-8cff-72d085ab6b41",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "481f90bc-1ade-4d02-bb13-c6fe319ebcd3"
        },
        "item": {
          "id": "320486f3-5f31-468f-b8a7-b953f953e1d5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d78dcf68-3892-4173-8943-956f39352569",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069219d-1d1f-40bd-830f-2f9f9eb38cd2",
        "cursor": {
          "ref": "ee657d5f-8c95-4f84-a080-517831427437",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7870f933-e68e-4b88-b2be-f69265393550"
        },
        "item": {
          "id": "2069219d-1d1f-40bd-830f-2f9f9eb38cd2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d54c637-b901-4b22-820e-bad20d4806cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc63b64-4323-4506-98cd-05df99bb3424",
        "cursor": {
          "ref": "ea533a85-ebbd-4e18-a6c9-7033e27303ac",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d6df1c75-bb02-4245-9a19-59f036efad9c"
        },
        "item": {
          "id": "8fc63b64-4323-4506-98cd-05df99bb3424",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8f6fffeb-80d7-4321-b308-c68132c17479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d425000f-ce73-46b7-a2a6-4a679c15efdc",
        "cursor": {
          "ref": "7e62edfe-33ed-4fa6-a936-7cfd121c439c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "805e0d7b-2f65-4281-b970-1e9b384945ff"
        },
        "item": {
          "id": "d425000f-ce73-46b7-a2a6-4a679c15efdc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6c29b255-d0a1-4890-929a-e96fc486bb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c784d77c-a928-4add-b8e3-16527404a54b",
        "cursor": {
          "ref": "4fe2baab-f2d3-4580-bad7-be7c900ede3f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d4e766aa-7e6a-41a6-b563-10adce4b016f"
        },
        "item": {
          "id": "c784d77c-a928-4add-b8e3-16527404a54b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e761049f-f573-45ed-a603-5775b57722eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610284fe-d185-4e8b-aa8b-66d9fc0bef4c",
        "cursor": {
          "ref": "9cc7e419-b436-4db9-81ba-7d6109886eef",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fda32e9f-416e-47bb-85cd-7e74fadb23d8"
        },
        "item": {
          "id": "610284fe-d185-4e8b-aa8b-66d9fc0bef4c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d775d6ef-d07c-4de4-9671-f83b064c5a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75598699-bf92-4095-a000-baead5018cf2",
        "cursor": {
          "ref": "8b32d599-def7-4f7a-9ca4-fbce4ff3e94c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "34215a3c-c71c-4aeb-a083-69fb61e33754"
        },
        "item": {
          "id": "75598699-bf92-4095-a000-baead5018cf2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6fc7ee5f-e683-4d97-bfff-51837a9b1fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2427f3d5-8c54-44c0-8ae7-b1196786b8d2",
        "cursor": {
          "ref": "c81c4d4a-12d3-4abf-b172-12dd15e30373",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3338b44c-2e64-4ef0-8b9e-a9d9853cf0fe"
        },
        "item": {
          "id": "2427f3d5-8c54-44c0-8ae7-b1196786b8d2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b2549bf5-c9d1-41c1-aa3c-54b4970bbe77",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c54af7-9deb-4e19-a158-58233f836ae5",
        "cursor": {
          "ref": "a8d327e7-ca54-4c91-b518-2e277c199f01",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bfb09e89-10dc-44bc-b7a2-7c43f9b76536"
        },
        "item": {
          "id": "49c54af7-9deb-4e19-a158-58233f836ae5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "705fdcb3-121a-4a8a-9595-8b3c37a984cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202e54c-4b97-45dc-ad61-d06ec3e9d3bd",
        "cursor": {
          "ref": "224b094b-5693-400a-8516-a51a8c958aa3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "be970faa-8121-4c12-bebf-f10970b85ac7"
        },
        "item": {
          "id": "a202e54c-4b97-45dc-ad61-d06ec3e9d3bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e8a2227b-79eb-4461-903c-db697e5566e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fbac7c-aa65-4485-9881-7bb4cf1f6fc1",
        "cursor": {
          "ref": "daa1c952-6f2e-4126-ace4-13c9b138e1cc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "885f8bb5-bf8d-4cbf-9c05-c08c1a010619"
        },
        "item": {
          "id": "77fbac7c-aa65-4485-9881-7bb4cf1f6fc1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b14409cc-0d62-4034-9788-42fb5f582a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2d7597-2f8a-4682-92b2-5d555c61704a",
        "cursor": {
          "ref": "2b885a51-f5b7-4ea6-9448-4a733165db12",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0da15520-089f-4803-b4a1-e2f502385b47"
        },
        "item": {
          "id": "2b2d7597-2f8a-4682-92b2-5d555c61704a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "140de9e6-5676-482d-a571-e216ad6631f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc457465-46d8-4fbc-9777-43c1cd9200da",
        "cursor": {
          "ref": "eb75657a-d0eb-4032-81a7-ed7aa63ee678",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1c811143-854f-4e58-a291-fb220c535e9f"
        },
        "item": {
          "id": "dc457465-46d8-4fbc-9777-43c1cd9200da",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "77a5bfef-0639-4f52-a63f-c09a2e5da191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10013dc7-ae94-48ac-a294-181cb6afc6f6",
        "cursor": {
          "ref": "c858ea8f-6dc3-48f9-9feb-ba7f527b7d05",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b6124c4c-e34c-4599-9eda-5989a01f4d44"
        },
        "item": {
          "id": "10013dc7-ae94-48ac-a294-181cb6afc6f6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "87bb7186-ecba-4671-93e1-361537794940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b341a2f-55f1-4792-9155-ebbbac6772f1",
        "cursor": {
          "ref": "219e3a95-ba77-4982-b9b7-6dde01ed3b07",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "68c9cdac-cd5b-4aa0-ace7-07cdb1c6a81d"
        },
        "item": {
          "id": "9b341a2f-55f1-4792-9155-ebbbac6772f1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bfd373f2-3ebb-40a7-bde3-684f3a51fe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71349e72-8071-4a8e-898c-cd74da269686",
        "cursor": {
          "ref": "a1d0440c-6f57-4b87-8966-8ec59153b5c6",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d124f47-b185-4828-aace-1a2f0019eb09"
        },
        "item": {
          "id": "71349e72-8071-4a8e-898c-cd74da269686",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "acd57850-dd89-4381-8648-6a990a5a4e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bab937-a90b-4db9-b21e-2aa4b4d9f1af",
        "cursor": {
          "ref": "e89f1381-5594-4d24-9c2f-5e1baf77166d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8676b03a-2d25-409a-8e49-b386f0c9b105"
        },
        "item": {
          "id": "d3bab937-a90b-4db9-b21e-2aa4b4d9f1af",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df69a66c-8542-4af3-a94f-0669905d0b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a43a9-7279-45c2-894b-acd3ebd49f4e",
        "cursor": {
          "ref": "2329af24-034a-4072-9338-ec49d0d3f85e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "224270e0-a884-4fc9-9def-69ca865e4edb"
        },
        "item": {
          "id": "707a43a9-7279-45c2-894b-acd3ebd49f4e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21221c91-0121-44e1-9835-20c3fca276cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a676237-324d-4714-9b09-ebafeb97a799",
        "cursor": {
          "ref": "aae0f822-d706-4a13-89b2-22a9feeff429",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eb3ad8e3-48f5-43af-9df6-2eacac97c894"
        },
        "item": {
          "id": "2a676237-324d-4714-9b09-ebafeb97a799",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89f23c33-cc07-4c8c-9ea0-91db8b3140fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db7fe29-c4c0-4aa8-bcb7-16af1ca720f8",
        "cursor": {
          "ref": "e89016a8-c58b-4897-a598-063a9d6d5e78",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "97dc01a4-ce88-4d21-aee3-048e0626a45b"
        },
        "item": {
          "id": "1db7fe29-c4c0-4aa8-bcb7-16af1ca720f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "588ba6cc-2549-4418-b9c4-6abe8928e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c381990-2251-4ccc-8cee-ce43d7298a7d",
        "cursor": {
          "ref": "5e42046f-25f0-4d08-9823-7ca6d5991189",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2524ab4b-17aa-4334-9056-43fae1ebe987"
        },
        "item": {
          "id": "4c381990-2251-4ccc-8cee-ce43d7298a7d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7688c6ef-56b8-4b36-8600-b99e68bbb5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ab85a1-3aeb-4038-a041-eafca0dbb2b9",
        "cursor": {
          "ref": "434ee289-2fca-466c-ba3f-85748f1e79df",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1ad1eecf-1ee5-47b7-8af5-cebc62e83077"
        },
        "item": {
          "id": "55ab85a1-3aeb-4038-a041-eafca0dbb2b9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e76b9b90-3f5a-452c-9ce9-743320fbe22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b56cc-6132-49f8-892e-b03063b32e1a",
        "cursor": {
          "ref": "8bcd3f58-6c3b-4a04-90a9-6c1bc2f2c3c1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1bd179e3-7de3-4ec7-8f94-0c40cf1cdbce"
        },
        "item": {
          "id": "e25b56cc-6132-49f8-892e-b03063b32e1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "292dd9fb-49e8-4194-979c-ce87b309c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590b9d64-2fc5-4592-8f7f-32bea536db0a",
        "cursor": {
          "ref": "230afd9c-c698-4a44-b41e-546750030a41",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1ec368d7-ef59-4d8c-875b-307dc466e2cc"
        },
        "item": {
          "id": "590b9d64-2fc5-4592-8f7f-32bea536db0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1276380a-fecc-4d37-9087-5875ba346b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0a59af-bf20-492e-890a-b51c51a3170e",
        "cursor": {
          "ref": "2a6e1896-4aef-4844-9a1b-c051bf9b7c16",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c8396e94-6f65-4b93-89d2-b71eeadd6ffa"
        },
        "item": {
          "id": "be0a59af-bf20-492e-890a-b51c51a3170e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a36a6da7-f27f-48bc-bfc3-2455eb6ddc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd1fb8-90a7-4eba-a7bb-7bb54a68169b",
        "cursor": {
          "ref": "5756f9fd-950b-424f-8101-e8b5ae82d28a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "af41db58-15af-4bec-960a-f45d41968696"
        },
        "item": {
          "id": "90fd1fb8-90a7-4eba-a7bb-7bb54a68169b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0dcb9d9f-e50c-4630-8278-c541fd814e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d4f15a-4242-44a0-adb6-2a9dced5871d",
        "cursor": {
          "ref": "39d14530-56ad-4195-9e09-ef0e58b985cc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f4bed084-77c9-4281-b0bf-94fb794991c6"
        },
        "item": {
          "id": "95d4f15a-4242-44a0-adb6-2a9dced5871d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "413aef37-dce7-4627-8f86-f5813389ca79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd469a26-af1e-4e6b-a3e0-0dd8465bb60a",
        "cursor": {
          "ref": "779fe2eb-6073-4740-ada4-309e41525649",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e6ad0086-5025-4f0c-bdb4-0c97f373e07e"
        },
        "item": {
          "id": "bd469a26-af1e-4e6b-a3e0-0dd8465bb60a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c8e6befc-fbc2-4e23-a3a2-976fc51ce52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce0bfbf-af64-4d61-961a-5ba4557750ae",
        "cursor": {
          "ref": "213485eb-f4ea-4f67-a2d1-7a5eaa9d3264",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd4cea1a-8598-4d60-b2ca-112c007d853e"
        },
        "item": {
          "id": "bce0bfbf-af64-4d61-961a-5ba4557750ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "50fe8109-a2fb-4d08-899e-452b64dfda13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a867aa-589a-4857-b652-f8c0ea323136",
        "cursor": {
          "ref": "c644725f-42b0-4abd-bae9-58ce837ba282",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e603c66a-a48f-44ed-b868-92d2f6efff1d"
        },
        "item": {
          "id": "69a867aa-589a-4857-b652-f8c0ea323136",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "691c7cd8-92f2-4282-bc5f-80f94fa690fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd697e7-7d15-4e72-af9f-9c0efd7bd23c",
        "cursor": {
          "ref": "76d3d639-ebe0-4611-81f3-3b6c8ec22ac2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18228a38-5eb1-4bf0-87d5-3ea3d6d17c4b"
        },
        "item": {
          "id": "8fd697e7-7d15-4e72-af9f-9c0efd7bd23c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "60a700d4-0e0c-4f74-85d9-f49e2833b0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e720b3-baa3-4389-84ca-763fd8c332f0",
        "cursor": {
          "ref": "0bcd9fab-192a-4682-ba2a-88c66960e126",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1577c31e-0eda-44c0-aed5-1067a513c7d8"
        },
        "item": {
          "id": "72e720b3-baa3-4389-84ca-763fd8c332f0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "143ea64a-603c-4c54-aeaa-05969a236640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deb1a12-acc8-431b-8932-a57ebbefc853",
        "cursor": {
          "ref": "ce33e8c5-559f-408b-b9e7-cdc8fa72aca0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da80d99c-e8fc-48a8-a3fb-2acfcddec80a"
        },
        "item": {
          "id": "2deb1a12-acc8-431b-8932-a57ebbefc853",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5ddd4df-41c6-43ca-8f21-ed095ad3a765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b4057-dd29-428e-b9fd-f42dcce180a1",
        "cursor": {
          "ref": "51c8a8c2-23c9-452e-897b-6ab8ead9ddc3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4050ee98-2bef-4ef3-bc96-03e944fea350"
        },
        "item": {
          "id": "ea1b4057-dd29-428e-b9fd-f42dcce180a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ecdc73b-a1fe-46f2-af68-c382b7357ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b4c7a0-fe08-4873-8bed-673653961b6e",
        "cursor": {
          "ref": "7cde1d59-4919-40fc-80f2-b736eed35850",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c45a1dfa-1017-45bb-9681-a5ea805e5baf"
        },
        "item": {
          "id": "78b4c7a0-fe08-4873-8bed-673653961b6e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6f3fd760-5892-4906-b64f-b6684978bff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552217bd-2215-4006-a014-16a8da5b2bcb",
        "cursor": {
          "ref": "d444816b-a25e-4a79-8778-3aa73abb3799",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12ec6a09-b100-4e6c-bc24-925dc84360de"
        },
        "item": {
          "id": "552217bd-2215-4006-a014-16a8da5b2bcb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ac42d029-09c0-4604-aaee-a9cdbe376d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77c0c3a-0c86-48d9-aa48-fa6c282ce456",
        "cursor": {
          "ref": "af8f6566-65ad-4be8-b85d-76b4d5e92b3c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9191485-6ece-4efc-bf98-c0beabfb6865"
        },
        "item": {
          "id": "a77c0c3a-0c86-48d9-aa48-fa6c282ce456",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fcaf36e6-55e5-43e4-9622-50c5d105ba73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ccd73e-b538-48b6-8494-52d490c5d3e6",
        "cursor": {
          "ref": "8c02883b-2dc7-4d6f-ad9b-31d217967e6f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9449534f-9069-48c2-ac12-2bea6aaeebe2"
        },
        "item": {
          "id": "02ccd73e-b538-48b6-8494-52d490c5d3e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b411d81-a5fb-40be-b7ae-5159a9cc3d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93205548-920e-44c7-8b05-7ca71342c4d6",
        "cursor": {
          "ref": "d2ca52f8-a21d-4bd5-a8f5-2c85fc7c4d5e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0cc40803-c172-424f-8a0b-e95f69629991"
        },
        "item": {
          "id": "93205548-920e-44c7-8b05-7ca71342c4d6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b3923e4-f5e1-44c3-b227-d45a3b4f2bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd02af52-af4b-44f9-ae3c-08e780c4d8a5",
        "cursor": {
          "ref": "3ada0c75-face-46f0-8dcd-f4595097490e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "463beb55-084c-4d26-9b6e-121113e7ebf0"
        },
        "item": {
          "id": "dd02af52-af4b-44f9-ae3c-08e780c4d8a5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e55a8837-8ac9-4688-a348-7c1c3df30ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4bd528-bc2f-4e57-81d1-a766687fb0d6",
        "cursor": {
          "ref": "ea208152-ecac-4db5-b0e4-846d77e4abdd",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8ab4212a-bb6e-4abb-af4f-451b33617650"
        },
        "item": {
          "id": "cc4bd528-bc2f-4e57-81d1-a766687fb0d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8cd81eb4-fb8b-4ce3-a7e6-dd3c67a9e693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bde5bb-f8f8-4d3a-8982-c3ce0ab75405",
        "cursor": {
          "ref": "6683d835-08f3-4164-86d6-bf1505fcd42a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b1559e1b-f58a-4fd2-a676-698b05b49336"
        },
        "item": {
          "id": "e7bde5bb-f8f8-4d3a-8982-c3ce0ab75405",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "040bdf77-7ab1-4653-81a2-dfeaf511eba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e36499-6581-4561-9094-d7137cf58c40",
        "cursor": {
          "ref": "93d2d781-4b6e-4169-b6c1-b7946d7277d7",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "827ed67c-112e-4c3a-8f30-6c27ec12c602"
        },
        "item": {
          "id": "67e36499-6581-4561-9094-d7137cf58c40",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "454c33a8-12e7-40dc-b121-e4dee85f8658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2b243-a1b7-4c85-8a30-24db7ce89c32",
        "cursor": {
          "ref": "789a943c-b276-4259-91f4-43c367d6167e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2524b0b-6524-49d8-95cf-4e3894b6d9c1"
        },
        "item": {
          "id": "88f2b243-a1b7-4c85-8a30-24db7ce89c32",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83fae048-a78d-4b05-b075-855862eabb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11ed5c7-2653-4fc7-af33-dc5f3d124a1d",
        "cursor": {
          "ref": "01c16268-9668-486f-8a89-7c1498bde133",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e096234-1d52-4349-949c-b4181ca8a96c"
        },
        "item": {
          "id": "c11ed5c7-2653-4fc7-af33-dc5f3d124a1d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6b1708d1-d9c7-435c-87c2-37216db8d3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c585e1ef-98ae-4e98-a507-824dec74cc17",
        "cursor": {
          "ref": "a2ea75ed-52d4-460c-865f-e62a790f679d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19c9548c-9225-48e0-ab1d-676a3004dd0f"
        },
        "item": {
          "id": "c585e1ef-98ae-4e98-a507-824dec74cc17",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3230bae-a59c-423d-80b9-95e64351ec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1517a1fd-3cc5-478b-a93e-ebf8313e86d7",
        "cursor": {
          "ref": "eb6fab48-6d17-4731-872f-e04439dbd12e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac8661a8-15ab-4f64-8940-642e6625c1d2"
        },
        "item": {
          "id": "1517a1fd-3cc5-478b-a93e-ebf8313e86d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c9ee4ab-be60-4f21-a107-ff49106a9a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854a2aa0-1859-485b-9505-15a351d1585c",
        "cursor": {
          "ref": "973285be-1b95-415c-af8e-c35e1c9400a4",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "70f339e9-488c-4460-b8ab-f20e735fea9f"
        },
        "item": {
          "id": "854a2aa0-1859-485b-9505-15a351d1585c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "95a406b4-6d4d-4722-9ea8-c80dd556e738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e31307-05ae-4925-b553-8a7a11700aa5",
        "cursor": {
          "ref": "1648af43-e555-4e5c-8f7c-f0fa432f166b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0975bae1-6c6b-48bb-863a-be9943ec1b64"
        },
        "item": {
          "id": "c9e31307-05ae-4925-b553-8a7a11700aa5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bce4c271-a8bd-4c08-b2a7-b10101ce9246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12925492-e8b2-4afc-8302-83f4573fafe3",
        "cursor": {
          "ref": "786f9e30-385c-4996-a827-af8977f7ae9b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44b0c97e-de72-4d21-b28e-2bd40c14c474"
        },
        "item": {
          "id": "12925492-e8b2-4afc-8302-83f4573fafe3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c173d2e7-5c25-44b8-8a47-503e7b490403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac13d4-30b3-4d46-b6a6-c1d89b37d449",
        "cursor": {
          "ref": "05cbb1af-e1a9-4dfd-ad4a-41dc52a3631e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3c9c3e50-7d80-495a-a073-2f2daed1d489"
        },
        "item": {
          "id": "a8ac13d4-30b3-4d46-b6a6-c1d89b37d449",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d1dee39a-7466-4c14-b6bd-3fe43f1a13c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4b588-adc2-4a4f-b61e-59d83cbcc312",
        "cursor": {
          "ref": "0d24e5d1-232e-4586-ba0d-b8177a300711",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cf62ed21-418c-45c5-843a-e584810a88be"
        },
        "item": {
          "id": "a2e4b588-adc2-4a4f-b61e-59d83cbcc312",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ea2fbd9c-27d6-48d3-8cf2-d102fada50fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb95ea4-b850-469a-a186-5cdabcdd3f23",
        "cursor": {
          "ref": "042782c6-4450-4997-b006-ca18b2f23189",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6e7f8610-b503-4b60-825b-451fe09ee822"
        },
        "item": {
          "id": "ecb95ea4-b850-469a-a186-5cdabcdd3f23",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "06521881-eb3b-4b96-852d-48d94ec53dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9ad2f3-0a91-4ba5-9e2d-360a4697f90a",
        "cursor": {
          "ref": "abfe84c9-5a6c-48f0-8b62-934f93063fae",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a7c8abd9-61ba-481d-b26f-49069ebb4e6a"
        },
        "item": {
          "id": "ac9ad2f3-0a91-4ba5-9e2d-360a4697f90a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "65055bc4-7a61-44d9-b4ee-66006b23f420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb2a61d-f015-4b2d-bad2-e54b46aa77b7",
        "cursor": {
          "ref": "920f4c1a-dee2-4778-80b1-09063006df69",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3145602d-84b5-4eb8-8670-96a7fba21331"
        },
        "item": {
          "id": "6cb2a61d-f015-4b2d-bad2-e54b46aa77b7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e7400090-3b3d-4c58-a4ee-fe384d556b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52114787-7a3e-4bb5-80db-3aca4810846b",
        "cursor": {
          "ref": "19c69d43-4981-4493-8ea5-0039a253c15c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c078ca88-1114-42f5-827f-1a9acd41c410"
        },
        "item": {
          "id": "52114787-7a3e-4bb5-80db-3aca4810846b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ebac915e-171c-4986-847c-6382fdeef631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d91fb3c-8931-423a-938d-0129b4d0475a",
        "cursor": {
          "ref": "12e75a78-9d97-4c9a-a78d-72574bf2440a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "07e60838-bbeb-4cad-871d-c3c13c0fefb4"
        },
        "item": {
          "id": "8d91fb3c-8931-423a-938d-0129b4d0475a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "333bb84a-3041-404a-aa6d-ac0be7cf7f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6268ef0f-6319-460e-8cce-d808e3f3e8c6",
        "cursor": {
          "ref": "e8ea211c-6855-4d40-9a4a-469797655034",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2cf7cbe8-8e97-470f-8114-63c5b515b443"
        },
        "item": {
          "id": "6268ef0f-6319-460e-8cce-d808e3f3e8c6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1a69fcb-bb64-4d84-a12b-7447c380c914",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96081a6c-202e-4f5f-b7e9-c443b548b0f3",
        "cursor": {
          "ref": "d58f6481-4047-4f19-a751-c26b821ae9c7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2318f0d-9f7f-4273-8223-c73ab00bdfbc"
        },
        "item": {
          "id": "96081a6c-202e-4f5f-b7e9-c443b548b0f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6ad716c1-56c7-44fe-b1c2-9d7c4a163a18",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "088fd43d-6f45-496e-9dd9-befaf92323b0",
        "cursor": {
          "ref": "9c19ad18-23a7-4dcc-982f-7a9ae3caa470",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e74df695-1dab-4f40-b29c-cea584d3613d"
        },
        "item": {
          "id": "088fd43d-6f45-496e-9dd9-befaf92323b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dd55be33-e3db-4395-8e94-29a279147b7d",
          "status": "Created",
          "code": 201,
          "responseTime": 233,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd40e2d-3f45-4f03-a899-b2b3c2df1864",
        "cursor": {
          "ref": "53db6f6e-d24e-457c-82e2-b5d64ea8ee26",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e8232002-d481-463b-a385-b476deb8ef22"
        },
        "item": {
          "id": "4cd40e2d-3f45-4f03-a899-b2b3c2df1864",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15e5c8c9-cdc8-4a2d-88d1-321ce3fd8ba1",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "806308cf-5be6-4774-85a2-7da80f7610f9",
        "cursor": {
          "ref": "a5780d3f-9d0d-4350-81e5-3bdf9fe4ace0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d26609e6-ed20-492c-97e9-6c13ad8b8479"
        },
        "item": {
          "id": "806308cf-5be6-4774-85a2-7da80f7610f9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b74cb941-8c61-4bfc-a6b3-7222eedb61a1",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85643404-dc8b-42bf-a5c6-59500e706c88",
        "cursor": {
          "ref": "de52cac6-bdb1-45e8-9fb0-d98065f5d757",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "489c742c-6f4e-4e6a-9497-12194a0be914"
        },
        "item": {
          "id": "85643404-dc8b-42bf-a5c6-59500e706c88",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f50ada74-b290-491b-8aa3-36902cd45129",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d648878d-3380-447b-b6bc-6e5788288fb0",
        "cursor": {
          "ref": "539b5273-b6ee-48fe-9f00-d0aa603604b4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8ad3e11-42b3-4705-b76d-93aca214cd7d"
        },
        "item": {
          "id": "d648878d-3380-447b-b6bc-6e5788288fb0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aa16be9c-41a2-4a7d-b719-d8a19f3d5157",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f40f82-a6ac-4748-9daf-0e7c6c77ea83",
        "cursor": {
          "ref": "6cc8aaa4-b149-48ad-9954-88d377605eaf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b19177d0-85c3-4967-b728-b2a8fe3f6551"
        },
        "item": {
          "id": "30f40f82-a6ac-4748-9daf-0e7c6c77ea83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69806a35-d809-48b7-9ea0-7468a2a205bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53406ed6-34db-4222-8991-4276852aba64",
        "cursor": {
          "ref": "2baa8ed4-66bc-4ebc-91ba-9ddb12083446",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f12373bc-7d4e-4dc9-8291-3ed8c92020a6"
        },
        "item": {
          "id": "53406ed6-34db-4222-8991-4276852aba64",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9da5a63f-c165-4fca-9e17-0a6dc24b2bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c256f598-4322-4dec-824c-07f8f7a90e0c",
        "cursor": {
          "ref": "35cafd45-f198-43d7-9380-4c70c229d201",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c9de4813-9f37-4ef8-8be0-afb8638e3c7c"
        },
        "item": {
          "id": "c256f598-4322-4dec-824c-07f8f7a90e0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fe1b6109-d742-4714-9c67-1095f521ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458babde-395b-4fef-8ead-2d0b5551ddec",
        "cursor": {
          "ref": "11c35463-864a-4528-906d-3c49c5802f71",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a21ca8d4-61fc-4009-a7bf-0a0446a60ecb"
        },
        "item": {
          "id": "458babde-395b-4fef-8ead-2d0b5551ddec",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c5ec553e-9f5b-482d-9e7d-d3dd60a49f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1900a77b-0a1d-431b-9179-bdf0a5b418d6",
        "cursor": {
          "ref": "9498997c-00fd-4910-a555-8fc77bf87129",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "999fcec0-fad6-4e1c-985e-c9a20fe6c923"
        },
        "item": {
          "id": "1900a77b-0a1d-431b-9179-bdf0a5b418d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54108e36-83af-4a3b-8c39-a1853431f272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7e4218-81c2-4503-9d95-2791a821dbff",
        "cursor": {
          "ref": "cd0ed2ba-6e82-4b26-a2af-445db7f3f314",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bfd7e57e-b155-4be2-ae7b-7e49c5fa7dc7"
        },
        "item": {
          "id": "7e7e4218-81c2-4503-9d95-2791a821dbff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b0e9ece7-9826-436f-a4bb-fe14c05c6e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc567d3-1666-4305-9949-359cba74e59d",
        "cursor": {
          "ref": "1124f717-c656-4f1e-aebe-cd325a028458",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9d046e5d-803c-440c-8e04-db36fd0ab4f1"
        },
        "item": {
          "id": "edc567d3-1666-4305-9949-359cba74e59d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0eae003d-5d7d-4dc6-8d9f-e28c92ef0dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d040e4ea-9b5c-4f9f-989c-7779bc3f85b5",
        "cursor": {
          "ref": "f711d975-87ae-41d0-a196-96511fca23a6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "810cf1b0-bec2-4b2c-9fd8-bcd598cfe85e"
        },
        "item": {
          "id": "d040e4ea-9b5c-4f9f-989c-7779bc3f85b5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8aeb52d7-71b9-49d7-9ee5-4390bd70c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc53f07-8610-4063-a2ce-463bb0f9442a",
        "cursor": {
          "ref": "d151e7ed-f15c-4d4c-84fb-0cc5dc6ba1a8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1cf4614c-bb9a-43be-b3b7-3ff5dbe8b4ca"
        },
        "item": {
          "id": "cbc53f07-8610-4063-a2ce-463bb0f9442a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ed798934-06d0-48f4-90a7-d128455ef502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c1d72-8f0d-4add-a486-c0d99a9ff1f5",
        "cursor": {
          "ref": "6ecbf0cd-b8da-4c9a-bbd0-6b46c4dbef07",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca635a2c-991a-4e94-83e8-c4f088b4bb44"
        },
        "item": {
          "id": "bd0c1d72-8f0d-4add-a486-c0d99a9ff1f5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0fba3ff-4ea3-472e-8a88-633c03b07f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965b7bb6-9364-4d53-b282-2b878ee034f3",
        "cursor": {
          "ref": "12364a81-aa18-41e0-a01d-8096f30917c9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e5974f3-6e1d-47ac-9be5-a9e8d90a3a27"
        },
        "item": {
          "id": "965b7bb6-9364-4d53-b282-2b878ee034f3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7be0227f-feff-4daa-9283-0a72fb0d970a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fcf6f8-7fef-43f3-b283-f864623c32b8",
        "cursor": {
          "ref": "11a0d973-6c69-4032-aaf1-5ac7672bde7d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d40fe536-ed6c-4f51-9026-67558059de8f"
        },
        "item": {
          "id": "c3fcf6f8-7fef-43f3-b283-f864623c32b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c8346f1-56c6-4269-888d-62b8714617b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059e3352-5788-466a-aee8-dc81dd27667e",
        "cursor": {
          "ref": "835f5f57-ca0f-4dbc-9ccb-d81829fd82bf",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "762a89b8-30f8-46ac-b916-e83f914da210"
        },
        "item": {
          "id": "059e3352-5788-466a-aee8-dc81dd27667e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0021a3a9-387b-4d0a-95b7-3fc870840c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ddb83c-1c31-4303-830d-6a0783c0f392",
        "cursor": {
          "ref": "f03f2620-f596-40d9-9850-6fbb636a9ff6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "068810b1-b896-47e3-867f-0d051f241c65"
        },
        "item": {
          "id": "89ddb83c-1c31-4303-830d-6a0783c0f392",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "50de1358-d5dc-46a7-b2d0-c0daf72417dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e665d8-53a2-45d1-80bd-3cc4028922f6",
        "cursor": {
          "ref": "81c36ff5-1759-489c-8942-6960227cbd67",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f7b38009-eac1-41e6-977f-7f8536205d15"
        },
        "item": {
          "id": "41e665d8-53a2-45d1-80bd-3cc4028922f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fbcf66b5-ce82-41a6-a444-79b62715aa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec62c13a-9bd5-46a2-89b6-b078a9254641",
        "cursor": {
          "ref": "ec09ae26-2640-4e21-a01a-8452f27e75de",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92c7549d-dbbb-41b2-acf2-d83ea6cc52ae"
        },
        "item": {
          "id": "ec62c13a-9bd5-46a2-89b6-b078a9254641",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d00d94a-8540-4b2e-991b-2ed1943290e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f12680-ed4a-4cbc-8517-61c272b1a7a7",
        "cursor": {
          "ref": "7240a2cd-bfa3-47e9-872a-c9df4bff3fd6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1fb7792d-237c-4862-a9cf-9aeda31707d5"
        },
        "item": {
          "id": "95f12680-ed4a-4cbc-8517-61c272b1a7a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e26eec6d-732e-41e8-998e-1caec2f8ec89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eaa71d-6ef0-4ab1-953a-d9982ad04112",
        "cursor": {
          "ref": "a3856d88-b3f8-49fe-a771-e7d6db829c31",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d9f3be5d-7261-48c0-a0ba-7419796c30ea"
        },
        "item": {
          "id": "e8eaa71d-6ef0-4ab1-953a-d9982ad04112",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae746410-7387-4233-bc77-3448d801646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961ff0ff-844d-4a20-a4a0-41054b9d119c",
        "cursor": {
          "ref": "045c819e-2b06-41ab-9cf8-8bcc68a83b67",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1a8f53a8-249e-49c8-974f-dcec28ae9bff"
        },
        "item": {
          "id": "961ff0ff-844d-4a20-a4a0-41054b9d119c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb7b2675-fd56-4bf6-bbe1-70b4e38c3168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f8fbeb-4c52-40b5-be77-07a02e54de0a",
        "cursor": {
          "ref": "b5e0d244-4194-4937-8606-af59af6510c0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc340b9f-1281-43a1-b7cd-e7344da3c971"
        },
        "item": {
          "id": "06f8fbeb-4c52-40b5-be77-07a02e54de0a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa420e1c-c4eb-4377-8da2-dcd3101d1ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b94a098-9705-4bf3-ae5a-41813d18b6f3",
        "cursor": {
          "ref": "8c66ed29-a6ba-4bac-88e8-96349bd6f161",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e1a4b96-30a7-4b02-86b0-f850a0765ecc"
        },
        "item": {
          "id": "6b94a098-9705-4bf3-ae5a-41813d18b6f3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbcdda59-1195-4a34-ac0a-df61196755f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b084b9f-36ca-4b01-afbe-1f2eef393171",
        "cursor": {
          "ref": "b701abdf-0872-4d0c-a630-fae18d058cf7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "433322e3-269f-4c9d-aa45-9a97b0d9802c"
        },
        "item": {
          "id": "9b084b9f-36ca-4b01-afbe-1f2eef393171",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9591ace-f7fb-4f8a-a79f-64e985d1f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3aed1f-6412-4242-a353-be344fee892c",
        "cursor": {
          "ref": "85ec369f-2c77-458a-8272-fe1bfaff4f1b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "084cfa54-bb9d-45eb-a5cb-833a9e2b36ab"
        },
        "item": {
          "id": "7f3aed1f-6412-4242-a353-be344fee892c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5ef78df0-fa8f-4404-ac13-0fe846a6cdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07388ec-28cf-4738-aeaa-2c6e058a5a6d",
        "cursor": {
          "ref": "2a3d70b1-627f-440e-83bd-c8b03ede2753",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ab38aed0-9479-4f7d-8eb3-45a4804a6110"
        },
        "item": {
          "id": "c07388ec-28cf-4738-aeaa-2c6e058a5a6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3069b1a0-0b82-492b-8afd-91479f99c521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038d7731-453a-412f-a214-e374ab38eb1b",
        "cursor": {
          "ref": "6aec00bb-8802-4778-9cfd-229875bb950d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03616db5-0f3e-42e2-a660-7eb7e648d539"
        },
        "item": {
          "id": "038d7731-453a-412f-a214-e374ab38eb1b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "218e6424-e71b-4e89-9308-00bc0656eee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9f512-17bb-4629-80ef-a9d85c10f430",
        "cursor": {
          "ref": "078bfa6d-8726-40a9-98b0-a85750456de6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ea34894f-0f38-4f19-8ae1-8eb38c7f3483"
        },
        "item": {
          "id": "d9e9f512-17bb-4629-80ef-a9d85c10f430",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0aa571a9-7bf5-4240-a0ab-351882e65c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348ba1f5-138e-482d-ac9c-711f1320707c",
        "cursor": {
          "ref": "9918407c-0dea-465c-be96-2e1aeb899d3b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aafe0fe4-a777-49a5-91df-1825c1358ad7"
        },
        "item": {
          "id": "348ba1f5-138e-482d-ac9c-711f1320707c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "265060db-4833-46ab-9b0b-be666293738b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1f44e2-1506-4ec0-80e2-df5eb45c5b3d",
        "cursor": {
          "ref": "afcc6d5d-9b60-414b-a8c0-0287836bccf6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0f862bee-9ce6-4e7e-bff4-c399b518c19b"
        },
        "item": {
          "id": "9c1f44e2-1506-4ec0-80e2-df5eb45c5b3d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8abd9ef8-1190-42be-afae-434c3d3e30b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a4d275-2036-42f6-bd89-3bbc2c9d15fe",
        "cursor": {
          "ref": "f1639339-3bb8-4c9d-86ff-dd4e5559e9cb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c83d0632-3023-46c0-ac90-fd975f865e3c"
        },
        "item": {
          "id": "15a4d275-2036-42f6-bd89-3bbc2c9d15fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8821dc9d-b922-49de-a8b3-2e4268dbec84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ad1dcd-343a-411a-a2b0-d0052fa3ba0d",
        "cursor": {
          "ref": "715ce739-970c-4525-b50f-103636d7242c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c111435d-eaae-4332-8554-614356759466"
        },
        "item": {
          "id": "a4ad1dcd-343a-411a-a2b0-d0052fa3ba0d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0ce69322-69ea-4d70-b5e4-e8cee0ee700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220a438-d3da-4078-8462-4ddafc21d7e9",
        "cursor": {
          "ref": "1c4c2616-8517-47eb-b7f8-9786628855a5",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b3d407f-97da-41d7-b2e2-f170a386658e"
        },
        "item": {
          "id": "9220a438-d3da-4078-8462-4ddafc21d7e9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d0d2004-b826-4e3a-ad9d-a6921ed55bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694a316e-15fc-43f2-8c8a-20433c9b1dee",
        "cursor": {
          "ref": "7e430c07-ccc6-4498-801e-7c3de32b3ab3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "84c65bd1-b410-4176-92fe-4833ceed3e9c"
        },
        "item": {
          "id": "694a316e-15fc-43f2-8c8a-20433c9b1dee",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a3f5b5b5-8d26-4def-b6e7-95f709db5dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5002e24-965e-4edd-8f6e-36c7dac32370",
        "cursor": {
          "ref": "88c1a201-5762-4dad-8c36-d2b9cd12b4ba",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5070086e-f25e-44c6-b8fc-0bdee36f9ec9"
        },
        "item": {
          "id": "d5002e24-965e-4edd-8f6e-36c7dac32370",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15a9d781-0e26-4516-be40-280a5351c379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c201466-b73a-41e4-af38-cb4a041a26df",
        "cursor": {
          "ref": "22ed899c-edc8-40cf-a264-dce90aade489",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4a183b2f-0554-4da7-8ca8-ad82086b318b"
        },
        "item": {
          "id": "2c201466-b73a-41e4-af38-cb4a041a26df",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6e97c0a6-e0d4-4d8c-9e21-e94e3190089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c08e684-c763-41bc-8989-d44f450e2fa0",
        "cursor": {
          "ref": "8dc3d38b-579f-44d9-8a7b-415c9a671c9a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4ee9f7c-6d6f-4ff4-9e99-74a650c5c991"
        },
        "item": {
          "id": "1c08e684-c763-41bc-8989-d44f450e2fa0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65de063c-6dd7-4b0e-8388-00064152c590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ff22c-a362-44f1-be8d-02452540df64",
        "cursor": {
          "ref": "828493a2-172b-472c-b82e-6e5d613fb67a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "79795b8d-9b62-46a3-b493-cda2d42eec97"
        },
        "item": {
          "id": "b68ff22c-a362-44f1-be8d-02452540df64",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "60310ce1-99c5-4d4b-9e27-a16a2547c11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cbf6f6-5526-4b96-b5fb-74928d953ed9",
        "cursor": {
          "ref": "42320269-d17f-41d2-9201-5693522656e2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b37b2149-0eb9-40b8-847b-32f266c4f956"
        },
        "item": {
          "id": "82cbf6f6-5526-4b96-b5fb-74928d953ed9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c195af9-ec41-4f0b-a5d4-94440f0286bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f4a18-b6b9-4b2c-bb22-779a9b47a68a",
        "cursor": {
          "ref": "ab062b76-1efc-4efc-8ddd-0d2fe1f9f509",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ff4d3a28-0a7e-411e-94c3-d1040bd36d02"
        },
        "item": {
          "id": "b87f4a18-b6b9-4b2c-bb22-779a9b47a68a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8cfbb6d6-26d8-4dea-bf34-0ceba72aa466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b936a60-e19e-473b-bd0b-b337c030f925",
        "cursor": {
          "ref": "0e0f5758-f0e7-4117-8297-146bc6ffc59d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "26b22c73-78d6-44b5-9f1f-c9faf537c657"
        },
        "item": {
          "id": "9b936a60-e19e-473b-bd0b-b337c030f925",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d8f91c5-ddff-4412-875d-ce1405f5686b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b497e-86f3-40a8-9502-a966bd65cb24",
        "cursor": {
          "ref": "7efc156a-bd8a-4338-8b8a-55bfe7705b49",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "91996636-3518-4eed-a834-4163b33479d3"
        },
        "item": {
          "id": "1f2b497e-86f3-40a8-9502-a966bd65cb24",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dec49dc8-fafc-4f30-adfd-b9a53fa19bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491184ee-a8bc-4649-9b3e-079e1ca644a7",
        "cursor": {
          "ref": "7b4aa1a6-8d17-4da6-b0f5-54d929f4f7a8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f89a81d5-7d86-4d67-a596-914651b43314"
        },
        "item": {
          "id": "491184ee-a8bc-4649-9b3e-079e1ca644a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "286f9892-284d-4015-a5b0-39ac9f8ea8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb6e6a3-bb53-4aa8-9c8a-a2e368a045c2",
        "cursor": {
          "ref": "c5ccdecc-3253-4c26-9cca-a2da6d971a3b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fad00ef4-c667-4197-993d-d88e3bc2c54f"
        },
        "item": {
          "id": "0bb6e6a3-bb53-4aa8-9c8a-a2e368a045c2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "90bcc202-5aae-4c94-a6ae-2249defcc61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ff4544-df5c-4c5b-8c76-1e5d9f5cbfbc",
        "cursor": {
          "ref": "3654a959-206e-4898-83f5-3ee92810b441",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ed7f3d01-1267-4974-bb7c-cd56c9ef611e"
        },
        "item": {
          "id": "25ff4544-df5c-4c5b-8c76-1e5d9f5cbfbc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c25cc486-ce07-42ac-84e4-133e3fc90e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8c0cce-2688-4eea-8082-f09bbaec2b02",
        "cursor": {
          "ref": "4fefea26-8674-445c-9c67-15d65339fd22",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2b8c8dcc-632c-4f45-8fc7-a8f24b728bfb"
        },
        "item": {
          "id": "3e8c0cce-2688-4eea-8082-f09bbaec2b02",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80144421-fe70-475a-924d-bd103c722a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63cbd88-d2b9-48e0-ac39-2aec9e3bbed9",
        "cursor": {
          "ref": "3ded9427-4342-4066-ab9d-c9f858be9ae0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f35fff9-cfc7-429f-88c4-f4404c90c26e"
        },
        "item": {
          "id": "d63cbd88-d2b9-48e0-ac39-2aec9e3bbed9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "210b002f-edcb-414f-9a03-b0d51503bf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d09dcde-dfe7-449e-9e52-0e2f4d84c8a3",
        "cursor": {
          "ref": "9bc6ef3f-1cbf-4941-b975-39ef548320bd",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "14a442c0-5a09-4e25-be18-0aacf0b9533d"
        },
        "item": {
          "id": "8d09dcde-dfe7-449e-9e52-0e2f4d84c8a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4074d9c-73d7-4641-a8a4-5044a9b08b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1235ab-a791-46b9-aaf1-64428a02094d",
        "cursor": {
          "ref": "d70800a9-ef5f-4c9a-8328-6d0a5be4285f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42ecdb3e-12f6-47e5-b70f-e384aa8520ac"
        },
        "item": {
          "id": "ff1235ab-a791-46b9-aaf1-64428a02094d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e85d9eca-28fb-4204-a262-e033bcb887cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b6115c-282b-44b3-8aea-04afdf12a96f",
        "cursor": {
          "ref": "8dce06f8-c2fa-4417-9d4e-94f790ac898a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "619682ea-b255-49b5-a918-90a7f59c633e"
        },
        "item": {
          "id": "88b6115c-282b-44b3-8aea-04afdf12a96f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "983fc5a8-eacb-4fe7-aaff-02b050848287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32df78ce-d599-4b1d-8157-2be87261d169",
        "cursor": {
          "ref": "a87bbd7a-532c-4dd6-b428-2767de94659c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dc132622-6750-45fa-9628-ae4ab90f68fe"
        },
        "item": {
          "id": "32df78ce-d599-4b1d-8157-2be87261d169",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c18d08b-bb7d-4f96-9c7c-1d9147839268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9268097-ea1e-4a94-ba29-1f4fcb1f5a91",
        "cursor": {
          "ref": "868dbe6c-ab7c-43ea-b2ff-f853caf00a62",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "943979fb-ebff-4a4e-a50c-a6c578271fa4"
        },
        "item": {
          "id": "b9268097-ea1e-4a94-ba29-1f4fcb1f5a91",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ca2b18a-5f20-4e7c-8a40-889f926afecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aaa6ec-3091-43b0-8d32-fe443a8ce388",
        "cursor": {
          "ref": "f9a4ee5a-b218-49e0-8e8f-fa433019189b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fdb4eae7-ccd8-45be-ae49-a0689b552b2c"
        },
        "item": {
          "id": "b1aaa6ec-3091-43b0-8d32-fe443a8ce388",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a7fcc9a0-8fd9-45e2-a51b-df4fef47fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06dd506-d30f-45f1-b489-83f11808889e",
        "cursor": {
          "ref": "9554c14a-5d49-4016-ae98-247d48feb120",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a54f2174-dc80-452b-8def-2e6da6326a8e"
        },
        "item": {
          "id": "d06dd506-d30f-45f1-b489-83f11808889e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e6ddda57-5a77-4165-bb11-6058be27509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcc81a7-a7cc-44e9-bf30-63cfc9652429",
        "cursor": {
          "ref": "4870ed09-f6ee-45cb-a5bf-9ba1e46a50b0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6b4e8f16-91c0-4ff3-acb8-8402c2271370"
        },
        "item": {
          "id": "6fcc81a7-a7cc-44e9-bf30-63cfc9652429",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0512ba3e-f5b8-4a58-83d9-6cda310f3a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55584c9-52c0-40f9-b594-393c7d7e2679",
        "cursor": {
          "ref": "10049589-d6f0-4bdd-9c8c-f3f5672bc254",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3dfe8833-81d5-4831-9e68-a08cd1c5492e"
        },
        "item": {
          "id": "f55584c9-52c0-40f9-b594-393c7d7e2679",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "107adadc-f7eb-4bb0-bde4-a95927361866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af352c90-3773-4f03-ad50-910e99eefe1b",
        "cursor": {
          "ref": "08ee67a0-ee96-410e-a002-7fbff537b479",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4eaa5b97-db79-4163-9d97-af066d5cfeb4"
        },
        "item": {
          "id": "af352c90-3773-4f03-ad50-910e99eefe1b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f681ae3b-7e33-4c47-bdd3-2957b3e6ae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b83f06d-7dfe-4f20-b31e-5cc2d3c60a97",
        "cursor": {
          "ref": "f3264e1a-7899-44f2-92c8-7128dbee06d7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "92467ac6-fd2e-4ae3-9f3b-a14c3c0094b3"
        },
        "item": {
          "id": "3b83f06d-7dfe-4f20-b31e-5cc2d3c60a97",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9f5770f-0e1a-4c80-8c52-d70e369d1cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5005092-7b5c-4b48-9b79-cd8d7aaa95d2",
        "cursor": {
          "ref": "db5c893c-41e0-4da1-b3cb-f87cc70ff522",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bdec72e2-bc89-4037-bf6f-a1b080fee981"
        },
        "item": {
          "id": "f5005092-7b5c-4b48-9b79-cd8d7aaa95d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7c8b4580-3445-4ed4-ac3f-7f8ac7e71b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c356d6-bedd-41e6-82aa-215011114fbf",
        "cursor": {
          "ref": "be55698a-dba9-4387-925c-0bf9ebcbc333",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4ffaffd-3eb9-43e6-a67a-7ac59a0f645d"
        },
        "item": {
          "id": "54c356d6-bedd-41e6-82aa-215011114fbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb4af7a3-0aa4-4987-bc90-a2e3c257fe89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd095974-eb1f-4deb-8890-161bde1bbb06",
        "cursor": {
          "ref": "1fb6a635-d3fc-485b-be06-727909413585",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ad4ec4b-4bde-4a2f-a7db-91adec5f4299"
        },
        "item": {
          "id": "dd095974-eb1f-4deb-8890-161bde1bbb06",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "acb6064b-7c36-4cd3-85f7-36380cbd3000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763c806-db4b-4744-a671-745b5daccc6d",
        "cursor": {
          "ref": "205af8d3-ce97-4ff4-8b36-cb16d432d89e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1e48018c-d809-4022-86d5-38c292246df5"
        },
        "item": {
          "id": "e763c806-db4b-4744-a671-745b5daccc6d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d7784e8-64bb-4025-8f28-cea7c828b999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce6d501-ba6d-4eaa-bca4-564f74204cd8",
        "cursor": {
          "ref": "f50e9c5d-dec5-475d-8a87-8dc92fbbdeaa",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bcbe6477-308e-4110-8183-e810bafc3d73"
        },
        "item": {
          "id": "7ce6d501-ba6d-4eaa-bca4-564f74204cd8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fca9da5f-7d7f-445c-92a3-92e71a2969fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c5f6c3-9a6b-4c88-8263-747b9d2a6f65",
        "cursor": {
          "ref": "e9536474-1933-4aa6-ac06-45199e80e29b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "18a9beea-248a-45df-a866-76bf0f0c8d0c"
        },
        "item": {
          "id": "a4c5f6c3-9a6b-4c88-8263-747b9d2a6f65",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8df75c8b-6cdd-4a00-8f68-18a254bd5cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ef5948-151e-47bb-8e76-c8728ae97a59",
        "cursor": {
          "ref": "a40af203-f939-4c21-b905-3dfabc4f14e7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "94d536c0-4905-483c-977a-a426ff9c0d96"
        },
        "item": {
          "id": "f3ef5948-151e-47bb-8e76-c8728ae97a59",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "148d3011-b215-4084-8e03-7ff810527287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f84ccbd-081a-45ce-905c-265661e1ebce",
        "cursor": {
          "ref": "82a52434-10c0-4362-9452-e8c5b9322989",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5bf81a7b-3165-422a-b8ae-442d6f6f5f42"
        },
        "item": {
          "id": "7f84ccbd-081a-45ce-905c-265661e1ebce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01724a2a-1204-4194-9dd5-ec69b14f9724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a9f86b-6cdf-44d6-9380-a3088e8bbd3a",
        "cursor": {
          "ref": "6005cebc-e8b3-40d7-8459-29941c8a03e0",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5ef2444c-727c-4cc9-8b5c-7e5e9538dacc"
        },
        "item": {
          "id": "28a9f86b-6cdf-44d6-9380-a3088e8bbd3a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "40e1976b-5e69-4e90-897d-dd908ee5c5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8933239e-6fe1-475d-ba97-7e02936c2556",
        "cursor": {
          "ref": "0d8e50c8-8d2a-41f1-b076-27cff2ebebbc",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d653ff71-1e48-4e73-bb71-00c89ceaa4c1"
        },
        "item": {
          "id": "8933239e-6fe1-475d-ba97-7e02936c2556",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "05a631f3-8e2f-4123-b9fb-161075a321f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63437a2-7c49-4a60-99ad-5c53bdcaf3a7",
        "cursor": {
          "ref": "e08e12e0-71a7-4718-916d-3cba7af1b0ed",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4bbee9dd-066f-4408-b0f0-2dae63cb5029"
        },
        "item": {
          "id": "d63437a2-7c49-4a60-99ad-5c53bdcaf3a7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "085e48f0-96d4-496d-9d8e-5eebaa69003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4144b645-4ef2-4bd9-a877-d6248518b78e",
        "cursor": {
          "ref": "5cbdb124-379c-480a-ba0d-a84c3eeffaca",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "523d5270-fbd1-4db4-a776-342328465992"
        },
        "item": {
          "id": "4144b645-4ef2-4bd9-a877-d6248518b78e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81cfc7a3-132a-4a1b-9191-0390bfe76022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aa37b2-64cc-487f-9a9e-560906dbe56c",
        "cursor": {
          "ref": "cdebcf4a-679e-4927-ac2d-5be9f16bb653",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e59af94-a6b7-436b-b8c4-2e083a1a7f76"
        },
        "item": {
          "id": "83aa37b2-64cc-487f-9a9e-560906dbe56c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2849bb37-b85f-4f66-a526-d684f7d897ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54a541-c55f-4ead-8e3f-473313b90b38",
        "cursor": {
          "ref": "1a20c1be-ea58-4d5d-b6a1-b7f734053c6b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6f61bf16-68b6-4af4-b867-6062daaa5d3c"
        },
        "item": {
          "id": "db54a541-c55f-4ead-8e3f-473313b90b38",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f060847b-4800-4069-a168-7d1fc5070bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fc8774-beb4-4e0c-bda7-c9d8e7a35644",
        "cursor": {
          "ref": "d9ea86b1-9038-4ef8-a39a-2e4403cda67f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3bcdfa93-25de-4168-881b-f4a47e5269b5"
        },
        "item": {
          "id": "72fc8774-beb4-4e0c-bda7-c9d8e7a35644",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3bb6c96f-0606-46dc-be82-e48288fe6732",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b74b1b-8076-48d9-a2b2-e5d60c5cc0cf",
        "cursor": {
          "ref": "adb72efe-659a-4219-b382-86cd964494a1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "845dee3d-22ab-457e-b5f2-ab6124b46b6d"
        },
        "item": {
          "id": "58b74b1b-8076-48d9-a2b2-e5d60c5cc0cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6a3ee246-ceaa-463c-8252-22c9b5b289a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364451cb-de4a-4711-a444-201e7b0a12aa",
        "cursor": {
          "ref": "6b87346f-d435-469a-ba19-b1212a4f38ab",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2e859484-ecf3-43b1-889f-fc7efeb34d6c"
        },
        "item": {
          "id": "364451cb-de4a-4711-a444-201e7b0a12aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2eb39428-bf36-408b-8aa3-a6f5fddf4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7de046-306d-49de-b801-67c3d8a9e9c5",
        "cursor": {
          "ref": "633e9d22-3e84-4169-bea2-6311d7aa9627",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e951312f-b4e4-40c9-a88a-6ef8a86ad500"
        },
        "item": {
          "id": "ee7de046-306d-49de-b801-67c3d8a9e9c5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c7956017-d407-4b07-8ab6-f27839d66355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f41da1-9679-4ffd-b5bf-23546561a5f9",
        "cursor": {
          "ref": "7f5fe066-12c4-4a12-ae9e-2cdc2b319eab",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "206e5125-fdae-491c-820c-a20f471bfa05"
        },
        "item": {
          "id": "f7f41da1-9679-4ffd-b5bf-23546561a5f9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "83e84cf5-aefa-4df6-976e-6969be237ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307d1f62-bc56-4aea-8338-eb8ccc380564",
        "cursor": {
          "ref": "e1699b0b-61e1-4955-b6b2-1d4e552dcfea",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3462926d-8cb5-4233-851a-83792b2f7baa"
        },
        "item": {
          "id": "307d1f62-bc56-4aea-8338-eb8ccc380564",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e3cb0ab4-6e74-4c2d-9d8e-905facbb807a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1cedf-b9d0-4e02-a0d6-e36f3ea086d9",
        "cursor": {
          "ref": "8e77b08c-2342-43ec-b53f-4b22fe141b73",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d31f4bf2-9b04-4005-97da-38e6260f29c0"
        },
        "item": {
          "id": "6aa1cedf-b9d0-4e02-a0d6-e36f3ea086d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1ebc4a11-f43b-4353-847c-2b3db9acd5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699698b-057e-45c2-8448-f8a476b08ba9",
        "cursor": {
          "ref": "c6054fbc-7c91-4821-9ce8-68eb1a5d3aaa",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "426be2ad-97aa-4aa9-b652-f9efbfaac119"
        },
        "item": {
          "id": "e699698b-057e-45c2-8448-f8a476b08ba9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23574d6a-15e4-41d0-9fff-489cf1537bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa660dcc-4fbf-4657-9a87-2addc9a35e35",
        "cursor": {
          "ref": "f2491afc-7c02-4639-96a6-c8af688dd3a5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f7fbb266-41a2-4734-8ff9-d4e8ef9489e8"
        },
        "item": {
          "id": "fa660dcc-4fbf-4657-9a87-2addc9a35e35",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "873bc690-5857-42bd-8157-ca3f2085f28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0f889e-121e-42c2-8984-c3b9c0e7d2ac",
        "cursor": {
          "ref": "88ff5f62-4cf2-4ccf-968c-ffe9ebe10714",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cb8f435f-9d16-4825-a306-621543a2aa96"
        },
        "item": {
          "id": "cb0f889e-121e-42c2-8984-c3b9c0e7d2ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd6efc91-0e69-4b6c-a5ba-3fdb08048f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c63fa3-1c5b-4e0c-bcb2-4067cc2ee848",
        "cursor": {
          "ref": "0d2cf081-e17f-4182-8e60-63e4100dfebe",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fe78b086-9de0-410f-9134-b8ecbad0a4ab"
        },
        "item": {
          "id": "c1c63fa3-1c5b-4e0c-bcb2-4067cc2ee848",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0ea488df-e20b-4912-a18a-4149693dbe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefe2ec3-24b8-417f-841c-4e01c90fab76",
        "cursor": {
          "ref": "5bc4784b-baed-45fb-94f5-6fa5e1728209",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a8b9169e-637d-45c1-8e43-bc19205e2869"
        },
        "item": {
          "id": "aefe2ec3-24b8-417f-841c-4e01c90fab76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4486ae6c-a5f8-441e-8f94-dcc2654fc6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32986292-1277-4993-a595-2ba804b15355",
        "cursor": {
          "ref": "407da41c-d3bd-4947-8ed9-b9ec2a368f1d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e38a0c2-c976-4545-8aae-f8cd0b17c3c0"
        },
        "item": {
          "id": "32986292-1277-4993-a595-2ba804b15355",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f3cfecd5-c9f8-4601-acf9-fbc68e82ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792f04e-4ea6-4d90-a814-b62fd166429d",
        "cursor": {
          "ref": "c11383a7-1911-4263-9eb9-e3b71c1ea9f9",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f1d562b6-6eb6-40ce-a6a1-1903ce57068a"
        },
        "item": {
          "id": "4792f04e-4ea6-4d90-a814-b62fd166429d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8e7b31a-a27f-4720-b541-0c09436ed36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49a72c4-a3cf-4ac2-9dac-4edb41e7106d",
        "cursor": {
          "ref": "e75ca4c4-9a68-4dce-a1d9-7d968f67d270",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51da13ae-8b9f-4c65-a4a4-38605a79c48d"
        },
        "item": {
          "id": "f49a72c4-a3cf-4ac2-9dac-4edb41e7106d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8c06cd9d-ddaf-4678-ad92-12a47b8bec0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39418bc4-f058-451b-8d8a-68bba0a704fb",
        "cursor": {
          "ref": "1650d9f5-5100-4b1c-893a-d9d0bb98332e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "29529eca-298c-4997-bf95-77ac45199db9"
        },
        "item": {
          "id": "39418bc4-f058-451b-8d8a-68bba0a704fb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "66a5463e-1b45-4ddb-aed9-2eaf4ead3959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb366fb-8434-442e-9f93-8b354136cfbb",
        "cursor": {
          "ref": "0555d4d1-e22e-41fe-bbb9-10490aa527bd",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b0967c15-bc7f-4207-be35-f2ca4cb37c18"
        },
        "item": {
          "id": "ffb366fb-8434-442e-9f93-8b354136cfbb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "35af8fe5-bc15-464c-b774-bf1a1dca4689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b264d344-38a3-4c04-9086-7fa3b94ef544",
        "cursor": {
          "ref": "31f1a197-332c-401a-af4a-a70aeaa93e6d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "93b17266-6327-46fb-a15b-2b5807618408"
        },
        "item": {
          "id": "b264d344-38a3-4c04-9086-7fa3b94ef544",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d84792e0-47e7-4f08-8f2d-e1d38f822c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07edb7c0-cf09-4283-8eed-855a517960bd",
        "cursor": {
          "ref": "81f15461-fd88-4243-906f-13a12e5017d1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "41232ee7-204f-43b0-821f-014fb32fe195"
        },
        "item": {
          "id": "07edb7c0-cf09-4283-8eed-855a517960bd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb0fcd8d-7091-496a-a942-6d05061f9cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50d466a-0f16-460f-b5e5-8315c1ab00b4",
        "cursor": {
          "ref": "8f1043a6-4cf4-474a-b20d-ed94f454a68d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "de24e90b-3b78-4c5f-8f61-6d299183683e"
        },
        "item": {
          "id": "f50d466a-0f16-460f-b5e5-8315c1ab00b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db715977-e75e-409f-b34c-fa4d1dc755a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a218c11-a0ff-4f62-bab7-d76dae9c5e53",
        "cursor": {
          "ref": "a4460c77-fd06-4e8e-9f11-4abdad8f12c4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c243b5d-16a5-4b7e-9377-49202379e969"
        },
        "item": {
          "id": "2a218c11-a0ff-4f62-bab7-d76dae9c5e53",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "83a13a83-2ffa-41fe-9152-7fee28d8694d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d0fd31-0a8c-43ce-ae53-0ad1c0dce9c7",
        "cursor": {
          "ref": "1dc48d10-5ab8-4bf0-a1b6-f5ddcd36a898",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2aa803a0-4ce4-4bbc-aa18-917ce7d5d18d"
        },
        "item": {
          "id": "81d0fd31-0a8c-43ce-ae53-0ad1c0dce9c7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e27ae453-dee3-4516-8a2f-6422a86c989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9919d3-a9c8-4538-8a1e-755a61587acf",
        "cursor": {
          "ref": "a227ed63-bcfe-4c03-aec0-4355a8755f80",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a429a317-49c4-493a-acbc-9fed850adecd"
        },
        "item": {
          "id": "1e9919d3-a9c8-4538-8a1e-755a61587acf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f91cadc-e67c-4b29-a485-56be2fc9afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2003aee-f46a-4408-9935-cd0604423b78",
        "cursor": {
          "ref": "a8c48d45-a3e1-45e4-8ccc-aa5b07487e1b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3b45d55-b2b1-4585-a6fb-4a57e93f9a8a"
        },
        "item": {
          "id": "a2003aee-f46a-4408-9935-cd0604423b78",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "636834a4-d4ab-4f42-9fd2-6f897988ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea43a8f-b480-4029-8332-db4b7440831c",
        "cursor": {
          "ref": "c05be2d7-0b68-46eb-822f-2b2481b56f59",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0bc7f774-b628-4704-9868-3d27bf2464e6"
        },
        "item": {
          "id": "5ea43a8f-b480-4029-8332-db4b7440831c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "068561a4-da49-4a04-8091-a28f62bdceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd10c0-cb3c-4f77-a09d-7c048a490f56",
        "cursor": {
          "ref": "85a1f434-8146-4837-a0fd-80f3b16d17b7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4ab3ef3-18ef-4f81-9b4e-de350a4574ef"
        },
        "item": {
          "id": "56bd10c0-cb3c-4f77-a09d-7c048a490f56",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7b4edee9-ae20-477c-8995-091125db5a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97844d67-72a4-4591-a42b-7b94a8cda3bd",
        "cursor": {
          "ref": "c25133d8-3fc6-4ee1-a9ac-57f478293304",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e85a0f40-e014-4485-a11c-c2da4e46555b"
        },
        "item": {
          "id": "97844d67-72a4-4591-a42b-7b94a8cda3bd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b8d4421c-53b8-4f3f-83d7-d1ac27b3495d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d56817-38f6-4fff-86b4-f43bf0884239",
        "cursor": {
          "ref": "86b1f6d8-8421-414f-b427-40d583c7bdab",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3e10564-4152-46f4-a660-e0403648f21c"
        },
        "item": {
          "id": "b3d56817-38f6-4fff-86b4-f43bf0884239",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca70272c-c7dc-4a96-90b4-48b0984d19b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13dd321-1286-49d6-b79d-13cc2999c1a9",
        "cursor": {
          "ref": "5e886dc1-06b2-45f5-8947-478603b9a2fa",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "43988c8d-302b-4034-98a6-7948e8d8620d"
        },
        "item": {
          "id": "b13dd321-1286-49d6-b79d-13cc2999c1a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b880bc31-9283-424e-b08a-e5e2b0b52fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f887e6a1-e5f6-492a-bf41-a3d8660eef39",
        "cursor": {
          "ref": "a8e24969-4abe-4b5c-9459-060101fe0824",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d669adb6-daf4-4b2e-998b-62cf4850dc27"
        },
        "item": {
          "id": "f887e6a1-e5f6-492a-bf41-a3d8660eef39",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2f72cc09-f31f-4640-92a3-ef309c9b0951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6a329f-ed91-4f13-ba46-080123da91d3",
        "cursor": {
          "ref": "16bd21e0-4dd5-440b-ab19-a710d1de0216",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d2379a80-44e0-49ba-8f17-36d9882a5c15"
        },
        "item": {
          "id": "eb6a329f-ed91-4f13-ba46-080123da91d3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1811cc30-1a00-4a54-bb9c-5aacc7de6e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c5c6db-ed00-4acc-998b-f74f1bbfb70e",
        "cursor": {
          "ref": "9eb7b8a5-bac1-437a-8d2a-a2a7141aa739",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1b2c51fa-73dc-4a97-9d79-0b5480d85fd1"
        },
        "item": {
          "id": "77c5c6db-ed00-4acc-998b-f74f1bbfb70e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "de385784-fb0e-4a15-9dd1-d6e1221be03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00573f45-c52b-4509-b0f4-bd0c379a34d7",
        "cursor": {
          "ref": "ed47f53c-d456-4ee9-8090-d90ba9261734",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a133d951-0255-44d4-8ed3-82f06c2999ef"
        },
        "item": {
          "id": "00573f45-c52b-4509-b0f4-bd0c379a34d7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "73741580-b27b-4f8e-a660-abc29db2e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe50815e-2317-40a0-8569-5ceb5bc93212",
        "cursor": {
          "ref": "02f47f83-7160-4981-b495-e1accfb74e1c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5c470042-e9e1-42f1-b520-0b783cb0e8b3"
        },
        "item": {
          "id": "fe50815e-2317-40a0-8569-5ceb5bc93212",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ed2e5612-fda7-4ebb-889a-2892bc4c73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45286b1b-80be-4faa-8909-e5a6c078ae4e",
        "cursor": {
          "ref": "370d6fe7-1528-42ea-a9aa-12793225169e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "45d4bcaf-c5e9-4969-b6fc-df28f464108e"
        },
        "item": {
          "id": "45286b1b-80be-4faa-8909-e5a6c078ae4e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bde611ff-894f-4f3b-96f9-f556d6948917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4409eead-7b11-43b4-838a-13c992fb19cc",
        "cursor": {
          "ref": "4dc16440-4b01-436c-89de-8366aed47976",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "25c01031-2817-4430-b6be-e5bdc07b4f2d"
        },
        "item": {
          "id": "4409eead-7b11-43b4-838a-13c992fb19cc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60cd52d3-b32c-4346-8d2a-ac76a2c6e474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccf99fc-b5cf-4932-b7f3-0d018cfa506a",
        "cursor": {
          "ref": "3dd96517-e3e3-4475-8d41-ebf951953945",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c64f8f2c-3c58-4cb2-9db7-619a334a9d94"
        },
        "item": {
          "id": "dccf99fc-b5cf-4932-b7f3-0d018cfa506a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5f347a18-9f52-4479-9d5a-107e6add8528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd2f374-8af8-4fd9-bee2-ecaf3ae84f56",
        "cursor": {
          "ref": "7a483da5-c35c-494c-bce6-3d7830d00023",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2edb7bed-6ce7-4c8b-ad58-833d137996f5"
        },
        "item": {
          "id": "bfd2f374-8af8-4fd9-bee2-ecaf3ae84f56",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8059681d-c099-4da3-aaec-e43a95398268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e385b0ee-ba8e-40dd-89d1-c62695820882",
        "cursor": {
          "ref": "e417eeb2-5d62-4d0b-8bff-94e00c84253a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a65b5a1a-4e7a-4eec-8e29-8e1cf6ecbe97"
        },
        "item": {
          "id": "e385b0ee-ba8e-40dd-89d1-c62695820882",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0d60ba58-88fa-4755-8d09-92ec78d8e2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f403d5fd-e228-49fb-93b7-ad29dce716d0",
        "cursor": {
          "ref": "60b58693-686b-4e9c-bdc8-edf3ef235408",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c476f23c-e50e-45c7-ba3a-ff46f18b90b3"
        },
        "item": {
          "id": "f403d5fd-e228-49fb-93b7-ad29dce716d0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3f6f7c9d-94dd-4b32-b1b5-5eadbdced99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985af7a2-805f-4e63-ade3-2249246ef963",
        "cursor": {
          "ref": "2d3fe7ba-6e1e-4f6f-9a78-ca1dbb19759d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "42111a8b-af1d-4a5d-9acc-737150ee0bb3"
        },
        "item": {
          "id": "985af7a2-805f-4e63-ade3-2249246ef963",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d5abf5d7-c4b5-49dd-97d3-7c6d79d2975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f76d9b-5cd8-43d8-9585-a1c89bd7b77c",
        "cursor": {
          "ref": "0f010836-60f9-4313-9bbb-0e8f16320936",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "60b3f694-6263-4dd4-b0de-0ead306b63c2"
        },
        "item": {
          "id": "a3f76d9b-5cd8-43d8-9585-a1c89bd7b77c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7cbd3031-a849-46ca-b9ab-67d42805e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d45c84-51e9-473a-bd5e-6dd4ee552bc0",
        "cursor": {
          "ref": "9920a862-d573-48cc-a67a-7d2bbbd533e5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a7d14913-2717-4cf0-94c1-d3c2634f0904"
        },
        "item": {
          "id": "b1d45c84-51e9-473a-bd5e-6dd4ee552bc0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ee0524d5-575f-4b7f-88af-ee2408c382ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acec080-3e85-420c-8592-b1673b7895e2",
        "cursor": {
          "ref": "c4b27d50-3537-4e7f-8063-199ff3fb325c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "06630036-daae-4e11-b30c-b114d26f746f"
        },
        "item": {
          "id": "4acec080-3e85-420c-8592-b1673b7895e2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cca5eec7-ac27-468a-a5a3-94ac1097831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0385882-53a0-4e65-a2f3-ab00704cf138",
        "cursor": {
          "ref": "a0176f0d-86d4-4b97-b0aa-6b398014ab2f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a78eee52-2261-4a9b-b85a-e77999b62d73"
        },
        "item": {
          "id": "e0385882-53a0-4e65-a2f3-ab00704cf138",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db16dd44-9e15-4bb1-91b1-fdf439fb6357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594c481-c110-4b60-b11a-e0c405d1b704",
        "cursor": {
          "ref": "54e395e7-26b4-4606-8518-000e170816f8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ce0e0f15-e8ec-4088-ade7-ab5409e600cc"
        },
        "item": {
          "id": "1594c481-c110-4b60-b11a-e0c405d1b704",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "47eb2395-4f18-43a2-bbda-9c27027057c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa9abf-f74f-403b-9bbf-aea2719856b3",
        "cursor": {
          "ref": "43790644-4ada-4c0b-b075-7a5b1b6feeb4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0cc79b6c-5d1e-4fda-8770-e8e07e22a9c3"
        },
        "item": {
          "id": "7dfa9abf-f74f-403b-9bbf-aea2719856b3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "799d0c52-248f-4419-adf8-e942d954dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d724a412-736c-42f4-89ad-ba34c81c500a",
        "cursor": {
          "ref": "2c801807-afd9-438e-8676-f064374fba19",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f90b3470-1f23-41ff-97cb-21711d0debbd"
        },
        "item": {
          "id": "d724a412-736c-42f4-89ad-ba34c81c500a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d287b6f5-3d68-4691-a807-8ebf9dab894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf4e03a-1ce3-4605-84bb-498aabe993a6",
        "cursor": {
          "ref": "b9c47c48-90a8-4441-95f0-4ebfac87b1ee",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6db156c8-83a8-4824-8bf9-51bba05dd988"
        },
        "item": {
          "id": "3bf4e03a-1ce3-4605-84bb-498aabe993a6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ed789373-f81b-48f6-8d9c-f1fd529a5355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685929f4-aa26-492e-bc08-90559e078acb",
        "cursor": {
          "ref": "bd1e36ec-df3e-434f-95fd-1d7851ecfdbb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "efd93d75-e142-4984-8791-8cbaeac9047e"
        },
        "item": {
          "id": "685929f4-aa26-492e-bc08-90559e078acb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cf7135e1-47cb-4ced-ab73-cbede5bdfd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcb59e9-17a0-4650-9ef6-b95203ec068d",
        "cursor": {
          "ref": "d3dad39a-7d8b-43bc-ab2c-81c2cb766c6d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1c9f66a3-d091-4627-ab19-12c162444139"
        },
        "item": {
          "id": "5bcb59e9-17a0-4650-9ef6-b95203ec068d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8f7c28e6-5bfc-4ef2-9a1c-866c8ed56013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a4052a-645d-4ceb-8d25-683d61223417",
        "cursor": {
          "ref": "07cb2f67-21db-4390-ae96-12fcfcb5b734",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "70004ec0-f935-436f-84cf-8d67fd473f71"
        },
        "item": {
          "id": "03a4052a-645d-4ceb-8d25-683d61223417",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "12baa92e-093e-4866-8311-4d729c57a299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2343626-da46-4a36-a732-f52e441f9613",
        "cursor": {
          "ref": "ef5263a6-9e2d-40fc-b684-363176dce0fb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b5ad3de-e52f-4816-aba1-27d12d24c106"
        },
        "item": {
          "id": "b2343626-da46-4a36-a732-f52e441f9613",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0d57f459-7dcf-4f72-b374-3e923ccf7cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e8f5c-1685-4bf1-a94d-2cbc6a7d1a19",
        "cursor": {
          "ref": "0a906187-c745-4fa4-be62-cc6f073a8471",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4d56bee8-8cc5-42f0-8c52-c51a4586318a"
        },
        "item": {
          "id": "f18e8f5c-1685-4bf1-a94d-2cbc6a7d1a19",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7fee5575-48b7-4bdd-8cf7-5f6c7e448a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ac2ac4-18ca-4630-99c9-352d281f2c78",
        "cursor": {
          "ref": "bf7aa924-d69d-4835-8ccc-51307dfd8b89",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7e39f13d-50ed-492e-8462-9ee02b1a16c3"
        },
        "item": {
          "id": "86ac2ac4-18ca-4630-99c9-352d281f2c78",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0463d044-6778-42f6-9cd8-59afca80d524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc5c66-dbc8-49c6-856b-b897285d3904",
        "cursor": {
          "ref": "78ddcc1d-f750-4023-be3a-e3f20a7ac2a2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f43d7043-7181-4dae-9403-bbbcb804b0b7"
        },
        "item": {
          "id": "64dc5c66-dbc8-49c6-856b-b897285d3904",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a5a8215-6daf-49d6-961e-8cd9a93d0ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30d4920-f884-4122-b997-a258af741bd9",
        "cursor": {
          "ref": "1248aca6-57a4-4358-b1c2-7009b15b187d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc45a736-57ed-4acf-b76e-496d91e1578e"
        },
        "item": {
          "id": "f30d4920-f884-4122-b997-a258af741bd9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4126f330-16c7-4b6b-a211-865008a1706a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e63296-229a-4aea-b51c-f2ce5b88d4e6",
        "cursor": {
          "ref": "8a2ecd93-d10d-49cc-aabd-2df7e68faa56",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29d412ca-a7fa-440a-84c2-72dd0212a001"
        },
        "item": {
          "id": "81e63296-229a-4aea-b51c-f2ce5b88d4e6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "09fb82b0-c15f-4ab9-a42f-4431c7fb9bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18664135-8b3f-4c77-9421-7943c4bbe4f2",
        "cursor": {
          "ref": "91550025-ce14-48f1-9d8b-d03b58ea7c00",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ceccd72c-9bf8-438e-adf5-40fd67f5b11a"
        },
        "item": {
          "id": "18664135-8b3f-4c77-9421-7943c4bbe4f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ff6f2e8f-3122-4d76-bc89-49d722c352ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29e5f25-efdb-4910-883c-dfd2b2c1cf67",
        "cursor": {
          "ref": "0ab74c95-781a-46ae-894b-6a801fb2f2fd",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "590d6661-3fcd-46af-b9da-e16b10db535d"
        },
        "item": {
          "id": "a29e5f25-efdb-4910-883c-dfd2b2c1cf67",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bdcfdea9-e824-4a13-a284-76b33fc09b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ab1ca-ae50-4261-b25c-d8e4caa1317c",
        "cursor": {
          "ref": "e893d86a-cd72-4b8a-a20e-cd63d6db18cd",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "07c19e97-6aff-4c8f-b2ff-74c3ece35284"
        },
        "item": {
          "id": "d59ab1ca-ae50-4261-b25c-d8e4caa1317c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ede4e6a6-6cb6-4842-a886-8853198c56f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23dd26a-804b-40ca-b41e-194bea7bff2b",
        "cursor": {
          "ref": "2640e82d-80a8-4dce-952e-da1f248e2352",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d70d2220-6974-41ec-8207-4bea8349875d"
        },
        "item": {
          "id": "b23dd26a-804b-40ca-b41e-194bea7bff2b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1440fadc-71e0-443d-94b1-a976aa680d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626c335c-9ad4-49df-b3fd-629801b1051c",
        "cursor": {
          "ref": "4e8de3f1-f8a6-4d4c-99bf-9b725ac229cb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8dfac455-04f4-45dd-ba99-7a42766def12"
        },
        "item": {
          "id": "626c335c-9ad4-49df-b3fd-629801b1051c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "79f5205f-55b2-47e4-8134-f69fbb65358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0201ec-a56e-4a3b-aa33-7f2c4650bd32",
        "cursor": {
          "ref": "92456cab-e05f-477b-b69a-25304edd3552",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9321c097-64c4-4ab9-9825-60129313a4db"
        },
        "item": {
          "id": "ed0201ec-a56e-4a3b-aa33-7f2c4650bd32",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2ad423d0-e1b8-4869-97c5-875918e02a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69481f3-1bb2-4cb3-ad75-e0287e98e99b",
        "cursor": {
          "ref": "53960f86-3a29-4c24-ab2c-99c096186aad",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7a792439-c84f-4bfa-8796-3d0edc90e197"
        },
        "item": {
          "id": "a69481f3-1bb2-4cb3-ad75-e0287e98e99b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "269073f8-3e67-4a82-9826-d0f374d404ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8324c18d-57ef-434b-b974-b26a163db5a3",
        "cursor": {
          "ref": "27b5c8d9-e798-4fdd-b547-12509ae7e848",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "78ecd5b2-03c9-48c7-aaae-10dbab84c908"
        },
        "item": {
          "id": "8324c18d-57ef-434b-b974-b26a163db5a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "60490b66-71cf-40a8-a34b-8134f141b8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c988cd97-d5c5-41b6-bf9a-500c6d43766e",
        "cursor": {
          "ref": "fc69833c-3cc8-4e0d-b473-ff515e663c2b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4d43f0ce-64c4-4ad3-916f-a5b098d16910"
        },
        "item": {
          "id": "c988cd97-d5c5-41b6-bf9a-500c6d43766e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5800e461-52a4-445e-9dcb-169fd10b8981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a2a486-d25d-42bb-9fcd-45da18785a76",
        "cursor": {
          "ref": "51a1d1b3-dafb-46db-92e0-d777f01c8314",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "14566cb6-cc57-465f-a342-c0bf6114b593"
        },
        "item": {
          "id": "86a2a486-d25d-42bb-9fcd-45da18785a76",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8672bff9-a0f4-493e-9776-1d24e78e2beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7442b4b-19d6-40a9-b285-cd88dabb690e",
        "cursor": {
          "ref": "1307c6f4-93a6-4641-b5c6-059477d3c6f4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3acf8e51-f420-48e4-a8bc-a89a66c81f62"
        },
        "item": {
          "id": "a7442b4b-19d6-40a9-b285-cd88dabb690e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa30ace0-cb66-49bc-af5f-5fdb1762c8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626830a2-3c26-435d-9f01-4b312cad79a9",
        "cursor": {
          "ref": "c260397a-cc2e-4a9d-8040-7a7ac172942c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "44b64c27-cbb5-489e-ade3-45eeab9b674c"
        },
        "item": {
          "id": "626830a2-3c26-435d-9f01-4b312cad79a9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "89d03b10-5461-42c4-8828-34d661c996a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bcfd5f-13ae-4b10-834f-1eaf3efdac2d",
        "cursor": {
          "ref": "e1e53c5f-ec69-49cd-b004-3854345d1e7d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a3dd6182-b9b3-43c3-b8e9-03d083f81d27"
        },
        "item": {
          "id": "59bcfd5f-13ae-4b10-834f-1eaf3efdac2d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b2175e29-0cd1-4158-bf5d-6fb34bd2e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021a6fb0-c462-42ee-98a4-c7779081c312",
        "cursor": {
          "ref": "09e5bc20-9a44-4061-9216-d8da8636ff3a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "026f2dbe-66e3-4de2-8b5d-7e0518b14c2b"
        },
        "item": {
          "id": "021a6fb0-c462-42ee-98a4-c7779081c312",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bed622df-a596-4cbd-93c1-6c08c42abbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0dc46-338b-4798-aefe-f855be7d5e73",
        "cursor": {
          "ref": "b14d41ac-4341-4176-832d-ec8fde9dfb0d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "31485882-d234-44d2-ac4f-e7ae7f345f56"
        },
        "item": {
          "id": "d2a0dc46-338b-4798-aefe-f855be7d5e73",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2ca254a3-a3d6-4d25-8aba-f05c7ff33938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df77588-4581-492c-9291-63a24eacf8bd",
        "cursor": {
          "ref": "3b74cda1-739f-4f1e-8029-435f5b74b6f1",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "166c9a36-44c2-4bbc-88f9-9e609a330134"
        },
        "item": {
          "id": "0df77588-4581-492c-9291-63a24eacf8bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "47ddbb65-1f47-464d-ae29-e5f11b2ae180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26861339-1a50-4076-ab34-89db73e00021",
        "cursor": {
          "ref": "21d5fb19-c646-4061-8550-cbf99318c12b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f11c5ac4-f2ec-4b88-9034-9e62ba5ed3e4"
        },
        "item": {
          "id": "26861339-1a50-4076-ab34-89db73e00021",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb582af1-965b-41d7-a79e-e109f48209c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a96a5c2-49ed-457d-b6a1-4aaf572583c3",
        "cursor": {
          "ref": "5e768259-a8f6-460b-978b-484511f9865f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "132fd76d-1180-4a49-9a4f-48df46a76b99"
        },
        "item": {
          "id": "7a96a5c2-49ed-457d-b6a1-4aaf572583c3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4b893104-4108-4b12-82a4-790ef6048c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84505ffe-4df2-4e3c-a287-7c9ef1d54632",
        "cursor": {
          "ref": "de631b11-07b7-4396-b71b-260ed050a5cb",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5a22d202-960e-43f0-b96a-7894b8d27974"
        },
        "item": {
          "id": "84505ffe-4df2-4e3c-a287-7c9ef1d54632",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f55c8c99-916b-46a0-b946-ef2736458538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946b210-c858-4287-827c-b309a68ac2c4",
        "cursor": {
          "ref": "99259a69-fc58-42d6-9cfa-d6037661a208",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "56a72059-a2b8-4053-a78f-c2ed2622c254"
        },
        "item": {
          "id": "8946b210-c858-4287-827c-b309a68ac2c4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a300a9c3-57f2-4f03-a49b-b56a0b6e8fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96db870-ad2c-4117-8529-b58722028b29",
        "cursor": {
          "ref": "12914af2-d07f-4078-b616-7ea87c33242c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c5ddef70-2bcc-4a26-91a0-212d3248e819"
        },
        "item": {
          "id": "e96db870-ad2c-4117-8529-b58722028b29",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0609540b-09e6-4a99-91a6-a480c9de21aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea29fba-f4a4-4ba1-b5e0-b3b544b71d11",
        "cursor": {
          "ref": "9b470ca7-80cf-417b-99d5-e0c4f6e9fb30",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b0fbcb31-7428-4e9d-9772-1da8f4158f00"
        },
        "item": {
          "id": "8ea29fba-f4a4-4ba1-b5e0-b3b544b71d11",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "79fa01b8-2ebf-4580-ba6e-112ddad33864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1690071b-74a7-4561-963d-8f4c28b14a3d",
        "cursor": {
          "ref": "0a37686c-7682-4683-acd7-d42a69d25d02",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0947a155-ea85-425c-9698-1a48e493d50c"
        },
        "item": {
          "id": "1690071b-74a7-4561-963d-8f4c28b14a3d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "31b942ed-1496-4ea3-b9c6-901f3530bbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384d2e9b-10ac-4d29-8cdb-896e44078b21",
        "cursor": {
          "ref": "9e308ca4-de38-4b77-8bd2-014e635abe4e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c47f5bbe-d808-40ad-86e9-77ec229ce0f0"
        },
        "item": {
          "id": "384d2e9b-10ac-4d29-8cdb-896e44078b21",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ec7df2c2-b536-4c79-a41f-14c140c43d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5707261e-70c5-42c9-94d4-14d9cee84f9c",
        "cursor": {
          "ref": "93a89548-3661-48c7-bdb6-25c04dcd8bf0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4dd90130-6072-4164-a924-db3dc3d13d59"
        },
        "item": {
          "id": "5707261e-70c5-42c9-94d4-14d9cee84f9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b6f6390-9898-45e5-a306-fb5d8e1a7ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c828b24-aeff-4dd3-879a-2edc25304d1d",
        "cursor": {
          "ref": "75d94c29-d1dc-4821-9722-f3f84f204f40",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "645aa436-a6fc-4663-9deb-266fb1c9947d"
        },
        "item": {
          "id": "4c828b24-aeff-4dd3-879a-2edc25304d1d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4a42a218-f8b0-494c-a50a-3ce0a2dfcd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea30f15-2de2-4135-b5df-4c69c9d07143",
        "cursor": {
          "ref": "2d471f41-242a-4187-b9f1-d5e989c01ab0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ce42c9d8-e933-4e49-9d40-be43929bdca0"
        },
        "item": {
          "id": "4ea30f15-2de2-4135-b5df-4c69c9d07143",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69fb191f-41f8-427e-8dec-d8439a0e706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b075f296-a653-4826-9787-0a732981fb22",
        "cursor": {
          "ref": "f4fc170a-f158-44cf-a55d-16f11837946b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "792dbf70-b26d-419e-82fe-1e734df84157"
        },
        "item": {
          "id": "b075f296-a653-4826-9787-0a732981fb22",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "548943c3-5b68-40da-a697-b1feae5d0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd021a13-1d61-45d1-8b09-05bd3716e3f1",
        "cursor": {
          "ref": "88e9bf02-1376-44c4-8dd3-fd0c5ef5143c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "57c3640d-337e-4cea-9dc9-35a5b4697db0"
        },
        "item": {
          "id": "dd021a13-1d61-45d1-8b09-05bd3716e3f1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7330c589-1205-4929-8819-2903c70f8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c19e73-2fb6-4984-86b7-380187395bb9",
        "cursor": {
          "ref": "22a562c0-4489-4af5-adf3-5e0def8c429f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c8bc270c-ed8f-4013-887d-c0e746f7b104"
        },
        "item": {
          "id": "82c19e73-2fb6-4984-86b7-380187395bb9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0263b1af-3bca-47d8-b140-3ec21b5f0db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3960ce3-5153-4d6a-ad4a-4a77166c77af",
        "cursor": {
          "ref": "c7d90c32-abd5-4e50-bafd-c13ddb9c17a3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a97e8b23-3653-4842-aab0-4b00aa19dd25"
        },
        "item": {
          "id": "b3960ce3-5153-4d6a-ad4a-4a77166c77af",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7d75ddf5-f174-40a8-b8a3-8a50929fd20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05be7806-d6f5-4387-b994-346b28cd1c76",
        "cursor": {
          "ref": "1835cc22-54a0-4564-a536-298bb2a4baf5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bb99a174-c85e-4be1-94e7-e567c39e7bdd"
        },
        "item": {
          "id": "05be7806-d6f5-4387-b994-346b28cd1c76",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0bd25040-3e79-40c3-b7ec-5cfdbd19877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2d88b5-6505-4027-8768-ed9b852ee7e3",
        "cursor": {
          "ref": "e080f27b-2c5f-4288-aabe-7b9eea3a9943",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cfda95db-7a92-4f37-afbd-b65d9ee994ff"
        },
        "item": {
          "id": "9a2d88b5-6505-4027-8768-ed9b852ee7e3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b0ce4fc-6598-4043-b87e-e2ba40416d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f36fff-794c-4956-8322-d753a0bbe2c2",
        "cursor": {
          "ref": "624ab7bc-0cab-4a50-8b09-f0d1453eb17e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5f4eb8a9-df73-46bb-b84f-f55cb4c598a5"
        },
        "item": {
          "id": "d9f36fff-794c-4956-8322-d753a0bbe2c2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "da739ec2-b065-4454-8f68-65e48fdc0291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45099de0-4c76-4602-ab65-e5bcbedd0fcd",
        "cursor": {
          "ref": "30be9048-78f7-42a6-a483-2d50d4a04a91",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "86cd1327-1bc6-4534-95e1-65ba9af101cd"
        },
        "item": {
          "id": "45099de0-4c76-4602-ab65-e5bcbedd0fcd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "85cd393f-48a4-4ef7-81fc-67a0619f134f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417de995-bb36-4eac-8174-e80616a853aa",
        "cursor": {
          "ref": "8f1de9c6-9101-4df7-baff-bea101d9ff0d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "932c7410-86b3-45e1-bd00-e757dc85241a"
        },
        "item": {
          "id": "417de995-bb36-4eac-8174-e80616a853aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5aa3e48-87d6-4e55-9f3d-19502e41ee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a596c0f-b991-400c-88d7-91b77386727d",
        "cursor": {
          "ref": "de88d18e-287a-4c4b-a79d-a980b0adbfd0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c527563c-7fd0-42cf-9046-7e0cbe214949"
        },
        "item": {
          "id": "4a596c0f-b991-400c-88d7-91b77386727d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bed4c381-bd53-4d6b-a60b-2f6644373246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c185f8c-fb5d-4cf7-bda4-99490480bf94",
        "cursor": {
          "ref": "e88c7e4b-cbb1-46c2-9cf2-90e24f7b1fb5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "88a2c81a-1e51-419b-9f4b-64701eec2069"
        },
        "item": {
          "id": "2c185f8c-fb5d-4cf7-bda4-99490480bf94",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ae12237e-2f02-4092-9f48-1ff8dfe78926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c807ab56-b7a0-4528-813f-41b55fd75061",
        "cursor": {
          "ref": "6155be4a-9887-4273-867a-342ed1067bc6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "429b4f92-2a00-4d99-a6ba-4be014e83e33"
        },
        "item": {
          "id": "c807ab56-b7a0-4528-813f-41b55fd75061",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ffc20782-cbf3-4f0a-8b80-6ed8740a2a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6c2539-8454-44b5-9d66-764b1347ec83",
        "cursor": {
          "ref": "cdb450c8-bd16-40e6-bd81-edc6f8aa538e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f0bfc9cf-dca2-483a-8e64-10c409d01d68"
        },
        "item": {
          "id": "2e6c2539-8454-44b5-9d66-764b1347ec83",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b07b9120-77dd-4793-bebb-cbce227205f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c848e-991e-4cea-bcc2-321d167e2526",
        "cursor": {
          "ref": "53eae5c9-f073-4fa9-a6c3-db069670ac79",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "776d9deb-8203-4f53-a30d-5e109a839502"
        },
        "item": {
          "id": "4b5c848e-991e-4cea-bcc2-321d167e2526",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16195448-697d-4201-9a84-fd64cce2a2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cecc53-8708-48da-9a88-1a4926cb4d01",
        "cursor": {
          "ref": "bb7e6427-ecd4-40b0-bb87-75b811c12fa1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "53a59d59-1ead-4318-bded-3b571ef92c07"
        },
        "item": {
          "id": "f9cecc53-8708-48da-9a88-1a4926cb4d01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "da7ca673-076b-46b3-8955-c0cc51e72941",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a3ef54-dbba-4696-a581-1ab4ce0299c7",
        "cursor": {
          "ref": "3f644ca8-85db-4cda-9bb4-046a56c2b6da",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5f8730e6-45c3-41cb-af1f-72648d4d6f09"
        },
        "item": {
          "id": "11a3ef54-dbba-4696-a581-1ab4ce0299c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f78366d2-6a62-40ee-b87f-b83465d76945",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47e806b-32df-4a89-bbe8-7710852052e9",
        "cursor": {
          "ref": "724781bf-8101-4015-b4a4-fe586850caae",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f37a63e3-2558-49b4-8430-565fa8df5a92"
        },
        "item": {
          "id": "d47e806b-32df-4a89-bbe8-7710852052e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9905f88c-c9b4-490a-aa7d-669e087fe9e6",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1394bce9-34f8-41bc-bec4-8037a7891778",
        "cursor": {
          "ref": "ba307c5f-d44b-48c4-880f-f182f0787b4d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b969ebb1-9685-4bb3-aa46-de2630e436c0"
        },
        "item": {
          "id": "1394bce9-34f8-41bc-bec4-8037a7891778",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5bbfd39-b01d-44dd-a252-3254a3663337",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1394bce9-34f8-41bc-bec4-8037a7891778",
        "cursor": {
          "ref": "ba307c5f-d44b-48c4-880f-f182f0787b4d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b969ebb1-9685-4bb3-aa46-de2630e436c0"
        },
        "item": {
          "id": "1394bce9-34f8-41bc-bec4-8037a7891778",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5bbfd39-b01d-44dd-a252-3254a3663337",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5932b7a3-2ff1-4653-b261-902ad69d8782",
        "cursor": {
          "ref": "45b19b6e-cbf6-43e9-93ef-f8499fe0ed7b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2c6445b4-c202-4a99-807a-cca02c8cd66b"
        },
        "item": {
          "id": "5932b7a3-2ff1-4653-b261-902ad69d8782",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3641bba4-59b5-4386-b158-062a367d2b21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250138a4-3c4c-4127-932b-fc8b53b9375d",
        "cursor": {
          "ref": "fa1f2ca2-147c-468c-9d33-38fe3951b6cc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b20cea75-29ce-48c5-8f28-277b9ae8c67d"
        },
        "item": {
          "id": "250138a4-3c4c-4127-932b-fc8b53b9375d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc5458d6-83c0-4ac3-b501-c60f8eb4962d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}