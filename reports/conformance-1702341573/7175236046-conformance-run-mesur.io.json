{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "91653922-76c6-4a61-87f4-d6bf2c6c1a70",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d45c760a-36a7-4a27-9954-d1a5dbbd1cd0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11931815-2d42-49b1-914f-a198b1d147dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc57747f-3372-48d7-b8bb-9fbd76ad9087"
                }
              }
            ]
          },
          {
            "id": "4f024c73-00f5-4717-a438-1be34a799be5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec229603-3f04-4302-a1af-85e075eb9802",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe9b17be-ef65-4bc6-b0a5-4fadaa598ee1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3a024b0f-01e4-4f65-9e2c-44eb41694cbb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7757dcfb-d88c-4311-b6a4-9d89ac3d2285",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8634515e-22d3-4f3e-a93d-b3d2dcdd08fb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80f0e96b-1812-4cc8-873e-9ec18e8f964b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e158743c-ced9-4122-9b19-a43b1d67fe99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84e189cf-341b-4b9c-a84b-e6700fda3f52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62b7ea75-2689-429a-a893-4f6e897c6531"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7b3b693-4076-4199-a1ba-73e8cf04d6c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d6ee344-a99e-4c9a-bca5-86b8f93ea860"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ac8dea6-b1bc-4589-b1f4-37d4c6e8300f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7abd4bcd-4302-4812-b0c8-ba3156a4cd90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06614b10-39e5-439b-952c-cd39ea504eee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67094d28-39b6-433b-8fa2-bc6875edd237"
            }
          }
        ]
      },
      {
        "id": "abf6656d-31f5-46df-8678-7a27a6284cde",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "581da201-156f-4db3-8c92-e8e6a18a8d2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26b5ed52-a450-4d0d-a891-1b78501eae82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6405209-4999-49a4-aeb6-13f6c9afca5d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a658bff-7ba1-4471-8dbb-8ff9bb8cd1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65f77e0e-4deb-4694-b8e3-4590bbf8a96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07709727-6e24-47fc-a927-716178c8abca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6465da-8918-4060-ac57-1ef5409c24b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c361157f-a804-4f20-9a5b-f7a063859774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b60bd11-e202-44db-8c47-af385caf3ddf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac9f199-5ed8-484d-b044-3cf6e64ebe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "406a7d28-c781-4345-97e7-714e13ca3c26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b47c9522-fd5c-4160-b5d9-6f6d6594fcc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2ea949d-e030-40c3-b373-79463207a920",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96da410-7fd8-4109-addf-817db74f6247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdbe0dd4-27c0-4f1d-aa77-7093a5028cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a49f8-390c-446a-9908-0e4ea8ae1982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9b1ea9-ffa4-4c9a-a21f-613863aa7e32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "85ad2209-e335-47a4-8061-1ca0ceeea77d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b101b8d6-d039-4381-8807-157bda666c45",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dd701c3-7681-433e-9e9a-f5e72d88df56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "111d6699-6f04-4157-b919-432390e7d226"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4b6fff9-44c6-4cf3-b7cb-1a692c1e4b30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "81bbe0fb-eeae-4fff-afa8-08f75dd56248"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6ff6f36-10f6-4f81-b0a2-d92306ddbb6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0633dc0-9681-4de2-9ba1-0f23fa82fd5e"
            }
          }
        ]
      },
      {
        "id": "6be4620c-a5b5-431f-b3fc-4277d9531ac0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8dab8c3a-7735-42b7-bc7d-311de9a6742d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac9b33a8-36ff-4e4d-8348-ebccfbbaae3f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac158fa5-a25d-4a1c-a014-98ab274f841a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23b36b6-d0fb-48e7-ac86-547445a32207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5107ce-ad46-4d04-a456-b24516841ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d252bd66-82dc-4493-9e56-db188e0cf594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fa459d6-a7d5-47e0-bf05-cad0809726cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58790985-b723-441c-a07b-cc1c16bdb689",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0866de0d-b928-4895-a00a-f7dcb07e2f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19b4670-2d79-46f3-870f-d512f1aeb82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c25d6e4-9433-41d0-a2de-a3965291b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a9f8fa8-31e9-47de-9018-d57242052109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc741045-2f82-4120-bdd7-a5583c50a603",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f83a1-732e-4e62-b973-c3859a8270c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8146e-af3e-445a-8e3e-573bedc52c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6356b625-22cb-46dd-8ea1-d48fc3b06f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7a49614-14ec-450d-9267-103a6b8d80c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc3e069-42ea-47dd-ad09-6d6e74103ad1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d4fc14-6057-4b0a-8c5d-a2c37301d749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b499ec-114d-4293-82c3-74a59c875631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c6e7aa-c45a-4b04-a862-eafa83ac7c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd00a91-3945-40a9-98d6-f4e04f223971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df82f2a8-bf5c-46a4-84ba-560cc3e7bddb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a62d2-e7aa-43a6-a3c6-f30376604b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f4c8d7-f330-4c0e-82b9-705c5aa50bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed57d4e4-3051-412c-8a66-91563921ac48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7517d3e-afa7-4b61-b675-461624701317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de59de-3284-4edd-892b-4fa41c8c3de9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6cbb0d-abb8-4002-9b6e-407ae39f2d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1a87fb-b819-4861-9416-6481a0d5723c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4347cc6-5f93-4cad-af68-58d27a9f035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5a5eda0-6c71-4c0d-9534-cedc18a7e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd3bc0c-e858-4cb6-836d-ec2379257a07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47140b53-93f1-4cf7-be4f-318e912c51fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56330b33-983e-4ba9-80cb-6204034f2fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c75582-7ef2-47ea-a85e-314040f9278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21911150-1155-4c31-acfe-350545e1b689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e258117-e8d9-497e-b431-85dc763e0b86",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df57b58-f59a-467c-bec7-c564e6619714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c519a259-077b-4678-8fbe-d410fcd0735f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c107dce4-8011-4748-949a-b57a53b0a472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a7e141e-b335-4d45-8ba8-14e4a0bb2a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e557ff4-6e60-45fc-8b30-2c11927d008c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1a58ef-d136-460a-9dfd-4a2c16a4efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa2512d-5637-4fbf-b49e-62c1814b9607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9012bbf-6b76-481d-8eca-727b8c88853b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db85b34d-e464-499c-8c00-d32a1f753e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f9e4ad-13e4-4042-aba9-9b3e124d6014",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36da692c-5045-4205-9422-72e3f1333cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774c1327-fb18-4bac-a786-6edbda4ba63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1694bd7-de32-464e-a5e9-fd1cc05d75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d1b75ab-15dc-414f-9bbd-b715cdfaf14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b39c33-eae9-494c-a6dc-a8941928d741",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d89318-1c21-4d39-b706-673b5921af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadde0a5-756f-48e7-ba59-d440ab940daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1472ddd4-cf14-4c63-a5bf-0ac032147344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd8a05ca-a8fd-4504-86e4-da2ac0a11cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee144cf-da75-401f-a68e-85d5cd193a5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdd49ce-2688-4f02-9fa0-d7f622035515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e579886-8441-4a93-b28f-b95f311301ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07a3b25-1a51-49a9-8eda-958dc0f18d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ddd953-6503-4604-8d29-92a29102f03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be133418-374b-4b29-ab78-7d5475f0ade0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b41310-cf86-4189-bc9a-6def0ff4c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727589c3-3e9d-4eb1-b5ba-5241850acc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343159af-a99e-4270-b685-c114544b1b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f26b2a13-add5-4006-bfe3-232e758d9989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472f7c2-90d6-4a85-b6b5-098fd4bf32a7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1ea591-3b9c-46f2-a5b3-ee189fb47971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662a371b-ecb8-4604-9dc0-30a20791855c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5c82fe-6979-477a-83c2-df37ad4b1024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6998c376-b5f4-45fc-a7b3-b6fa35705577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6c713d-7fac-463c-b5ae-9d9e70312d1e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce516ba0-7df8-4998-b454-d6e1cb4893d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66cc25b-7a50-417a-9fe9-a2cc131ab94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cbf7ac-bb6a-495b-acbb-90959cecdb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe45c75-aba4-477b-93ad-57dc95fe89d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1a5a69-c8ed-40e6-93d0-b4b0110179d7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a67fb-f4a0-45be-b09b-e85815dbc265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fcf777-7881-4557-b592-1c76a559fd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7427a-8b51-4c03-a591-dd84205071b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f315acf-9155-43cd-abe9-4c8e3f03339b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e16296-933e-4d09-9cb8-7bb18cdda076",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643cf054-1b7a-4c35-875f-2fa241d81d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570dc929-5e92-42c2-96b5-3f8a494ef49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b109b4d-ae36-4022-ac09-4e1d15888f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc652f2d-f8a6-45b6-b95e-d95d384bf266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb39d80-7e9a-4c36-9c1d-383a330a084c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ea8e6d-d2fd-4208-9a4b-f93a65ec46be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd2ec2a-b15e-46b7-826a-d18f0e29a21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7212a887-8869-4aa1-b308-164137fd452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c7883f-227b-40e7-8d2d-141c34ea33c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a470f3b-f991-45ad-99ab-fba09058e64b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81c599b-dcba-4e10-837d-5da6d2e12fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382243ff-bc23-48df-9860-1ee76adeaf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16cbcd4-2305-4d2c-974b-46854f7f0bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d43d32e-7c34-478f-95d6-b3fe843bdd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0af81c-c891-4264-bd32-bffd223dd4cd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb2e2f9-fa3b-495e-b0b6-5485993261e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39cbb28-e71b-498a-9994-51a9255e2048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053a3e18-4103-46b8-be99-6ecb3dc62988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a8d776-61c1-43a5-b128-57ef62b8067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78d4a07-e93a-481b-b8ac-8fefac6d6b60",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662a2823-4700-4081-8bdb-db9b0534fb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a23bcb0-3c6e-47c7-a41a-f7e5aba3b724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9df1eb-3cdf-4a94-8d75-c91c9334a8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef3df05-6301-4ae3-9c13-6504272a8fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2907a4-0f42-4117-a003-2ed1b8ba40fe",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a71caa-dc68-4aa1-85b3-6fd2bed31a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85818da7-3f5c-4ea6-8b72-4f344d9a54ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a170146-e267-490b-80d9-492f6bdd85e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d93b1b8-78b2-4f1c-8a59-b90b58929b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942d62ad-edac-458b-a553-f4ebc9b91bfe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e9f0f7-f43a-4c52-b591-1b347ece10d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c071f274-b31d-48c9-84fa-4b3fe5b56be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbac07c-0dc3-462c-be7b-6da57d8b2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fe9e3e-723f-4c6b-b41c-9149fd6462aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d4508-e9db-4919-b540-b53a2521648a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e773beb7-3ae2-4fd6-8050-525941f46684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0731239f-0e83-49f6-98b4-6fe54911e869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45aec2d-2a6b-487b-8462-db4d5f1c6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f31adf9-2c48-462b-ad96-97988a2ae652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7028068-e5f1-428c-abd9-44a909432316",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761cfb3e-6d1d-427e-8f00-b07c9896e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8dd758-e313-4f3c-9b65-e6210a65fa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75b2e65-f96d-4590-8764-680ebd2784a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3722f1bc-8b6e-4a01-8e55-6fcd1f982242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9edc34-dd4b-400b-a29c-198213cbb9bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ded557b-605f-4b99-95d3-fc1a973c482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acc0c1b-2dcc-4813-8008-eb20e526adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a790f7-04c6-43e2-8d78-0bed7f0ff25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d782a9d5-76c3-48c3-a754-414ae736467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a4354f-6229-41fb-a7af-95997c2fb050",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd741863-aefe-4878-a294-7f789fab9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8322c4d8-65ac-4d3d-8d7e-ae62a1db03c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efdfb97-2076-4c36-a79c-5a5610454102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f76b440-11a5-4fee-aa87-38f102f01a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbb4eb-5579-450a-ac9d-025238cb5d59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a0765a-782f-4143-b621-62d09a04ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0900df-7573-428f-89d4-5e0770c1c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5615289-8f73-46e8-a79e-c6151042e617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68841534-2ba9-4de7-91de-d8e5b557367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf8be02-e723-4b78-bb14-b89ba1abdcfc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5ef97b-1bdc-4da5-8ed7-57a9eeb5ed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860d6ed0-c69c-4e36-82e5-578e26271e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c6e17-1694-4409-aa26-033932e49cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfd7505-7f43-4f73-a7fb-7684fd671da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0144e6-fb6c-474c-be31-1caf00544928",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aa7574-0fa7-4184-a7bd-66f40e0b3613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dd082d-2aed-4052-ae7d-c6fb74a86dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9bc633-fd54-4cef-ae3c-00ba5cce1259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a72a7ab-0ab7-4e02-b532-9a256ba0128e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f5da1-bf3c-452f-9c60-a615bbfe243a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4009255-c655-4399-8c1b-03b0977c6278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee1e8d7-b361-41ae-8ae3-eb0f6f84da99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb3ebf7-d07d-4dc1-aca4-81814d0ec662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf329f54-2dab-4abe-b50c-363a39aa2345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010ab327-bebe-4fee-85a6-f847db28316b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c02a41-b8b2-4584-bd65-cf46825bb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549450d2-110a-4d25-ba9f-cbaf91816544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb19f9b8-050c-4daa-a0d8-2ead142a94c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e81fb0-c62b-4759-8257-97c22647d81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07544ba6-9fd7-48ce-9ec9-0191b852025c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6520b68-2bee-4296-8d08-e6cc7723dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbe3a38-f583-4e4a-af11-fc050dc13bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded8f6a5-3f53-4062-8b08-19cd55c3d8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "778164bd-39ea-45e3-9460-049fb503b77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53950ae5-7a18-4ba5-bed8-29bb8361c165",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f38944d-9bf5-4c08-9c69-484d1120aedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f7c69a-750b-41c3-821e-d16a2a4cf5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d10e6-9cc4-47c4-ba81-83133e5377d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f49e2b6-c375-4bfe-a2d6-97746f67ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2311bca2-ead1-4994-8400-f64388c37e9a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24edad12-24f4-4fd4-a1c7-cfe3c75b15d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407adf02-8080-4f2a-a17b-9c6fd8655365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2447ce0a-0621-4554-9cc5-0670147b4a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c240c92f-ad5f-4e48-8753-cede7b0aa2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b5b3db-ac93-4c1d-9e0e-ef2209fc034f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c473332a-01b6-4e94-b52f-cae9453418fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fce2a7d0-8a8e-45a7-8e35-d2f446738361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c13f8f-5470-492a-9891-58f89bde0509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69f062f9-c081-47db-9b6e-622f9fb6b5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f1495d-a7e5-4ceb-add3-5b4b7ca5b902",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35acc6b8-74ac-428c-bc4d-16a36efc57f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aedf4f-dacd-418e-8d33-53b6175e350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d31467-7e33-42be-9ec3-c5d58da79832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc27e48b-ce99-4eb0-981c-407e722c397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed70751a-eaa0-4d15-ad1a-dae5cf5fb403",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169505b5-be86-4148-9452-cdb4f750c99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4b6b53-5e90-4a57-af58-d56ee8cda983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26da3256-4c54-47f2-92d7-c46c9d1e14b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2cc419-9abf-447f-a06f-b37aeecf48af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a997d-500a-41a2-ba84-7bf45b9fc17b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fb4af6-601c-4eaf-aa2a-bcbf04ee9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b596ad9-ffda-4838-aa51-537a76f1425a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b065cea-3928-47fc-ba86-9dedb7798b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0178de29-5792-4914-9bc4-a68a8a4c94fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b251b8-abdc-4db6-9de2-336d2530ed24",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300f8c25-8597-45b7-9cdb-c85e2a61c7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2cf0cd-8ecc-4960-9761-5a9ff1350004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb68f2-f46b-499f-bd1c-1c7b07892ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd4137c-c6c5-442a-a4cb-f8a96dd43000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad45157b-6a42-4c79-b71a-51ebc5936eb4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b80624-374f-476d-a2df-b658caee1568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b570c32d-8143-4074-b94b-ee891867313b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e69e7e-0d29-4c23-8f29-10145dfbf51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "deed6ff5-e9b6-4318-b3f0-ae498bf9a530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a40c6-b548-413c-a2ea-1539efd2480f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c27f448-f49e-4f44-9ef6-0df1e0d3194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f67c28a-5cfe-4937-ac84-46f13af26b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd407f4-902c-4a09-9e12-6849f547fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "721f1bed-f021-4933-9364-4c5763b5f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88dcbe1-d853-4f84-becb-96dfd5e1e3d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40fa5b4-58b5-4781-87e4-95aac24a67a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2beb23a-d7e1-4b0b-95a5-afc8f2d8ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f68a6f-18c8-4e64-9726-e5aae8cb4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c61e1f-6b83-4ec1-91fe-fd36905fbeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47db187e-5647-4498-8108-00dfcc952718",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2413b8e3-bc04-406b-981f-a856abe9d88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e468b2ce-9bb9-4d5f-b277-355914e2cd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3939d2-b46f-4ef0-92b5-a3cc8dfeee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d32ab01e-99ee-495a-a2cf-6375cc8358ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff05a86-c809-4b18-a337-33288ba80951",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0571fa7-c74f-4120-9a63-f9792664902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f826b79-852e-417f-9676-ed0db3d4460b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b13904b-d202-46e8-85da-08d49675da33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49905c7-81a8-4e9e-ae1c-a40f973ff641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6749c69-4c9b-4099-b693-49206af2bd26",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0f0673-59d6-4e71-8e8f-1c30ac0b74de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab49624e-9cb4-4d32-9d56-631123c11471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c66496-c9e1-4c52-9cae-d3b73a7b6427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8895e63c-e7f5-4bb1-8069-212d9a658e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5a625a-03b3-402f-810c-f853f741e295",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41f4c4e-200d-412f-a80e-6c29017e10e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589a6d82-94f0-41de-84c4-f02f6f57d7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b3cb1d-d26f-45f4-a6e3-8f7929181a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dc14d3-418e-477e-a1d5-1714a413269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3001e7-524a-4dc7-b27d-94357151ac2b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865b45b1-409a-4b81-8191-a554d14374d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfd54ba-64b0-4889-8a20-afec898667d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8c3fc9-6d2c-4dde-a8b5-b5786b518fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e934ec2-4b35-47cd-a557-4cd3e00d1765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e4a602-9de5-4e97-bc5c-6bb02729fea5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cdb2c0-b29a-41de-84ea-7c95100acaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575e70a6-ca3a-4849-88fd-f765dac0b29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa442ee-742b-4a33-9494-59dc59132fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3d1cd6-d6a2-456c-add2-e3fd76687166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf802ae-9baa-48c5-8761-747b753ee8e4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4b7136-bf03-4697-9b3a-9ec5466b4491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617b3c6d-43b2-44d8-926a-6dc983c6eb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccab9cec-58a7-4f92-95da-65410f4d4b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc26756-d056-44d4-a6ac-3c0579df484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0867f9e5-46c3-4e18-86ad-26d83d889db5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec95f86-175c-4a1a-af18-3014615af507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908d1a69-d363-4207-a840-7788f1fdd836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069fb3f0-3e04-4c86-bd29-6145ebcaf057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "291504d2-f382-4110-808a-c16a6f5f9af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845bba5c-ff90-4785-b83d-4649593c94f0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf16b5dd-91fa-42ea-9ec3-0d845fb93790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7be062-ac1b-4681-a0e4-eb92be6d2ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d87e00-27e7-48f8-a6d1-0143f7a193c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a6775e-243c-4107-bb85-892b5af12dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582e48a7-1c9a-4282-abc7-05d1c327106b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633b1889-f69c-4472-986c-e618083a219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff1a3f4-c700-4a59-9a0d-63ff9149c222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb42afa-f7cd-442e-9e59-1d6ec74f44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c37fb1d-a224-4da7-bd98-d05e23a03d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b09d34-a808-401b-939c-7eed19914c53",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f005949c-b674-4306-80c1-488012a44859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0840ee1-738e-41a9-beba-5e1c981243f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123692ef-c3fd-4b19-b520-ae80e4d842fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44aef2a2-084b-402e-a78b-944aa0697da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf89b6-d2a6-4cbc-81a1-afece441847a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5572d6-90b2-4d98-8a00-ca8319c020bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011896b7-8423-4c74-9ca4-4ad1f3794b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d66ede-5263-4536-b9c5-fffbf3f111f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b6c6c9-188a-4da0-99be-0959ad2632af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2d9e2-ff1c-4adb-b1ba-4a3da774f3bd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db601f5a-9088-43ba-8790-1a4440c9fc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123bdb11-aae8-47e7-bf39-65e867aa0f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2685811-3618-4728-9f42-8c849d8f6386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "beee24b9-1186-419e-bd42-92a14996c4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c750b12-4b05-4197-9768-f85642deabea",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3dcfc1-8e9c-4b9c-a111-38d857008d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0db2494-1b45-4ee8-95d0-e99c3814db49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0547517-dbab-455f-89be-211face211ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb5648e-763d-4a09-a6c8-aee4572a9dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0d5cb0-dc56-4d26-9193-998d008b39c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cd89c5-d0f4-40bf-94b4-5917bfb9a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccba713e-de54-44d4-b201-41fc1a96653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca88c0eb-c22f-4202-8dbc-c1fe46abff3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d78423a7-2034-4b73-8b9d-6258e269e339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60553ab-68ee-4437-ac56-6a70685cf3d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094b8be0-eede-49f6-943e-a146491f225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b929fddb-ec2a-4d57-a5f4-bcad884ffc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3a6ca9-e074-4af3-8a46-eef1f61ce16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "428fd976-7248-4898-a43b-0f34d0829ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73820868-2f67-4791-9d93-8bea8ef3ef71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aa22de-1b14-45b7-9524-8ec5e0ad2069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa70705-d4d9-4365-b18f-f3a729459de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1486ca-497d-4de2-a1b2-241d855ce058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53bd314-a812-41ec-92b4-aa3f0423c8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db667b07-d5dc-4135-930f-9b8e6e076530",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c81c901-da49-4441-a08b-6c2d18eeb5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2b16a2-00b5-4f5d-aca2-be6e599a4741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080f31ba-6734-4310-b654-7bbc87901a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "618564c1-31cb-4285-a4b2-a9bef882c170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58472c4-5997-4f58-98d2-1552bf542c32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ba52ef-ecf4-47d3-a909-e993c2d8e02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c80cb4-78bd-4614-936b-39d7b3a734c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6795c5d0-9206-4511-9c8c-6443237e6c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1036a504-84a4-4837-9c28-fd9ee7f08505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f206cda9-4f4d-404a-a4ef-343058d7a04f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b4aaac-fdaa-42a2-adee-9cfe9608afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c37547-ce6c-4022-b3a5-59c1283e389b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f96572d-089e-4c45-be30-36dfb0704f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c601a5b2-8f22-416b-8417-3f8b9b650922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cbfe17-6891-41e1-af0a-61ac9c9c32e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ebbdf8-9c91-4ac7-9fd2-69dfa345066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa774b3-1673-4c7e-b6a2-14e1d5eaaa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f9e1e6-94a2-40e5-bab8-349c115c6649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7ffa9c-fe84-47c4-812d-25b48da78caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3f9bf4-088a-42cb-a8f3-7fe42a988ee8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da71aff-78f3-4be2-adda-71a5c3e10524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784c5145-28dc-4bdb-96a6-a43d9e132e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787304e8-9abf-4a58-8679-04cb30077dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c637cc7-48db-4d1e-ba44-f6e059226b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17058748-08e8-402b-b2ed-0dcf0a2fdff8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba61a2-253d-494f-b0af-dddc9f83b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c504fd0-ea35-4ed6-8b8f-03dfa8a1bb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf916a3-87b3-458f-aa62-8a0ce7e60601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8778287-00de-4b9b-a55a-b53bcd5af063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142df75f-7e06-4a61-abd0-bc7b58084827",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b9b61-5549-4b16-be41-b9569ff59006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d3d682-1683-4ae8-8a5c-8b05ee4054fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdcd6e1-ae16-4ea0-9828-b8d01bf767e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c90d910e-07e4-4609-945a-e2ec8c3832d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bc5b3a-0d27-4a84-8619-e94cb165d590",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce838cb-c840-443b-bca6-d04780515942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f9261c-49b6-444f-8d1b-c9e4603f7e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55cd754-946c-422a-bf8a-969b0f01de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "862287ac-4cc3-46cd-a75a-04916bcceca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ba64c0-475b-49a0-8ac7-106516c2a5bd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4087b98-59af-43e8-af0c-60e746b45534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a00eaf-8a87-4002-bbb7-f366e34b8c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a9778e-43f2-4b2c-ba40-2922f689b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21417f3-52ba-4e93-b2ff-6992ee733c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3db346-45eb-4bda-a07a-cbda43967ad9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de68c18-952a-4d1d-ba6e-e3191c4c7029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780d6cb4-decf-4f0d-9f10-957b91d7e268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04f22dc-d3e9-40b5-976b-c4e9e2060a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62122ef3-f241-47c6-924b-71f99bb95b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28936093-74fb-4d3a-a9e4-659b438cc613",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79d270c-ac2e-453e-a6d0-f271f4e7dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4bb65f-329a-4219-b618-2d5f7bb5b620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93ccec4-8a6f-437c-a9f9-2125397f5ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f169a3-8e99-4241-9a4a-a2b45a9deb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400c3e4a-8941-4c9f-9774-f0ea836e1e66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eacebe-6d75-465f-916b-db3b8ef1fa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce964800-c08d-41e8-86a1-34f459d23dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b659f37b-d4a5-4d8c-af42-7906a1db6a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "125ec8b3-5b26-4618-a0cd-f5d2fd57708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0130e7c-e322-4709-b477-68cebb20f62f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b7e5a1-c763-414f-89fa-71591a085c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907df6c9-081a-42ac-932f-aada7cebc845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4fa7fd-d822-4db9-8503-80db654e8244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8302b43b-c76c-4c52-bf59-7cea64c54ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a9a9e9-424d-4308-acad-99341a24c3b4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f26d12-00be-4ab6-93ff-8b046bafbbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0dd396-53d0-4261-9f72-26aeff85612b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73da9d07-d8b4-4a49-912d-a27a311bb7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d26f1500-8dba-4d44-95f5-5577d0506301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b42cdc-25bb-4226-af2b-25419521ba36",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca526218-d152-490e-86d1-11adc99ba95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d04be8-7692-4e74-a976-9940636f5af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372b5118-2ee4-44a2-ad95-105a617dbc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06da6f1e-a135-4d88-a4db-164a3b3ff2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37528145-3b0f-4de5-a6aa-fcb9da73a4aa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7603092-1a8b-41ca-9548-f02a4c855851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec426ac6-461f-4005-aa11-f71f6c1fbe72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846ec984-121d-4fde-9460-d4c0c193e6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c74eca-86c7-4652-9d49-bfb46fec54a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fb9a55-e163-4ee2-b18d-e2f426627d60",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3704f68-1911-4bb7-a711-1a4ab3a7ed92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5220dcb-0ff2-40fe-885e-51ef9520fdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16716a11-9349-4c32-92fa-e863ef2f09c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f3f2a6-21a7-4678-9cda-932618263257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e44a3-601f-4ff6-bd1f-1c934384a46d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13c80c3-9082-4804-b4b2-861268e8d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47096d0-dc79-4610-8858-af5bc536cc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8f08ac-f340-4fa7-86e6-0b68a26bd1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33a6b26c-d738-4d23-a56c-52e987119dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5398933-6264-4ca0-b966-9e1a40b4e062",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa5563e-8e08-4feb-9d18-5c8199057588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86575775-14ea-41cb-ac2d-fe8c9fec46fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc32b0a6-d8d9-41d0-88f0-ebfd272b6bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc127eac-3716-4996-bdb3-3b67788b9892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4109e55a-6a9c-4380-b0dc-98d2fe8f9877",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453cb64a-ddb9-451d-904c-f617dc354a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25e13cd-7744-4ae3-8c65-1e35a0bcb5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733f234-d546-4cdb-aadf-c4f2cc0be9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3865af-f84e-4949-a060-c238651542f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9294774-86da-4acb-bdb0-bf5b77d31c3a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bbd232-1d33-483f-bf46-325836bab4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4abd38d-02dc-49da-845e-b84b4e2e4396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1881cf22-3ed5-4121-ab74-d4a3f652a697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19fcd86-ba49-48df-86a9-8476972785c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a2c47-1006-450a-b911-2d09d9752c54",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef797deb-918c-4c03-aa03-fe15408b26db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d533ae86-9934-4e10-928c-3dda4c65e9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7274f0ae-8f93-4ae0-a2e8-d944b23db4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67b7596-58aa-46cd-902e-cb7546e8dbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b29f935-3387-4e26-bfde-d7a2f89d0105",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e6754a-a7c4-465b-bcd3-99ce7d776e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78cafd0-f2c3-41b0-8066-ec3c9a654286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298a5034-a589-497f-b468-1cc6dbcf5027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6566bb3-3936-4076-a50d-77f7501de7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9a751e-5e76-47db-bb2d-2dc41c33fedf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d88f9c-aa15-4b85-a45a-46436f6e1a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04b51ea-e6f7-4082-95c9-661d0648d932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe58f840-362b-440c-a0d6-fd0eb28aff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60ae3ae-36f4-4e14-b57e-943c404a3a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f7aed5-9cf1-431a-bdd6-38774911630f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f016790-8cc4-4741-bb1f-90c1c3cd1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a624614f-dbe0-4385-a847-95f26efa516a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6710c0-baec-4e49-9f04-378f1b5dd1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8540e1-c156-4747-9ea5-8634aef70c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4738d8b6-e754-4066-976f-cf276f760381",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340fff27-6e4e-4997-a1cc-e174b985ae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea7e098-867c-4477-8345-602775189456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6317e68-ff76-45a9-aeb6-f7fdd0b2db1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0023b11-4f27-435c-9dbb-77f4d3dc1a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59943d77-e9a1-4f05-b96e-2cff4988b5f6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990e4af-b436-4b3c-a099-e8841c8c6d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad4d9e9-9d4b-45e1-94f9-6642a4640b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4259079f-1ca3-4729-8247-972513c34145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c640c08-c860-4bbe-8e04-0ef70b2ce43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4cea2a-2aa7-4edc-af1f-55b61d2ba42e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b5aa3-5ec9-442b-b006-1c583192ac7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad73850-42de-4f3b-af95-7abd000883ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6423b2c4-0dd7-4d38-a8a7-043f01fddf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee03306-bd5e-4c6a-9c51-36e41f02c86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26318c18-09e6-4066-80b5-3ee9d5d85b50",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e34f7fa-5ffe-4341-a9a3-17f9cc68f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f32734-4540-4154-b327-fcf82dd332a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed588a1b-2002-44f8-ada6-596446dbe6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fb219a-d241-4dca-b251-e4c4084948c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf2335b-60f1-413a-9274-0faef5727d5d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eec63a-b06e-458b-a8a0-808c5d440f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3fa35d-4574-4657-982d-c70a678fa3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b302f9c4-b49d-465c-95db-e35f1068b3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00008812-3af8-4c0e-a6b3-dfce49541082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7399eac3-bc56-444a-83aa-4a654449a396",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db6f049-ec67-4bd9-a601-b46e3fce6700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a6fd1a-d458-4ce2-a3aa-bb2e690ee18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1f56e2-71e5-4e16-9e24-a6ffdf259659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46506d3b-a924-4ec3-8393-a333a9554915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53619c4-dd15-4b1f-bf04-02877a09cf0a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee37ac-927e-49fa-b028-32e35314db70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d18699dd-d626-4645-ab8c-1da5d29efc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7462e1-3168-462d-9143-8fd723a5e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b457664b-3c76-43e2-bdaf-6780ba103b84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1b8e013-ee36-48bc-aac0-bc1c4f542e20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b64ce1a5-b09d-4618-9bd8-7e25bdee2f9d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4820bb9-6996-4cb7-afc0-44683b544b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ebb8146-1646-48e5-9e85-8d92aa57d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8acbaf-36d8-45dc-9293-f9684c1851fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca52828-9e33-4f28-af29-91f17943b58a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754e4ec1-7e5b-434c-b620-f22ec515aa6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd504982-b489-4b96-bab8-f910f48e0f09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd1c4b6-95d9-4412-b199-bbd787fe97af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a05b3342-9796-4ff6-b5d4-98e884c71a7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8560e1df-6c65-4c56-b701-1ef441cd9967",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11aebb3a-829f-4b3b-9a84-5d1ba704a630"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b43f1493-2228-443c-8ea6-669937eccf3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dd983a3-fcd4-4c0b-a028-81b5f2fa96dd"
                }
              }
            ]
          },
          {
            "id": "5c3fde23-efbe-4977-bfd0-ba4ad2ceac3a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a0a6c07-ac6a-409b-baf2-42035c79216e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4a6a7960-1d25-491e-a103-8dd184a1c0e2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22904522-7631-4067-8c30-ab3543c1b538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3a06d40d-f9a5-4474-ae9a-a243d11d8354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d7c40a-beec-493e-90a7-6457289c7128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a6f713-d0b0-4408-8378-3dd1c857dc64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1fbd89b-59a3-43ee-802a-773077aeb502",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e092a0bc-9378-48e3-b363-0f7d0ece8c48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c923bd7e-c9d4-402a-a6f0-455d349ad7f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba334bf-f21b-4a1c-9ac2-a024c44b34dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c1fdf4a-4db8-461f-a3ce-1ed9863456e3"
                    }
                  }
                ]
              },
              {
                "id": "c7120525-3836-47e1-bc54-c0807a3d49d6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79b42280-e142-415d-b3d6-d58e0d1da8fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf57e6ae-ac9e-4da7-9e1a-5193d1c85b75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb429607-ac1b-472b-a057-6449bdad56f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46f18e8e-72b7-409a-a18e-d7b1ca54f02b"
                    }
                  }
                ]
              },
              {
                "id": "1af10c88-a84a-478a-aa52-552bddd276cb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbe02c52-0a0a-4bd9-9f32-8fc38e210a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da39cef2-58dd-4969-97e4-cb54814876f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead0ce8a-e0cb-4b1f-9231-b849f492b594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "111817c1-3df7-4d9c-8e8a-b32e52f927a1"
                    }
                  }
                ]
              },
              {
                "id": "58f51157-d579-40f7-a646-91b2a6791ef5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb8a3f1-ea33-4e0c-8e15-f13544767238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcde7637-4662-46f2-8781-1a707492b0bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9fbb2c3-fe93-4045-8bd2-2e7a0385ada8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d47cbef-b213-48e8-a95f-1074001f7654"
                    }
                  }
                ]
              },
              {
                "id": "7c7cc15c-4632-4261-9789-211e01ddeebc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bd55c9b-dc6d-49d7-aac3-1b93a2530f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4f8ea14-98f7-4bba-bcaa-fd035f7e7c8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fedadf55-4b99-4000-a106-d5b6163df93e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64c62011-dfdd-42c1-a80a-5a765faf7bcb"
                    }
                  }
                ]
              },
              {
                "id": "d4a6a24f-ce00-4acc-be5b-24567157981d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeee4d36-6d14-44ee-8283-8d04cccbc275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2d9fe4f-42cc-4eec-a969-cac80d716676"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f9c5ad0-4932-40e8-9431-64a121b5f1e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "535c291b-97f2-4456-a3be-1c86918ebf31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cf61282-6a85-4a39-9950-7127faa4331c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a948ccb0-cfec-472b-843a-2bbfe87aaebf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec34f11a-75c4-4ed7-8294-121f8bfc3add",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46b0a12b-89d1-498b-bb42-d3716ebcec13"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d92410ee-db0d-473b-8447-411c1e074c0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "51c94aa5-7bfb-4465-9c2f-a9c387e43ee8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77e4e284-d169-4063-b357-f30a65c308f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91d4463d-1478-4ca7-b8c3-e4e226074aed"
            }
          }
        ]
      },
      {
        "id": "816b4c0c-02f0-4ccc-af44-bf039b9c4f92",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "75f4ce39-f445-4e1f-b205-a247f05315e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07423036-215c-4f7d-a443-75403346a5bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01bb4950-0bee-4b63-8e6a-f2b95123cae8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b2f924-ab3a-4220-97e2-e66043189760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a8d5a1-cb33-43e2-90d0-8011d4752d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8777c27-dce1-49b2-8492-721a058c0464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52de75b-2964-40bc-9ec9-095f144dc806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479aa1d-79f3-470f-8416-331f0a2eb74e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c4a3f-aefa-4a00-9cd7-d29949ba3140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bb37ee-481d-4cf3-91b2-49bf49d93997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9881b8-0bd5-41ec-8bf5-4221ba04ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f076d8-cc72-405a-90f2-2cc505e68af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d57066-8d73-4ec4-ae39-6282d4507cb9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dd5a98-4b79-4b09-b1fd-fda6478cae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bba122d-3e03-4fcf-bdfd-d0af5b83da17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cdb130-2b80-44f0-ac90-941e6b653f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bdbedd-1b8f-458a-8140-58a8556e34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9592e2e-b62b-4c03-a05c-64389ba45275",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477924c6-c7f3-4055-a52e-1b9e0421742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fdbede-e37e-48a3-9b69-3c99bb2e3713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db95551-b8eb-4e2e-bd57-7e2aef95acdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "146dee6d-1203-4384-8fa4-2b9b61e778f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b4996-2700-494b-8e55-ba1d280a0230",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f16daf-f4dc-4a21-bf7b-0a1727b09f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43f16b9-db25-419b-906b-7af82b09d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b713e8e8-ce7d-44a3-bffb-2fa3fcdacef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d995f88-0972-4d40-9f6a-c6b875d075e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2db4e7-0aba-47b2-b803-fc492fb0ddde",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1533a4f8-fb20-44f6-9b5a-476137f2fccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232b3feb-9571-4009-bde4-efe65b2c8795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9eb3e0-7526-4604-957c-02cad0dbf700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "286d9f29-2b7d-4a17-906a-0b2b83cc7f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f691970-5b8f-42f2-9bf4-7316b9cc853e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a32b6-6d82-4534-b60e-bc96bcc18861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b33a0ac-e76d-4300-ac29-1b8e29fbc4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88714702-9812-4d18-8ebd-32d71397861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9c7f2b-a72e-41e3-ab7b-278063e8d942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3c910b-2a99-4977-bc57-01354a92300a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55f26bf-beeb-468e-b5aa-4db739158fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16c66f8-0265-4307-ae0c-fae2c5e7c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c5697c-3bf1-47ec-8259-7267212ce7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "932b1ea9-649c-4143-88a1-ea72903779de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda511da-2c87-4335-ac69-d0afeb1466a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963bac28-70fb-441c-8efd-763c0d17b23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429f917c-76da-40ea-8abb-e5fd59b6cfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2692487-0c87-4ccc-9014-d96553d18056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c59fab-5d33-40ca-9494-cab8bc23b720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d241cb-7cf1-4b44-98ac-0dc941dd400d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2aa5704-ce80-46ea-b398-78f33aa89c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e20dc-ac96-4827-9ee1-d68ccfe0dab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be779125-36ae-4e88-a645-5525c1685dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbacdc13-fcfa-42c3-94ae-9b4fb6cfa315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ca17bf-51d1-43c1-9057-d6233be3ac4d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ee746c-db9e-4497-bc8a-7d4cd91625ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cce915-bbc6-484c-b30c-fd8e7c7d3565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6196c3b7-ae5a-4140-b717-1c26ef84830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5c46ea42-d108-49d8-bec2-e5612bece9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf7217e-6710-40af-876b-c6310668806c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ad0bc-ffa1-411b-b434-ccee4447360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8614e048-b720-4834-900a-7abba742f46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c54398d-7d62-42b2-b71f-336a6d0a6396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1bc0e3-33b6-4ef7-b518-38c63ae79953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d570b78-f35d-4a6a-9d54-3d708b5c69f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041f2c5a-3f5a-4196-b261-b80f3aadcfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77cd53c-c739-4106-ad1f-31ff188a55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012cb463-f297-4667-ab35-41200b821ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "326fbfbd-9487-4a05-8206-53d75e95243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e37f782-cb6f-4499-8680-e55c5ddc7382",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf6599-f469-4da4-a465-979803da8b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf066aa-8c81-459c-b3d6-bfa818d65693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ac5dd1-9581-4c21-a19d-54de22481174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c946c3-71ff-4154-8c9b-4378ac50d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea290cbe-8b66-4cca-a84b-1c2a23a1a7bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f96d447-17bf-41c3-ab88-beb5bbfd2646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8248e246-2900-4558-8329-9b19acd83c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e5fc29-8523-494a-a764-8f795e34faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b6efca-2caa-4332-87d6-7eda76fe0919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a67fe21-b3f0-44b9-b181-427360608937",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61c9dd3-d58d-49af-b8b6-e8a2fb960a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5c6f72-1456-4bfb-b57c-1b439bdfac43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4368fac2-a61e-424a-89a3-e0fc14ce8465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "541da6e2-e84b-479b-8f0b-8549368630c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35daf224-4821-4ab6-bd67-a2bc249832dd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495673e4-8b4d-492d-bc4d-fd154df44d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c09eb4-8182-42cd-b0ef-1996d23d2fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196491c4-6e4a-4675-8e07-9e503ba349b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4043865d-f338-4581-8ce1-6621155c2b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde6c8c4-2012-4904-976f-1e6493aa9e88",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4827c3-f414-4002-a985-fb9a216b6c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc22f1ed-0ce1-48fb-8807-4f57e50d2d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fccc05b-6efe-42e2-ac43-dc6d33899728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16ead3b-604f-49a4-9940-125bcfdd47e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5decdc-656c-4dee-a94a-53a32bd1c7f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df793d6-e6bb-42d5-8c72-80568865df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791c5dd1-21d5-48b7-91d7-524d652b0d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e0180a-c4f2-450c-b1d9-d7965ad6abde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49026f03-9717-4075-8351-c3d94651bff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d14eb-00a6-4bbb-ab0e-0154af107108",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1b36eb-e851-4e07-8cdc-a4f3fa196fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16095747-0d2f-4639-9801-d93ce00026e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4401e0b-f202-4619-8673-e47435e5e79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac6bb3e-1c97-41ad-91d4-2dd02d50eb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7bbcc0-adeb-4383-ab1b-952af889dfdc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db02eaf-7408-44bb-b99d-1fb3122a4af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77fd53b-6247-424c-be4f-badee1dfa4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f841135-54b4-4a03-867e-070a8622e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4377fa09-c1f3-4a46-aba7-b9ce5ba1e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9028fcd-d5e2-4ccc-9043-c6d2d0c4e25f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2ce36b-f4a1-442b-a5c6-cb5b30c712ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abf5705-b12d-4f2f-b82e-daa47e2a03bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cf2998-480f-4824-90f2-d360d30ed7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cc5430-1af8-4375-a365-78ab3abe59c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ebee7a-ff0d-4536-b278-a4eb37c4d21b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e562680-458d-441d-a0bd-b9b57bbf93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6889f4ef-743f-4e75-8fd3-832d22164bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b92abea-ed51-46d6-a3b7-083049586172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6083d9d-4135-4171-a140-dac62bbf2767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a625ac-2301-4c8a-b14f-50abb1a3c282",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cf6a35-d445-431e-be33-21959cf111cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27407ba3-3a14-4c7f-a4fc-13afbf61e704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fcb5d3-cff6-4cb7-ae8d-59d4eac1e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4697df89-5787-4337-b4f6-bd534ac5dbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab41c74-4baa-4b6b-84e4-62d01af72b57",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217c9e6-3137-48a6-a30d-6853ac640bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1630f64a-e0d8-4143-8f12-122bf4e7cd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9439139f-48a0-4142-9944-533b907b9245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14194f1-0478-4c79-a344-b2c9f89814f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21ddcd-d42d-47ce-96f3-3be6b5a5173a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e01beb-8425-45a1-b12c-1fafad9f3ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2167035c-7d9f-42ca-9ed4-04b5f057132d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18bc17e-149c-4962-b2b9-2e6efa42ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da67780-c46f-4972-a02c-076f6a4f8da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60cc9bb-f430-4a6e-9545-d6e17f9e387e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04336f8-12aa-48bd-88c4-dbe4b7fa4c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ad1553-8034-4b9a-a1ff-ca46448590cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aeb5aa-1322-4b18-a5de-77db2e47fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd49aa9-2a70-45e6-a283-2b06a9ebc478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ab326-7b8e-4f9f-b786-10a6b84df706",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baed5efe-5c85-4cd3-b1b8-52c0c732973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a38fdb-dc7b-47d5-aff1-850f84d09c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83508fe2-a50f-49fd-890a-867d1e1a5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a127a55f-2d02-40d0-87bc-dd4227dd4db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa15a7b-86e0-487f-aec7-deefbc35f516",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973fe10a-0f8b-4f6c-89db-fb6611c43782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f281f3b4-2d10-4af3-97ab-ed77429c383e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc273899-0003-43e2-b7fa-4881aed44687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9af0cb-2926-4666-b7e7-9a261ee5bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77d8e7c-2fa5-4c03-905f-70d73337b8d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210b65a9-9ca8-4046-a469-348a06e3e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cc3bdd-1658-4222-b104-078b016f7c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2808b459-ac43-4859-ae7b-8914ecd1798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a93692-2a5f-407e-b449-dd204d086695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec7ce3c-9369-41f5-824f-f360ef489e7b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a47db09-0885-4693-b39f-d82f2169620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed053c6-8b68-4553-8d8f-0c8b9174c788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e911edbb-2474-406b-9f27-8b28aa44ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31436b2-41ae-4bab-8ab5-4b2e303818b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f44c205-bc8d-4030-8b0d-328869995d27",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a17428-e601-44ad-b759-83af475e57a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c06206-2716-4b70-aa52-da948221470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b759dc3-1a0b-4b27-bb82-637e05b98e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affc9c49-9b78-483f-b712-045772f10aae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b88bfc01-48e9-429c-b9eb-0c5b629d0d34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65155ba3-48ed-4e7d-beb3-315ef93bf9d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc263bf-6870-474d-bb91-b0a91e936908",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d99ac2ea-e25c-432e-9887-d44f1f007e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cd412c-07d9-4e8c-89c9-6bbb63d25313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ab948df-7892-4d15-bd65-13fe87ca0e70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6daf0960-11a6-486d-adc2-fc269aa91784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3634e4a-9755-4376-a97e-f88dd3fa76f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e9a3b4-f7bc-4b02-821a-239a5a83b0e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ecf39f1-eabb-4272-b614-c195079ff89b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9b1f4c2-cd13-4044-bb99-3a01b7cca283",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d9e77cc-b9ba-421c-84a7-51538f71d58c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f63c82-417b-4734-9429-cfdd0b450c80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f254cc9a-c4b4-45fb-894d-1ae411cafca7"
            }
          }
        ]
      },
      {
        "id": "7ef3142f-8951-490d-8ba9-110bcf6eb832",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ab92810c-95a9-4a54-a30d-b201def717ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9103d31-4cce-4f77-a204-82636717a8f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf2eecb0-183b-4898-a6e8-3091edcaf380",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457a9533-999a-4bde-8e29-2b074975a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f278061c-1a51-430e-bec2-117fae7e81f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052fab94-5f0d-46ce-bced-27af120fc6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71a74ad-e057-484e-81d9-009afe79d1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0659c566-6e04-4203-92a0-6dfdcbe6c280",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36feb8d8-359f-4be2-818d-0d6fdcb43d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca04d7e-bee0-457e-b2d3-92225aef596c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7562c34-a535-4b4a-9ee4-5a650c997bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e41e265-fd63-4c02-a791-4ece6ad4c574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684545e-5e7e-4be4-b33b-70cdb4322cda",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce8df40-22c3-428d-9fe0-6d0a45d19b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2111ba-4f68-4d53-b811-92830317a8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5628e5e0-83e5-4fea-aa08-c759613f008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7255f9e7-5732-4018-b296-d6cc9bd0e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec52af5e-9d29-4716-84dd-e35555a20e65",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4be573-cb62-4608-a1e8-3a289c40123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67138dd-40ce-45a3-82bf-084036e043e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cb02b0-3f92-46de-bc45-486fd9bb42f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc053308-463d-4e57-af96-c00a3546c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef57779c-a44d-49f8-a0c6-6bc22cf10ec5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af21af3-f116-4aaf-b161-076523e7fcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606929f4-ff9c-44c8-ae2b-3b89722ab4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701a13a2-e2c0-401f-97c2-8a261e7cb41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c0855b-24e8-4ce8-ace4-cf974fec28db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8481d6-a10f-48f0-a91b-116df29c2714",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195dd0b9-5c3f-4624-aa52-6651d8c0f16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb55b061-d9b9-4ce0-9bde-88a302121776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27f732-be89-4958-8613-4c1b899db19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c6d551-06d6-49b8-94b0-0acde4f12f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aa507c-9fc7-4cc3-bffa-ce96c727c616",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c311aa-6198-4a65-80eb-3e790b1b128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055e8fe8-8be4-4c3d-9ab8-4f0d89ec866a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc7cc2-1e06-4792-97ad-8556a8079d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee47b60-f300-4b77-8b9f-69b9676eab6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27447b4f-5f7f-4163-aa48-52fa37b85054",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96eb9d1-22e5-4f0b-a3a6-77e92d010122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5b211b-bce1-45d8-9a96-f2db86bf8fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9c5609-3e77-4a40-92e7-a068aa41c757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa753048-5b12-4208-bf22-aae400c28c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3673da26-f9a5-496f-9ad1-0c30ac20c853",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d5481-d7d9-4f12-8070-160c353648cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ffea6-0267-4e2b-8e1a-56882fef25c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2438685-3de5-44f2-aea9-e48b42951a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8db721-a61a-4c6b-8bf0-0849290e0919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b9d1a7-5143-41dd-b996-f98ec28016ef",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3692d3-fd72-4ef2-adbb-a5d18af57336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f9aad0-821b-4406-aa5d-e8f912ce79ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a661a505-1b3b-47a8-8488-213194f0f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9515c9-83cf-4893-b61b-b76aa85af723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb3333f-d5ac-4109-b07e-5e8c6881ef1a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88285cb6-8855-4536-8f12-1dfefc5702ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcbb1e9-43eb-4143-b3e4-229eb9700750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbfce89-f36b-45bc-89e2-22d261a40823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaadad9-2112-41ce-b41b-61de1631397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec744366-fb05-494f-ba14-fb3782621106",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03f9975-343b-482f-8ceb-e2f3af718751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da086a16-b9d9-440b-bc36-8ac8b88115a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61178139-01ea-46cb-a53e-0e3e8a34b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72f5ba65-f3f4-473a-9db6-39581b556974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6288b19d-8704-439a-b68f-92f199ac7219",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1632b6d8-9fa2-483f-90d6-66d204e948c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fd9bf0-f563-4dbf-a377-ff18e2df2aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a400d1-3a36-497e-a701-fe56c00725b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b42ba58-0e9e-426c-903b-d41a0647f2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80682e1-79e4-40a9-a37f-16373dbab57a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29849236-0020-4bf7-b81e-6b9d4e4470ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaf07c5-b2e1-402d-9b94-9883e508c78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b008cb5-373e-41d4-b168-6717cae9fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdf8531-ca04-418f-aab9-8e45a4efe2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7b8654-6374-45a0-a662-4b4335080221",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfebc71f-275b-4090-9c7e-07e64e86bcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518af6b3-b216-4611-9791-d6787a538990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3251d189-21fd-4261-9462-ab2d9ead09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "467b8817-549a-4625-9d03-2668b4bf514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85afe1a0-e2aa-43f6-b605-bac512b3bcc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62a041-43b7-472a-b9d7-7d58ab2a8e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ab5771-a5d5-48b4-b585-0ae18ca660df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee046e0-e7f8-4ed7-8992-aea78d6dbdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80a4af1-9715-4f1f-bb78-f000907ce2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cbfa6a-21e3-41b7-beb8-7d495f0cff02",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb588cee-e860-438e-b0d7-44fd1f64b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfa3d72-2928-4881-9cf8-9fc1522c05dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f1f08a-8820-43d8-8079-e826885cd1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5902f50-0109-4ae5-8db7-6081e56e290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b75064-3925-4413-9182-c6cd4958a191",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd3be8-b8ed-4ae6-9dfc-a01df8d05b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3245cc26-49f3-4a99-99d3-40d9a2cb5aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cc6c90-4ee3-4fda-aacd-d57e2c081bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98315d58-6019-40f5-84e2-22425aefd933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6568d6cc-3efe-42da-9060-74fa61fdf64d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e3cc3c-f52d-46f7-a59f-b9343f03e2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed9ddd7-7922-4a9f-815f-2d2e56027d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5299dbc-5758-43ef-bdff-3d5182b33d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "926f0775-93ed-466c-b021-f1c18ecf471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937d2913-62df-417d-a860-a1b6c37d151d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf0e8ec-9ad1-41e2-83de-a8c94a215733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4928a35f-b8ac-4c97-8fad-10d6dba600be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb26f93a-96d2-4b2a-bf6a-ba62e09f7cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671a906b-6af2-48bc-a683-e46952944354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873e7a8-0c22-4d15-a66b-8f272008e21d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6ace7c-cb31-466d-b863-86f4b0399041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7da8a7-5008-46f1-8506-96f754ce0135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf4b76a-634f-4bae-97fc-066c8962d375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cdb703-6eec-47e6-b638-84bb8dbfb3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbddc053-5693-4734-94e9-cb3dfcaa93b7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d0e15a-34d1-4eef-b3c1-8f2ac3bfdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c103665-0de0-492e-9d19-6da0109a2fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824a1a9-bd8c-4335-ac3b-9e9349beee27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0836b48-a80a-48a0-8003-e0ed21595529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed318577-1afa-47bb-85aa-74988c52db72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ce90fb-ee84-4d95-be93-1ca2ca3ee4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125921b1-52a2-4e9e-9bae-87e659e53aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c2b8b4-503a-4e55-ae72-1bdb875c0aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc9c2e3-1c17-416d-8774-bf9e5efe8a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d53f0f6-000c-4b68-82b5-ff5a27b9f38e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1dbad9-5f93-4813-b38d-5435b9738c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fdcd80-9c3f-4363-894b-2697d4942515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4594f44-cf97-430c-a7ed-8285331562ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c02ea99-3235-4a89-afec-4b59d7b29263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d4a65e-0cd1-4d9f-a64b-c8526f1d9873",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352f43ca-7b25-4748-a6f3-359826362f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc02c450-dd74-4821-8253-4fc557779795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9811479-4b36-424d-863c-96898bf231b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3817dd59-cb67-489d-a7bd-7f4d27901434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c5183b-d8f6-4f1e-9481-974a7de5b15c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cfd813-43e0-402d-a43b-84db3766269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edb07ac-e377-4edc-b113-3d0392e3de68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167d22bb-9e36-4864-8c64-744b9032d415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0657de24-9b52-4fbb-95f0-dbe51fe9985c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef59074d-d264-428e-a528-119a4b0e02d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e492bd-4c67-4bd9-8378-215269f9efe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b963313-87a2-41dd-a63a-44a7f31970d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edc194-a21f-447f-b88f-ffa8263bae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d1f8b8-40e3-409f-864c-1064c8fdf293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b05999-2cac-4888-91c5-933acfc1526b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1b919f-9158-43a9-b878-48455e93512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2e675b-2c96-4121-bf35-c7cde0a00197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d4d49-ee57-4a4f-9286-3acbe44e47c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62637fcd-89d2-40c2-b474-ae98609b7d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1288588f-c332-435e-93d6-04bc9b975eb0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0be777-b1bc-4bc2-8db4-f1a51e2e32b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb411b2d-bfbe-4b23-9835-5a17a06c851d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202f7a4d-670e-4aae-bfb9-6c9ea78fdddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "492677ff-152a-482b-9931-3238017d5c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1fc6b5-2c75-4a36-b7b5-9a9949d4afed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611b8db2-5ddb-437e-a120-398239137077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51659e5b-402a-4ee5-ab93-f43e39cb78d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e036c21b-d734-4103-a7a6-90577da02611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2bc156-bde5-4f7d-a28d-9fef5bd4f76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986fbc7b-c101-44cb-8ff5-264990b7b02d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3f565-b649-48c9-a1ab-20cb8571ccdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc62b55-f334-427a-8291-e8c0f82d7281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a84dba8-d303-44b6-8391-ee001f085293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e91075-9ee5-4612-bd50-5e1e082d03fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a84e43-6a61-4b8f-b45d-d0b931907f69",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16480bc-4638-441f-aaf5-b06074a60de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7411420c-2fbb-41f0-a8b4-8d3e3fa21839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b7492-92de-4244-bc6c-000e2d59e5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d175ac6-431e-4b5e-9e33-2b89a8965bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f648a52e-c88d-4110-9dd9-a171540c36ce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071f9805-37ee-4ac4-91eb-425fa1318c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c8616-b2bf-4772-ad41-7552f758faa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7915c80f-a6e3-4c38-bf25-c10c2a8121a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63810bd4-6878-480b-a326-eb2f0e12c639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea158ad-15f5-41cc-90b0-c9e6644185c3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d12a5-03d1-4db2-b285-1b1e34bc735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0950a846-ed3a-45e5-a607-9154f3a93948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f92ea-a21c-49d7-bb05-1df75b34f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "367ac291-12bd-4c54-8087-004ebde7e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7deb425d-3fb5-4827-b2de-ef1d3f2f6c58",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4642397f-3bd8-4683-b73c-7c9df248bde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e525dc-41b8-4e59-bd0f-b8b0a3130016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f79e7af-3167-4485-8734-b91164d1f46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aa1c69-b42a-4a63-8044-2fc920e6a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf639d6e-3153-4629-ba9d-2fe803345efc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e6398-da4b-44be-8b59-b35825699acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9877f2db-39a0-476c-8153-b8329c76d4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba134aa-b8e1-4154-a2a0-cf3a56341758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7248e63-3806-4801-ad7c-c6f5b62567c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359f5700-f744-4af4-bb7e-5351ccee6f23",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f06c73-b13b-433d-b2d9-126d0c7ee6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ebe629-6c7e-4fe6-a858-3d445c9805ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a66230-bc38-4344-9f8a-636fe0106099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d5367b-b7ad-4c05-82f6-2faa3be67a2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49397b45-1a86-41f7-8cd4-b7bc303adb95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1cd96be-fbf3-4040-84c1-142e3386661c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844ff4a-b939-434d-a37f-d209f56734bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff58f6a2-e56a-4933-9029-ea0d85384940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd41095-7d90-486b-bf63-25d55aa40576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46e6cfff-46f6-467b-808a-a618f92372c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de0996e3-76be-49cd-962b-0e43f9e5103b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c8b907-b1f0-4992-af65-530500949b44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c7d093-b1d3-47ad-8d2e-36971211fd47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e12edae9-5bc5-4488-82cf-10bd13b5d3db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cf9c430-7680-4a6b-8ea4-dd0959b182d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e91b95b-c7ea-4c77-9da5-7c9d8415d7d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaadf223-d62e-4629-8903-ea9846a34f33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a193b9d0-64d1-4351-8c85-9fcdef48f7f3"
            }
          }
        ]
      },
      {
        "id": "a08c3613-461d-442e-bdd2-dd06cdfbde9d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "05bb847e-c8ea-4ab2-bb4b-be8632a26012",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53c01215-77b7-46f7-a550-626786196776",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a157db2-38bf-4de6-a0d6-7aa2aab6fbe6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7538e08e-934f-446f-ad48-20834ba1b957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9384b377-be0d-415b-b008-5ae4f4a0d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f29941-a3e5-4c46-b0de-32de4e05049b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059ce5e7-bbc5-4f13-8223-1c9f0b80bb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0a15b6-4230-4936-9df4-3ec2740e9d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132c2c90-fdd7-458a-902c-c8d838b958bb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3a9519-f9f7-4433-9f4c-54be7b0e9a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c09207-fc0d-4469-94a3-04c14e244e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425deaf0-bb81-43a6-b7c7-9f37935493dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be70a7f2-3bf3-4111-9658-d7539e0978ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f40757-afd8-497f-a6b1-c8a6f4f53ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca0570b-f5e9-4ed3-9008-982fe9257de6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fa2327-012b-4fb3-9fb1-2b6c8be91b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89034441-017a-4e39-ac73-4dfb5c1908f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac4a091-dade-4da5-9781-1ff63fc62804",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32731457-7940-4559-863f-581a93f0ec16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe78b7-3383-4bf6-9e93-aef6ccc403b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6226762-cb7e-455f-8fc8-46b89548bac6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b746f58-6c73-450a-85b8-1edbcca56e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585cb885-0906-433f-b261-7973f6aecd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1572b516-2c84-46e4-b158-bb3f1a346b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca8891b-a4f8-443f-ad91-5c121dba8191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a18fb8-08d7-4a71-a61d-cf8e6644d766",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb13f95e-f5f1-4390-bb62-932027b02cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a31d7ad-8ee8-4f6c-8409-ffcf8d8efc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3048d601-0694-425c-82d6-0a44092b640d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80043e5-3eb3-4642-a8c4-fb356495946d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c79b34f-0c69-406f-a547-ee2e90c8c789",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80289507-e04b-46bb-8934-810878fa7ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171cb846-7f67-4c81-9596-cc5fd4c66e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af11ae27-8d8d-476d-a57a-4d69810af78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c486cbfa-7fcf-4c8c-9fd3-e00897501109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58a8db2-e9e3-407d-b6e7-b3dfb6d3d936",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8b81cd-5db9-43f3-81c0-c5c253ec8f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13aff8e-c4a1-4a88-b88b-33d633c26267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3c9aec-ac29-4dbd-8d97-6824243cc131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6407ecd7-fbf7-40b3-9029-3b1caccb3d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af9b685-99ae-439f-8e1c-aa8145e4045c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a54ed-3783-42f0-b185-fc5c3485f33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db4633f-0385-443e-bdeb-1f14b8c8068b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2974c7d6-79d6-456c-bd3f-3dfc250d4715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208baf3-b95a-43bc-b61e-12b53b436ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c2d78c-d193-4d88-8cc3-e3e0c9ab6b97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830751e0-ab10-42f7-9ed1-1e5fd610d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8f99d9-bc5e-40c2-b355-c6f4490510e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7689bf9-034f-4ad6-a726-41ddf8455dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e204717-cc92-440f-8ca0-94a36e06b9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68305aa-f544-4abb-b287-32128691452d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1590ca-c30d-4a48-b68d-00253d874887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d465c57-01c5-4094-ac14-ce7ff064a252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bab316-3c9b-44db-bc57-1b7214a49478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e842b8-e33f-428c-8464-a878fbcf1052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfb2668-d776-4142-9c9f-ca0c0318a5f1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126fdde5-dcd4-4760-9105-3528a213f703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe0623b-4213-48fd-bbd1-910df0635aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe78a0-7da2-4e79-bee6-f77fae8b0399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35247674-d5b3-4991-997a-0d8165b3fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ccfda0-8ca5-4ae8-97cd-055ca339f88c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25ec53-cb06-4073-8696-a3cfc671f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79595366-ce6f-4ce8-a578-83ee6f6b653d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53498a8-6184-4685-9fdd-d79cd10344ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a69ee6-a7b3-4a07-9403-55cf98695ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2cb3dc-01e8-4f6b-99d8-043c4ad4d172",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910bf5b4-8869-4f53-9ca4-a1ab93741a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db964eea-72c6-424e-8564-7b8d45c7076b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d48d86-b041-4aac-9919-fa996122d64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6fdbed-8b08-41d3-9ff6-5d2448417685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a2154f-ed3c-4ea6-8c06-25d3d77ead2b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a37064-7833-49c6-8fc0-115803df45cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2899bb14-07e1-4860-a836-fa73cf4b5835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a983f6fa-a4be-415d-9b1e-0b593599eca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f2dabf-6599-402a-8df9-74f0cdae6ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9120c14a-b392-4e95-8063-6603b8d804a3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1e58a4-1be4-4b90-b8a4-f71e20e8fdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c39631-37cc-48e4-b7d1-3e3abfd371a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31311c3d-0e71-46ff-b6f7-58721f664d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a144399-73e5-4019-965f-ef22e7acbe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eea7b7-171b-4161-8aa0-af54979533bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a033615-d961-4c58-8e2d-6a999a347e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02f18de-e712-460f-9d17-dadbbfc8128a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e152ce18-5b5d-4434-a8f3-12495e59a3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144c68b8-29c6-4840-bbb6-206309c936d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a05a24-6823-44fa-b60c-5d5d3e4136e1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408abe7b-64e7-4897-aeda-35e8cf541e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf111270-3b5d-489a-a585-182768c6634c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac4effa-75ad-4c27-a0db-d3df87c2d53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1044414-52b0-4a2f-8065-85866048c705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5a19f-961d-4aeb-96ff-592057d877f1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881af1ab-c9c9-4653-bad7-9d5e405faa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c3c992-44c6-4df9-a88c-48c4bbc11ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb005b43-7134-4be7-b721-5bb91aeafba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e65abe5-0491-4fd2-a7c0-609c4e5ab80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90385a3a-5b5e-4464-9c39-f880286de9ed",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44e86b0-9068-434c-aea1-6d43ec7dd585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af232b14-124c-4d22-9e5e-baca248cfc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381a92be-5d6d-4fc2-ae06-24dc7d6e9fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e838497a-f593-4364-bdce-973245320e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72c27ad-b289-4af9-ab0e-d76089f8098b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219e854f-3843-4e46-af3f-17fbc296812c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed410a6-e846-492e-b3e3-b35d4c9e1045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505cc8d2-7c50-4a97-ae18-54de0386bb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0326e9a-cd57-45d9-8fbf-38e480c62ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d442df-b6ff-4228-94c7-1d8a217a5560",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd29d8d4-22d4-4fad-86dd-c286bf8b8550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afe460b-f912-4795-931a-c0b79f1c04db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae284a5-ed95-443c-bb2a-ddb0cfc4e120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edf6be8-394f-4343-a890-fcf76b3207da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170a354-a343-4362-a536-999c9a78e81a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982aa85f-30c8-4a50-a11a-41fb277b150e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "580a6222-2008-47a1-a439-85d3da7bcbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b14b39-c887-4571-b1da-c12729f41bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7587a7d-e892-4244-9316-b636d6149b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311b7ee8-53c6-4cdd-bce6-3ead8e0c7181",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e60bdbc-bfb8-4ed4-9b69-f6a0de850dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c829857e-7daa-4cf1-b444-b9e4a7b20f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6474545-7b50-4ae4-96e3-c186b3b5410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b466610-e0fd-4f3a-9cc2-4287ad3d9906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebf0170-d3f8-457b-befa-06a56568b5d9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5512040d-352a-4d60-92c5-37e9d4b9f06b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e402ed-ccfc-4e8e-bf5e-fb6b621f3918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4103b1-a1d5-4290-8217-f38a970d1820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352592bf-fd50-4cb7-96fb-f57c929f6f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329165e-b9d8-433f-82d9-717dfb665bcd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb5d34a-a54c-4e9a-99cd-3edaf8bd58df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ef8247-ca34-4d9e-8fd6-6caf4e3c29f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3110515e-1576-4e47-9864-caaaababb0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb98980-aa45-4656-b11c-358d180dbe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b05df3c-c62a-467a-a1c8-1febfffe08ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87523c5-5eb7-48c3-942f-eb3282509d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4398f1-5a05-4930-bc57-7b426e229bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f525d15-06b6-414a-97fe-33d2b760e295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e59a5bb-39df-46a0-a44c-15f0732a151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0013755b-fd51-4b50-b678-4dd220c5883c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42067e05-908a-4721-a7b8-c7d305c12f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181a3fad-1d80-4915-a381-26d4f9e746ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d2735c-fd83-48ec-a5dc-b8e978856532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1059656-de60-49d2-9dbc-8ef9e4ff0cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afa519b-f7b5-4300-b96e-4c36874eb79a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0c6ec-42f7-4942-a6fe-a87cc3ac4976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdbc50c-087f-4396-b27c-8040d8904b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62436ff5-33e6-4b69-b518-b8edf36d399a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a42d7ca-26c0-4c19-a601-3b32bfedf5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c99e8c-eaba-4494-ba75-911fe5d00562",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747af135-2adb-4c04-b599-ae51c5957fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f5e862-1946-44da-a4f8-de89c00448b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2387801-fbce-43e2-9653-8823543cd729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791a3ed4-b7c9-4b3d-afa7-f3857ce0252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec61b67-52f8-43d7-9b20-e841c96a1f97",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4825ebdd-9b2c-49b2-ba9b-3a4c01361963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f373a2e6-971c-4747-968b-b30af3d9fde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488f5591-986a-4c18-a2c7-68338800f92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a02fcb4-237f-436b-b2f4-cd56fa0a6278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75700f24-3ce4-468b-b549-bc46c0d7db2b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7509dad8-f6c3-460c-84fe-13d944042218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe37c1ed-7947-463d-9d36-5806bade6ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40977e05-185a-464d-8e9e-ba917b07998f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e09f5ec-3f21-4048-a1d2-d367b93d1eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59cb151-00f8-4a7f-b938-6e92b1cffd27",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f0a9f9-bc63-4461-bf7a-4c36bcaadc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80319b3-c4ec-457e-a9c6-7fdb0be533e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20d8862-6472-4e3b-a0b5-9f5613920480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b354f2-9943-4799-b610-40338f2a0bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b0a71d-836c-48c7-8f01-facce76b0e33",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c509cb6-a337-47eb-8a18-e539e4a571c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ed39bb-172e-4940-a838-ff07dab00a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a673f4a-cb07-45eb-899a-d57088ed4a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b245a41f-3b76-4f8e-9f94-070c88fe027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0bf371-b0c4-475e-8200-272f3256deb4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb3d0b-ed82-43e8-a3e8-e9c0833126cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853d9ff1-2f09-43bd-9e23-7969850acaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaefa419-1ea3-485a-a5f4-87f65603f84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1a5eea-1ab2-45eb-aac3-0f2b20c19005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42ec3ba-10a9-4fae-a51d-e2c93a19fa9f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d97f35c-6208-4c9c-8908-94d0a047839e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29685659-e23e-4f78-b25a-0ca504c182d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e504e95c-ee08-4059-93dc-1885433e3e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2284adb9-841e-4f07-8c28-a04d522736a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5f667a-2744-4fa9-b9ff-783487f1ee0f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c94c19c-1df7-462c-b4fd-3940f3c2df19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f094b727-a61a-4b3a-b5b5-5bf0f3d059e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f3c95-1e3f-4cc2-89e6-2a7b462aed17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bab0a21-0f0c-407e-a877-990247143581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6060b9ef-51aa-405d-af32-8bdf47a1ea55",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5182bca8-2840-4af9-a33d-7aaf62e467c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90259ebc-5b32-4d87-9620-6b63810de06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5760d1d-6289-4b8f-b9c4-c3da38c6a1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc2d1ee-4a98-46e5-9fa8-bfd7f01f99b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d6bb12-2277-4a9d-abd6-e3ff42daa4c9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf5d89b-6e46-402c-be49-09c004264194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430f080d-f7a8-492d-a8ee-258d4eca82ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a535f85-5421-44bb-8e8e-52513fc738f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c218422d-8240-4eec-88db-8e32375c3fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5122bd3-911d-49a1-adfe-0a54a4bf6093",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afad115-d373-4120-a020-cba6cc3e1e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34068784-8fc0-4d59-8479-c4ef83883fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b11163-f89f-448f-b7a9-9dbfeafd86f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63632221-e19d-46cc-b4a5-f381b48711d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcc14b0-3a18-4d81-be71-f2fe02b5e9b8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230450e0-eea3-48f1-9194-b693a7a932b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434de0da-3725-46c7-bd5a-963dbeb3d02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3819a2-ca4a-42ff-830d-75d5832148c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9062c5-70f8-453e-a8ad-6058fa7b6c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c75455-db15-47d2-896b-ae16e3f979da",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8491b0a7-c37b-4aff-a653-1c20da2568a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcecce8-0aaf-46c2-95af-32466b2f7c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b324d4f-57f6-448a-beac-436bf4c47166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d03eadb-05bb-4f9b-9c94-d9b3a6272735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6204d9-a2c7-4ff6-b973-a686c561d805",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5588b8-a8f3-41da-a835-dfea7afe0f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7765eb3-3ccf-4c10-a862-95c398ece33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb9d0a2-555f-4179-b117-6a523a9e1cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e7f66a-1e48-4b2c-9a53-01e10ea80c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0382d400-899a-4788-a6d3-266f6aeb2c0c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e84d440-a7e0-4dd3-8ff7-1727a088c626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214e5eae-c805-47e8-b9f9-305363beec72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcecb5a0-9a30-4967-a96f-7db7947e7e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27960c4f-c7e1-4ffa-a631-d368f64044fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3316cd-55c5-4540-af56-35dda9da1d23",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a18eb-7bd5-4596-a7e2-145815da1bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8df622-695b-4673-95fe-90cd95798977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd46d7a0-a4b2-4c45-9570-7d2ac92eb680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4276b38-0967-426f-80c4-9e453d489e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcaf9d1-78b0-4ddb-8057-6606cb00b046",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6c1d18-86c9-4aaa-befd-5b3f3a2cc97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c86080-b540-43e1-84cc-2ee2f31b617b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172bde0d-4997-477b-81fb-b456a64c35d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637d7db6-c1b3-4b50-9030-901ca73fb51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d923d737-4395-4006-aa51-1953ecfa113e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86012bf6-63ce-4be8-953c-28fd26c05753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d5da30-7262-4baa-867d-90aaa43648e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4401ce-63da-4187-ab55-1a64ad3236fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8b8232-6d14-4fef-99be-cdb9101e2e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb192d-8da8-43ca-a5d0-bcedc80e8dd5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc260b6d-9c59-4d3f-8347-452e105b777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb70db-7c3e-49a3-b997-000f8972ebc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5df0470-c6f7-482e-8a98-03f6354cb63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82823088-8448-470d-864c-28d61d31f4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4da807-f5ff-4eed-9181-23246032a559",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5690972a-cc25-472d-ba5c-d6ef5138f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91590104-9a3c-4ce1-8527-651afce3b7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d37c35-6c08-45ad-ba77-6d1f61223753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e219dd-a50c-4326-9216-22db4c420b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07826ca2-4cd1-488c-8d41-cf43445748b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaf604f-c34a-4fa5-b71a-53d475d59e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ef36bd-7f77-42db-800e-d51693746ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6246b212-db6f-4cda-aabb-2b40b6b5b563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ca873b-cba9-48ba-a59a-69315c720dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4a2d7b-a83c-4bad-b125-662475fe19b7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656d0b4-7413-48a7-8230-483c1c95c008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380d8edd-226a-4be2-afec-ce81d8616bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bebabf8-9514-4665-bd27-167f007b2cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89035aa3-491a-4338-9fa5-6c0af38a5eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64dcaa-7e9c-4067-a714-1d63d3f4a300",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8fd64a-1007-47e8-8e85-5cb69c241ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15ba60b-09eb-403f-abf4-abddedbe3db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa406c7a-7bdb-4fc0-8d69-740835cbe506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6fbd63-4893-4607-b267-ad7eaa0a65a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f793b57d-5b1c-4ebe-a2db-6b8365f237dc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356a2d5f-75a2-42c2-b85a-59f35ce2ba89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa61c3a-834a-48ec-af69-a57094094449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4baef-bfdd-42d1-bb9a-14f8ad1df78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d83c4f-6346-49bc-b39a-5fbc729b6b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0843c5da-be55-4299-a367-a7b10465a1c6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a486a3b5-de0e-431d-8bdf-e5714d98b47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97259fa0-85be-4c95-a6f6-0088e6e39f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2645b3b-27df-4455-b03c-902f764a065d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6152ca5c-21b0-44c0-b4c8-8c04d961c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98216c7-7a87-4d20-8531-fa1e2a0e1b89",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdbe058-0065-4887-b5fc-f49ad9fde41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17eb8db-f741-4a50-a49b-800dc00a4a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4dffa2-0350-412a-ba68-414f1fd64f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a937f8c-d49f-46b6-bb94-e0f766d47667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12adc137-01d5-4a7b-b70b-228bfd9de67f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c332b2-090d-4559-98b6-f797a648eacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202749df-28d0-444e-9630-87cc622610f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304c2454-040e-4b75-a604-d0393398b8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9b9783-f7cd-415e-aa80-c076f1f9c1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b727d8c-e104-455c-85aa-25ce5bfd13e8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a063b4-ea14-4144-bf5b-4ea37b133127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6006f501-2c2d-4e16-9fd0-3936f5ac7efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c07a3a-89dc-48a4-ae49-05eb54074d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d0d093-d911-4968-8369-00ae0f940a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c547f-58c5-476c-850b-e9f25ec5f418",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02442eb-e121-4236-bee3-ad29c4f14bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4a0420-ed61-4132-bcc2-e160b8e7e786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c133f142-f225-4587-bb97-ce4ef70d5084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ee6929-87b6-4afb-b77e-56ed218eb7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546cd8f3-018b-402c-a163-c3ce2804f7e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c59b351-593a-49e0-9754-109c651e67bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dff6dfe-dc7c-40c3-ad4e-78aba56931ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9a1fbc-db8a-4258-b7ed-69f1bbc622e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16ac9cd-c16e-457b-9e39-b4aacc2e0a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7782fc15-7080-41ba-9d5f-c3728cca3e15",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3a4910-c4b0-4a84-9d3d-1a6ead144cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e09cf-8d73-4b7b-a62d-412f3a681428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2d50a-8305-4ba3-9c5c-d06e7fe3f938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c669caa3-0432-4e93-aab8-0c4c23c4e919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6965ba1-eb57-419f-b34c-6d2bfdded793",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f008e24-ba8f-4288-ab94-5df5c9dfa4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb713c5-ce13-46a1-8799-788784dcac4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a17b4d-d933-44fc-bff2-5f3901d95896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebaf323-a58b-46a1-ae5c-a74c7febc4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449d9558-6b99-4db8-b631-22e789057f82",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e9380-78da-4d64-9a6c-2fb15992219b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be903000-41bb-458c-b833-f56bb2bf1f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e3602f-ddb9-42d1-b27e-36200d138c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee25fc12-759e-4c1f-912e-e39e25bfd8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77d6e1b-7f95-4514-b514-c8b6b6469f7e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34a1fb4-02c5-4b43-be3d-b654abb35fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c13b92-5e47-4324-b9f9-144d3ca5c315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ccd58-6bfe-43fb-bc40-2216e2c5af9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5a2c48-2a8c-4b98-8ba6-c20753ab7e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0629a9b4-3551-4da9-9516-1d38af606286",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c52403-be4d-4382-a784-169e87eaf4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe9e0e7-411e-494d-88e5-778dc0a3a4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae0690-25fc-4794-ae0a-cfe8a247a5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d69eba8-2483-4c43-a74f-7d142ce19b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a33c847-96cf-4e4b-96c3-2578592b37b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d121cb-0939-48d1-b8cf-d4097d91fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081799b0-fdb5-4cb3-88a6-8a05e0b28098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbc1539-7a38-44d4-8c90-321ce70668ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd860ad8-7b8a-4d99-a77c-9b6acd5814f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df685d2-26f6-491a-a553-351b251b4e4d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ddef5-c7fc-49ff-a373-d425a8350293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b95ba85c-89de-4c8b-a5c0-2bb077149aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23431408-f231-4a87-be23-cc04467a463c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97602c27-c9d2-47c1-ab72-ddb07114b8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf519df0-b409-40a0-86fd-4e46939a8b7a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5279a99a-6637-4e14-9fac-5bca7212279b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9595584-2bb1-4640-aa95-263771741656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f9243b-1c19-4112-9b96-0a652f7944a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af3d65-1014-48d0-aabf-21a3c7a352bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01182b34-57ca-49d3-be30-1b8ec01f0316",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ba85ef-95fc-4c93-be80-e19e98626324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26fba37-d186-49bb-9406-694a72f8bd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683117fb-ac01-495c-81cd-dfc82892355c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502bbc9d-5add-44fa-8786-1c4de9a61e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fed387-4b13-41a0-bd6e-add3ebee2fce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8711cf7-272a-43fc-a14d-036823162be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae2bdbc-da61-493a-92fc-4d7345624c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b49e08-6a00-4f28-a8f1-ab073bca552e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5db3cc-3739-4560-84b4-635122344ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308099c-8d82-479f-be5d-d2f16589affd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd3514-759c-42d1-bd6e-e7604e8f8b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcdd9f91-3d53-4052-813f-d4df356d387d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9cd6ae-96fe-4a91-813f-5470d93507c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d43051-9403-423f-b3c1-e84d1a807985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4389521d-3c7e-47af-b522-a859e59c1933",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1231da3-f871-4e3b-9fd4-ba960c7878f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4c7080-2898-4dcf-ae7c-1e555a135287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3890b-6190-4bb1-835e-f9688628d7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfa92e3-b594-4efd-a84f-32788f7868b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea18bfe6-b714-4d1d-92c1-fd1f7d026805",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfad92ce-0dd3-4b39-8a42-f8de251cf325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d4a9b5-9dcc-4d78-afd7-32f017b9e52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44bfe17-967a-4bd7-9758-3f5de1cb066d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269b06c4-187d-4baf-8752-cecb1a8c904e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4613ac7b-6b00-4ca1-b871-6d457c618085",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5a938-ec1f-4667-b2cf-3a97980884e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcffe01b-22ac-40a4-b295-4ef69b4c1e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34b34dd-1283-4490-aa53-940c25cc4f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dd28e2-1c3d-4a7b-b292-8b38c957195a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb82a70-2bdf-449e-9ee2-ef6cb9a21073",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173ff5c5-7eb8-4e7c-8752-f359a97ce2a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77244843-f58a-46fe-b6f6-cabb29256452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86365189-1c3a-49db-882a-1ac713894626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff5c8ef-e3b3-4124-bd26-075bef1afeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70e3610-c35e-439c-a4e6-931bc3f68c32",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d305e-f0a2-47d7-8d03-96205f992a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3b262c-3c3b-4c19-bac1-9062e7966cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86576b1b-4933-4cf9-8fa4-28afadad6b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55278961-b08a-4098-adc7-37e76855214a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50c6630-1c8f-4a79-aeb7-715b617d76db",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baefe75e-13a7-4667-a572-b05a4177ee33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210d4a71-42f0-46bb-82d9-180f760e4aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509f6da-b00c-4faa-8aef-faafdfd181ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbebf83d-08ec-4214-ab66-b3a6eeb7f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ef07ce-071e-4887-abb6-785fca24d852",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dcc2d8-a7fd-49da-b1a0-7e1dd3285b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a9fcc4-b66b-47df-88c3-d76a6b34e249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e9889-68d9-4831-b301-b5a58fdaf5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b307487-244d-4130-a3c9-17ed655f8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde0e6bb-3e9d-460c-b242-70062e2093f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d3588-f20a-4cad-9d3f-a4e499106d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f20797d-1c7f-4dab-ab7b-945252f7608a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69746a7-b78e-4d96-8869-912c528389f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf88461-89c1-4de3-90c0-5ffe4f4c8820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50adaacf-9187-4b85-84bf-60cdd71ea1ee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc787c64-48fb-4bd6-889c-77e8c06d1615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea67bbc-6f8a-4ebf-a285-ebb842a32439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc04d63-4eab-4d3b-9fc0-f445e6c9342d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1ca9be-65dc-455f-b78f-6463bbd00bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf8fa7-fc2a-4abf-8154-bec63a2c36d9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3fe0d-ee20-4286-80d9-ba66fd39fc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc702c06-e5c9-477c-b7ca-455b5313e7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f069c71-7f93-4cb7-b758-251ac4eebc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a55987-ceb8-414e-9c55-8bff873421eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e91b7-e3ab-4ad8-9ecc-d5d17a27b3dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58c0214-ef7f-4e0b-adb1-d666444189bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a594280c-0c3c-473a-915a-63ec42863be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58f7acf-2f7c-48c4-84d3-77cf3e908e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd122e4-5eef-4d3c-812e-3d20e3f38f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c54ec-a27e-4bfa-9c00-ec3ec8102ee8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa58dcc-f8d2-4a9a-aa87-b5e1bd02f19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84516fb-be42-4070-9570-dfacb71a5c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c4b451-2380-40ae-b041-52a057a75a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87459fd-3df3-4386-9c56-28b9e5394c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4014f1a7-56f9-460e-8b1c-952c51545f88",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ac6a7-74eb-46e5-ae4a-3afef9b8daaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a50b4c0-5e8f-440f-9c68-b3ff77463ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa22b54-04bd-4462-9e00-b61e2c20a9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a793ebb-2ced-4397-bfdb-c1bfdd447d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab39b546-1b40-4276-8828-330cb60ecae9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0817cb50-af5d-4b64-a7a1-c2819e4b53a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fd0dac-f7d5-42ae-bba4-3354e324cda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8d908-5c74-4777-89d1-0265e2d97e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ac4a70-625c-43d0-ab88-2da799bce20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22385104-3c6a-4acf-8034-3771312b42ad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea83c9d-d496-4dce-b375-b495ba831be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211c3c58-7dca-4f9e-972d-f031d56cfc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46116d69-815f-4bdb-be1c-6944855bbe3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d7cc55-b74c-4b80-9338-0a9aae5ee113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b879a38-ce9b-4dbc-8486-60d6c51e09af",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acf329d-201a-41de-bd14-95f247d26425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5cfa25b-888e-409f-bb57-09f21f2ef528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1605c7a3-e367-401a-829e-da7728912ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19da8913-84a5-45f8-874c-79fd5ce84a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218d27b5-a4e2-4967-9d5f-ff20acfe9bbd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c87e0b0-4e6c-493f-8824-44c3da6f7bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6cabd7-de9e-4f93-be04-399c58fc459b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddeedf4-eaa4-4b47-9178-1745e43529ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f252eb82-8871-42d0-ae6c-74b78f3e0a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fc71f7-797f-4156-bc13-0a365a4d9f78",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228801b7-b9f5-40cc-a300-f68d0000d69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a67f52b-3a32-4661-94df-f895428d0010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5fc7c3-acb6-4007-a515-108c54e0da26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f27ac5-99e9-436f-9f72-bcf19fc2b7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a15472a-27d3-4dac-b803-a17e238b126b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1894eb9e-5f83-4f3a-9ef7-b2475d00450c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e85b6e-d8a2-4107-9206-8575dd3dec48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe87a2b3-3b6d-4a9a-85af-5a4e5a1ac741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a346dc13-bf9f-4293-9d77-3edf87956cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e778b1c4-7907-4bea-ac05-084a2f0e6acf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8f2d14-de76-4259-bb5b-619daed9bc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a6dbcb-28ec-4161-aa3b-e501dd4a8e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1617e40-f119-4d76-8114-d1d9e4f2c8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d178e3d-9a4f-4de9-bbea-5cad8053b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf41d3d-d998-4cc0-b915-4585c39629d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89119843-43e7-40d2-8f0b-ff0cb83d1e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de943610-2c22-497f-9f9f-337056e5b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a4a158-cdb7-4298-9e53-13f4a017d3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b793965-bebe-473e-a13b-cbe9bfb8114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfe89f1-09c4-4756-8a7a-b400776cb490",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa60b0b-0b3d-4e88-b432-307e10afcc13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e706c9f-2f13-4664-9a7e-6f96abca4c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42f9a59-5fe0-4cea-9d28-16824084138b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431cf138-71e7-45af-9d35-48fd657a1897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6529bcd-ebde-4ccc-8e50-524847686af2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac62a8a-32e2-4d89-874d-1085be76fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b9d616-bba3-4e53-8b90-a3b4ec2c6f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a013225c-8c07-4e5a-8db7-fcb8d82aba13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abee752-f7f4-44c2-8695-ab66fcb86957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b672cbe-b45e-45fe-9218-ca87a82f98d8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9471a6ee-1fab-4f3e-819f-c68b97f743b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd97826-11c5-4f64-a0ca-79e625e234be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40560590-ee1a-4acb-9b42-cd1ba73b291b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71dd8e3-974c-4df5-bd60-3c64e3f0487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b26e05f-2a74-40fb-a98c-520666cc0e6a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c45c61f-0ec4-45fc-b43d-cb8679c169d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4544cdc-1079-4674-80f7-028ba0ef9329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb4522e-ff90-4eee-b432-a05652589513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4567281-46d9-48ca-b6d6-650f6679c390"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3137753-7802-435d-9f75-c8eaa5f08771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d40c68fd-0f0a-4a39-add6-d903b3b7bc78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "979d33be-e1c7-4797-a408-fb23fa143a27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae8a36a1-96e8-4162-ae02-60a8e504e96b"
                    }
                  }
                ]
              },
              {
                "id": "120afa48-4fba-45d8-a147-62b174b4b6e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2c25705-cfca-4b46-b386-744cc8272b46",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ce1b79-1554-44e2-8bf5-9a3f4b0248d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "434efd2c-df56-4550-9cfb-33408d1f0bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8082c09-cb3e-464d-84c7-82a8fdc04a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1fc8903-cea6-4a64-94d0-475b7b80cd4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd57502-bbfe-444f-a9e5-ca405b4a768c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73c5ec89-bfe4-4a80-900f-0031ad14f702"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb7c0bd2-9379-4068-a73a-af8ae876f99c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f63fc8ef-404c-449c-aa6b-760e8547b09b"
                    }
                  }
                ]
              },
              {
                "id": "6b753d13-f720-434b-a63a-81caa9de710d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8bbe9122-5d01-487e-8f05-b126abdaa3be",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139203c1-4075-4c4e-84ef-08afee988180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d3b7d36-fd78-461f-be38-eda8f33830de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7173fb-b181-4ba7-99b4-638582ed47b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e2dc7d-7912-43cf-9cb4-62fb55d2b80d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b8d8deb-3283-4779-a433-8d7d82619cf3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "229af32b-9c2d-4fd0-8f74-748b588f4b9a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb46cbe-80b6-49a1-ad41-9ef25ab2a50f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a3f1fd4-33da-4b4d-96ed-993ea7e22a7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf34eca-018d-495c-9090-5b51f40d3a6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5d18666-4f0a-49c5-85be-dd02d81756da"
                    }
                  }
                ]
              },
              {
                "id": "98bfff6f-34f6-4236-a0c4-6d9e9a23db54",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965e68e4-a3ff-45ce-8732-928d3617c14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a61878a2-a939-4949-afe5-48ffaa1dae06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af2de38-2e76-4b35-bd83-6010ef7349dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ba7fe86-b1d8-4682-a593-6ccf79eefc2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b216b831-508a-4c62-b0bd-364b6deea9a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "95a22f13-b329-472e-89ac-9c8a6c2e7578"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e6eaec4-bcb0-4617-b664-378ae6f3b270",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4241ff40-640e-4e72-8cb6-f7d3e16dd644"
            }
          }
        ]
      },
      {
        "id": "26329d27-9762-4572-a877-ffb2fd9af688",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c49aa731-c644-4d28-8646-fb1e87c86bf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e350e296-b947-403f-9527-8e78bed4c10d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c452d86-0a80-47a5-9a6d-f6649a6ab3f0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc86b6-b761-4c15-ade9-83c9316e4734",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "804dcd05-31fd-4b47-abe0-382c15b29e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d706e92c-a647-4f43-9e37-7ca6d7460442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eab8e4ec-0219-41bc-81bb-3b90bf2e0a69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac5229de-8df0-4dfd-94c2-ad8be3419857",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651b214a-a6fb-4185-9366-715247ef7104"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "956a115d-6c0a-43b0-811d-fde048f23cd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfeaf6c4-6230-4ad9-9131-c033ea2a84d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2431e239-be14-421a-9e4c-64b9024e25af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "98f007bd-5d38-4a55-bdd1-0fcc01bd5ef0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b26a675-7dd4-45be-acb3-fcfd2e5322a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba5831f7-5387-4281-85b5-63cb147764aa"
            }
          }
        ]
      },
      {
        "id": "7911c1d9-6479-4e32-a80c-9fb4d9e7969e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aefac6a4-04e8-45c0-b992-6cb55aef33cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17359657-ba2e-498a-83ee-0cb41f7b3679",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d1f1a6f-d627-4b36-8adb-5005d03f7540",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b71a3f-e9a0-41e2-abca-f038a962f992",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9658a74a-288d-42fd-b310-44fe214848dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c8e9f2-6ed8-464a-8d18-2b7f9398e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1030a06a-f171-4aaf-a74b-f6e215be59e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33bc3fa2-cac2-4800-b272-7a0eaab0e013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0701be18-1bb7-4b85-b5b9-ed484b6e2256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0815d1f5-9df6-4bac-a996-7878984d6a1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f8201d-1fa5-4694-bf32-8abe8f915057"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3816a98b-31ce-4aaf-9b66-7d71295bcf3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9b33011-9726-4e3c-9046-1f63f31c3f62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a1e2d5e-6462-4f92-af7a-ca4529782745",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89e507cd-497c-4e27-8e20-e2c85309acfd"
            }
          }
        ]
      },
      {
        "id": "fda1c8c7-631f-446c-a796-2555b55e2700",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8110ca05-522c-413d-96fe-868443d000a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "028964ca-0c06-4e40-81db-76cbfa8a9cba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "876932dc-1cf5-44d5-9215-66be5a4b3b9a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2e3853-84df-48cd-aa6f-f672ed71bbb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b92423b2-379d-4b14-bdd1-1187b832fd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8667d4f-a1b9-4f65-8b5f-10147db83efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f588eb78-85e6-4987-befd-dc4af84f34f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16bfe018-f85a-48c7-972d-38efa58b81f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54db9adf-bfad-49de-95a1-48f0e1597e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "561a451b-a723-4455-9ee4-6b33d8b5495d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "259ea8e6-957f-4c57-9c4e-da6a8e9808aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e68e7f39-92ba-4d3c-bd00-739bbfb5f871",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f21ca6fa-03e2-4e1c-830a-86c4ab21c4da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73919a81-2c9c-41ce-98aa-926701c28fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93be823b-e81a-4ccc-a9ca-0c09e6524573"
            }
          }
        ]
      },
      {
        "id": "bffc8b48-6b54-4c02-9507-c62557c54c9f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26c9c5b7-803c-42a0-af2c-2c53f5400046",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "168366e2-4972-4e9a-8069-09be5cec8c7d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eea93e51-8912-41d4-a1e4-f6a818fd2554",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa1872a8-1f1a-48b9-9e18-7dcec898e91b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7cdafa9-dd3f-4e00-acc2-2f1e50d5fdd5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.975438596491223,
      "responseMin": 6,
      "responseMax": 372,
      "responseSd": 24.5097064961401,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702341383519,
      "completed": 1702341400624
    },
    "executions": [
      {
        "id": "d45c760a-36a7-4a27-9954-d1a5dbbd1cd0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c743aae2-e77a-4907-becd-3e2053bb86d5",
          "httpRequestId": "94c19502-30dd-40bf-bc51-801b65398cdd"
        },
        "item": {
          "id": "d45c760a-36a7-4a27-9954-d1a5dbbd1cd0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35166df1-1d21-4972-87ba-1a6a32acd007",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "4f024c73-00f5-4717-a438-1be34a799be5",
        "cursor": {
          "ref": "751dabd8-9fdc-439e-b093-057619bd7e4a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f1540675-0695-4c05-94ad-c2e7e075414d"
        },
        "item": {
          "id": "4f024c73-00f5-4717-a438-1be34a799be5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9999c6c8-23d0-4fb2-addb-91555a3c24a3",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8634515e-22d3-4f3e-a93d-b3d2dcdd08fb",
        "cursor": {
          "ref": "0721dc33-642a-4dd2-ae61-3c3713a56f45",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f8885d8-97fb-497d-946f-4ddd737da01e"
        },
        "item": {
          "id": "8634515e-22d3-4f3e-a93d-b3d2dcdd08fb",
          "name": "did_json"
        },
        "response": {
          "id": "20425886-ce5f-41c5-a16d-eaa640742158",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6405209-4999-49a4-aeb6-13f6c9afca5d",
        "cursor": {
          "ref": "072af5be-5e41-421f-8a6b-d4dea3bcff98",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "728e1e1c-490a-4c2e-835e-60312f08e59a"
        },
        "item": {
          "id": "b6405209-4999-49a4-aeb6-13f6c9afca5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "780cbb92-9512-4b94-b91e-c6f1ee132f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6405209-4999-49a4-aeb6-13f6c9afca5d",
        "cursor": {
          "ref": "072af5be-5e41-421f-8a6b-d4dea3bcff98",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "728e1e1c-490a-4c2e-835e-60312f08e59a"
        },
        "item": {
          "id": "b6405209-4999-49a4-aeb6-13f6c9afca5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "780cbb92-9512-4b94-b91e-c6f1ee132f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07709727-6e24-47fc-a927-716178c8abca",
        "cursor": {
          "ref": "1eec4bd5-1f0d-469b-aaab-8770a455648e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c3a30745-98ff-4a99-a300-afc078e44ca7"
        },
        "item": {
          "id": "07709727-6e24-47fc-a927-716178c8abca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3f2189bc-6b16-4992-a9f1-574b0f34b4c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b60bd11-e202-44db-8c47-af385caf3ddf",
        "cursor": {
          "ref": "1b435ace-445c-4174-848a-b05399584076",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "203126c9-6889-4838-aed0-a809529ef12d"
        },
        "item": {
          "id": "4b60bd11-e202-44db-8c47-af385caf3ddf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3545c119-008d-4889-a56b-2e0de86fabfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea949d-e030-40c3-b373-79463207a920",
        "cursor": {
          "ref": "26b51e0e-7657-417a-b39a-dd784c5e7486",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2f302b9e-efe4-486e-ab18-4c9178b535ef"
        },
        "item": {
          "id": "e2ea949d-e030-40c3-b373-79463207a920",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a436da79-e6a2-4e62-a938-16f1505effa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b101b8d6-d039-4381-8807-157bda666c45",
        "cursor": {
          "ref": "71232dcc-557c-4ee0-80a8-3d7189dc36d6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "97e12c38-7254-49f0-8a4a-26a4a7614ed4"
        },
        "item": {
          "id": "b101b8d6-d039-4381-8807-157bda666c45",
          "name": "identifiers"
        },
        "response": {
          "id": "e3f0adf4-4435-4fe7-8bf0-32ab095133e0",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac158fa5-a25d-4a1c-a014-98ab274f841a",
        "cursor": {
          "ref": "7e07ea9f-1318-46bb-8e5e-4a2424d1b75d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28c1bf4f-4903-4205-b3f8-7450a6007e17"
        },
        "item": {
          "id": "ac158fa5-a25d-4a1c-a014-98ab274f841a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ff495348-ec4f-40db-bada-433e2549a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58790985-b723-441c-a07b-cc1c16bdb689",
        "cursor": {
          "ref": "538e5974-73c3-461e-bde7-98a4558826c2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a85b5c56-c079-48c6-92d8-c8353a68d957"
        },
        "item": {
          "id": "58790985-b723-441c-a07b-cc1c16bdb689",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1ae4c7d7-8d1a-4601-b1a6-d89e650e0b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc741045-2f82-4120-bdd7-a5583c50a603",
        "cursor": {
          "ref": "7d5b96fe-1c85-4770-b156-08de1f181e8c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "57832956-bc98-43e0-8b58-c75971f01e5e"
        },
        "item": {
          "id": "cc741045-2f82-4120-bdd7-a5583c50a603",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c1e8fa58-2756-4776-9271-358f4c3e21b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc3e069-42ea-47dd-ad09-6d6e74103ad1",
        "cursor": {
          "ref": "3c59fcdf-1427-41bb-a84f-adbc02d5c009",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "18a5394a-2a8c-4ca1-b543-52e8f9a7cf6f"
        },
        "item": {
          "id": "0dc3e069-42ea-47dd-ad09-6d6e74103ad1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "37c9d600-c58c-4168-82fc-e337344bc2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df82f2a8-bf5c-46a4-84ba-560cc3e7bddb",
        "cursor": {
          "ref": "769ad008-f003-49e0-83f1-e544119b23c0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7764a052-19d6-4f04-856c-05d82ef9ed8b"
        },
        "item": {
          "id": "df82f2a8-bf5c-46a4-84ba-560cc3e7bddb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1a522139-3890-4010-b42b-e4088b2ae9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de59de-3284-4edd-892b-4fa41c8c3de9",
        "cursor": {
          "ref": "45a7cb81-20f3-4a61-bfe9-49e20cec9b66",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e4a5d243-3192-4bf1-88d7-9e4cb7050208"
        },
        "item": {
          "id": "10de59de-3284-4edd-892b-4fa41c8c3de9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c18d493b-bca9-4b83-a123-a97ef564caf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd3bc0c-e858-4cb6-836d-ec2379257a07",
        "cursor": {
          "ref": "7b66f622-8e8a-4c38-9f27-eec112f768e6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1dd5ef2a-fd8d-4baf-942d-480e7c572fe9"
        },
        "item": {
          "id": "1dd3bc0c-e858-4cb6-836d-ec2379257a07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dc9c3e32-335e-4c45-979f-8e485c42eaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e258117-e8d9-497e-b431-85dc763e0b86",
        "cursor": {
          "ref": "d74dc3cc-9713-4446-aec5-36b21027bcb7",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b85e1ce-7a31-4946-be3f-2dcee6f963d2"
        },
        "item": {
          "id": "8e258117-e8d9-497e-b431-85dc763e0b86",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14c0e29a-86c5-4f5a-9eb7-78f586d55ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e557ff4-6e60-45fc-8b30-2c11927d008c",
        "cursor": {
          "ref": "843a64ba-fb8a-4732-8bc4-12ee1f0ca778",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6e789f31-d66c-41cb-8ec7-b189d9bee072"
        },
        "item": {
          "id": "2e557ff4-6e60-45fc-8b30-2c11927d008c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7fbd593-b8d2-4b5d-9d9c-450cd0b0022e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f9e4ad-13e4-4042-aba9-9b3e124d6014",
        "cursor": {
          "ref": "50716341-c12a-4134-a10a-f81f900791c7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eac65f49-a2b7-422c-b690-d6e461b8fb3f"
        },
        "item": {
          "id": "56f9e4ad-13e4-4042-aba9-9b3e124d6014",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6dda65b5-f7ad-4974-a768-eb9e384c630e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b39c33-eae9-494c-a6dc-a8941928d741",
        "cursor": {
          "ref": "cb886d19-98c8-4238-9844-ddbc20cefa5e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "774008c2-8389-430d-88f4-b6717c60fd5b"
        },
        "item": {
          "id": "f5b39c33-eae9-494c-a6dc-a8941928d741",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "65aaa5e7-34e6-4442-ac92-ebc05080e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee144cf-da75-401f-a68e-85d5cd193a5b",
        "cursor": {
          "ref": "0981ab57-3460-477f-8a15-697fa41a5141",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "090733cc-bac4-4d4f-be0e-98fc3ca7d37c"
        },
        "item": {
          "id": "5ee144cf-da75-401f-a68e-85d5cd193a5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "97671b9a-87cc-4818-a250-93b859db6be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be133418-374b-4b29-ab78-7d5475f0ade0",
        "cursor": {
          "ref": "2cf6ba56-6c20-4522-95a9-5f1d2f761f81",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "34f6ed2e-6ecd-4cda-b8b8-b37b32e1b66e"
        },
        "item": {
          "id": "be133418-374b-4b29-ab78-7d5475f0ade0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d0829551-4c91-47bc-bdc0-044390c84cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472f7c2-90d6-4a85-b6b5-098fd4bf32a7",
        "cursor": {
          "ref": "4cea27ed-d662-42a4-aca8-f60257d4616f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3412e205-87f9-4b47-8096-474e6fe28354"
        },
        "item": {
          "id": "0472f7c2-90d6-4a85-b6b5-098fd4bf32a7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa2108c3-2c39-4876-8863-451737aa3d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6c713d-7fac-463c-b5ae-9d9e70312d1e",
        "cursor": {
          "ref": "ad608907-d13e-4b21-94ee-01b4d47ce8ce",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e3926af4-c335-4621-92fb-3c0c49923140"
        },
        "item": {
          "id": "dd6c713d-7fac-463c-b5ae-9d9e70312d1e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "30ad4135-1a84-4219-86d2-eb522ff9e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1a5a69-c8ed-40e6-93d0-b4b0110179d7",
        "cursor": {
          "ref": "6e4cdf11-3f80-4f44-80f0-ed820cd97448",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7df1f96-2132-4855-8a2d-6bb96fdca634"
        },
        "item": {
          "id": "7f1a5a69-c8ed-40e6-93d0-b4b0110179d7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "61db3e10-1797-4ee5-9722-c8e1b25979f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e16296-933e-4d09-9cb8-7bb18cdda076",
        "cursor": {
          "ref": "a6a4f6e1-4f1e-4260-b272-653baaec37d4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c4aa5d4f-3b7c-4afd-9ef9-b35c5c3afa58"
        },
        "item": {
          "id": "54e16296-933e-4d09-9cb8-7bb18cdda076",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "da7c8eff-5b7a-4535-940e-63c8cd57a4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb39d80-7e9a-4c36-9c1d-383a330a084c",
        "cursor": {
          "ref": "46705824-4168-4c66-8351-02fc8c7dc8e4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "306098be-8965-4b70-801f-c8e359aa603f"
        },
        "item": {
          "id": "cfb39d80-7e9a-4c36-9c1d-383a330a084c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "efb34a0e-208a-446c-8455-66cb71cbbaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a470f3b-f991-45ad-99ab-fba09058e64b",
        "cursor": {
          "ref": "f1f89677-6964-411c-b79e-5f0c003ac374",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a5eb794a-858b-4d8c-b295-b25ea31c1f46"
        },
        "item": {
          "id": "1a470f3b-f991-45ad-99ab-fba09058e64b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3f471df2-d13c-43d4-aed1-049dbd3efc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0af81c-c891-4264-bd32-bffd223dd4cd",
        "cursor": {
          "ref": "cb9ad549-94a4-4f24-85fc-355568aa5fa8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6471586d-926c-4fec-93f2-0e52514af2ff"
        },
        "item": {
          "id": "be0af81c-c891-4264-bd32-bffd223dd4cd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c0f39de5-9b96-4f0d-8005-ecaa98ade1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78d4a07-e93a-481b-b8ac-8fefac6d6b60",
        "cursor": {
          "ref": "b21d6edd-f433-4e25-a97a-0c6825c35546",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0ae9c382-81af-4076-8235-3df232df6289"
        },
        "item": {
          "id": "c78d4a07-e93a-481b-b8ac-8fefac6d6b60",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1e0ea2ed-ef62-42b4-8591-7268ecbb86bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2907a4-0f42-4117-a003-2ed1b8ba40fe",
        "cursor": {
          "ref": "5a64c89a-9cdd-4082-8725-1c0b405f0798",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bab28f99-4eeb-4af3-ae7e-10b522a063e2"
        },
        "item": {
          "id": "ee2907a4-0f42-4117-a003-2ed1b8ba40fe",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27f2cfbb-f04e-4561-9bdb-1c472ce28fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942d62ad-edac-458b-a553-f4ebc9b91bfe",
        "cursor": {
          "ref": "ac989ce5-ec19-414a-bc4f-9b5335fae6cb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7854faab-3895-4404-b872-7e5c53b1350d"
        },
        "item": {
          "id": "942d62ad-edac-458b-a553-f4ebc9b91bfe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ecc5b139-bf3f-4003-8c7b-c1e0320c5b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d4508-e9db-4919-b540-b53a2521648a",
        "cursor": {
          "ref": "2b7b7389-74d1-4788-b0e7-1c2623e22d31",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "94787321-9674-47f7-b128-8202666d8c4b"
        },
        "item": {
          "id": "453d4508-e9db-4919-b540-b53a2521648a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04e75f82-9f64-4e93-94c4-0eb7e75a058e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7028068-e5f1-428c-abd9-44a909432316",
        "cursor": {
          "ref": "7326995c-3b29-4dd7-93af-32903a2b5712",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "61336b07-88ee-4818-a26f-85899697defa"
        },
        "item": {
          "id": "e7028068-e5f1-428c-abd9-44a909432316",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "411c0c34-8869-479d-9ecb-0dfd904d3c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9edc34-dd4b-400b-a29c-198213cbb9bb",
        "cursor": {
          "ref": "e47873e1-7fe5-44e1-bdf1-1902e37a6353",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "75f897b8-a8bb-4ed2-8dad-38d58f8ad6f1"
        },
        "item": {
          "id": "ec9edc34-dd4b-400b-a29c-198213cbb9bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2cd21fe9-cf23-494a-a5d7-be6b2d2ee179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a4354f-6229-41fb-a7af-95997c2fb050",
        "cursor": {
          "ref": "c838403d-56d2-4f61-a097-eda5e4a6cf42",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9fa77198-f15c-40a0-87c3-1dbfb4bfb891"
        },
        "item": {
          "id": "76a4354f-6229-41fb-a7af-95997c2fb050",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c4cdf30b-785e-42ec-b84c-3849fc34ee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbb4eb-5579-450a-ac9d-025238cb5d59",
        "cursor": {
          "ref": "e577f639-25bb-4392-9ef5-33d2d0a3e032",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "918c6de0-988b-4411-a494-ece8d9acc16d"
        },
        "item": {
          "id": "cdfbb4eb-5579-450a-ac9d-025238cb5d59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "db6bd1c0-6db3-4a55-9df3-36412829e669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf8be02-e723-4b78-bb14-b89ba1abdcfc",
        "cursor": {
          "ref": "28e3c9e6-a3ce-4c24-a246-20b9577318f4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "06274590-44cf-4fe7-b66d-1396fe57259b"
        },
        "item": {
          "id": "dbf8be02-e723-4b78-bb14-b89ba1abdcfc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0bb79e86-12a4-4ecb-9e47-1b686885a64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0144e6-fb6c-474c-be31-1caf00544928",
        "cursor": {
          "ref": "11d588b9-847c-4231-9e75-e4a09cbc0519",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c1311100-86bd-482d-aada-1a3636679aa2"
        },
        "item": {
          "id": "6e0144e6-fb6c-474c-be31-1caf00544928",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69da6674-a72d-4b5a-8a90-71bebf2144e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f5da1-bf3c-452f-9c60-a615bbfe243a",
        "cursor": {
          "ref": "1eb2d1ed-9ef2-4d37-a22a-1f7433930ce8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "69516f7c-1cd2-40cb-bf59-e29f1c4fa63d"
        },
        "item": {
          "id": "f50f5da1-bf3c-452f-9c60-a615bbfe243a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "be60e541-f4f3-4590-8420-e22d4fd713a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010ab327-bebe-4fee-85a6-f847db28316b",
        "cursor": {
          "ref": "f247dd9f-2128-4b0f-ad10-f654ff8f6200",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b192348-960a-4a0b-9292-6ddf4e3441a4"
        },
        "item": {
          "id": "010ab327-bebe-4fee-85a6-f847db28316b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0cfcfaba-c146-4bb9-b17a-e52c3437d6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07544ba6-9fd7-48ce-9ec9-0191b852025c",
        "cursor": {
          "ref": "4a2fab01-f464-4918-abdb-6f6628d75f5d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d08a0315-d46e-4d1f-87b3-075066f1dfa4"
        },
        "item": {
          "id": "07544ba6-9fd7-48ce-9ec9-0191b852025c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73c152a7-cab5-408d-8cf3-f0079b95b9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53950ae5-7a18-4ba5-bed8-29bb8361c165",
        "cursor": {
          "ref": "4a96058f-7a17-4653-bcc8-630b7cf1b46d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "27b95ce8-6e30-4169-8fd3-5dddb2183507"
        },
        "item": {
          "id": "53950ae5-7a18-4ba5-bed8-29bb8361c165",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "02315f00-59e7-48c6-b8ef-22e0cc5fcc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311bca2-ead1-4994-8400-f64388c37e9a",
        "cursor": {
          "ref": "81212beb-5534-4d14-990e-a90489be9f68",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e2b9cd7a-97d4-45da-8e92-57c639256e8b"
        },
        "item": {
          "id": "2311bca2-ead1-4994-8400-f64388c37e9a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7d68e19f-8922-48ec-b168-c37c18f09062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b5b3db-ac93-4c1d-9e0e-ef2209fc034f",
        "cursor": {
          "ref": "67ce833d-67ab-4578-a22b-9c709e9c34ad",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5f282092-d442-468e-ba41-b881774cf716"
        },
        "item": {
          "id": "24b5b3db-ac93-4c1d-9e0e-ef2209fc034f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c83518f-2d7e-4b04-9080-96d1e3654ee5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f1495d-a7e5-4ceb-add3-5b4b7ca5b902",
        "cursor": {
          "ref": "1083d0fe-3282-4070-a356-a175640ed9c2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "891fba07-2607-47c5-8979-17c58b4b203c"
        },
        "item": {
          "id": "d1f1495d-a7e5-4ceb-add3-5b4b7ca5b902",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3d354364-6ef2-4564-9b10-45d154b8d1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed70751a-eaa0-4d15-ad1a-dae5cf5fb403",
        "cursor": {
          "ref": "6f83017f-9aa1-49c0-8978-4e977ee214ba",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "61578a24-e3d6-444e-937a-220d0a8bdc12"
        },
        "item": {
          "id": "ed70751a-eaa0-4d15-ad1a-dae5cf5fb403",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d29a396d-de57-4ee4-9b94-e0f1de4cf908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a997d-500a-41a2-ba84-7bf45b9fc17b",
        "cursor": {
          "ref": "b4bb0732-7d62-4101-90d7-8173ab59b4b3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a7a5b4f3-91da-437a-8eac-e2f4049da82d"
        },
        "item": {
          "id": "584a997d-500a-41a2-ba84-7bf45b9fc17b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0aac8684-3120-4a75-9664-530dcb5a88f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b251b8-abdc-4db6-9de2-336d2530ed24",
        "cursor": {
          "ref": "149eb5da-a053-480b-b4f6-8fee1a46f083",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8a5c865a-a494-4c7e-a452-d323f8b67bff"
        },
        "item": {
          "id": "07b251b8-abdc-4db6-9de2-336d2530ed24",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3bb928c-ad0c-4068-9efe-88eca2ce4db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45157b-6a42-4c79-b71a-51ebc5936eb4",
        "cursor": {
          "ref": "6ac96a99-70db-4dee-b512-b9e16921531d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dd9d6362-5a4f-4d8e-9511-7214ed47f3ff"
        },
        "item": {
          "id": "ad45157b-6a42-4c79-b71a-51ebc5936eb4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "48013fd8-6923-4b2c-a683-96a5a770b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a40c6-b548-413c-a2ea-1539efd2480f",
        "cursor": {
          "ref": "a6e52eca-f3fc-4ab7-9fea-79499195b453",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e10083f6-32ea-4470-8fc6-19c7249f5396"
        },
        "item": {
          "id": "da4a40c6-b548-413c-a2ea-1539efd2480f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b9882e15-5a2c-4ed2-bda2-afd1f156b75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88dcbe1-d853-4f84-becb-96dfd5e1e3d6",
        "cursor": {
          "ref": "5adc09c5-1b05-4c4f-860d-1d219f26d176",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bbf22526-18f5-4c6c-8252-5b98ef99ee37"
        },
        "item": {
          "id": "a88dcbe1-d853-4f84-becb-96dfd5e1e3d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c01ed3d6-098d-41e7-9a57-c3c03da5e7b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47db187e-5647-4498-8108-00dfcc952718",
        "cursor": {
          "ref": "e6f88426-8436-4a88-a782-b9cc5d45f6e8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9ae9873e-5b2f-4243-8bf0-80ab67d84845"
        },
        "item": {
          "id": "47db187e-5647-4498-8108-00dfcc952718",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4154140b-633d-4f04-8329-12ccd53147cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff05a86-c809-4b18-a337-33288ba80951",
        "cursor": {
          "ref": "04702d33-a0f9-4868-a5c7-30c180b2a9c5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72b5d7e4-5aa5-4761-a20c-74831efc5189"
        },
        "item": {
          "id": "fff05a86-c809-4b18-a337-33288ba80951",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "04e7fa8e-c869-4a88-914c-884a370d9108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6749c69-4c9b-4099-b693-49206af2bd26",
        "cursor": {
          "ref": "08535a38-87df-4b04-99aa-fba1c3585df0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e9a1951d-4431-4e8b-bdca-fd0de65f7952"
        },
        "item": {
          "id": "b6749c69-4c9b-4099-b693-49206af2bd26",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "da5d0e37-a670-46d7-ad0a-246d8d324266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a625a-03b3-402f-810c-f853f741e295",
        "cursor": {
          "ref": "085cab48-2bf0-4008-9e6e-909641018545",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1cbcb686-0efa-47cb-ac25-26518feeea2c"
        },
        "item": {
          "id": "1f5a625a-03b3-402f-810c-f853f741e295",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a1f156ba-2838-485b-b888-fded7329ba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3001e7-524a-4dc7-b27d-94357151ac2b",
        "cursor": {
          "ref": "d236f0a6-b97e-4942-83fa-4ac7199f7a16",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ea5677a4-df63-40a6-b0f9-ac56d34e1046"
        },
        "item": {
          "id": "2d3001e7-524a-4dc7-b27d-94357151ac2b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "806aa5c8-c3c5-4aa2-95ba-c86404705b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e4a602-9de5-4e97-bc5c-6bb02729fea5",
        "cursor": {
          "ref": "6d377fd8-c1e3-4f7e-8800-17b54fe8be06",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eac8876b-40e5-433b-8d1a-22bbdb2633ca"
        },
        "item": {
          "id": "27e4a602-9de5-4e97-bc5c-6bb02729fea5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bdda5fdc-5bda-4a74-b31d-189d03a7650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf802ae-9baa-48c5-8761-747b753ee8e4",
        "cursor": {
          "ref": "0cb3e888-0793-4576-b43f-ab9b26e6835c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "59954436-398c-4d87-995d-dfd24fb1273e"
        },
        "item": {
          "id": "ecf802ae-9baa-48c5-8761-747b753ee8e4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "167ecc93-a139-442f-8ca7-3e124c044ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0867f9e5-46c3-4e18-86ad-26d83d889db5",
        "cursor": {
          "ref": "c6f84fbf-815c-4c00-8ae0-0c5e30cd9a54",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c35ff55-35c3-4efa-893d-74a34170f99c"
        },
        "item": {
          "id": "0867f9e5-46c3-4e18-86ad-26d83d889db5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9bb912e6-1547-4764-af10-bae9de70f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845bba5c-ff90-4785-b83d-4649593c94f0",
        "cursor": {
          "ref": "b59e71ac-3400-46d6-9b9a-036d37a20b21",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "04324611-cb22-48b8-a6ce-c3efb56db1dc"
        },
        "item": {
          "id": "845bba5c-ff90-4785-b83d-4649593c94f0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "77ca7b20-15fd-4752-a3fb-05caf6f635f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582e48a7-1c9a-4282-abc7-05d1c327106b",
        "cursor": {
          "ref": "85c7bf34-1d46-44bd-ba5e-c4062d68ab73",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1ede1374-d3ed-4753-a9a4-2677c87aa78a"
        },
        "item": {
          "id": "582e48a7-1c9a-4282-abc7-05d1c327106b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97f8b74c-4e4e-4968-a687-b2eb7cc75807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b09d34-a808-401b-939c-7eed19914c53",
        "cursor": {
          "ref": "b8e05eca-be6f-42b9-81d7-738a6db1d632",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73ce56cc-4232-4c64-a5c4-405c72d370e9"
        },
        "item": {
          "id": "99b09d34-a808-401b-939c-7eed19914c53",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8024ceaa-6ca9-4ce6-9d2e-c1411d6d53b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf89b6-d2a6-4cbc-81a1-afece441847a",
        "cursor": {
          "ref": "ddbc16b9-ac9f-4fc5-a093-002c77dea312",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6359898-fdb8-4ebb-9368-b691102867d1"
        },
        "item": {
          "id": "6fdf89b6-d2a6-4cbc-81a1-afece441847a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7d6957ec-b72a-48f4-8870-771361893776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2d9e2-ff1c-4adb-b1ba-4a3da774f3bd",
        "cursor": {
          "ref": "abdf2de6-c923-4ac8-9e4e-197da8512a4e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b0fc398f-f52c-4904-a6c3-46e992d0e95e"
        },
        "item": {
          "id": "63c2d9e2-ff1c-4adb-b1ba-4a3da774f3bd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "16ee931f-1a2b-40bd-b6c9-093ca1afded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c750b12-4b05-4197-9768-f85642deabea",
        "cursor": {
          "ref": "df7d113a-a679-4bd7-8917-b5c611484007",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b45ac641-ca65-4fab-afeb-00baa3f655b5"
        },
        "item": {
          "id": "0c750b12-4b05-4197-9768-f85642deabea",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c6a1bac9-9184-4619-a513-40023640bc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d5cb0-dc56-4d26-9193-998d008b39c0",
        "cursor": {
          "ref": "bf9a5843-9a07-4217-8799-bfc9639a45f6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "824e6c4c-44ca-4069-867f-6df8e848ff79"
        },
        "item": {
          "id": "0d0d5cb0-dc56-4d26-9193-998d008b39c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0bac9d33-61d7-4850-a070-66d33d8147df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60553ab-68ee-4437-ac56-6a70685cf3d4",
        "cursor": {
          "ref": "2960f91a-c838-41c3-9584-1e183494546d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "278fcf1f-fa3c-45f2-8c02-468ec39f94b9"
        },
        "item": {
          "id": "d60553ab-68ee-4437-ac56-6a70685cf3d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1e2a5b96-fc78-444f-92b7-7c76100f2fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73820868-2f67-4791-9d93-8bea8ef3ef71",
        "cursor": {
          "ref": "64778a6a-044a-4dec-8698-201f825b7a61",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e94730dc-3c6f-49d5-99f0-24b8fdc6de92"
        },
        "item": {
          "id": "73820868-2f67-4791-9d93-8bea8ef3ef71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d58584ab-8df6-48aa-a597-20eb810b1457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db667b07-d5dc-4135-930f-9b8e6e076530",
        "cursor": {
          "ref": "77cedbad-d099-4890-94e1-9791c6e197aa",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0fe07475-06a0-4979-a6d2-c599e8cef9ee"
        },
        "item": {
          "id": "db667b07-d5dc-4135-930f-9b8e6e076530",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5134220f-c49e-489e-95bf-42c73042a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58472c4-5997-4f58-98d2-1552bf542c32",
        "cursor": {
          "ref": "cd782357-a0e7-4d78-8d20-c3bec1564235",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "00d414e0-8fcb-43c4-80a9-478c8fe38f56"
        },
        "item": {
          "id": "d58472c4-5997-4f58-98d2-1552bf542c32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7d9e24f7-9553-47f7-9fab-a4650f8353e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f206cda9-4f4d-404a-a4ef-343058d7a04f",
        "cursor": {
          "ref": "4c2162ce-dcc5-4107-841f-79979a18c271",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4dab8174-7b22-46ec-9f65-d47338d844e6"
        },
        "item": {
          "id": "f206cda9-4f4d-404a-a4ef-343058d7a04f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e41ba4b2-be18-479d-8dad-ce587c97ad5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cbfe17-6891-41e1-af0a-61ac9c9c32e8",
        "cursor": {
          "ref": "bd007df2-0325-45e3-9cce-f898657e7474",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "235fd443-19f7-4673-b3f9-838d74708f95"
        },
        "item": {
          "id": "f3cbfe17-6891-41e1-af0a-61ac9c9c32e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f0411423-7fdf-4a0a-825c-bb4293b08603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3f9bf4-088a-42cb-a8f3-7fe42a988ee8",
        "cursor": {
          "ref": "9fb76fed-856c-4562-8fa0-703767703f01",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "976b7ee6-11aa-4cfb-a6cd-443c08b9b1a5"
        },
        "item": {
          "id": "df3f9bf4-088a-42cb-a8f3-7fe42a988ee8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "571386bd-391c-4cd4-b979-de7b680577bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17058748-08e8-402b-b2ed-0dcf0a2fdff8",
        "cursor": {
          "ref": "bcb976ad-33e8-40fe-8a35-36c89192d736",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e228365-779f-49e4-96f5-53a7122886e5"
        },
        "item": {
          "id": "17058748-08e8-402b-b2ed-0dcf0a2fdff8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c9f8ad75-3725-4a2e-b5bb-9f06ee243560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142df75f-7e06-4a61-abd0-bc7b58084827",
        "cursor": {
          "ref": "c0db3d3d-b762-43a9-aeb9-66852fe76482",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f13e6945-2a3c-454d-9424-ce564cc2da60"
        },
        "item": {
          "id": "142df75f-7e06-4a61-abd0-bc7b58084827",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "405503f9-7434-4a08-b88b-58ab4bd3b5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bc5b3a-0d27-4a84-8619-e94cb165d590",
        "cursor": {
          "ref": "3d6e7682-7bc6-4806-a49c-3996dfad7200",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9a1ca2d5-4cdf-445e-946c-60c6d87433d8"
        },
        "item": {
          "id": "50bc5b3a-0d27-4a84-8619-e94cb165d590",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fd670028-898d-4b3a-8bfc-1ecedc08ea78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ba64c0-475b-49a0-8ac7-106516c2a5bd",
        "cursor": {
          "ref": "cb38fdfa-ee2d-4295-9626-438961e070ac",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "491f999a-a56d-4cbf-96c8-a45fbb6d81cd"
        },
        "item": {
          "id": "28ba64c0-475b-49a0-8ac7-106516c2a5bd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5a93cf1a-03cf-4982-81cc-881dc3567c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3db346-45eb-4bda-a07a-cbda43967ad9",
        "cursor": {
          "ref": "71bec8a1-49e0-4330-ac05-98bae720a743",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "475ebfa8-bb68-48ed-9ae7-0e60b349de0f"
        },
        "item": {
          "id": "fd3db346-45eb-4bda-a07a-cbda43967ad9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "573f1281-b441-4ba8-a751-840497fecbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28936093-74fb-4d3a-a9e4-659b438cc613",
        "cursor": {
          "ref": "675c3d75-1359-419c-a13a-61e59dae68ec",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9405ed1b-160b-49c3-a11e-51498d3bb60a"
        },
        "item": {
          "id": "28936093-74fb-4d3a-a9e4-659b438cc613",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d43ac381-63d8-4491-98ee-ac7f49332ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400c3e4a-8941-4c9f-9774-f0ea836e1e66",
        "cursor": {
          "ref": "2cc8662f-25be-4d61-b3aa-b3c4790a35d6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "75dd46ae-4a6e-4e44-a4fc-f8d3b2afcb55"
        },
        "item": {
          "id": "400c3e4a-8941-4c9f-9774-f0ea836e1e66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac2477ad-0c49-4238-9613-dde0a6550d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0130e7c-e322-4709-b477-68cebb20f62f",
        "cursor": {
          "ref": "0f96b4ac-a9dd-409f-b5af-47a318e98abd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "afccf5b5-21af-407f-a3f7-807dd188377c"
        },
        "item": {
          "id": "d0130e7c-e322-4709-b477-68cebb20f62f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb640c8e-5b29-48fb-aacf-ff1f7e067fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a9a9e9-424d-4308-acad-99341a24c3b4",
        "cursor": {
          "ref": "76086de9-e5ff-4b5d-9d31-9d43a9e6faee",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "470bedf3-6305-4309-9335-861a58cb42fe"
        },
        "item": {
          "id": "f1a9a9e9-424d-4308-acad-99341a24c3b4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1a002fe0-3095-4ad0-ae16-72be51c8462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b42cdc-25bb-4226-af2b-25419521ba36",
        "cursor": {
          "ref": "56731fa6-43f0-4b2b-8ee3-7577d84a448e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4b0ef231-41ed-403f-82fa-dd1e06f8faa0"
        },
        "item": {
          "id": "c6b42cdc-25bb-4226-af2b-25419521ba36",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "06e464b5-f503-44f5-b5e5-79b0ad3ff038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37528145-3b0f-4de5-a6aa-fcb9da73a4aa",
        "cursor": {
          "ref": "d0284bbd-fc1c-411c-be32-2bcbacb860b8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7f2558a7-5b34-48e6-a8c7-028ffbcc61ac"
        },
        "item": {
          "id": "37528145-3b0f-4de5-a6aa-fcb9da73a4aa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "568ac60d-991a-4bca-899f-6ee54394a5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fb9a55-e163-4ee2-b18d-e2f426627d60",
        "cursor": {
          "ref": "7beec0ba-5065-49e0-9df6-1a6ead0b1a1e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0f734c65-9dff-4998-a2d8-dbd5cb4ed13f"
        },
        "item": {
          "id": "76fb9a55-e163-4ee2-b18d-e2f426627d60",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6140a71a-53ab-4d42-8b97-f59f11f073bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e44a3-601f-4ff6-bd1f-1c934384a46d",
        "cursor": {
          "ref": "1fe46118-723d-47e9-b406-a9eb1fae0207",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2e558a30-2788-44ce-bcae-54e6ee53415f"
        },
        "item": {
          "id": "919e44a3-601f-4ff6-bd1f-1c934384a46d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b0b16e9-2117-4dc9-b6bc-7179636e8efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5398933-6264-4ca0-b966-9e1a40b4e062",
        "cursor": {
          "ref": "bc4193fc-40ef-4c1d-8cca-3f4cb6acd3f1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7c257a69-c0f0-4ab1-a912-5e146560f75d"
        },
        "item": {
          "id": "e5398933-6264-4ca0-b966-9e1a40b4e062",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "74ec5b09-242f-4a34-a91d-f7ec706794e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4109e55a-6a9c-4380-b0dc-98d2fe8f9877",
        "cursor": {
          "ref": "e61b993e-90da-4630-8401-54b299659000",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5cb893b3-6fdb-4100-ae33-79833f94dfb6"
        },
        "item": {
          "id": "4109e55a-6a9c-4380-b0dc-98d2fe8f9877",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f741b7b-1c83-42c5-acdb-346b35f4002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9294774-86da-4acb-bdb0-bf5b77d31c3a",
        "cursor": {
          "ref": "2a4d5afe-8e4c-4821-bb03-3dfc9f7085ec",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e321649-5633-4a85-9c42-c3d490253442"
        },
        "item": {
          "id": "a9294774-86da-4acb-bdb0-bf5b77d31c3a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d14a8e99-8a3f-4d3b-aea9-875c598b1938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a2c47-1006-450a-b911-2d09d9752c54",
        "cursor": {
          "ref": "a872f4e0-c98a-4f5d-8aba-917379845e29",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "367dd26f-d149-4fd3-84ba-e2b0196a6453"
        },
        "item": {
          "id": "276a2c47-1006-450a-b911-2d09d9752c54",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "395f7d0f-07eb-4d32-b90b-980527905bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b29f935-3387-4e26-bfde-d7a2f89d0105",
        "cursor": {
          "ref": "ff6c8892-50f8-41e1-a709-ddd4bde078cf",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "892db0be-7ad8-475b-b130-977af00056cf"
        },
        "item": {
          "id": "0b29f935-3387-4e26-bfde-d7a2f89d0105",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d9f7ee8-a9a0-4cfc-b625-3864a11696ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9a751e-5e76-47db-bb2d-2dc41c33fedf",
        "cursor": {
          "ref": "c053c068-ba46-45e3-94dd-67e2b1d1e7fa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a5772b1-7544-491a-af39-3c487f65192c"
        },
        "item": {
          "id": "bd9a751e-5e76-47db-bb2d-2dc41c33fedf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ff22f97d-d557-4b73-8fa2-a3ec4fddcfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f7aed5-9cf1-431a-bdd6-38774911630f",
        "cursor": {
          "ref": "da20a49a-61f7-4816-bffd-ffe1ce737648",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "80231185-9077-46fc-8723-07bb411613a4"
        },
        "item": {
          "id": "e5f7aed5-9cf1-431a-bdd6-38774911630f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6072beca-0134-45d3-b7a4-138b87ac3017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4738d8b6-e754-4066-976f-cf276f760381",
        "cursor": {
          "ref": "2c954d05-6b49-44ad-8b2e-fdceea62b0a4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "da344390-8dae-4e33-b360-fb0851c8fad1"
        },
        "item": {
          "id": "4738d8b6-e754-4066-976f-cf276f760381",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2f4609f4-cad5-4b6f-9af5-702a787fe9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59943d77-e9a1-4f05-b96e-2cff4988b5f6",
        "cursor": {
          "ref": "f25d04e0-032e-4d91-a53a-64ff0035eb0a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "87160dfe-026e-4dc6-9299-f954839a67a3"
        },
        "item": {
          "id": "59943d77-e9a1-4f05-b96e-2cff4988b5f6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "17e63ad2-487b-4db2-acc3-b4b25b93525d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4cea2a-2aa7-4edc-af1f-55b61d2ba42e",
        "cursor": {
          "ref": "8cc0a43d-ffe0-4f5e-9674-f4f401aa1dc8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2dfa181e-aea7-41fb-87b2-a1d015a64272"
        },
        "item": {
          "id": "9d4cea2a-2aa7-4edc-af1f-55b61d2ba42e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "749c018b-ae22-4116-8ae7-de93d396b530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26318c18-09e6-4066-80b5-3ee9d5d85b50",
        "cursor": {
          "ref": "eb7d407c-8019-43b1-804c-dd3da0bd02f3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "af2d9956-7a1a-415d-90fa-76ed261bb620"
        },
        "item": {
          "id": "26318c18-09e6-4066-80b5-3ee9d5d85b50",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e1cd4577-e301-4e7f-9a9c-2320001f5f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf2335b-60f1-413a-9274-0faef5727d5d",
        "cursor": {
          "ref": "608855db-e1b1-43af-aff2-6610f4841c48",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2e57469e-2adf-4286-82ba-b58c6003cdfb"
        },
        "item": {
          "id": "2cf2335b-60f1-413a-9274-0faef5727d5d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aed856a6-920a-45b2-a8b5-29b4564bf9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7399eac3-bc56-444a-83aa-4a654449a396",
        "cursor": {
          "ref": "2660d93a-a124-402e-a5e2-919cae4a107b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5d3a64a2-15aa-40a9-b16a-e0eb587a7355"
        },
        "item": {
          "id": "7399eac3-bc56-444a-83aa-4a654449a396",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cea4a9f9-2f27-455b-938a-3c3031fa6691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53619c4-dd15-4b1f-bf04-02877a09cf0a",
        "cursor": {
          "ref": "46121739-ae47-4b12-9688-bae387aadb54",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d59974d1-17a2-454b-a98c-f8365f1c1564"
        },
        "item": {
          "id": "c53619c4-dd15-4b1f-bf04-02877a09cf0a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "98b7594e-815f-45d1-8b64-8c88016bb261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ce1a5-b09d-4618-9bd8-7e25bdee2f9d",
        "cursor": {
          "ref": "ed0b4f90-f818-4d19-be42-8d2586422967",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be9689f2-7fe7-4a22-a502-6240e32ea61f"
        },
        "item": {
          "id": "b64ce1a5-b09d-4618-9bd8-7e25bdee2f9d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4a8a251d-c9b7-4084-bd83-3ab6a9d1752d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6a7960-1d25-491e-a103-8dd184a1c0e2",
        "cursor": {
          "ref": "99e86002-3207-44c1-b8c6-0f0cdf5094c2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "88270577-505a-41f6-af21-e03b12323c58"
        },
        "item": {
          "id": "4a6a7960-1d25-491e-a103-8dd184a1c0e2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e891048-0c5a-44b4-9620-7c8931f9e83a",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fbd89b-59a3-43ee-802a-773077aeb502",
        "cursor": {
          "ref": "468cac08-dee1-4564-b2ff-820fd394fb4f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1c974d1-5711-4265-9ee3-6124ff19f9fc"
        },
        "item": {
          "id": "c1fbd89b-59a3-43ee-802a-773077aeb502",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c31899c1-9e3e-4861-a427-62ef81fc868d",
          "status": "Created",
          "code": 201,
          "responseTime": 176,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7120525-3836-47e1-bc54-c0807a3d49d6",
        "cursor": {
          "ref": "c9eb47a5-0921-48c9-97be-440f7cdb0b26",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef891ba4-4150-4806-8360-d46b598393a6"
        },
        "item": {
          "id": "c7120525-3836-47e1-bc54-c0807a3d49d6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0c1a3ec9-185b-47e6-818f-492cbeb4cf9b",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af10c88-a84a-478a-aa52-552bddd276cb",
        "cursor": {
          "ref": "68afc454-6383-4cbe-9596-5a82cfeb6388",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "220d3caf-5a36-40e1-9ed5-926f6d9fe34b"
        },
        "item": {
          "id": "1af10c88-a84a-478a-aa52-552bddd276cb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fffb1e1e-940f-4714-94e2-a8be30755f85",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f51157-d579-40f7-a646-91b2a6791ef5",
        "cursor": {
          "ref": "124fbbe8-a806-46b5-9fdb-5638e9454114",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "55df1931-1795-46c1-9308-2d2dac150896"
        },
        "item": {
          "id": "58f51157-d579-40f7-a646-91b2a6791ef5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bbc4f194-fefb-4c84-9847-29ac49bba77a",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7cc15c-4632-4261-9789-211e01ddeebc",
        "cursor": {
          "ref": "6aa5cfca-4c88-4bf0-970a-557313552b76",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6d1f2fb3-4941-4ce4-99e5-e6dba3b386f6"
        },
        "item": {
          "id": "7c7cc15c-4632-4261-9789-211e01ddeebc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3a2e40bc-90fa-41e1-b181-c515f59231a2",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a6a24f-ce00-4acc-be5b-24567157981d",
        "cursor": {
          "ref": "ad1236b4-28a8-4928-a3e9-d8606d8c3fef",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1f5cce7c-1566-42cd-80d9-3be7bc75133e"
        },
        "item": {
          "id": "d4a6a24f-ce00-4acc-be5b-24567157981d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7080e549-26ee-4a70-946d-bad0eb3ededf",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bb4950-0bee-4b63-8e6a-f2b95123cae8",
        "cursor": {
          "ref": "20d65ac6-41a0-4165-aa06-680890624634",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "59acad31-1db7-4a18-af44-dd28f3e4fad9"
        },
        "item": {
          "id": "01bb4950-0bee-4b63-8e6a-f2b95123cae8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "647a72e8-25b0-4302-a486-be5b78a1aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479aa1d-79f3-470f-8416-331f0a2eb74e",
        "cursor": {
          "ref": "03fdc7e2-1861-46dd-bfe0-042e360b26e9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ded10e29-8a85-41c7-8e0b-c5cd4bf3ab68"
        },
        "item": {
          "id": "f479aa1d-79f3-470f-8416-331f0a2eb74e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5bbc1a53-ed17-4b53-9fba-a44691782cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d57066-8d73-4ec4-ae39-6282d4507cb9",
        "cursor": {
          "ref": "6d1bdb1f-1d0a-4de8-91b7-d9e22c511704",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "34d817c5-5404-4b89-8cb6-e71e24715bde"
        },
        "item": {
          "id": "46d57066-8d73-4ec4-ae39-6282d4507cb9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1f2792f6-b980-40e5-b537-d11c30098c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9592e2e-b62b-4c03-a05c-64389ba45275",
        "cursor": {
          "ref": "e4159fc3-1226-4906-ad9b-2db312710aaa",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "314595ff-aba9-4207-9098-9d5dbae8f3aa"
        },
        "item": {
          "id": "f9592e2e-b62b-4c03-a05c-64389ba45275",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "20eacea9-4b12-4d77-9a8c-3c1d7694b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b4996-2700-494b-8e55-ba1d280a0230",
        "cursor": {
          "ref": "3d7297d7-56a8-40c3-8414-b2ab21ff1034",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5848660c-f6f2-4500-b11e-5335fab37fad"
        },
        "item": {
          "id": "d29b4996-2700-494b-8e55-ba1d280a0230",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a23eef14-76a3-412a-978c-474de463508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2db4e7-0aba-47b2-b803-fc492fb0ddde",
        "cursor": {
          "ref": "2aad5278-b306-4448-84b1-e4ca178706f2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2046a5e0-e03c-441d-9696-fd6412967d5d"
        },
        "item": {
          "id": "ad2db4e7-0aba-47b2-b803-fc492fb0ddde",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7937f59-1e29-48a3-b2cb-13b377dadf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f691970-5b8f-42f2-9bf4-7316b9cc853e",
        "cursor": {
          "ref": "5d1e2082-e883-4318-920e-bc75658c6706",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38ec5cf7-fbbe-459a-b2b0-8c780715d131"
        },
        "item": {
          "id": "2f691970-5b8f-42f2-9bf4-7316b9cc853e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3ac3cbab-cfde-4793-ac35-8a2f2ddbaf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3c910b-2a99-4977-bc57-01354a92300a",
        "cursor": {
          "ref": "97e5a5ff-5c11-42e8-aa4f-ffddf8942517",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ec3c9174-b908-431a-afe5-c217986a3a2a"
        },
        "item": {
          "id": "ec3c910b-2a99-4977-bc57-01354a92300a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94ebc539-e9bd-458f-81de-dd62e7d20d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda511da-2c87-4335-ac69-d0afeb1466a7",
        "cursor": {
          "ref": "9cc57533-5011-4dcf-a659-d5ddbb76156e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "58c73367-8105-4fe2-a04d-ca45467739cd"
        },
        "item": {
          "id": "eda511da-2c87-4335-ac69-d0afeb1466a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4617dfb-9997-4d96-800b-cc3e5f2d9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d241cb-7cf1-4b44-98ac-0dc941dd400d",
        "cursor": {
          "ref": "496be359-55a2-4fd2-973d-5a657ce63d2b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ebd8ffba-0230-4b70-92c0-bdf8953934cd"
        },
        "item": {
          "id": "65d241cb-7cf1-4b44-98ac-0dc941dd400d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8668317e-526b-45f8-a0b1-514fb2836556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ca17bf-51d1-43c1-9057-d6233be3ac4d",
        "cursor": {
          "ref": "9ccba89e-091f-49ae-8953-42eabaf6aa6f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f6fb551d-1a12-4f22-b7c4-0ea66656e0a4"
        },
        "item": {
          "id": "08ca17bf-51d1-43c1-9057-d6233be3ac4d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "70d099be-b192-4894-89d5-f40eeaba9182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf7217e-6710-40af-876b-c6310668806c",
        "cursor": {
          "ref": "935d8395-7e99-49c0-a30e-f0954e2846b8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eed8b83c-ea05-42e6-a10f-ead4b5f2eba1"
        },
        "item": {
          "id": "bbf7217e-6710-40af-876b-c6310668806c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "734a39b2-505a-487a-8495-0343c6072e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d570b78-f35d-4a6a-9d54-3d708b5c69f2",
        "cursor": {
          "ref": "c64afe23-c6c1-4b04-b797-b291d35e1294",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5edc089d-3e03-4b8c-97f1-d90c4f423f27"
        },
        "item": {
          "id": "4d570b78-f35d-4a6a-9d54-3d708b5c69f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9dbff236-4d9f-4af2-8b84-128624043b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e37f782-cb6f-4499-8680-e55c5ddc7382",
        "cursor": {
          "ref": "f67ece26-cf9d-4975-a94e-4fb32af39bd2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d80c2a33-687c-4350-8a0c-d7062c9f2b75"
        },
        "item": {
          "id": "6e37f782-cb6f-4499-8680-e55c5ddc7382",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "528af506-8cbd-42aa-9727-b8f0f21f1ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea290cbe-8b66-4cca-a84b-1c2a23a1a7bd",
        "cursor": {
          "ref": "dd3235bc-9c3c-49a0-86b1-f64df09ceb95",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41b81b5e-4330-49d6-a849-b6345bdc31d6"
        },
        "item": {
          "id": "ea290cbe-8b66-4cca-a84b-1c2a23a1a7bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "35bb16c6-37f6-492b-a860-b9cbbc728066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a67fe21-b3f0-44b9-b181-427360608937",
        "cursor": {
          "ref": "8db4d652-5d8f-4a53-8d13-d63e5281fde6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "db9ac5bd-75ff-4e36-bfa8-5ec71bf4f854"
        },
        "item": {
          "id": "7a67fe21-b3f0-44b9-b181-427360608937",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f4dc808-127b-437f-a6a8-a6739d123e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35daf224-4821-4ab6-bd67-a2bc249832dd",
        "cursor": {
          "ref": "35678134-1530-4574-aeca-cc903ad8c94e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c57e2f6e-dbc2-4e54-b042-b17dea742de3"
        },
        "item": {
          "id": "35daf224-4821-4ab6-bd67-a2bc249832dd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9f8c05c9-14a6-4a0d-ada3-f0d7228a83ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde6c8c4-2012-4904-976f-1e6493aa9e88",
        "cursor": {
          "ref": "720502fa-1577-4a3d-8166-ce9d69af321a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3d867456-6e0f-4dc3-b73f-72549510c633"
        },
        "item": {
          "id": "dde6c8c4-2012-4904-976f-1e6493aa9e88",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f72066e-8ed5-46b3-beeb-5f362dcb2af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5decdc-656c-4dee-a94a-53a32bd1c7f9",
        "cursor": {
          "ref": "b85a333c-e0f2-422c-8348-57bb8f73b6a0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55c0b915-0fc6-4da7-99ba-9bc5e711c7c6"
        },
        "item": {
          "id": "aa5decdc-656c-4dee-a94a-53a32bd1c7f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "675dbf1b-2f02-42fb-a226-799ccd028884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d14eb-00a6-4bbb-ab0e-0154af107108",
        "cursor": {
          "ref": "dc29c2bb-d193-4b30-a915-56a50fb43db1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7fc152e2-bd42-4996-a4a0-7287bb45cfe2"
        },
        "item": {
          "id": "453d14eb-00a6-4bbb-ab0e-0154af107108",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2856d557-7109-415b-92a5-e042f16952d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7bbcc0-adeb-4383-ab1b-952af889dfdc",
        "cursor": {
          "ref": "1fe815d7-00d1-44d7-92ac-50b606495e0e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b15ab41f-acf1-4560-8dc5-cfc04dd85c4b"
        },
        "item": {
          "id": "6d7bbcc0-adeb-4383-ab1b-952af889dfdc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90698fcf-b270-478d-a117-e322dfcc9be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9028fcd-d5e2-4ccc-9043-c6d2d0c4e25f",
        "cursor": {
          "ref": "59a91ae4-7e2d-4166-a5b9-038ad2acdc27",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e466edb-6ed1-42f5-b148-64904fcde155"
        },
        "item": {
          "id": "b9028fcd-d5e2-4ccc-9043-c6d2d0c4e25f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a79f29b0-bd89-468a-9568-417aefb16f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ebee7a-ff0d-4536-b278-a4eb37c4d21b",
        "cursor": {
          "ref": "358a5c75-8662-4bca-ac27-4fc3b194ef25",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e68a020e-38eb-44a5-a18b-8e9076f73d36"
        },
        "item": {
          "id": "82ebee7a-ff0d-4536-b278-a4eb37c4d21b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54ed8f66-daa8-43c4-9ca6-864c94e037e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a625ac-2301-4c8a-b14f-50abb1a3c282",
        "cursor": {
          "ref": "4ebea08e-f3d7-432f-bca3-161cfb3bebbd",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3494fc5-f731-4e44-8d59-317edde9186e"
        },
        "item": {
          "id": "06a625ac-2301-4c8a-b14f-50abb1a3c282",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "357a40d9-1d02-4c0e-a4a2-7c54010b61fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab41c74-4baa-4b6b-84e4-62d01af72b57",
        "cursor": {
          "ref": "3767a870-400c-44c2-892c-9f3caab3d39f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f66240ff-96bf-4119-90f6-461ad7ee8c45"
        },
        "item": {
          "id": "aab41c74-4baa-4b6b-84e4-62d01af72b57",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "174593cc-fb45-4fbb-b4c0-0308ad2d6220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21ddcd-d42d-47ce-96f3-3be6b5a5173a",
        "cursor": {
          "ref": "53d93b1c-f4a7-4ba7-84ec-3980ca84b425",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dec4f112-a0df-40ae-b322-37429e70e389"
        },
        "item": {
          "id": "2a21ddcd-d42d-47ce-96f3-3be6b5a5173a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ea6eb49-042c-4eb2-b54d-a21003bc7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60cc9bb-f430-4a6e-9545-d6e17f9e387e",
        "cursor": {
          "ref": "2b34533b-e861-46d1-8e61-297150be9cd8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "69848504-9e43-454a-aee9-8d29049383e1"
        },
        "item": {
          "id": "b60cc9bb-f430-4a6e-9545-d6e17f9e387e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "67a30267-e778-4b34-bcfd-1724e3e090e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ab326-7b8e-4f9f-b786-10a6b84df706",
        "cursor": {
          "ref": "014cdb00-45d7-43bf-a83f-c2ec5cc56ca6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b350a15f-2cfa-4b70-994a-92c1d3bccd5b"
        },
        "item": {
          "id": "0a0ab326-7b8e-4f9f-b786-10a6b84df706",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7e4a9d3-994c-40ba-ab54-b2e9412591e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa15a7b-86e0-487f-aec7-deefbc35f516",
        "cursor": {
          "ref": "cc083588-c050-457d-a12b-5410799c6c76",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4500fbb6-3a66-4a65-bc89-47c559de0df9"
        },
        "item": {
          "id": "9aa15a7b-86e0-487f-aec7-deefbc35f516",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "807e108b-b4dc-4b00-ac5c-d35403f6221b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77d8e7c-2fa5-4c03-905f-70d73337b8d8",
        "cursor": {
          "ref": "b2a6c514-46e0-4442-8f81-906feab68d40",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5dd44b1-5059-4faf-9848-28cf98780516"
        },
        "item": {
          "id": "a77d8e7c-2fa5-4c03-905f-70d73337b8d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a1e4516-a490-47cd-8c2c-7b899320a45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec7ce3c-9369-41f5-824f-f360ef489e7b",
        "cursor": {
          "ref": "8393b187-8ef9-4743-934a-8b248885d6a2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c68e780c-3afd-4883-98f6-c4b14ee5fb85"
        },
        "item": {
          "id": "5ec7ce3c-9369-41f5-824f-f360ef489e7b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9564042-f3d9-4ee7-bbb8-da567aad5280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f44c205-bc8d-4030-8b0d-328869995d27",
        "cursor": {
          "ref": "8d32ebde-48d5-40a5-bd0c-8bc6c5b8209a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "93446b60-e05e-4394-a512-2eb39e804fec"
        },
        "item": {
          "id": "3f44c205-bc8d-4030-8b0d-328869995d27",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9488977c-f4a8-4965-ac54-b00b707eef4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65155ba3-48ed-4e7d-beb3-315ef93bf9d8",
        "cursor": {
          "ref": "94180310-ba46-41a9-8ab6-f61c8db9b829",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b52d8e8-b49f-4bd5-88bd-b8a8260530bb"
        },
        "item": {
          "id": "65155ba3-48ed-4e7d-beb3-315ef93bf9d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d93cecf-a848-47a4-80f3-b06db45d17e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2eecb0-183b-4898-a6e8-3091edcaf380",
        "cursor": {
          "ref": "356db6d6-a0ac-476c-875d-4dc8c9ebf556",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a963654e-3d20-4ea0-b7f4-ffc5ebd22863"
        },
        "item": {
          "id": "bf2eecb0-183b-4898-a6e8-3091edcaf380",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de15a291-81cf-402a-9fc1-4b126fc270e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659c566-6e04-4203-92a0-6dfdcbe6c280",
        "cursor": {
          "ref": "3236e2df-3de0-4ac9-abc8-d65ea945aea2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ea275fcd-967a-4d3c-ad70-43bb7c9c435c"
        },
        "item": {
          "id": "0659c566-6e04-4203-92a0-6dfdcbe6c280",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2fdafa11-ba69-4597-bc76-70adb44aa1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684545e-5e7e-4be4-b33b-70cdb4322cda",
        "cursor": {
          "ref": "490c8192-6976-492a-b200-8537cefdc997",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "74d62239-fc65-4cd0-8d73-187d0a192166"
        },
        "item": {
          "id": "e684545e-5e7e-4be4-b33b-70cdb4322cda",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49e6fd40-738b-48b3-a344-f877d90a8593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec52af5e-9d29-4716-84dd-e35555a20e65",
        "cursor": {
          "ref": "e5d8514e-13a2-4bbf-a4e0-99b87969388f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "efee0e06-f303-4fe5-8af6-4846b3846d81"
        },
        "item": {
          "id": "ec52af5e-9d29-4716-84dd-e35555a20e65",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60dec583-d1f0-4299-b2c6-f6c76306fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef57779c-a44d-49f8-a0c6-6bc22cf10ec5",
        "cursor": {
          "ref": "42099c5d-6ed4-4887-aeb0-108a118212f3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "997a672a-f539-40e5-b2a9-78fc6e437c73"
        },
        "item": {
          "id": "ef57779c-a44d-49f8-a0c6-6bc22cf10ec5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df37c531-6e9f-4ddf-9b2b-5b9a8cbb604e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8481d6-a10f-48f0-a91b-116df29c2714",
        "cursor": {
          "ref": "031548d0-714f-498f-8ab7-e561275dd219",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c2021b69-92aa-4c5e-be5a-eca61094b24b"
        },
        "item": {
          "id": "0d8481d6-a10f-48f0-a91b-116df29c2714",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c48ed878-b922-4136-a44b-e2fd73fb5cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aa507c-9fc7-4cc3-bffa-ce96c727c616",
        "cursor": {
          "ref": "b37b225d-8a80-4bdb-bd3e-8c3b33b3eb89",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2469d617-f81e-4c67-82ba-87ba9f1e237d"
        },
        "item": {
          "id": "68aa507c-9fc7-4cc3-bffa-ce96c727c616",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "390bd691-5f53-441c-b2dd-eb859b676901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27447b4f-5f7f-4163-aa48-52fa37b85054",
        "cursor": {
          "ref": "1e1be048-cd70-47b5-aada-ef103045d847",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "11d498d9-5a97-4358-98ec-d3ebf11144f4"
        },
        "item": {
          "id": "27447b4f-5f7f-4163-aa48-52fa37b85054",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5bcddbb4-8d88-4fad-a04f-5ac069e10d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3673da26-f9a5-496f-9ad1-0c30ac20c853",
        "cursor": {
          "ref": "244d9f29-36e6-45ca-b184-63167382e46a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "610c2f40-2e10-4363-955d-360c5e9a8860"
        },
        "item": {
          "id": "3673da26-f9a5-496f-9ad1-0c30ac20c853",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dd8fb54a-2ee2-453d-91b7-34808344e8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b9d1a7-5143-41dd-b996-f98ec28016ef",
        "cursor": {
          "ref": "47ff3c59-aec4-4aee-bd23-0ff6912117bd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "96758e36-34ed-4faa-8e1e-abdd76ccf6de"
        },
        "item": {
          "id": "c9b9d1a7-5143-41dd-b996-f98ec28016ef",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "63b5d9c4-f605-4026-9218-3d5c95d1ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb3333f-d5ac-4109-b07e-5e8c6881ef1a",
        "cursor": {
          "ref": "8290a52f-f669-4768-bad6-286254847c0b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "328e5ed6-e999-425f-846e-30a1bc168187"
        },
        "item": {
          "id": "2bb3333f-d5ac-4109-b07e-5e8c6881ef1a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "28478ac9-44ba-4be4-809d-81521e4041ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec744366-fb05-494f-ba14-fb3782621106",
        "cursor": {
          "ref": "567dadfe-2797-4588-9c8b-d58806d108fb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9913c7dd-127f-4333-8dcb-03d86fd959f7"
        },
        "item": {
          "id": "ec744366-fb05-494f-ba14-fb3782621106",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "13a85429-4e8e-46e0-8b1b-bb94e16bac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6288b19d-8704-439a-b68f-92f199ac7219",
        "cursor": {
          "ref": "d84a52c2-7371-4613-8a3b-8b3259af281b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d8777ee-be15-45b8-b236-bc18e43f5aa3"
        },
        "item": {
          "id": "6288b19d-8704-439a-b68f-92f199ac7219",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "577b6b73-e96f-490b-bc79-981e9b58eaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80682e1-79e4-40a9-a37f-16373dbab57a",
        "cursor": {
          "ref": "314cd659-52d0-4842-b5f1-85506d003f0f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "01716d43-5c63-42ea-8c5b-a17b48ff791d"
        },
        "item": {
          "id": "f80682e1-79e4-40a9-a37f-16373dbab57a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "127b2b61-783b-44ed-9623-e608e682aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7b8654-6374-45a0-a662-4b4335080221",
        "cursor": {
          "ref": "bda54a9f-2673-49a1-a631-2acf36afbf16",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a47ba71-0504-4760-a2f1-5778e40fb92c"
        },
        "item": {
          "id": "fb7b8654-6374-45a0-a662-4b4335080221",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "22f73aee-e587-47a7-9f3c-ada7476b4214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85afe1a0-e2aa-43f6-b605-bac512b3bcc3",
        "cursor": {
          "ref": "eef78e8d-bbd0-460a-8225-84edfead83d5",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "935974a2-ebff-47f1-89ab-4f226be2d83d"
        },
        "item": {
          "id": "85afe1a0-e2aa-43f6-b605-bac512b3bcc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "13294a1e-a0d1-4062-a9ba-c1639c70d24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cbfa6a-21e3-41b7-beb8-7d495f0cff02",
        "cursor": {
          "ref": "9a813f76-8d8d-49c2-8f4b-f4fe3e8b3e76",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b1be993b-dabf-419e-a443-f895a6d828cd"
        },
        "item": {
          "id": "c3cbfa6a-21e3-41b7-beb8-7d495f0cff02",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8695154e-cdbc-4f11-8796-7d5e30896cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b75064-3925-4413-9182-c6cd4958a191",
        "cursor": {
          "ref": "8c5b4675-f5ab-4d5f-a8a9-67c7538d2077",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5dcff550-0f80-4c05-9aff-c13685d14c25"
        },
        "item": {
          "id": "32b75064-3925-4413-9182-c6cd4958a191",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6200fcd-5b25-443a-a8e2-d4339a4e64a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6568d6cc-3efe-42da-9060-74fa61fdf64d",
        "cursor": {
          "ref": "4460d23a-14a5-4892-a17f-da72097e8fdb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "712c5107-8dae-4ae1-9870-4da29d5fc31f"
        },
        "item": {
          "id": "6568d6cc-3efe-42da-9060-74fa61fdf64d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20671435-5060-4d74-8804-8e1fadfbec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937d2913-62df-417d-a860-a1b6c37d151d",
        "cursor": {
          "ref": "59253ad4-6224-4b90-9a91-a7d294d35de5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2aecdb4c-5bf4-4203-b70e-d487ce5030ea"
        },
        "item": {
          "id": "937d2913-62df-417d-a860-a1b6c37d151d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bcb187de-911e-4dee-9a82-af651bcb4ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873e7a8-0c22-4d15-a66b-8f272008e21d",
        "cursor": {
          "ref": "e22ed24e-df00-4e00-8f96-dc04e4e7ccdd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8779101a-761d-46bd-8281-ff2d16c09542"
        },
        "item": {
          "id": "2873e7a8-0c22-4d15-a66b-8f272008e21d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "56906db6-07a4-4f7d-b4b4-585c80a8e22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbddc053-5693-4734-94e9-cb3dfcaa93b7",
        "cursor": {
          "ref": "7f826ee6-42af-4ced-8d19-4522868ebdb2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d69f9be1-430a-4d5d-b871-1769cf835835"
        },
        "item": {
          "id": "dbddc053-5693-4734-94e9-cb3dfcaa93b7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf887269-9410-4573-b22a-369d61751a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed318577-1afa-47bb-85aa-74988c52db72",
        "cursor": {
          "ref": "bbc86c8b-e9a3-4644-b88d-6f3b50c6315f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5db0257e-8003-4085-9fd6-299b71338153"
        },
        "item": {
          "id": "ed318577-1afa-47bb-85aa-74988c52db72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "499c968a-42ac-45a9-8f9d-8a5d880e0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d53f0f6-000c-4b68-82b5-ff5a27b9f38e",
        "cursor": {
          "ref": "eec1cadf-eda8-4308-bc51-5a6340e0e5a9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ac8de9ed-5cf0-4f0c-9bab-f914f6acaf04"
        },
        "item": {
          "id": "5d53f0f6-000c-4b68-82b5-ff5a27b9f38e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99f7ad3e-a393-4ac5-bf3c-dac2ed7f9b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d4a65e-0cd1-4d9f-a64b-c8526f1d9873",
        "cursor": {
          "ref": "3c4a1fd8-77c9-4a8a-a75c-783179e15c1e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ae86c998-2cf1-46f2-b3b3-f75d37382d39"
        },
        "item": {
          "id": "e7d4a65e-0cd1-4d9f-a64b-c8526f1d9873",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0df160df-6b5a-44f4-96e7-eb00e09eeffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c5183b-d8f6-4f1e-9481-974a7de5b15c",
        "cursor": {
          "ref": "3006d1c5-c7e2-4f61-adb0-eed055db475b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c7c7bd49-5070-4914-8b03-0df862045a3a"
        },
        "item": {
          "id": "c8c5183b-d8f6-4f1e-9481-974a7de5b15c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0a50ef01-acff-460c-b9d3-a7dd196ebbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef59074d-d264-428e-a528-119a4b0e02d4",
        "cursor": {
          "ref": "efade273-62e3-4bdd-9f65-437edec6b772",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0d5e864-20ed-4492-ace5-1aa150048f69"
        },
        "item": {
          "id": "ef59074d-d264-428e-a528-119a4b0e02d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f8dcf220-3f03-4793-b9cf-5abf0952e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b05999-2cac-4888-91c5-933acfc1526b",
        "cursor": {
          "ref": "489ed050-620f-42dc-a9b0-90dfd9944398",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "854dee53-6178-4a30-8691-48ca41330cf2"
        },
        "item": {
          "id": "d4b05999-2cac-4888-91c5-933acfc1526b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "399bb0eb-d307-49d7-aae5-fa8e744ea505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1288588f-c332-435e-93d6-04bc9b975eb0",
        "cursor": {
          "ref": "41d822cb-b99d-4350-b091-593a128f2f1c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e687de68-2ace-48b5-bae4-0ecff4c2610e"
        },
        "item": {
          "id": "1288588f-c332-435e-93d6-04bc9b975eb0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3ec6aaf8-feef-421f-a090-9af1fd94cd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1fc6b5-2c75-4a36-b7b5-9a9949d4afed",
        "cursor": {
          "ref": "d5408880-7cce-4fb0-8db8-d16f1f5f201f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0f6b22f-577c-4014-937e-b7949a7692e0"
        },
        "item": {
          "id": "df1fc6b5-2c75-4a36-b7b5-9a9949d4afed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa30b7a9-7396-45e0-a253-72db9459535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fbc7b-c101-44cb-8ff5-264990b7b02d",
        "cursor": {
          "ref": "3ebcaa15-8e15-4557-aa4e-d581f20369b3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "794b5359-c757-4e8f-8fdf-c79d2a05a822"
        },
        "item": {
          "id": "986fbc7b-c101-44cb-8ff5-264990b7b02d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5292b973-3eba-4bf9-bf27-4d74b42b1621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a84e43-6a61-4b8f-b45d-d0b931907f69",
        "cursor": {
          "ref": "66aafdb3-da04-4872-b4d7-c8b0d0795c22",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e53029ab-070e-4e00-aeb5-3cdf192118f0"
        },
        "item": {
          "id": "c3a84e43-6a61-4b8f-b45d-d0b931907f69",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "edfe9380-87fd-4cff-9180-f2b3774f9d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f648a52e-c88d-4110-9dd9-a171540c36ce",
        "cursor": {
          "ref": "0ae8bc3d-c3f9-4791-aebd-04ff48dedd20",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9248d546-5316-4eea-8bca-401b2b9332bb"
        },
        "item": {
          "id": "f648a52e-c88d-4110-9dd9-a171540c36ce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1e4a3a1a-e690-449e-a4ec-d5ccd45b9cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea158ad-15f5-41cc-90b0-c9e6644185c3",
        "cursor": {
          "ref": "4038d4c2-8892-44f6-93b0-436be2136fa6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "60b8afda-8f5b-4ec0-896d-d1550ba0044c"
        },
        "item": {
          "id": "cea158ad-15f5-41cc-90b0-c9e6644185c3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "30d5f813-09e6-4130-8386-2a89a3b38e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7deb425d-3fb5-4827-b2de-ef1d3f2f6c58",
        "cursor": {
          "ref": "f16abb80-026e-4e64-8343-43a5220bb4aa",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d961e79-504d-411f-892f-49be178d6d2d"
        },
        "item": {
          "id": "7deb425d-3fb5-4827-b2de-ef1d3f2f6c58",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3e4e8f92-8c10-4993-8599-cef743f5ed54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf639d6e-3153-4629-ba9d-2fe803345efc",
        "cursor": {
          "ref": "9a3f1469-0f3b-4ef3-975f-b8c050c01353",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6772f51a-5a26-4d0f-90c0-706cc678b5f6"
        },
        "item": {
          "id": "cf639d6e-3153-4629-ba9d-2fe803345efc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f68dba5d-0105-4799-975d-948d54b42fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f5700-f744-4af4-bb7e-5351ccee6f23",
        "cursor": {
          "ref": "cd9118cb-1a77-484c-9a87-8c746af252f6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fd0f521e-9ddd-4aad-ab98-a31c8dfb8370"
        },
        "item": {
          "id": "359f5700-f744-4af4-bb7e-5351ccee6f23",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "34aa130a-2ec4-43d9-b356-508e33a1b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cd96be-fbf3-4040-84c1-142e3386661c",
        "cursor": {
          "ref": "0a5ed1b4-b75a-4bd3-a38c-20dafab15635",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1933b016-ec97-4c8d-9f5f-1bd94327ed82"
        },
        "item": {
          "id": "c1cd96be-fbf3-4040-84c1-142e3386661c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4255b88d-deb6-420c-94ae-fee954c8c715",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a157db2-38bf-4de6-a0d6-7aa2aab6fbe6",
        "cursor": {
          "ref": "d6cfc76f-b815-4d4d-b48e-4313f0a4a036",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f81506da-a9c0-41b0-8a10-372b600aaf0d"
        },
        "item": {
          "id": "9a157db2-38bf-4de6-a0d6-7aa2aab6fbe6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c40d75b2-1101-40d1-89ae-c425f6351e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f29941-a3e5-4c46-b0de-32de4e05049b",
        "cursor": {
          "ref": "7a46a189-8470-4c5a-b4f4-c17a893ec037",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "402cbd97-dea4-47fd-ae6a-02e67b4697d8"
        },
        "item": {
          "id": "65f29941-a3e5-4c46-b0de-32de4e05049b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "512a2c10-b65e-465a-84e7-6544d02f7733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132c2c90-fdd7-458a-902c-c8d838b958bb",
        "cursor": {
          "ref": "e0a6d70a-4f45-48f7-bf55-cc9cb31090e5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aff2eaca-bd57-4719-99fe-82dc30ad7c0f"
        },
        "item": {
          "id": "132c2c90-fdd7-458a-902c-c8d838b958bb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec393e22-2a36-4991-a99c-17f826cdc65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425deaf0-bb81-43a6-b7c7-9f37935493dc",
        "cursor": {
          "ref": "200b08d1-d18a-44fa-ac09-ac47f48aef96",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "38038fe1-1601-44da-963f-983f312b6bfe"
        },
        "item": {
          "id": "425deaf0-bb81-43a6-b7c7-9f37935493dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "25d5a7bf-980a-41a7-90fa-c4e81c1273fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca0570b-f5e9-4ed3-9008-982fe9257de6",
        "cursor": {
          "ref": "f1a2ff67-b9d7-4816-b80e-64ed39e9d54e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d3c12fd9-10a2-4844-af29-eb15f0289180"
        },
        "item": {
          "id": "2ca0570b-f5e9-4ed3-9008-982fe9257de6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c81dc37-ede1-470e-a6c8-9494dc33c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac4a091-dade-4da5-9781-1ff63fc62804",
        "cursor": {
          "ref": "6327f8cd-51b5-46c9-8d3b-9f821844f3ea",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ecbdcb0b-d5c3-4d2f-bf98-4502b5cbd104"
        },
        "item": {
          "id": "5ac4a091-dade-4da5-9781-1ff63fc62804",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3665a4ce-2649-40c4-ae57-d2862421763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6226762-cb7e-455f-8fc8-46b89548bac6",
        "cursor": {
          "ref": "765ef0dc-96eb-44d5-9d58-65c3789d56ec",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a1799850-50eb-445c-b64a-c3b06269b837"
        },
        "item": {
          "id": "c6226762-cb7e-455f-8fc8-46b89548bac6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b566f217-9831-4703-9843-e61b24a06300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a18fb8-08d7-4a71-a61d-cf8e6644d766",
        "cursor": {
          "ref": "8d266227-767e-402b-a405-4baee682fcbd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "14f48109-ec41-417c-b155-cfa6ef14c1f1"
        },
        "item": {
          "id": "c0a18fb8-08d7-4a71-a61d-cf8e6644d766",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cb543730-7e97-43e4-8b3f-df64807862d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c79b34f-0c69-406f-a547-ee2e90c8c789",
        "cursor": {
          "ref": "47fbdf70-0489-49be-b69d-956c5fa55f50",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a46aa1e-027d-41ce-bb52-d96737c9b1e3"
        },
        "item": {
          "id": "5c79b34f-0c69-406f-a547-ee2e90c8c789",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6928fcd6-6a9d-448a-bdee-526d413b7cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58a8db2-e9e3-407d-b6e7-b3dfb6d3d936",
        "cursor": {
          "ref": "4dd6ca70-e53d-4977-8a73-9ba2bfa77773",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c60786d-c22c-466d-846d-42822a64498d"
        },
        "item": {
          "id": "c58a8db2-e9e3-407d-b6e7-b3dfb6d3d936",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4990dcdd-af06-43cf-8910-c12781336917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af9b685-99ae-439f-8e1c-aa8145e4045c",
        "cursor": {
          "ref": "215dfbb2-be31-43b6-b59f-a1899f3d0751",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8639f8b0-a5fd-4d76-b777-b7483a00dc79"
        },
        "item": {
          "id": "8af9b685-99ae-439f-8e1c-aa8145e4045c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "af1ae833-1b92-48fc-8799-720bfa8f2c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c2d78c-d193-4d88-8cc3-e3e0c9ab6b97",
        "cursor": {
          "ref": "587f1f72-c4bf-406f-923a-060f56620a1b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "033f5302-befc-46a3-9be9-0d30f282ace1"
        },
        "item": {
          "id": "e5c2d78c-d193-4d88-8cc3-e3e0c9ab6b97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bbab5fcb-61c6-4476-96ef-e0e8eb6bc115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68305aa-f544-4abb-b287-32128691452d",
        "cursor": {
          "ref": "e8febda5-02b4-48cb-b03b-9050f1184dff",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d3dca067-297a-45d4-910f-66274758fb83"
        },
        "item": {
          "id": "c68305aa-f544-4abb-b287-32128691452d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5ce5f688-06fe-4d15-afd8-6d205151911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfb2668-d776-4142-9c9f-ca0c0318a5f1",
        "cursor": {
          "ref": "aa223887-baef-43a4-bce9-58233fbab972",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b8eddd1-3351-466a-ba92-91bf1bf9f05a"
        },
        "item": {
          "id": "1dfb2668-d776-4142-9c9f-ca0c0318a5f1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0191eab3-4726-46c3-8971-591dd9ad4ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ccfda0-8ca5-4ae8-97cd-055ca339f88c",
        "cursor": {
          "ref": "ef283a0c-dd29-49ff-811d-782a4d590053",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e78fd88a-96f8-4d3b-9f40-0e89dbf36797"
        },
        "item": {
          "id": "b0ccfda0-8ca5-4ae8-97cd-055ca339f88c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "94b42ca2-e012-446c-8945-ef06f991afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2cb3dc-01e8-4f6b-99d8-043c4ad4d172",
        "cursor": {
          "ref": "ae181b89-a0e1-44fe-b7d3-749d48b29576",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6704869e-5b2c-4f3b-8e70-71908467a59f"
        },
        "item": {
          "id": "3c2cb3dc-01e8-4f6b-99d8-043c4ad4d172",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74faf487-3976-4abc-b329-013f69236547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a2154f-ed3c-4ea6-8c06-25d3d77ead2b",
        "cursor": {
          "ref": "a5074fdb-494c-4634-82ad-7bc80eca978c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5e277548-32de-4e42-82a7-3f19fb3508fd"
        },
        "item": {
          "id": "02a2154f-ed3c-4ea6-8c06-25d3d77ead2b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae155e08-3116-408b-a242-fa73d2061f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9120c14a-b392-4e95-8063-6603b8d804a3",
        "cursor": {
          "ref": "124b4c29-55f4-44d5-b2a5-8e3253752845",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "50da66de-323b-4262-8899-d92e7aa49a18"
        },
        "item": {
          "id": "9120c14a-b392-4e95-8063-6603b8d804a3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "27d1e41a-00c8-4df9-963d-1d6b9e9cedf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eea7b7-171b-4161-8aa0-af54979533bc",
        "cursor": {
          "ref": "ce315604-afe8-4c60-8606-839880278553",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "523b8209-fe2f-46a0-ae89-91c7b450f3ee"
        },
        "item": {
          "id": "b2eea7b7-171b-4161-8aa0-af54979533bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "53214663-8b74-4af6-b8f0-08b4a6224e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a05a24-6823-44fa-b60c-5d5d3e4136e1",
        "cursor": {
          "ref": "8dd4a2d0-2b80-4d59-8857-e8b7c663bb15",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3b7a97eb-35a7-4c2b-9c2b-8664b4fff4b9"
        },
        "item": {
          "id": "b4a05a24-6823-44fa-b60c-5d5d3e4136e1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dd57d8f5-f2f2-4f73-95a9-3e4d70714dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5a19f-961d-4aeb-96ff-592057d877f1",
        "cursor": {
          "ref": "994b6515-7276-4909-9024-99df53bd9380",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5944c88d-6fde-4c08-9ac9-92d88d0b832a"
        },
        "item": {
          "id": "19d5a19f-961d-4aeb-96ff-592057d877f1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a0730c26-be73-4db1-bf3e-a54a62f4312f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90385a3a-5b5e-4464-9c39-f880286de9ed",
        "cursor": {
          "ref": "cc04eb88-dcfd-45b0-aaf9-f8d66706f6cf",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0d9e236b-5ac7-450b-aff6-40c66bccc501"
        },
        "item": {
          "id": "90385a3a-5b5e-4464-9c39-f880286de9ed",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b95d0a99-a920-4a68-98ff-9d43de03ed53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72c27ad-b289-4af9-ab0e-d76089f8098b",
        "cursor": {
          "ref": "a2ea18f6-d116-4b2b-a8e8-38d43eb793c3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "91de96ca-0b14-4728-bc68-b954ce05f68e"
        },
        "item": {
          "id": "d72c27ad-b289-4af9-ab0e-d76089f8098b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "627a090c-6f2f-4cf1-8393-0c9e4e2a47f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d442df-b6ff-4228-94c7-1d8a217a5560",
        "cursor": {
          "ref": "ea937a14-3c4e-4333-be82-bd097fe1fead",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b6a10f58-6f3d-47db-9fba-99d3636eab1c"
        },
        "item": {
          "id": "89d442df-b6ff-4228-94c7-1d8a217a5560",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ca2302e1-a6d3-4379-bf9f-d88b006f1c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170a354-a343-4362-a536-999c9a78e81a",
        "cursor": {
          "ref": "6f53159d-98e1-4bf8-8ab9-230ac0a8334e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "54c8c1e5-2039-4648-a74a-db5c1c0e3418"
        },
        "item": {
          "id": "b170a354-a343-4362-a536-999c9a78e81a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83d56764-1b42-45d9-b0f0-318a1220de2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311b7ee8-53c6-4cdd-bce6-3ead8e0c7181",
        "cursor": {
          "ref": "5a4d9900-4a28-4f3f-9915-8aa2f675629e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a7cc41ef-a129-46a9-90b8-6c40ad5f7066"
        },
        "item": {
          "id": "311b7ee8-53c6-4cdd-bce6-3ead8e0c7181",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cb2ef375-e392-44b4-b621-cd36e192890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebf0170-d3f8-457b-befa-06a56568b5d9",
        "cursor": {
          "ref": "2d2ac648-ce2a-4e39-bb78-930e25c7155d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ffdbb46-aad0-425c-bd63-cdbabc6aac67"
        },
        "item": {
          "id": "eebf0170-d3f8-457b-befa-06a56568b5d9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d1df198-7597-488d-9b2a-ddec51a4a971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329165e-b9d8-433f-82d9-717dfb665bcd",
        "cursor": {
          "ref": "ee164dee-7da8-4dc3-bdd0-4d75fc597ffd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ad6b1e10-85cb-433b-a8c8-dc6d5b95e9dc"
        },
        "item": {
          "id": "c329165e-b9d8-433f-82d9-717dfb665bcd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c71af2d6-2b3c-4788-9f95-8687cebc906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b05df3c-c62a-467a-a1c8-1febfffe08ff",
        "cursor": {
          "ref": "04d0ed69-a3b3-4984-8694-b88fb2b4e01e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eefaf29b-5906-4a42-a032-2274bb16a55c"
        },
        "item": {
          "id": "4b05df3c-c62a-467a-a1c8-1febfffe08ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "617bf77f-8d36-49b7-a92a-ffadbb09e94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0013755b-fd51-4b50-b678-4dd220c5883c",
        "cursor": {
          "ref": "fd6f9668-dbfa-4141-8bef-906d99e8c7b7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0725b022-4881-4941-8d38-5835abe4feb7"
        },
        "item": {
          "id": "0013755b-fd51-4b50-b678-4dd220c5883c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd16281e-06b5-4a25-a637-c75e892adbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afa519b-f7b5-4300-b96e-4c36874eb79a",
        "cursor": {
          "ref": "ef849375-ea33-4779-b35b-9b4159443264",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ee2bf971-ae24-4b31-919d-3d638aea5ae2"
        },
        "item": {
          "id": "2afa519b-f7b5-4300-b96e-4c36874eb79a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e3eb8274-a7c4-48fb-a707-5cf122e7bcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c99e8c-eaba-4494-ba75-911fe5d00562",
        "cursor": {
          "ref": "c19f9501-ba2c-4a69-b019-286fc2fba085",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63ff76ab-a86d-47ad-83f0-09850b11fd46"
        },
        "item": {
          "id": "d4c99e8c-eaba-4494-ba75-911fe5d00562",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "19bc8c7d-ecdb-4f85-a757-6aadee7afeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec61b67-52f8-43d7-9b20-e841c96a1f97",
        "cursor": {
          "ref": "64551d1f-3069-4a20-b522-d6ba31024bdf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "caa36fef-b80b-4324-bb6d-5284f66c7df9"
        },
        "item": {
          "id": "fec61b67-52f8-43d7-9b20-e841c96a1f97",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9713b001-83a6-4849-b765-0e5ffbfaa292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75700f24-3ce4-468b-b549-bc46c0d7db2b",
        "cursor": {
          "ref": "d6d68355-47d6-4bf4-b476-3b8d182778fe",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e0239fe2-54bf-4842-ad54-2134a81e3d6f"
        },
        "item": {
          "id": "75700f24-3ce4-468b-b549-bc46c0d7db2b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "35fb18a1-e21c-4e78-be65-1f75c4bd82d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59cb151-00f8-4a7f-b938-6e92b1cffd27",
        "cursor": {
          "ref": "8a5b07b8-da26-41b2-9406-9e4aebe5182d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0094a274-9c49-40f6-8830-6f89d6e1376a"
        },
        "item": {
          "id": "f59cb151-00f8-4a7f-b938-6e92b1cffd27",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "107457b4-908f-4595-a53a-eb8e145f79c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b0a71d-836c-48c7-8f01-facce76b0e33",
        "cursor": {
          "ref": "10ec63c6-080f-44d6-acc6-3ee51fcfa424",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "76373357-149a-437b-9a03-8b4b8c8ce9d7"
        },
        "item": {
          "id": "94b0a71d-836c-48c7-8f01-facce76b0e33",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9000b65-2a7d-47b1-94ad-3f50a02cf111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0bf371-b0c4-475e-8200-272f3256deb4",
        "cursor": {
          "ref": "266d1393-2d4a-43c2-8c7f-b2b2a9d743b0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "55156753-d21c-4cb3-9497-f1f2b61a24cd"
        },
        "item": {
          "id": "9b0bf371-b0c4-475e-8200-272f3256deb4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d9a03880-4dbc-4c50-a759-80331e9aea5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42ec3ba-10a9-4fae-a51d-e2c93a19fa9f",
        "cursor": {
          "ref": "584c752e-7348-4932-ab2f-df2dfbd7f289",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "43bf3505-b45a-4540-b859-f19da30e3b47"
        },
        "item": {
          "id": "b42ec3ba-10a9-4fae-a51d-e2c93a19fa9f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d96dd893-bfd1-4e6e-a013-7b166d2ccce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5f667a-2744-4fa9-b9ff-783487f1ee0f",
        "cursor": {
          "ref": "5223ae7c-5868-4286-bdf3-3294c96f1a6b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c4112567-e3f5-4bb3-b458-6de0c7f39389"
        },
        "item": {
          "id": "af5f667a-2744-4fa9-b9ff-783487f1ee0f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bb34f708-19af-42f8-8173-e5827d7598a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6060b9ef-51aa-405d-af32-8bdf47a1ea55",
        "cursor": {
          "ref": "fb46c3cc-b019-4b1a-a391-4c9154b71246",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "91bd94e0-e88f-40c8-9fc5-34adebf7de20"
        },
        "item": {
          "id": "6060b9ef-51aa-405d-af32-8bdf47a1ea55",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "492ff111-b84e-4db3-8085-29f357c2e67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d6bb12-2277-4a9d-abd6-e3ff42daa4c9",
        "cursor": {
          "ref": "8f49bd15-7e37-443f-aa6e-ee65b5432fb3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "44fbc3d3-7c59-4c14-8c6f-92eac0a0315d"
        },
        "item": {
          "id": "92d6bb12-2277-4a9d-abd6-e3ff42daa4c9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7adb9276-703f-4939-8619-bf90982ef029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5122bd3-911d-49a1-adfe-0a54a4bf6093",
        "cursor": {
          "ref": "ff5bdc3a-b74e-4749-b542-9f841f9d073d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a6f32ec7-80f5-474d-a117-6ff8f2257a08"
        },
        "item": {
          "id": "a5122bd3-911d-49a1-adfe-0a54a4bf6093",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6ccc83bc-2f90-44bc-972e-e1562ef00284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcc14b0-3a18-4d81-be71-f2fe02b5e9b8",
        "cursor": {
          "ref": "05ce6e6e-b27a-4cec-b0e9-be2631b98ded",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a28b6a4d-b991-49d8-9022-c1a7976e7f97"
        },
        "item": {
          "id": "1fcc14b0-3a18-4d81-be71-f2fe02b5e9b8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "61bf092d-8f62-4e60-978e-9f26578f01ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c75455-db15-47d2-896b-ae16e3f979da",
        "cursor": {
          "ref": "f0caa0d1-ea9b-45db-a06f-4d4c280f786f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dbf495e2-db3f-4329-b36a-7177ae4f625f"
        },
        "item": {
          "id": "b6c75455-db15-47d2-896b-ae16e3f979da",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ea491e9a-e14a-4efd-837e-5d110dde21f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6204d9-a2c7-4ff6-b973-a686c561d805",
        "cursor": {
          "ref": "527e121a-be8d-48b4-bb6b-aa5b38f67585",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1cee5cc5-2008-4a03-93ea-e163adc38c46"
        },
        "item": {
          "id": "3d6204d9-a2c7-4ff6-b973-a686c561d805",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a5c2158-2562-4357-9ba0-f750a4325afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0382d400-899a-4788-a6d3-266f6aeb2c0c",
        "cursor": {
          "ref": "c18677eb-47e6-4774-838a-922832ab80aa",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b114cd11-5029-443d-b588-de7bd208ee5b"
        },
        "item": {
          "id": "0382d400-899a-4788-a6d3-266f6aeb2c0c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a2b0472-8e5f-4652-8578-03e232781708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3316cd-55c5-4540-af56-35dda9da1d23",
        "cursor": {
          "ref": "207b74eb-f7a0-4256-8102-211dd18e7ad9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3086faca-2ee6-49b2-9cb1-f0b376210c9c"
        },
        "item": {
          "id": "0f3316cd-55c5-4540-af56-35dda9da1d23",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fb55a695-812e-4a5d-bbf5-94b462ac798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcaf9d1-78b0-4ddb-8057-6606cb00b046",
        "cursor": {
          "ref": "898090b6-43e8-499a-a0c8-92710b0f5e7a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dab83182-cffd-4899-861c-67f8fb3a3c66"
        },
        "item": {
          "id": "9fcaf9d1-78b0-4ddb-8057-6606cb00b046",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c4011b5-64fd-40e3-9129-d210c28a541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d923d737-4395-4006-aa51-1953ecfa113e",
        "cursor": {
          "ref": "e38d31c4-11e5-4008-ba2c-c49cbf331135",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a202aa8e-2b34-4924-b9c6-4737e8a3da2d"
        },
        "item": {
          "id": "d923d737-4395-4006-aa51-1953ecfa113e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ba72e559-4b7e-4cae-8c7e-43ccc6ebc683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb192d-8da8-43ca-a5d0-bcedc80e8dd5",
        "cursor": {
          "ref": "50daaf34-0edb-4db0-8608-e1a5271435f1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bb01141-198d-4ada-bc77-fe012393360a"
        },
        "item": {
          "id": "32fb192d-8da8-43ca-a5d0-bcedc80e8dd5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b0a9225-c5bd-4a29-9d7b-2272841465ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4da807-f5ff-4eed-9181-23246032a559",
        "cursor": {
          "ref": "a187c07b-5019-4e49-9f87-fd222e3a2b73",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b43e67c0-c43e-46d8-ac56-42a0cac61deb"
        },
        "item": {
          "id": "df4da807-f5ff-4eed-9181-23246032a559",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6dd41f4e-bc84-4ec6-a007-00ecad5f9df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07826ca2-4cd1-488c-8d41-cf43445748b6",
        "cursor": {
          "ref": "6669b2d6-5ca0-4ffd-9d5e-feddfd77ce2b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ae1ef7c5-4398-4d53-bb9b-fe1e045aff6a"
        },
        "item": {
          "id": "07826ca2-4cd1-488c-8d41-cf43445748b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "501fa86d-be11-4761-a0b4-8c731290a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4a2d7b-a83c-4bad-b125-662475fe19b7",
        "cursor": {
          "ref": "7569983e-82e7-4854-8ad8-b3a19b6d8815",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b315056-1284-465a-95ec-abf7883cba39"
        },
        "item": {
          "id": "ca4a2d7b-a83c-4bad-b125-662475fe19b7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f776db62-b07c-4f13-aef4-aa5404215a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64dcaa-7e9c-4067-a714-1d63d3f4a300",
        "cursor": {
          "ref": "771eea56-4b61-4322-9a65-72f88ff790bc",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c24743ab-239e-478c-9fd5-1b501e589b9c"
        },
        "item": {
          "id": "ce64dcaa-7e9c-4067-a714-1d63d3f4a300",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0464b3cf-03ec-47ee-82e8-fbb1a5b79c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f793b57d-5b1c-4ebe-a2db-6b8365f237dc",
        "cursor": {
          "ref": "7119baa4-8ed4-4923-acea-f41969499518",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6e68a9a1-dfbb-453d-a9b1-9a8740d16e14"
        },
        "item": {
          "id": "f793b57d-5b1c-4ebe-a2db-6b8365f237dc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a013de96-7ab8-4143-8ae0-57b4113fb755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0843c5da-be55-4299-a367-a7b10465a1c6",
        "cursor": {
          "ref": "e630a17d-f293-42b6-98d8-b11f6ffefcc9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b695e9e9-acdb-49f7-bf77-a6c3403cd39e"
        },
        "item": {
          "id": "0843c5da-be55-4299-a367-a7b10465a1c6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "28671f79-e563-4e2b-b106-8750953ccc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98216c7-7a87-4d20-8531-fa1e2a0e1b89",
        "cursor": {
          "ref": "bf9eb1ea-40cb-4c49-b0a7-f54b18578e5a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ba5047ac-f41f-4c09-a1c7-77fe78bb8ebb"
        },
        "item": {
          "id": "d98216c7-7a87-4d20-8531-fa1e2a0e1b89",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1dd39350-c7f9-4971-9c30-9018abdbea95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12adc137-01d5-4a7b-b70b-228bfd9de67f",
        "cursor": {
          "ref": "721ab560-e7d1-4b0e-9987-675cdc639417",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a8539cc3-50db-4011-996f-8ccdd40fceee"
        },
        "item": {
          "id": "12adc137-01d5-4a7b-b70b-228bfd9de67f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f763f89a-7835-4f89-9907-09ad1158f0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b727d8c-e104-455c-85aa-25ce5bfd13e8",
        "cursor": {
          "ref": "2c87d53e-ccb3-40db-8151-07f71196e76b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da46946c-ad39-45d6-8ea2-ceb15a015b32"
        },
        "item": {
          "id": "4b727d8c-e104-455c-85aa-25ce5bfd13e8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "16a7bca4-8fb1-4397-81f3-4345ea6383db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c547f-58c5-476c-850b-e9f25ec5f418",
        "cursor": {
          "ref": "009d5eed-b779-49e3-b489-0e5b1ba76abb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d00e84b5-f2b1-456d-84b9-2c05b67bda59"
        },
        "item": {
          "id": "269c547f-58c5-476c-850b-e9f25ec5f418",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4d6b5aea-fe03-48db-9385-5f0e7f1130e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546cd8f3-018b-402c-a163-c3ce2804f7e9",
        "cursor": {
          "ref": "102274b1-edb9-4932-b784-05f055c66d2e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c1ecf5ae-c91b-4e54-a1ca-d0ad777441c7"
        },
        "item": {
          "id": "546cd8f3-018b-402c-a163-c3ce2804f7e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "281ae021-7b04-4d88-982d-0e85ef8b2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782fc15-7080-41ba-9d5f-c3728cca3e15",
        "cursor": {
          "ref": "6c157a2c-df4c-4fe8-af3c-152bab546ec3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "49d6d711-aa39-4b2a-8f11-c74d5e0dd1cf"
        },
        "item": {
          "id": "7782fc15-7080-41ba-9d5f-c3728cca3e15",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "625948e9-236a-4034-9f9f-60f7fd62dddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6965ba1-eb57-419f-b34c-6d2bfdded793",
        "cursor": {
          "ref": "64c21ba6-8835-4d5e-af65-55345a05f75c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "28adbdd6-4bd7-46cc-9aef-347c0d86d69b"
        },
        "item": {
          "id": "a6965ba1-eb57-419f-b34c-6d2bfdded793",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5b16e9c-c990-40b4-b7ad-2a2cac0e28f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449d9558-6b99-4db8-b631-22e789057f82",
        "cursor": {
          "ref": "30421f30-b8fd-44a4-a997-efde2595ba56",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5abf4945-713f-4a43-96f6-907a172b7a25"
        },
        "item": {
          "id": "449d9558-6b99-4db8-b631-22e789057f82",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "38316a1a-edad-47ee-850f-6f706f5554fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77d6e1b-7f95-4514-b514-c8b6b6469f7e",
        "cursor": {
          "ref": "224a1bb4-b5bc-4717-a33f-559fa6b0cbe1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "37b58f07-018d-4093-ae83-8bb18532a0e5"
        },
        "item": {
          "id": "a77d6e1b-7f95-4514-b514-c8b6b6469f7e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14db8e56-e37e-414c-a427-9bbb9e8a9bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0629a9b4-3551-4da9-9516-1d38af606286",
        "cursor": {
          "ref": "d54f1354-a5d2-4058-abc6-b273847ac423",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "76301431-9db9-426e-9aea-460d5ac4f9a9"
        },
        "item": {
          "id": "0629a9b4-3551-4da9-9516-1d38af606286",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f949c2dd-9069-49a7-8f99-985dd9b00026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a33c847-96cf-4e4b-96c3-2578592b37b4",
        "cursor": {
          "ref": "7fee5c33-dfd2-4493-a5c9-b2cced226d4c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1c9a6841-b6cb-4582-b103-ff262daaa723"
        },
        "item": {
          "id": "6a33c847-96cf-4e4b-96c3-2578592b37b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f69f70a6-0153-4bd9-a635-550db299f107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df685d2-26f6-491a-a553-351b251b4e4d",
        "cursor": {
          "ref": "a1f230f9-2f67-4e6b-911d-8e1ff38140ba",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2156a9f5-a54e-4e6b-b7f8-a21913943a64"
        },
        "item": {
          "id": "8df685d2-26f6-491a-a553-351b251b4e4d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "95694284-0e85-4dcb-91d4-b3d63fe39822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf519df0-b409-40a0-86fd-4e46939a8b7a",
        "cursor": {
          "ref": "a072a21b-8248-4ad5-8b03-07a4d1c468e7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d8c26c5-82b3-44b0-ad50-557bd1177485"
        },
        "item": {
          "id": "bf519df0-b409-40a0-86fd-4e46939a8b7a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f66d037-1e80-4ab6-a638-4416fbcff692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01182b34-57ca-49d3-be30-1b8ec01f0316",
        "cursor": {
          "ref": "b1ad5dc3-febd-453f-b840-15d9b29cb14a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "22ba057f-d7c6-499a-9f7d-95640ec011dd"
        },
        "item": {
          "id": "01182b34-57ca-49d3-be30-1b8ec01f0316",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e02bd09-bcbc-47f4-a504-997cc778ee4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fed387-4b13-41a0-bd6e-add3ebee2fce",
        "cursor": {
          "ref": "38363e61-8cee-4a70-ab70-6d3481707540",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0988e47-7bc3-4dcc-b725-ebdf6c32fdf9"
        },
        "item": {
          "id": "61fed387-4b13-41a0-bd6e-add3ebee2fce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b5624b13-3901-433f-a3f1-e0678d25a470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308099c-8d82-479f-be5d-d2f16589affd",
        "cursor": {
          "ref": "f5163ee1-2a0f-4085-ba20-a24df242779d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7e685366-3686-4a2a-8b44-2a278da72874"
        },
        "item": {
          "id": "a308099c-8d82-479f-be5d-d2f16589affd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4c0c1bf8-096f-42dd-92bd-315246ece71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4389521d-3c7e-47af-b522-a859e59c1933",
        "cursor": {
          "ref": "6e5535df-1dde-4966-95b7-f11b5eed6b1e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "00ad1c07-c3a2-4d77-8d7d-590ea705438d"
        },
        "item": {
          "id": "4389521d-3c7e-47af-b522-a859e59c1933",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "61b720b9-d4f8-47d7-917c-2e645bf02c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea18bfe6-b714-4d1d-92c1-fd1f7d026805",
        "cursor": {
          "ref": "943aba8d-b69b-4c84-b85b-40f088cd8844",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98771278-bbf0-4a78-be6c-9f3a2b581ba7"
        },
        "item": {
          "id": "ea18bfe6-b714-4d1d-92c1-fd1f7d026805",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9ab250f1-5064-4fd0-a59a-1dd2efe2146c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4613ac7b-6b00-4ca1-b871-6d457c618085",
        "cursor": {
          "ref": "2b7a0380-deb6-41e5-8f05-ae88cf6086e7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "448d6554-dcde-45d4-b4d1-b8af195fccec"
        },
        "item": {
          "id": "4613ac7b-6b00-4ca1-b871-6d457c618085",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81a16f50-5701-4964-945a-6ce76b5d9445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb82a70-2bdf-449e-9ee2-ef6cb9a21073",
        "cursor": {
          "ref": "1dc50f82-e55d-4c33-9207-989329c24dd5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8322e406-22d9-4160-bd7d-80e16d0dba39"
        },
        "item": {
          "id": "ecb82a70-2bdf-449e-9ee2-ef6cb9a21073",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "67e36d19-5eeb-4396-b246-7c1d88863c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70e3610-c35e-439c-a4e6-931bc3f68c32",
        "cursor": {
          "ref": "4d8705ab-6dee-4e1f-99ff-98eb1fe2cc48",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c82fc60f-d8ad-4135-a950-6c4c0c53cdb1"
        },
        "item": {
          "id": "a70e3610-c35e-439c-a4e6-931bc3f68c32",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "978fcd54-3623-487b-90f2-b85b21274baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50c6630-1c8f-4a79-aeb7-715b617d76db",
        "cursor": {
          "ref": "8473ca2b-3a93-4e40-affc-c0eb8cf0a634",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "855bce7e-c80a-4aa2-abdb-612e691d347e"
        },
        "item": {
          "id": "a50c6630-1c8f-4a79-aeb7-715b617d76db",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff3db28c-364d-43a1-bbc1-21072d5682f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef07ce-071e-4887-abb6-785fca24d852",
        "cursor": {
          "ref": "1e1dd6ee-db6f-4c9f-88d5-814064e0e97e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a6ca9568-1ebb-4113-9f7a-c8558341f176"
        },
        "item": {
          "id": "59ef07ce-071e-4887-abb6-785fca24d852",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "47fc62c5-52cf-4b55-9447-c284c1e83c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde0e6bb-3e9d-460c-b242-70062e2093f0",
        "cursor": {
          "ref": "9f949f60-bac3-457c-b933-3ae1b203fbea",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63034031-3fc2-472b-a1bf-880a2665367c"
        },
        "item": {
          "id": "cde0e6bb-3e9d-460c-b242-70062e2093f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b0877016-eb46-4ba1-b848-dbfd7ab026f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50adaacf-9187-4b85-84bf-60cdd71ea1ee",
        "cursor": {
          "ref": "55126610-29bb-4c60-9543-48d0ac3ff0e5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e8be9994-1fbb-4bfb-9948-d9da8e294610"
        },
        "item": {
          "id": "50adaacf-9187-4b85-84bf-60cdd71ea1ee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "60b16307-ccc7-4eb5-aa47-1d01e2621e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf8fa7-fc2a-4abf-8154-bec63a2c36d9",
        "cursor": {
          "ref": "058af829-9dca-43c1-8aa2-c59e29a677fc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f0a9e4a7-809b-433e-b766-dcacc4ab3d4f"
        },
        "item": {
          "id": "5dbf8fa7-fc2a-4abf-8154-bec63a2c36d9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a2831e3c-d655-4a41-a43e-462d962c3679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e91b7-e3ab-4ad8-9ecc-d5d17a27b3dc",
        "cursor": {
          "ref": "9a497a60-33c9-4ea6-944d-9bd555e3187e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1b4d3b7b-fe49-4ba5-aa41-fca170ce6aa2"
        },
        "item": {
          "id": "fe8e91b7-e3ab-4ad8-9ecc-d5d17a27b3dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d4c02d5c-d7e8-4064-ace6-6ce455cf10e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c54ec-a27e-4bfa-9c00-ec3ec8102ee8",
        "cursor": {
          "ref": "020ebae7-c29e-4dd0-adc9-f2fe2da082f9",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cd009aa5-75d9-4000-a739-996be7fee4fa"
        },
        "item": {
          "id": "363c54ec-a27e-4bfa-9c00-ec3ec8102ee8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1d2dfa1d-2f5d-477f-a97f-50b3785c8f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4014f1a7-56f9-460e-8b1c-952c51545f88",
        "cursor": {
          "ref": "19bd2e06-ce4e-425b-915b-8f1aa26babb5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d9990610-94ed-4ece-b07a-bf0f1df6b33e"
        },
        "item": {
          "id": "4014f1a7-56f9-460e-8b1c-952c51545f88",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "01634c25-f43a-4617-9ba9-7038e270b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab39b546-1b40-4276-8828-330cb60ecae9",
        "cursor": {
          "ref": "993641f7-d366-455b-9be1-5771e62b588e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8243866d-c63b-4a15-95a2-aba7040a23c6"
        },
        "item": {
          "id": "ab39b546-1b40-4276-8828-330cb60ecae9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d7df1d9-9070-4b4b-b58f-c953e55ff114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22385104-3c6a-4acf-8034-3771312b42ad",
        "cursor": {
          "ref": "fe9807b9-1063-4f1b-8204-5a3139495e18",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ae85a7fd-c3fd-4697-ab06-65e1a772377a"
        },
        "item": {
          "id": "22385104-3c6a-4acf-8034-3771312b42ad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c2ae9c1d-445c-4399-b234-93ebc2c8643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b879a38-ce9b-4dbc-8486-60d6c51e09af",
        "cursor": {
          "ref": "5b20b954-dc97-4a3d-b941-c5dc864b91ce",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "67978700-18fa-41b3-9803-2ab77d20c83e"
        },
        "item": {
          "id": "1b879a38-ce9b-4dbc-8486-60d6c51e09af",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98288b34-51f2-40c4-9d58-bfce0cbc2d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218d27b5-a4e2-4967-9d5f-ff20acfe9bbd",
        "cursor": {
          "ref": "f0a2f315-1338-49b1-9ac2-b88c3afca6c4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8cecdbb8-f161-45f5-babf-0846dbc8da9f"
        },
        "item": {
          "id": "218d27b5-a4e2-4967-9d5f-ff20acfe9bbd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "777a98ec-7455-4e9e-ab26-e4fe4dfc7071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fc71f7-797f-4156-bc13-0a365a4d9f78",
        "cursor": {
          "ref": "3e4d1eed-809e-4c4c-bc49-27ac7e29c361",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a85352e8-4362-4c03-9ee8-75d58de2483c"
        },
        "item": {
          "id": "52fc71f7-797f-4156-bc13-0a365a4d9f78",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a266491-dd2b-4d91-bc84-4baf5d56cdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15472a-27d3-4dac-b803-a17e238b126b",
        "cursor": {
          "ref": "b4709539-c961-4a6e-bce4-6d02998580a9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a524c231-92f4-417c-bfd1-5026d14cf2c8"
        },
        "item": {
          "id": "6a15472a-27d3-4dac-b803-a17e238b126b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "952b6fc9-cbd3-4345-abe8-4a01822e4e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e778b1c4-7907-4bea-ac05-084a2f0e6acf",
        "cursor": {
          "ref": "a25b2841-99c7-4ddd-9f7c-1329d96bc9ed",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9eff9035-8adb-4555-9ae9-c770096e2ca9"
        },
        "item": {
          "id": "e778b1c4-7907-4bea-ac05-084a2f0e6acf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "daafbb18-b614-445b-935d-e0fc44fb6947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf41d3d-d998-4cc0-b915-4585c39629d5",
        "cursor": {
          "ref": "366f81bf-e11a-4fbe-9e71-ef0a6b97d632",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0d8b824b-76dc-4a97-8233-c2b181ea2dda"
        },
        "item": {
          "id": "eaf41d3d-d998-4cc0-b915-4585c39629d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "32049fa9-86f8-4223-b560-f4bcd6ddffe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfe89f1-09c4-4756-8a7a-b400776cb490",
        "cursor": {
          "ref": "4f8f699e-5c0e-40ef-98fd-83114a71d46f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0c3a9e72-e0c0-45c2-91af-9da40ce0e699"
        },
        "item": {
          "id": "bdfe89f1-09c4-4756-8a7a-b400776cb490",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9ed1455e-fe68-4c78-9112-e56131957ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6529bcd-ebde-4ccc-8e50-524847686af2",
        "cursor": {
          "ref": "32c79d52-d891-40d8-9f6d-48e7ff70a552",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8563088c-c149-40b5-9941-5befa180a8e8"
        },
        "item": {
          "id": "e6529bcd-ebde-4ccc-8e50-524847686af2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec7aecc1-e227-4ff3-ad45-4840eac1ff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b672cbe-b45e-45fe-9218-ca87a82f98d8",
        "cursor": {
          "ref": "0fbd960b-20f9-4c75-a531-7427b734496f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "be5bfe53-0b3b-44e1-a6f8-b789f2c6eaf7"
        },
        "item": {
          "id": "0b672cbe-b45e-45fe-9218-ca87a82f98d8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1384892-be9d-4e2d-b475-84841463bfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b26e05f-2a74-40fb-a98c-520666cc0e6a",
        "cursor": {
          "ref": "c37cc053-cbf0-4e93-9545-45a45eb64182",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a3f6af62-807c-44ab-a5e6-ee3a1cd775d0"
        },
        "item": {
          "id": "2b26e05f-2a74-40fb-a98c-520666cc0e6a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ea598ea2-dbf4-45ea-a7bb-8641c0861ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c25705-cfca-4b46-b386-744cc8272b46",
        "cursor": {
          "ref": "359fc0a1-adc1-4763-b7c1-a5b99d44ebc3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "83d64960-3527-4a24-a28d-9de74ed282dc"
        },
        "item": {
          "id": "c2c25705-cfca-4b46-b386-744cc8272b46",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6cdb51ba-827c-41d5-a1c8-e683be018ee4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbe9122-5d01-487e-8f05-b126abdaa3be",
        "cursor": {
          "ref": "da7f477f-d166-4f1f-bf43-107ed22459f9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2c566eed-30f6-4ac5-82b0-e8f84be9a61c"
        },
        "item": {
          "id": "8bbe9122-5d01-487e-8f05-b126abdaa3be",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bb5432df-e6c4-442c-9973-4d535c50e5ba",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "229af32b-9c2d-4fd0-8f74-748b588f4b9a",
        "cursor": {
          "ref": "529b8cf0-37c1-4236-ae7e-83622e101b9c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6178dc9f-9a96-4de8-81b9-fb8ad1d65a27"
        },
        "item": {
          "id": "229af32b-9c2d-4fd0-8f74-748b588f4b9a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d5e34b4d-e074-4c2e-9824-02a7eaace128",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfff6f-34f6-4236-a0c4-6d9e9a23db54",
        "cursor": {
          "ref": "1a502545-5fff-4380-81e2-26d527eddac6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b9c7d8d7-5143-4ada-8e51-24fffb3002ce"
        },
        "item": {
          "id": "98bfff6f-34f6-4236-a0c4-6d9e9a23db54",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bda24bba-3840-48be-87e4-153dd0c0714a",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c452d86-0a80-47a5-9a6d-f6649a6ab3f0",
        "cursor": {
          "ref": "e7eca77e-2068-4f38-b424-edadcf5517b5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "faa23648-3243-4572-9c01-c6926663585a"
        },
        "item": {
          "id": "9c452d86-0a80-47a5-9a6d-f6649a6ab3f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a81a9e8-6080-4c85-b266-7d6b6bd6cd95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c452d86-0a80-47a5-9a6d-f6649a6ab3f0",
        "cursor": {
          "ref": "e7eca77e-2068-4f38-b424-edadcf5517b5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "faa23648-3243-4572-9c01-c6926663585a"
        },
        "item": {
          "id": "9c452d86-0a80-47a5-9a6d-f6649a6ab3f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a81a9e8-6080-4c85-b266-7d6b6bd6cd95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1f1a6f-d627-4b36-8adb-5005d03f7540",
        "cursor": {
          "ref": "b3d30003-10a1-4929-9781-d784e27219e4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c131063f-1891-4254-bbc9-2ae7d4ed53c9"
        },
        "item": {
          "id": "4d1f1a6f-d627-4b36-8adb-5005d03f7540",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6f28b112-790a-4f95-9342-de38df798424",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876932dc-1cf5-44d5-9215-66be5a4b3b9a",
        "cursor": {
          "ref": "f9d76e4c-0370-464c-9578-f84b7f94faf0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7ce94c58-def1-4e21-8c73-0b69ccc150d5"
        },
        "item": {
          "id": "876932dc-1cf5-44d5-9215-66be5a4b3b9a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1090b1bb-cfd1-4691-b6d4-b64e7bbca278",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}