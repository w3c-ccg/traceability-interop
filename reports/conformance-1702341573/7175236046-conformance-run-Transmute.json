{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ad6dc6de-1048-4c6d-b644-0dca2061425e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "957c9ed9-d737-434f-8766-c502de20a9e1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e635eb83-a859-4630-a2e3-d8cd8da6be11",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11d0d089-4a44-47c6-ad97-e9aca48e80c0"
                }
              }
            ]
          },
          {
            "id": "5ed5fba3-d5c7-41d7-8e9d-8d310b1f9d54",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "349c4ffd-6ec7-43dd-b3e3-206c525b3efd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "693256c0-7ce8-4f01-9d59-a1129780c788"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "13d0de19-99ae-41ef-b70f-348005ce9198",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a4492ae-e207-41cd-98e1-3a5642b9c8ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "161f163f-1fa0-4fcd-9918-4fea032ca36a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ddf8ebf-f7f6-4f65-8d46-19d1595f029b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cca6a652-30f4-4390-b3c5-5894e573af21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac81ea45-4098-4b18-b98a-fca060ce6a3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18cdf477-d8eb-4b53-aac3-f53689a8c653"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "689ef30a-7551-4d6e-b1e1-ec42408572ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92a5c6ae-f643-4d8f-b98d-3a2769306dc4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9b91721-12b3-45f3-a53c-8f5d15243eb5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a320a672-a37d-4632-9f31-d0654273b97f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5608389c-7a9f-426f-a5d6-39b885621b5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1928d6f-bf74-4e37-85bd-a95ec74ffe8b"
            }
          }
        ]
      },
      {
        "id": "4bd144a9-0526-4d57-b9e1-449c38ba95a7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e214931b-8e6e-4609-bfcb-83319c253e78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a68ff35c-4781-4f9a-99c9-e694332f04bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2706f2d3-6837-477d-9427-e5a25b518635",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f568a7-0746-42ca-adf5-a69cf9c97d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1d143a4-c87b-4b69-bba9-bfb81558a3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d245bb7-7b1f-47c9-9bf7-56ea08d16e94",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53032c00-f759-46d1-bfbf-77a2671e1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb426da1-0d4c-431f-8f4e-0f7cf9fa7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae80cdb-8042-4cb1-80aa-8301151bf28b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b5544c-412f-4370-83cf-f29c25bcf508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3bd2367-f3ff-4dce-a6e6-e50fc4579ae0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8cf2e184-6b4c-416a-a92d-b23238be6e51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1016cdc9-9724-4161-a3c0-26375b54f569",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04952e3-a5af-4776-81a0-86a9b95c1bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e14e070-9d0d-4430-877f-7eac7753741b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc44f9-e8bc-446f-b7f7-886fa83bb918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035f5625-7d08-4f59-86a0-c2e9fa654850"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3ebd2f4-62d0-44d1-a206-6acbf9c883e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b77e9130-aea6-48bb-9693-639bc40fbd4f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f01d09-3af8-428c-b328-c5ce9e22e5be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d26e8223-83b2-4fbb-b74f-70d9e7826362"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06c8bdda-f53b-47ab-aece-9d658c279a7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5f26b2f5-d8c4-4c57-9f0a-40305df31897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e9ebd9f-3c84-41ac-badf-5b913d90d02a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59fc64dc-848a-4788-96bf-e9392035dfc0"
            }
          }
        ]
      },
      {
        "id": "7e8feb8f-515b-4e8a-8d32-c93274d6ff64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d19c08a7-0fc6-47a4-b0b5-b862c21810a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f66a6af-3d9e-46f3-a144-67a6d3d54ea2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc7ddcc9-9718-4a48-8585-5368b34b0531",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae751669-fdf2-4773-b1b1-ee3f9f8ed9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b20c6fa-cc18-4e68-8ef9-f8a5492d85ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f243ea-dd1a-409e-9b85-6eed83d339df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa1fa33-c3ed-4f56-92fc-71c6fea37f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f225e2-206b-4546-9550-df5c80ce842d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e810f36d-63fe-4006-b2c6-d5bc5b5de91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a21f165-2ed3-4ba5-bcd4-1996809b71df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2aecf-2428-480b-9f8c-fc907834bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99336999-c20c-4da5-b466-8469a18cae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860f7b9a-67f4-40c2-92b6-0807bacf22f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc572901-2ab1-464e-aa0b-3ab44c14849c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a54b18c-6f81-41bc-b419-3379f9b1afc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0637af6a-3df9-4e9d-a9a5-7c040a45c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb547dbd-f6a6-4f03-974a-cb998b1bdf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6004075-c10c-487d-9066-d28ebc5efb4b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c82028-344f-4bd6-9662-d834ac0c78df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c36553-4d3d-462b-b532-a9306d670860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa5701d-1370-4e8b-88c1-4914ff0c203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20921aec-ab52-4f40-9ae8-8448fcb34cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76600f5-af7b-4c8d-8057-d2adc28f2df9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d995c-cd21-409b-876c-c6bd99f649ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b8155d-614e-4f7a-b9ea-836f3aeb5ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8be63c-4c7d-4d41-977d-b09d87d726e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfdb6fb2-1fcb-403f-94cc-fcf7aa5a4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf66c067-a2ca-485e-888a-dfdce7745aac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea72d53-6ba0-46c4-ab50-8de055a4cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c327d829-d304-4985-85af-5292bed41bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82008f55-8c64-435a-91a7-14dc2a05f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5172f6e2-3799-4322-b285-efdae710c556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8094626d-80ad-4ed6-953a-3da2c03d67b7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edb16e1-4076-4e45-8ee8-4394cd343ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab7c0be-aa98-4424-afcf-1c11f141f4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d205e5-de09-4cac-b0a7-265fd24a8ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecfa5d6b-e969-4aec-9b2c-b9d19b095557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ed93c-6173-468c-b0be-d0429f9a299c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1e2761-b37e-4450-8d0f-638b3545b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849344de-6e9e-48eb-8889-205d228b2b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15bc4b3-a6a4-4d35-8c07-428df6699f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2db661a-c263-48fa-a370-9b6a5e32ea1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9108f5-9046-404d-aa64-75950732d112",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350b634-c3a6-4fd3-87c5-2e40d19ac6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b14a85-8bfd-4279-8169-9ccea6eec52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231fbe9e-970a-4bd4-9aa7-d4a2356a38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea266451-5ec2-44a6-b5fe-baf1e811a536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d7c24d-92e5-49cc-ad82-8b623f1afc03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b91937-8ab6-4be9-8538-baa8ea1ba55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d466393-4e9f-4ea7-83c6-f27b89efce8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca5b156-1697-4af5-99d1-157b287f205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cf32df4-90d5-49c6-ab43-b58b8088c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6708b31d-2c7a-4e7b-90ca-3286056af2a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d029867-fb21-4bb0-997f-de1de7f0d389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de9d8b2-5f81-4c7c-b921-a49f6a916586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a931bcf8-c215-42f8-8f8e-d3bee9a96fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "583cfd6f-57b7-4a01-a098-79ceea6b0c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4f67da-bc57-4d98-a02b-63ce55ab208a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d737f394-552a-4ff0-bb93-b7645677e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691f7c68-2031-486a-bb8f-070542818423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4918f7-af89-4fb9-9f5f-fc366e1cfb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4479a760-3b0f-43e9-a276-8302737cbc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2314f648-8893-49da-826a-9a7737b5a081",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b5b04f-69ae-4a15-b84f-1d78f769f399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831ba6c7-6be1-40eb-8a00-152e7f53ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d224be-c4c8-4415-9a88-9049aa62c415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01f1bf92-bf14-4310-a3ea-19bcc12e6263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10166bdd-6080-4dc5-af66-2f6a17010654",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8deac5e-aaf4-4ac2-a36c-3d07bb2ca6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df7a469-33a2-4834-9a8f-d1e15380a48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6aa109-8e52-48ad-868f-7e201bf59d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb94e270-a04b-4932-89ce-a57b295fb473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf1e60-6ceb-4930-afe7-5d014d8238a3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b7b128-59b3-48d0-971e-6923821eeb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a87cba-c4a2-450d-9ee2-038e7cbab212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65368756-c7f4-49e1-a0c7-9cebf2e4cf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f7c738a-c4a7-4fc1-ac9b-c1c87c4a1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2b2895-5700-413f-b315-e263bab99b6d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf27c504-5097-44e4-823a-a7c79a3e7f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a3cff3-d205-41e3-8230-b0c81540fe6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d66bd3a-ab4f-4888-a577-d5c67b242651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07696735-714d-45a6-b44a-43f3387cb151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0213bb58-2df4-4fde-8a02-9265f8d15cfe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f5e4f8-45c8-4b12-b78d-5b8512e1b97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d20bc8-b0e7-4570-a7f8-e16eca64514b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bb2111-bbc4-4911-a2eb-91443bdfac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d7c4382-e5e4-48da-a6e8-b6a6fd68496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66da9874-807e-425a-b352-e02e64e81708",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a899e91-837f-449b-9552-17aa5642f680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8c55f6-f2d3-4675-9252-1ce84acf3d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db87e1a-c833-4dd3-ae3a-9103a1dd6708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d386a5-21ed-4023-844a-d72ca6d3f644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5fcdeb-b264-4aed-9833-ad0501aaf1c3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501be027-edf2-41a0-9c44-c9e255f21158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abb997c-dd4d-4d2a-b548-70bdaf047f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db9c8e-4579-4cd2-b198-f694d9d60d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1579ffa-1637-4576-a290-fd2593fd5fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf14c297-75e3-48b1-86d2-dd9334ba3af6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28db554-e1ad-4948-8232-8ac64988f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db9d9da-9edf-439f-8c63-e36d0ee29b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bd38eb-335d-4c15-ad37-e925d3219ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "626d1c4c-fbdf-4424-bcf0-99d2ebe160ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeae138c-2334-447b-ab78-26281defea7d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f61c40-3813-479f-82e1-1a99c64981f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43336355-1b49-4065-a25c-1061a771874b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cdbe1b-98ad-494a-b9ee-09be3e3292e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8810060c-2865-4b95-bb6e-948b6d6d89a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d581eef-7b22-4f6e-aac8-5e505f9bd4df",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca2170-d5cc-41ea-9538-bbde29be23bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f46c4c-a4af-49c6-b757-af6536d6aa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15995ae-bdbd-408a-8c03-d2b03c5e97ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc58f467-a55b-414f-915d-f6fdf094bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af951a-1aa9-4da1-9e36-d880ee730f85",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e605e24-2121-459c-b8e2-8ac3fb304f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62d8175-1acd-4ab0-bb79-18fb4a0ac298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a175d04-49df-4eba-866e-bf2afeb15850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "514aa4e9-2fc2-4e60-92dc-6e3f4e957867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdb1e4f-956a-4963-81e4-5ba14f4bd96c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef95320-dd12-40c9-b330-1d7c8c5eb505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae91a3a-43e3-4f05-bdd2-c3c3a4ab2efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65766958-7223-429f-aba3-f7ecc12eedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29135a3c-c1c9-4c2d-8d87-811a21cc9218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c39c71a-f242-419a-aaed-7bb8975e69e6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f02d74-7226-432d-885e-fd713ac746de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713631f4-12d4-4094-9ad9-5ea676d5cb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9074350-8fa7-42a4-a26b-3b0317b2884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd0fb66-a767-48f3-be17-23296bdbf5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf994696-5600-42db-99ee-fe7376750048",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ec0a2-16ba-4baf-b78c-b0839b4c7cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15054d1f-32c1-4a1f-a015-b50904bb9812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60908a70-9b9a-4bf9-9cac-8190f0b75308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee82133-f62f-433f-9841-daf743c046be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7609e7-db9b-4dc6-a1f9-40dc522ccbb2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e1efd-82a1-4bbe-840b-6f050a4cdfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099e90ba-a65b-4109-8a15-498c2ed160e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f94649-47e9-4392-a200-8f9667ca25c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f98da4-66d4-4d0e-915a-d48ca3066bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135697eb-e44d-42ad-87ce-23de8eca9248",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d05d25c-8170-4130-9056-9fcbe08b0111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b4e6e9-64b3-48e3-8c14-c64589053e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a026ada-ab69-4832-96f5-0554ef566af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e22d42-f026-4fca-8bc8-bd25b5629f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca82d25-c0eb-413e-a650-3c503895c818",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686c67aa-66a0-4462-86fc-65d5e425544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4403c40f-76ed-4548-b3d3-27b598d37f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c292c3-8ac5-4c35-b6aa-8a4e9c8b94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b7840c-091d-4280-a570-67e15d9eb16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e73698-cb53-44aa-a9b6-c29ae8cffa73",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93129e10-7c4c-421a-a737-09a38bf9f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b795f8-a899-45f7-831a-45bfc3e50b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b78d3-3f3e-4ce2-ad0e-954f9991ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b535cbbe-b262-4d43-919f-c0ed7605b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713655bc-89d1-47ab-9ad2-27cf01fbc427",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0048757b-98e1-43a5-b858-f738b2ba99c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2d5a49-09eb-491b-a793-12e18a1c02d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a9914e-451a-4b4d-8302-3acec9395ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c975a6-3364-4a6b-9d31-3c3ccdb8c137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b45d4b-b403-4ca8-9fd5-9df4819cb823",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5299398-cd51-43d0-8918-9c763d55a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a135e2d-7fb6-46dd-9dce-7ae815fd1c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f85bb3-b32c-42ce-bf5e-bf6a22434ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37cbf3f-c5e9-4bc9-9f30-bffe77c4afea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac84dff-949c-445a-b5d5-19be8f4cfdb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62315a1-461f-42de-9326-8cc677d3826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a904a0e5-abcd-456d-877d-57932d8a586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63c3fad-ac80-413d-b52c-ae23e5e17eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59c256d-6a39-4e5f-9133-006795592346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a04d21-0e28-43c1-9fb9-e848e29fe6ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2932b715-318c-4c9f-a9a6-e13a87a35b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d458d7c4-50fa-4567-b55e-9de4b4b509bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ef2be-5c06-4eef-b8ad-1fad7cf83f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "156f6dff-d458-4c32-983e-9eb1070d9f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9f9fa4-648a-4bc1-8164-aa62067dd119",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998800e5-8d0b-452b-b2e5-7a772f577a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032d8542-1acb-4242-b384-888a66136e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99475d06-b385-4867-b0d3-dffb4d976411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f75d9292-5936-4b50-986e-e4c0679a48c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae150a-7395-4a01-a83f-415b1181df47",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918ae81b-279e-4769-8e10-173208474a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dec9ecee-0793-49fc-83ec-ab6d02712815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3724f3-2699-495d-8f6d-3b4b7ff941b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "220b3bce-7709-4794-98af-9c9706868a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fd1d78-ec24-4b62-8d12-4cdb2b036016",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7da4c9-b2ec-4aea-aa1d-2c7d4ac88b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53d5abe-e9a6-494b-ac85-563f7a611da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e399af13-9786-44d4-bac9-662d6aa21868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a22d3922-d71b-4bd1-853f-323e67f1cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40d4415-8fbe-4bb4-ad9f-0add68c08df3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa495108-3917-4b8b-ae89-d04b2abfa28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a30c53-f8a6-4275-af90-6d7402993397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5b7e61-3e95-4ef2-8d49-227a6bfae4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9f26a7-1719-4630-8c78-c8f7df5dfb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3408dff-3ab9-42f2-9d17-4ed36436193a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d59ff5b-7fb7-4247-9cb5-ad1568b7f885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145db861-fd7a-40ec-93b5-dcc5669d4bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e7daab-0386-4dfe-b80a-777f46c1e512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb71a020-afa5-4744-9bfa-288660bcdc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcef130-8c2d-4fba-9eea-466e19a15078",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27db84b3-7238-4535-9f5c-6c61c8cb3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a22d48-6135-406f-8b43-10691dcca822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3dc488-4744-4a80-9568-9298cf4bff3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d40629d-e127-436d-bcee-4915e3d83954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c910c5-d096-4dae-a300-2b503156b9b9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4890bdc9-3067-4945-ae51-e01fb5e6c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9a0165-cb04-456f-ac57-e8886c7463ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04958783-ef10-4149-bd34-990c05cafcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68128c2-33eb-4986-a32b-88bb4afc4487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a310a2-8974-4d93-9817-688eeb9ce48d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f1ac2-2206-46d3-836c-339ad201a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd0f576-42d3-41a7-9fb6-3e792e6cd312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb17e9-1169-4d44-adda-db3ca6ea77e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "455c1ea5-ccaf-43f1-b51b-7df0729bbc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb5d712-b57b-46f9-9833-514dee18f107",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092291a5-0052-4161-b6de-6768b607c8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c1652d-3f74-4fbc-bd78-00538c0f6220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8177eebe-407a-4b40-92bd-456f49a779e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf1a157-8dfe-4d53-91d4-1bafde7cc462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef974397-bfee-448b-887a-4b91b82cae23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d4b9d-0796-4ec7-a6bf-efe3d4133c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4975896-8b66-4150-9c57-7e4153189a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d6dec2-3ed2-417b-94a6-f376c139f0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d007549-db33-47dc-83ad-4956be4fef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16da46ef-e43a-4294-8190-207c953f48b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321bb3aa-d920-4476-ad1a-8241c1b78228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b960fb-41f7-4c84-8a1c-39afd3f90641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f09e84b-aa75-4413-9da8-e0109f245217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b19a67-e69a-4f8d-ba12-07f3e7de4781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0dd953-7216-497b-a714-cbd5609e53f6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886f2b67-2a05-41c9-b872-f22b134aa3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b242b9-d2e8-4cb2-9b34-93c29a5249bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4eb64b-ff51-4250-82be-c8588ccb6c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d48223-ef2a-43b2-b5fa-2a0969a74e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a24705-67b3-4d6e-a3ac-820e39494e9e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e83f1f-3d5b-4b02-9ffa-8352b699ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d467001-8926-43fd-92ef-db0ef83b8a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e4514e-1ae0-4dba-b808-a1f9928852aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "916274a5-167e-4cb7-b180-4ff08a7cd1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef7f3c6-69db-48a3-9c0c-9dddc519b6e7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730da0fe-c118-43ce-b431-87bdaae75ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12988483-4cd1-4247-8167-b37638da9ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c6dfb1-af94-4895-b428-6e126d6906f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "302ea9fa-c5e1-4910-adbc-cf45a36b2463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236976df-b2ad-4b59-b0e9-f5d145525eb4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc35fa-1705-4eff-aaeb-11f14d260792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441f15c4-8462-4c28-847b-655acbd6d534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa36a0a-cf6d-488f-b693-8bfd56dc189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69ed461a-1403-418b-8445-5e6134134a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bd9a15-e138-439b-86a9-044e7c32980c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacaf688-e3aa-48e2-9ef2-d9f2be704ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e7f306-6942-4414-9602-8eea3539e793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdebc44c-1686-4857-9672-64dd3a0e4335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e89b3e76-9928-4d7d-a3e2-493643425df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f3d18e-5264-4814-b8b9-d85207692dc9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b6c9d2-dc4d-49f8-89ad-8692cc666199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952230f3-f05c-4605-ab5d-097f280bb031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8400d2-470e-4d6a-bad1-844b8e0c5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6af4b96-0f27-49f1-9f68-8491625ca1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32304ebd-c5d0-4b74-b986-d093a07d0177",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab71252-4ae1-44b6-a0f5-b1af548ae56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5311d29d-d70d-4285-bf62-0b1771bfe1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160b4a52-4693-4016-9179-88c5a49651d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9396f4-6268-42d2-b9d7-81c684a3e299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9b9a40-e781-442e-85e0-7eae2dcd4f35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0a14a2-978e-4af3-a029-cc32ed7e62cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb110b1b-cd34-44a0-ad31-aa2c8903432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e4613-a7b2-4b82-823e-0e818dee5aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "124d7c81-7479-4b57-8f58-3e0531db0689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb4ad3d-3c0a-4154-a499-5fc50892eaaf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ee64c7-7805-4e5a-9b54-14702df3cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149b3396-c71b-4528-8a76-cf579d652e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f56fd2-907c-4370-a542-a9c0e7db9af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ae6f73-2aee-4640-baa1-a24fbf9435ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5aeec3-abc7-4378-b4b8-0d47edaf5bf9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf3a7cf-6547-4cdf-8664-28d42c90e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e1766a-8fcf-4cea-bd4f-cfadd9a443c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b165dfc9-67b3-4717-9970-a29df364d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef2539a-b39b-4d6c-81f0-eb68d86dc5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99bf4bc-0790-4fa1-b3f1-f3c3399ec594",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c98b4d3-2790-4b80-9b84-b798952fd900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d9a9d7-84bc-4d9d-a42b-f5b83a545d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c6d889-b377-4a40-8d5d-ae7629add701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "633fd8bc-c816-47e3-955d-8599d09fc76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fda757-a538-4326-b2bf-90932b9d5bfb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d7a9c-2e30-49a3-8724-19087a92e08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0383c6d-5f15-4a0a-9b95-041d8489a9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c23389-c14f-4ae4-a1ac-24cc8433b9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "505a5f93-0e72-4095-8646-50cc872e2185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92bef5f-3a79-426c-b2da-befbe57a9307",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c87eae6-8258-43ba-b602-0df10681e08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c50dc3a-0a79-4c3e-93df-11489e5caf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db109652-1723-4e36-a745-da8fc57d3e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f7043-d84c-4a0a-9618-4e08da7a0666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b46ac2f-dbd8-4e0b-a5f9-0175d30acfa7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21da693-a6a9-457a-8dad-a1b02b1b479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6448a7cc-d36c-42f9-afa2-4055cc47c88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2039957-f953-4f8a-9dc9-adac394e1239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee310e19-dee8-4608-b9a6-8e031507368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97785510-ca34-4ae2-a392-ebc0fd6db63d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a582d416-3b48-4b70-89ea-8717fa28dd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be84eff6-c8f3-49d6-9677-715027106d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7cc95b-274b-4c1e-a70e-10dad46d1ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72ac94a-7834-4fa7-a506-4824bc06c71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2f21ed-bc10-4dc3-9c05-c4b46c432f46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db9e3cb-6ee7-434a-90e1-f4b7c4f0048c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976e1070-27fa-4366-acbd-172ac12c1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40f8085-b80e-4a30-bc37-3c483d0761a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40cef41-93f2-4599-bc1c-d69e145101db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b66225-31b0-44fe-8ba1-5c08a845427e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca2d25-d323-4251-bcb3-e29ae8934b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6485b46-ff14-4f3c-b1c6-dd065f72c138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216f904b-92a8-44cc-a9aa-7950db279972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5210ae9f-3331-43de-90c4-00476727b005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9449b6-aab7-4f0d-919a-1f615c627e13",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f243cc7f-3c2a-44a1-83ed-cfdd3c6b467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad9c977-0cce-4a1d-b150-97ca91d3469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a345218-06eb-4b2b-ae25-0daa41d3b4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4340920-db94-4b42-a3d8-fba32d952724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9b6f30-19cd-41d0-ae2b-41e9893cbca9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e36109-d28a-40d7-b37c-928b66de45a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab65f43-c426-43db-b7dc-4dabe980f9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa43445-d922-4c9c-8e48-5f2273516805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ea4e99-006f-4ae6-ae34-6353bfb4aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd598a44-7368-4ccb-8015-e74cd5c22b8f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3771a71e-b500-4c19-bbcd-58b2b949d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d9a207-7d0b-4010-bb06-625e1e97a695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53048a82-7a55-493c-9226-1d80947bdf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0398ec-da7b-4089-be31-a6311a5ec70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96cc369-1f35-4934-b8f6-fa8e3816d3da",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dcecbb-f6ea-45c0-8c3c-b6a11d851ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0c5f7e-8c7c-4305-9a48-5735b8587e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf270d83-4cf3-4235-804d-ac910a8baad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "418f178c-fb77-45be-aa12-68318618eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd087af-4941-40a0-89ce-618ec930bd2e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68182e4d-7388-4f6a-bedd-5c2f19ae843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109b959c-201f-4ea3-b121-881b2e73a474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fc4e6f-142b-4275-8f00-5efb2a5b66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e176ca7-d265-45fc-9d78-4f3f157927b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc10221c-0ddc-4e96-a29b-0b30335925b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba37ed-6304-420b-8023-78ad0ce1a0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06d981f-9f6d-48a3-9184-db8b9f1aa6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca454ab9-78a6-482a-a846-731a6e52dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c181ba-e15b-4429-9e44-73cf6d0d8d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c655e47-6d64-479e-ad15-04c0c48c93da",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d502bb6a-9b48-4b6f-92b2-2df1d4532ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a87741-1604-4cc1-94ab-8a3ed61d16b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b71ad8-c6c9-460b-8cef-ad92b84e3204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da5ef1b-3b74-43ca-8296-653e57e2e174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00699a18-5061-4978-937f-d8ab9a97b99c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28589e36-14e6-4ed0-831a-279d58c36133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b97fce-c704-4c01-9745-df7bcfe8f27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074b64c6-fae6-4fc9-9f5c-722bb84d3e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f6c568-4d35-4b2b-97be-6dc593f5e7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a2885f-6c6c-4950-85ee-994ee295fa9d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c01df08-ab16-4734-988e-f230d88b4b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc15599-d1b0-4994-ba9a-1956145bfad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb8b977-f7aa-4519-ba1e-20f2597c460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b509e365-4a62-4436-ac45-ff3f790cdecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72202d59-a009-4f56-83d7-8ad5b5d332cc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d8999a-bf4f-4f01-b23d-41d7a8b95445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967df922-6774-453c-bea4-6284ac09611c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e669443-356b-4d11-9576-431ed4e46d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b448ef-cf4b-4ca9-a46c-bb52e07cd101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b2b5c2-5a36-4ab8-84b9-64845b78a3bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363dcbd9-71cd-4bba-9e25-c4bd984e2bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55879728-4d08-4830-adf8-499e72f7425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5585803d-4411-45be-af30-c7b2f897a05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7588037c-7a9c-4599-a2ad-54dee8b264de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169cefcf-77af-4d01-807b-00d18dda2d8f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babbe7a8-873e-4e90-98cd-7753ddeb36bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5227252d-eeff-4991-88aa-286db549553c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2c5f07-710c-4af3-9a50-0fa6cb0ef3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bce379f-bf9f-4ab0-ad0c-ba6b7034080b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a5390-f9b3-450f-81f9-b0de2abed849",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef6e3b6-4289-426e-83a9-42d74cc5743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3349cca1-84a5-4c94-9d18-b342178f7353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5ba5cf-1bf9-4107-9395-5d8b82db54f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c33a03-b98e-43ce-a5ae-d3ebf811b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d74fe45-f25a-4f12-a567-96da477a1467",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d085487-0d6b-437e-bff4-5d28935def85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6139f776-793c-42e6-97b2-748688156d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b5acba-9210-48ed-b301-e2d1d70eeba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "070adba7-e0e9-42a7-b917-a79ded3b6b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad65de0c-a6eb-410f-8fa1-0ffc6ba8117e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d08992c-3562-4129-8879-04b26350957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5798bf4-08d9-43da-a911-a915bcba0acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f8e9de-d04b-430c-a930-cf572039d535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c5b5d9-2f76-410d-b379-012f2a164f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b6de23-0f02-424b-847a-2a03d285225b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18ea546-e194-43ea-9010-95772c3806aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018efe5d-6847-4dd0-9d06-4c8eb5014ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab25a184-3739-4a27-83cf-fae6a7b964f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e690961b-b997-45f3-b897-756cea037546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b705af2-9dfd-40ce-a95f-b73c2a101d5b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2fc58c-b5c2-436f-a653-0dbf8aeefb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f1405c-8a29-4f4f-9166-2ede90f468ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92599d5-0d84-4fe5-a74f-f91935c76328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef6a103-8cb6-4936-a21b-4944f0944161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c02e8-d509-4a8f-a77a-bb86d21621f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695e794-9523-4837-9329-bdc3fe41a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9de54f-91a9-4141-be02-e01f05284b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f7814f-e6f2-451d-b019-a10f5dd8f568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6713de95-b67d-4bd5-914d-ffa039f9e6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dabae4-5cc8-408b-88dc-71d5623026f0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4891d07-f84a-485d-a258-61ce9288a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df2aa33-e5f1-4c5b-991a-1fa4ca65ec5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d7813-7a83-4e75-b82b-cbe7f0a7e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "216f2a04-a7ab-433a-8eb8-99ce52d9b720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd59f52-4261-4115-8c10-05f28db898c3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb992ba-7220-4793-95d5-2a993f48772e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf5e4e4-8175-41e6-8999-bfc096a36a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2023b04e-4741-4ffa-aec2-1e400e1fe95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19ae73ee-8bce-4a49-b779-cec69208eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa82edf0-363b-49e2-901c-47220f160b4c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d3bbb6-772b-4cc9-a351-81d133dd02cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d4d4ed-ef81-4933-9ded-d90a2bbc6c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7944ec2c-b841-4f12-b47b-2f2b686e0082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de307c3f-f17b-4a99-9c14-ea6606f039e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3886c356-2334-4cb8-9b5a-5f9d37c768a5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0c3ba7-4756-4d17-8037-92a32620a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9535bd00-e7bd-4748-a0a9-b87077da83fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da4ea02-80bf-4f64-82c8-a1d49f122fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5263fed7-2dd2-4c30-88af-48ae80576c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363f6f2d-c17b-4fac-b189-4592425a0b28",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6bccfe-8dab-4131-895b-b806814524c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab87946-7ccc-43cd-b8ea-3098e9d8d32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ac0db-ecaa-4de3-92a0-1e252afd94f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b453897-63d0-404f-9da5-21411ea62161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878e544-f2fd-4981-8cc9-98188f1fefea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28439b-167e-4b34-812d-f489698d89fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef195e2d-0f8f-4157-9c02-57036df9b603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f978904e-9220-43ab-9c60-3d8169511e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7524e12-12e6-42a9-90fc-eb2d52db44ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b906a72b-63db-4c6e-84c3-ffffdbdc4ad5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645b25a0-ed1d-4ffe-9f1f-57d40f729a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631348c6-6f40-41c6-9534-bc476547237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6d6381-63d4-4f3f-a944-5c21bba3d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26eb1ea9-8089-4ab4-9a76-a0669c179c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be75bc4-5430-4c41-ac6a-f1e82d207a1f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e19763-1a3f-4b74-bee1-4dce41e8ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487b7dad-21d0-4d43-a162-62aeb1ddd2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a6663-a707-439a-af16-196ef4e773da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e944649c-d625-4822-abee-f4ccd23178f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a077a1e1-bfe1-42d6-9f22-f4ac20c4fd1a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6d35a4-9fa1-47dd-9ccf-c9d20c89a75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59caf6f6-4497-479c-be9c-78663d3f87d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1ba9d-77d2-4d24-9a40-270e6b389539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4ee5b7-8cb9-4dde-b125-7b04480341dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02229d49-1cf2-4b2c-a054-28b7612d5fd8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c99346-7fd5-408c-8f9f-6566012919db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9957353-55a4-4978-b462-1856679d2694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a84f8f-29b7-4166-96e0-7ebf63c47402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b82f0e6-7b0a-4fef-a6f2-b76871db98fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e723b08-1243-42ea-827b-7a631bac95c5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e6c27-6474-4cfe-9e06-5608e1a2bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6979752a-0ccc-4342-820f-5f4e8ecd68cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a180676e-4aa9-4a56-997b-c651bfe92d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b23f60b-4a2a-4874-b670-99886b2fac8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4297ed8d-e135-44c9-bda1-936948dc4a07",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140df70-3ea8-47f6-80a5-5a7cd206e8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f1ee8f3-9431-44b1-87ea-75e0053da9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd6d0e7-4e1a-41f0-8222-a1101287d8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6bd5d1-2b60-4581-9245-94f29a42d272"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3821092-afa9-4bdd-a61f-6b3f0053b9d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f978ef3-fdc6-4e60-be34-46a1c78df4dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e329b2d-cd92-4f32-828b-37e7e07a8e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fe3380f-a01d-4a1b-b846-7b27d63b3e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e0607-d8d9-4551-bdb7-63424fa007c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f120e57-75fb-4c9d-9597-39f132ac9ee2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd5ac68-e96d-49de-b41b-8ea6f960dfca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "219ec043-f669-4851-a574-d9e7494e7b49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a09c6062-5941-4ade-8e9d-08c86d3f3250",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bce56e3a-557f-4abc-bf3f-f189cee0f0eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b26d7aae-0953-4c2e-877f-bb9d7edbd740",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a53de5c9-b5e8-4b3c-9df8-eb526ae04e2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50cee648-2b14-4045-b288-7d453fb767be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9777df3c-5f9e-42d7-922a-b23783e2ccd1"
                }
              }
            ]
          },
          {
            "id": "8ead936c-8790-4cef-a89d-4c678229654f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72cd9cad-b5f7-48d0-83fc-43941b0decf8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b1d2d55d-8479-4ca3-aa20-d6d8c832b4e5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf51b98-0285-4244-9b4f-99ada7c5bdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "076cba0f-38d8-4e83-af2a-8ae244601703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b4c871-9d28-4c72-9ea0-1cc35cc2e0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfae2513-60c9-4ae1-87fc-98e5b13a4f20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09b67a29-af06-49db-814d-a7cfa0658d58",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e955e955-361d-414b-863e-6a09f3d2d45d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84db57cf-c4e4-4f97-8d84-907301578951"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d28c4a46-a57e-4fb3-9b59-522b6a0619c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5801eb2b-63ac-4bbb-9c86-bfb2faa396ae"
                    }
                  }
                ]
              },
              {
                "id": "99a13c9e-2676-47c0-9350-0903c1e9f93c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7617ac35-b70c-454f-a4d9-c811b983227f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22842040-0661-4c6a-aa42-c4ff172d6c6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b9ad380-fc06-4ae3-b506-485106505e57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1427876-91d1-42dc-9ea1-939f4f1be576"
                    }
                  }
                ]
              },
              {
                "id": "bf9806d7-19a6-4704-b308-a53a225e7bcd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "621e6028-47a1-44d8-8343-606147924778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a18a52ed-60bf-4790-a199-00eae32cae7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27df06d1-fde2-471e-afb1-197f9df3da87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a5f91b6-ee7a-42fb-afef-0ee3d706aba9"
                    }
                  }
                ]
              },
              {
                "id": "08c490de-f22d-46ad-9bb4-50a8d7ff900d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c91d768-2796-4f6c-bd40-5e2c47697c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93cd486f-9c2a-498f-94b5-9cfec0b7143e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "441c78bd-cbb0-44c5-9836-b134c3bf6b24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b530744-304a-4c32-ba97-66e7d804c126"
                    }
                  }
                ]
              },
              {
                "id": "0342944f-8b54-4689-8add-065fcc4fe5d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e8a1212-76f4-437f-a40d-85e11be8d7fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70f0fa4d-ec2d-40c5-9913-21935a432923"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3be7678-3a71-414b-835a-4f50193d171e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5dcbcf2d-3836-4382-bf5b-285b8f4b72f8"
                    }
                  }
                ]
              },
              {
                "id": "947d9434-f3e4-4c79-bdc1-7ce35f446df0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9770f54f-e0de-430d-a4b4-035c22aad896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4aacf08-1964-48f1-9445-2816ebcecc4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaf33815-6aea-4bf5-849f-1ad0573b796a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7749c735-7c37-4ead-ba1a-edac3c7ce934"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4c0e429-3640-414f-95d0-4457578ed01a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03bd4407-e76f-497f-923f-acecc8693faf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "edd2d71e-0c71-49ae-89fb-31f543f81d56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab63111c-2bef-4a6f-a3bc-bb54cc2d8a04"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88a9eed1-5df9-483e-9cc6-35f1ff583653",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9c50bab2-2978-4bef-99b8-806db1f283e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40f4ffd1-373d-46f3-b10b-a9deecbc783a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50826091-74e1-4d48-af24-4017929b5ca2"
            }
          }
        ]
      },
      {
        "id": "a01619d2-57b9-4445-8241-fa40a130ebe5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e8dc2d27-61cf-4625-b872-a62226fbbc6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53e9da80-c8df-43b5-b778-dfe2649ba249",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9e3ee91-803d-4f42-9cda-126b415a6625",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c26ecaf-b097-4c73-bc00-17631ed8c462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad6f281-c673-400f-997e-50f0e4b3c5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdd9d6f-5fd9-4fb4-81c4-2441a06d7373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5b8643-f6f8-4189-88a1-fb4877e9b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c0f72b-f948-4b75-809d-ecda1b11cf88",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0c76fd-1b42-4a13-83bb-4f35dfe8fec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0de53e-fb05-4d38-8bb7-29bec0807c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c90a5e-9ad7-4e25-9c3a-b737fef3b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ae3d00-b8d2-4dff-9320-7a7ebc5feb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d1b7e1-3d99-4d1a-8b69-9cae5ead1003",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a9d676-f0c5-45dd-a5ab-03a7471565d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc23252-ec16-4eea-98fe-a6585d1c4a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd989349-022a-4dbc-beac-6e1f1bea9b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef28aa2-221a-4dc1-a78e-b1ce58cfabb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a950c83e-8793-4fb2-9d8d-0ca859c82a33",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1102df5-45f1-4f8a-bc26-eaba57132df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7233ad67-2c0e-4ab8-9d8d-60f0b7b43a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274dab0-113c-4466-8ace-227ce2579436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c698f3f7-a8d5-4485-bff2-0348561995f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d095c81-861d-46ac-a210-1ec4552d6dea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b46a528-0f61-4422-841e-a78665c34260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e82393-0892-4ef3-b640-a2a936f001ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d6a8a4-2add-4b42-8125-2e23cddfcd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5278dffe-d910-4a3a-b0ac-85c05baf27b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965f810c-76ef-4788-a335-726af527a97c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df83221-ab31-4026-92bf-1d43e6405136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b4c65a-b62d-437b-bf94-6eadb51afcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb975bd-1770-4c87-8d4d-6cab4d558af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f576fa-5206-4040-bcf8-4ac8d12b8a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9efb196-eb60-4d38-8c54-231dc4ad3166",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06686ad-03e2-47d6-965c-ba75302fd3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebbb186-b107-4bc6-a089-06df18c29c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6f20db-b3ed-4e21-afaf-f299ff7a030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02cb34c-0f8d-4694-8945-d9e3c49db498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af53811-c4df-48ac-88cb-1154d048f5ba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2aa540b-34d3-4fe1-adf0-ef7f084bad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbe3760-b4c4-4673-9d14-ec6cc9ce5efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ba904-c1eb-4f23-b5e6-556ad95ad5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "279bf173-f0db-4f9e-8a3a-87113ecd8907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9df114-c4c8-4d1f-80e2-942a70efb26c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a6a4d-4909-46b4-88c2-5ed12ff38573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f08a776-7d31-4a7c-b50b-b710b88a0341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9141f05b-4ce3-4c4f-abd6-8fab45a6648f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0152a4be-8123-429b-82c9-b4a64e63a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d802253f-aa2e-4abd-ae25-c2e806abe980",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c2d92d-cb02-49a1-833c-662faa5c2a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd21da53-7c3b-4bc0-b2a8-a96a5df28b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86256429-1151-4840-b16f-9e16f3186e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f521e01-cd16-4ee4-ab38-1313ee21fd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08eed95-de73-45cb-863a-3316585a7403",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed89fd3-1970-493a-a048-94c235148454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e376526a-4ad2-4e47-a0e3-e05873d570a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289dc25a-096a-4de7-b9c3-c28441655dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "049fff73-6311-49a2-a759-d3d163d1a4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdab25e-db14-46a2-85bc-788151866a07",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc11f2d-2a5e-43df-9436-52b229a9bc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2048c2-8759-4191-ad4f-7010431ca4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f647199f-26da-4b9a-afc3-3ebe9ed0b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13dc0861-1e86-4ddf-822a-a61d1be2bf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7274a310-e8eb-4340-bc2c-52a62adac80c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f5981f-7e66-416b-ac28-f1eaf3bbeb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d450eff-7031-4182-8950-199e903d0d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63abca45-d912-461b-b45c-bc53e38103cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "567774a0-4809-4a52-a45d-df4e84603863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0479b2e6-b6c3-4748-81e2-c54cefdf1184",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e4a39a-ffb6-4971-9036-67d1386fa42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57d20a-9676-4db2-a089-b6398cbd599a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d02134-d7ff-4f07-a877-11f06566735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6851f7f-0c62-47fc-84dd-e108ea18bd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcf31e8-9743-444e-9622-27b88440858a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687b3e6-575e-4c62-8dbc-8b2ea3f3b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51d32a2-7948-40b6-b5f8-a9ecbef3dbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c963ee-dc9c-4a38-ab6d-52a5685c050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca2eb51-dff5-4ab4-9aae-eef0e5938694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b185a04-b077-474b-a860-9c684455b305",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b6e6e3-615a-44db-99ca-2283659968e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c39251-9559-46e0-a450-cda938f4f79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5633f-f86d-4600-b8b4-079e9a985299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4476a250-ad3e-4620-98d0-7256fdbdb9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690d5c03-77e3-43e3-a23c-804b755d7295",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e43b98-12a9-42c7-95af-f3221ad8aa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37937e9-4e9e-4a21-a0e4-646736132a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08815eb-13a2-42e0-84a0-bd8d4d27b97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "031d3bc3-cd67-465b-948f-77cca99c09bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e17d92-157e-4d67-bffc-2e08554274f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae668831-f8c2-4b38-a92e-dc873d0b8cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65504bc-e264-4020-9b45-b4a0db468201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f8a319-b253-43cb-b7ff-c98d828eec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6e0144-227e-41a0-b1ae-575398db9d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082c9ed5-f65e-4e0a-839e-9ab33d91c2c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53ef084-87a5-4064-afb9-e0701d489d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c20ecea-d7df-459b-859f-40115a973461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ff569-889a-4991-bdb9-a0f1a4f986f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76034078-ab30-472b-a6c6-bfeb7da0fd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87654e21-8bc3-44fe-af05-e0a025384e03",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf44844-d41f-4eae-b6f1-9f0a03f5b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d351afd3-af26-4dee-862b-e4870312f89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cc6ad4-173b-40ff-b96a-adeb25126e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1871030c-3453-4730-b04f-e4710448f94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb5c9e-1ca8-49b5-9de4-e7cbe917fcd7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5065b673-9ed6-497d-bb8d-8b197e794d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7207918b-3f86-47a5-9500-762452f5a9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0033e2-763b-4fef-88bd-1cc0b3d6ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdaf1ad-0a00-4147-ad08-e0ddf0494c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaf027a-375d-45f4-ac6f-a80c72555462",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e52c2ac-95ae-4346-8003-2497591fd315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498aadfc-5171-449f-aa37-0342ba3d6a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a563432f-56fc-4c74-962c-52b0d07c4ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "692435bb-ffe9-4842-907e-742edd81bfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c63adb-e8c2-4e1d-97ee-99428a073a1b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb20a7-0150-4253-b52a-17a4638d0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae823d1-7b1e-4bdc-be1a-af981ca73dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1dac9f-88c5-42d7-8dd0-2dde2588b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec8f9bc-6ffc-40b1-a33e-0aed03dd23a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e9a4f-122a-41eb-a008-3e2564d74f4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960bfaeb-8d1a-4dcf-8a30-67c790f507da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c7832a-4a85-40b7-847c-45f49239123f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b14ca1d-ad83-45f9-a838-91dfe245ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2c3a22-adde-483a-8586-8fbc4433e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ecfacc-3a82-48cb-8531-ac46541c2ec0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0015fd9-9b4e-4dba-a503-3b36d061395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee42016-60f8-40b6-b2c3-b97106c22fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2883061-61a3-4222-bf7a-12315c321311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62034d3-7615-4e85-913a-e8c4a781a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec9d7c3-efc0-44bf-8405-703b3f55a4e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a920bad-4cc8-45aa-953f-67058a31146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e472ca-9659-4ca4-ad07-60c0b5b64a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74401d68-5edf-4961-8e30-455d7b211dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab1c91-671e-4ec6-a651-cafcac55bba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8aeb36-509e-4469-8a04-e68610029713",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5a2571-d9dc-4ab5-9b92-b5eeeb93f674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae701c36-0337-4947-803a-855a25007f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e53a4-1ab1-42e1-b9be-0b1b29d115e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b56f8d-9314-4b04-ab63-2e430909f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47c422-b2c5-4d0c-8856-ba88de6ed21e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46b1dd2-b4da-4379-b802-1e650a02110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e775ccd6-51bc-4ea5-8cf1-4d1a35914cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5b16ba-2771-421b-8c15-9d5c1f74201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a7de48-6965-4a01-af23-5c6093bc102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c317d-935c-4bff-8328-d2f517781400",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34e86c8-1db2-4eb3-be64-73c2b4c87668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef95631e-c946-411f-b3f4-e604943c4e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5558616-a811-4815-beae-52f5b74dd0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c34378-866a-4c76-b40b-66cfa87726d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f34317-313a-472b-acea-3bbb3fdd5894",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae7ade8-76c6-4ea2-b407-19074b9135a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcce75af-0ed0-4d6e-aafa-a47a897068f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef68f03-a906-48f7-b28c-743f92b226a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f17cd0f-b6a7-4dee-bc9d-0514c0cbbd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9077da53-c1e4-4fd4-8a51-aed8c5e11ccd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aef9dab-c298-4a06-bc0c-6097497733e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4238e2f6-f117-423e-b18f-7558e934125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998046be-2d07-4533-bdb5-bef722a026ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98fcddb5-f62e-422a-ac91-51c09423c3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9c90ca-c1dd-4623-b8df-ce832c9d0075",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47246bb1-8a88-42c4-a897-e0306f313b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30338e40-d3a5-444c-ae7c-c4395b583236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e953e5-7672-4892-b055-5823f8fcccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0703de8f-6553-4fef-b8f0-af5a551310ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c75fd01-cd64-41ba-b051-0b81b3a7e2d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aec6aca2-8028-4757-b2da-0844b48e9efc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffdbd1f-8a2e-4b17-8c29-ea4c502ca96c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "75654f99-b72e-4da2-8973-3a54dadff032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31828f88-50c8-44ce-b0e5-17647ce705dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39f388af-65a3-4b08-bf57-e52f7147d135"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf4dad24-deaf-4773-ae40-eddbb18acd6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a593b9f-35be-44d5-b1e9-252bdfa6c89b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "744c391d-3b66-4643-ab31-21cf34c196cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81a97355-e759-49ac-a441-c88ac870fd88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aa319db-5b3c-40bc-8cc1-7100967d5b63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29e3ccae-ab27-41cc-8921-6181afde63bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31fbe761-d6d0-4fc9-9ea5-d9f30d044277",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbe2f9ec-171d-4467-b14e-21c0a90aa93d"
            }
          }
        ]
      },
      {
        "id": "9cb127b0-165e-4a96-9f26-10822c3579ca",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c8d620f1-7bf4-4b47-b114-b8352908eb08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fef781ca-e32a-4760-8f2c-29ab89e1bdba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "620fba26-8aa8-49a0-a351-468c4f9ab7a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04bb5cf-e0f2-446b-8e67-89d8aef34a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f96c03-48c4-4236-94a3-dead3331bfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046fb478-1c67-4c54-88c5-473507897dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7bf91b-4a94-48c9-bd99-8e5ef61fc946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566fa0ab-0ad8-4db0-bd44-81c7434a51f3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12602ea-9302-44f8-8af9-e00c33781597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad109054-aa45-41a3-8864-682394243a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc81711e-5377-4c9a-ab8a-0aecf04ff8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57419320-114b-4cb8-a2cc-9bb7681a19c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf896a1-44aa-4c77-8384-824f1d91af24",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb82e599-420b-4806-8d37-ebec496a899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6058d100-5697-4ae0-838c-f8d5b72f6e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a332305-5570-4dc9-a371-f92a484c56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cd3c1d-66d8-4db6-aa63-83c14b28babe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fc3221-db59-4187-8828-48409c78648e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e14cee2-08e4-42a6-bede-72b3ea80a648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70996156-51dc-41e7-ab7f-e4218fed7d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ee1d75-402a-4ed2-bc4b-5ae29ecf01fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fe5783-7c7f-4f5f-8916-18347c462136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afacc714-67c2-4806-ad83-d51c84cbaa33",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf44529-417f-4821-844b-0b5a84f7aa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cdc2ab-d98b-476e-98cb-fa1d6fb09702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff60dd-4254-48c5-90bd-a80cdada657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c2d622-ec00-403a-91f5-34003838cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0783a6d-001b-40bc-96a3-16d4afd64fe3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ea4895-fb00-4338-b633-e2c4f90ae1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f2135e-7faa-42ea-ac34-887e103916e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500762d0-ec68-4b77-836c-3a92267e4288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2d2116-ee9e-481d-ad63-52aa56c849d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b209359-7135-4f56-9d4c-aa540e042c6d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feccc06-1266-4eda-9f3e-e2dd63e46a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d26438-4e42-41f2-b524-7fffbfee2833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94b2895-cb61-4bd6-827e-f6fb1be59f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "308e7f2d-bcb0-48f2-9756-691065a2c888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040dd983-1a20-4fab-81ca-921a48e160b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ec92bd-f52c-40bf-bb9c-78707858d384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372ac654-e6b1-4521-ac4a-a725fb3ed70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634b2ee7-31b5-43a4-b5e3-46ea1219dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed65a593-271b-45cc-af74-1c5648cc8e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1821f1ca-ff35-4893-857d-065abf07bc9b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c1e9ac-2c26-421b-99ef-edf4b3ec57ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa5c79a-540d-494f-abe7-5f782e66c0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0955c2f7-8088-4b84-a712-4da463d8ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ad9211-550a-41ac-b87d-0fa35996bafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c26563-3362-4ded-ad1e-fe0f38f06ce6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a53ed4d-d4c3-42fe-a9a2-f8f55110e8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb164d7-f1ac-4932-a31d-a847e2737b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20356741-76af-4ba4-b819-84293d1e44f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92690e2-81bd-4409-80e4-e79ccae6b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70d10e1-f404-4565-8610-d768c4f90b78",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728b9665-3817-4a73-a492-8775735e0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9533273c-6fb7-4140-89b3-a1040f3b169a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf61313-9158-4c19-bbe5-1c15d555c65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "546044da-3a07-49f9-b48f-eb595e91cab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbfa03f-9e63-4064-9099-e0d4f541003b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be95ddb2-8e34-4b93-9e67-9e117f3d6b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d4b74f-b399-4800-b09d-0adbf861ecf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30b7dd9-d9c7-4e63-b88b-93c61472d6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca65340-2fe4-4c0b-81a8-ef355c5dfca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c9e9a9-7f81-40d7-8da7-7f7664f89d71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568ed0f3-20b4-4615-a38e-ba9cd992adb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16f8e96-37b3-49c1-a624-aa43da0c9d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03f43a-d49a-4e55-af50-b5c18379ac75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "781adafe-64a4-419f-8a74-557106f5cb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cd177b-7c9c-4750-860d-f4d45724b65f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93edad-bc5c-4093-b23d-e5fd4b71e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25c8581-3ab9-4ed8-9126-6ebc885ac1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f14e417-8c58-4e76-a3d8-35d3726b712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c8a3fc-58fc-477e-97f0-45e2531ab3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac1887e-24c4-4a2c-957a-c5cbe5c1d4bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ee3803-3899-40cc-bbcc-639e22edfd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808dbf15-ff0a-41d8-b2c8-8c18e0e3a55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d439d568-a119-483c-adca-bbd547a3add8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "392b1f86-3800-4304-a91c-9041e35ed71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed8e3c3-6387-467f-bcca-779d1701a407",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc01e407-3140-40f8-8847-49ada58e2be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839a665-a5f2-49d3-959d-8fd64838d20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ac510-2967-427c-938a-6c3c127869d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85db3d50-dae0-4a08-8079-80904441cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ec52d7-1009-47de-ae6b-fe5fd44d2a6e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08161f58-6756-4ed8-99b3-467befd0ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dd61aa-58d2-497f-ae3b-9bb1d5ef81ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff7dab6-4eba-4087-bda3-e6ecee9c8b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cf74fe-972f-439a-a6ab-392396340155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd2092-7157-498f-917e-6e1aa7b27d9b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c059318-ae9f-4499-a4dd-9acea0967a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b06b45-1f41-4a97-ad4c-17db48f21be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28563c-868a-4d35-990e-1523b0d0cc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b11856-4909-4036-a047-9e7436545822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8931fb5-028d-4503-9f6d-a8af82a6cdb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a3e436-866c-47d2-aef7-eb15283a1990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1209f1-f64d-4ae4-a55e-6c06c4fb69d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dab084-2fec-4833-894e-d3cf621db7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efeb9b19-fb45-4cb0-b15f-716d5e1960a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77625a0-116b-4902-9d4e-ff8be6b3c3f2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52188d0-814b-4d20-bea3-1db41f195948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e9afac-f79e-4510-aa42-d4adce7f45e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae545d18-9d5c-41cf-93b7-70b6bd2cfd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2b2800-9ad8-4050-a6a7-b8c155e87052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadae42a-2d5a-49c5-bddf-106f4470b2a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44464958-4646-492c-a40f-af0a1250318a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9177fae6-7347-4f8a-acbe-4e97933169db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48670fe4-0a13-490c-91eb-3517809eab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397c3fa0-f6ad-43d9-a894-76011e618e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23192c11-359d-44a8-800b-022362a3e5fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54ac694-19e0-4340-9b84-c85a548d95c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59af2cb2-41bb-4a49-8c3f-beb216430d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a045b87a-657f-4dff-8fb2-a801879ee573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88e3eb5-8de4-4ced-b7df-04ab2f40547a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ee332-ca88-4696-b8a5-d785b6094261",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feea245c-7e05-4be4-87db-b1c315b11ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85138f38-aeec-4d28-8db7-5e1d3ceb4d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7dd6f3-baf5-447b-91cc-8f74bff09989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49110d8-afcc-4ac6-8af9-7cf671e62dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefc6a0a-7762-4a4f-9586-fa2e45f2569e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1072cc1-80eb-45b4-92f4-fa4fe4655d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2730b6-ecae-427f-8b31-85d8c8ad85e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ca81c4-c0f4-4488-b1b1-5d62ba752d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24adca6-3fe1-4fb6-af40-e5bc90549eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2965add-6273-4ea8-a69c-9d193f40d14e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feb7cbf-5cb2-4ba5-971e-26b3a3bfdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c9a5db-8eca-4a6b-b556-2114b5b5c457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d680a4e9-ebb2-4eaa-b7e8-ffeb552e1c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "020b1d07-a9dd-4698-8224-b7a1b2808d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6316490-aa9a-44d8-926c-903d905badfe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be16aad-c18b-418f-9b50-00ffc7d9ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5bec80-4543-4b4a-a448-1458f6adc489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d3563-f9c2-4b22-9ced-6c6ea1fad736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78e800b-cb6f-4a3c-8e2c-c7d32a2357d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6390a022-1bc1-4295-9a6f-70519936c7d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab989e9-d93a-4abb-8122-bee07dcb6928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b75d62b-596b-4f48-93a8-3598d868ad38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60470ff7-af00-4a65-bb74-f58996d72426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb58a3dc-aec1-471b-a70f-1a75515e6d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2b32d2-e176-4495-bda4-d9a1644c83e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2c7bbb-1419-4a36-8abd-c7528481d4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56323c0d-fa3c-4857-86a1-2a2b7080bc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bd4a68-3a68-4485-8b6a-77e724cbda8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09204901-78cd-4e15-af09-475af78dca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b5e81-e8c8-4900-ae42-85cd62872d59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc6daa1-ff4f-4d2e-bde4-283790e30767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f64937-ba3d-47f2-bc99-dc5ece2af524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41319698-1bd5-4afd-8277-71d543fad41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2ff88a-eee0-4425-aa53-57ff48100df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abee1089-047b-49c5-9a3e-6330098d7f40",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a276e721-10f7-4b3d-a83f-d7aef894cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681c5f8d-6dc2-407b-aac2-cfb8be9c889c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27029b3-3780-48c9-bd3e-ea0c11d6126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c81f19-d49b-4ff4-beec-0bee45d23c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f838c555-e262-4a31-8a43-2d5573a3f0a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eecb32-b558-4165-af0f-dae3eba73a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0fa54c-a52f-4f1c-9622-152bad48645f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b86e8-2710-4930-8c92-89fba217dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b3224e-2e41-494d-a5a0-131952376589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ad2edd-baab-48c3-92ee-7e65d0586bf7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b26e65-2024-45b7-9cfa-d1e601d98f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d725fb12-49f2-4327-befd-7df8108f71c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d857869-b184-47d4-a37a-c337e9402e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe66ab6-a3cd-452b-80c6-7111d97c845f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb25533-d79e-4cec-8d01-6ec0c80d9ff3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d7bb08-c3d8-47b3-a399-c95528fa60b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3983a3fe-5bce-4ebd-9435-fe428fd9920a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ec52e4-dba6-4f54-b156-f326a830b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e28af2d9-b636-488c-8620-a6e7536a9a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205779dd-d93e-45d8-b21d-550914b65094",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e8dd37-1b36-4cf5-a7cb-62a98351d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e5914b-90ce-4177-8dd0-dc96fd719f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58103f96-afbe-4710-8081-c8af248d8c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "243ae44e-e44a-46ef-9d02-40bc2058ac01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7007abea-b858-4be4-82f4-140ce05302a2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c3e86f-f7d0-441d-b268-ca54a2e51603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc96bbdb-e6d5-4cbf-adfa-054f378f1846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e4a737-9517-4075-bc9a-e3463596fc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e36839-fc8b-40bf-a9c8-022f7a139ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6f558e-fca8-40d7-88f7-7b82bcf2acf1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113100d0-8ad8-4fe8-a355-4c7185d6c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d19b519-b67b-47fe-9e37-c56d9749ab0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99ca593-485e-4be6-84c0-18a6ddbb68c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2e71a6-5fa5-4d7a-b3de-39e1ec2912fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8257518-2dec-497b-83dd-8562761507c1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c47af-5168-4c97-aadb-1c7785254af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b029d903-d6d0-4513-b35d-47bb15cc65ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d4e09-b3a4-4687-ade2-c1eab84391c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e370f136-7fff-4654-bc00-0aeb98ad05eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c5e86b1-29f8-46ba-bc81-e9ed04117e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee67ec47-428b-41ab-a0c1-c66ba56f1d90",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb42df0e-c110-4316-823e-5d0d9f9eb03e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9ac9f9-0203-4871-a774-3bb82bcf2752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ba006b-b4e2-4089-9a2f-8a08807d70ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6f58d04-c90f-4819-b418-9f1d1ef3a57b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b1f6e52-e1dc-4a24-b0a5-7808ef1256de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d3ffca-d9e4-493a-a86b-0e9cc803c8ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12a942f0-6dbd-4cc1-93dc-a5616fec203c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ff42977-c05d-4e02-9878-d1ce6ea1bc81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13b1bd18-4478-4acb-9a66-e01c34a9ee84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "082fe957-9554-4761-9b8f-bf0581638b46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d61b9a8-47c2-4de0-8f41-0be7ebcb3b03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6841722d-ba54-40ff-a87e-5b8437f2699b"
            }
          }
        ]
      },
      {
        "id": "6978ae0b-c1d4-4631-85a4-81a4adeec108",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "056056d6-6b49-4b81-afeb-6126b897dd36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0c10376-0197-437a-b4b0-51f5bd9135bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d7947e7-b92b-4ca6-a1cc-173bedfa704c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d116dcb-2d9d-496f-9368-6177fef6d4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e02132-f7f1-4543-a3d0-5be30cac23d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dbf5db-ca6f-484e-8409-1ebeb7eadaff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b58bc8-c0c5-41dd-8a96-50dcaa007d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af18aae-0151-4361-827f-4f0a9074d5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7d05f-1b73-4708-b4b8-eaa10ebd8f91",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6476b791-d562-4a46-97dd-f7a0a7cc6dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c16417b-dac2-4e76-b533-8fe3493eba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3dbd4-2a28-4b51-bc88-1f26b460fb3d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18ecd1f-4e73-4095-accc-e2763e87a052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327e4610-2336-4793-b587-0461ffdcf7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ac2ad7-55a3-427a-9e31-a51d30d62047",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48002bf-8efe-49e8-be02-428a70f6d4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2484e3b-76f9-4e68-9fe1-2c3202240f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54431c7c-a668-4954-8ee4-0241a98c7bb5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab559be2-bedc-4b9a-ac8d-1badf93790a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df89174-650a-452f-a0d7-0aaee47807d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3dcc58-a902-4f05-ac88-5c18123418c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d36890-7a3e-4343-855d-d9c91a7b0f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42171d2e-c279-4afc-9a0b-4917160257f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59e81c4-55e6-417a-8d31-9ccc02f29199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b3abbe-5cbc-42e3-a069-6f53b9ea1629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8340dda8-f8fd-4be2-b5bf-a117460361ad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f547da3-2e5d-49c5-b067-12263eb4a957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a31ca7c-ca6a-4f6b-ae36-d175234b0b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf25bfc8-3c36-4275-8e36-d14113174a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4ab4f0-570b-4e66-ac30-5e130c1bdbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1465cfe5-3b74-4149-84db-5b0fa68b1e52",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d9a95d-6eb1-4a6d-adda-03f2faaef469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70a6dee-c527-4dbb-a1f2-d7eacb69713e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33728b1-1791-4b9b-8253-a5415dd50aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5eda92-8214-434e-9dd1-54e97c17db53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e493f0-d198-4907-85b8-a5727bf5cdf4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b3d823-e783-4506-b08f-c9bd74c11a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad79dbf-e845-4043-a2b5-c6568a05e8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0600c6e9-1c59-423d-a4f4-358fcd9435a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a1257f-029b-454d-af01-34f321a87900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cd0d6a-3697-43a0-88a4-69be8ded0041",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8ce3a6-6535-42b0-9e99-651d8a5cd7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1bf738-93a0-43d5-9fa6-3f8a3578f6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5564f92-362b-4ba0-8b2d-465f8b4ebbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26531fec-2f5b-4a6a-a294-be3f307f6751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132e4ff7-be6a-4249-9cdc-a2092d113f3a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eb7913-5177-4d3a-83c6-7898bd9de930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65768be0-21f9-4545-b8c6-4d8b7416ec89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d19c1c-e65e-4761-8f23-ed6d8728dc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456886f4-c556-428e-9f18-6e3eb93494b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a435e0-8a20-4f42-aa68-38014d94fa25",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4580b-fd67-4cea-b398-2d56220e2969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5040c21d-30a5-4477-8f38-0ab0225dbad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26104d79-e9fc-4436-8d5e-4f28e13b7a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cc829f-72de-4a2e-b6a6-8f9eb18a6986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d9170c-9cf1-4ed0-a6d3-ad79228e2f7b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d29d92-18a8-4770-a229-79416ba3efe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f10af8-1169-4920-978e-aa3dc48b17cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11e730-7b2d-4292-bc71-6414dd1baf98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880428ab-8cde-43ad-bacc-b19863d0b61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18365ed-ef32-46be-b2b1-ad1000d021de",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51396c02-a012-4df2-b08d-4cb09febc321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e110b2fe-1147-48f4-9699-53df58d8b884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0347a015-1386-4f21-a49c-3e95334995c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0468a6a9-f031-4246-98cd-ac36e7342258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67aa923-b9ad-4f37-926c-af5a62ff422c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad554be-7fe0-4dc2-b231-a599dfcc72e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804912dd-ee8d-4832-8b77-1a753702fc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aade54b-c8fd-4184-ab5d-eabb506c4066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c88b3f5-2235-484d-a38b-f985eac64740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf7f6e-ef60-4f44-bd3a-bb509ab1933f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ab9cec-7540-499a-8b9f-bc0678476d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b28ecf3-a909-47ca-9644-bc049622afc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1913e51b-b2af-4518-aa4d-64837fb67abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de21bba-880b-4e59-a5e1-42e8a64a22ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edca5b9-4cff-4d83-a2f2-4cfea060ff85",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8c24db-02f5-4614-8e67-089566672d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b594012f-6497-409e-b107-371ab4def960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3381743b-7953-4348-bbf1-7f9dc9b99808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2b59e1-c22c-4c49-96fe-d271fdfd7740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a6efbf-89d0-4054-bed9-4b2b6a2cbeaf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c1ae29-bdbb-4a44-ae04-2ba082d85f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbef9be-5622-4be2-9302-15f5dea063a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed35a96-102e-4985-81ad-56070552ea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d33354-088a-4bd7-a733-45cc9e92d851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa458663-c91c-4c6c-a9ae-277d0cc8a32a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e26cf8b-3968-434a-8a25-099734fcce54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9215ea-952a-4981-a2b3-5e3bacf223fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10743128-a206-417b-b483-f918ce5b6a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d76414-e500-4a99-a187-4a80a7abe07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37183ae3-6000-4e57-b38c-fcf32d79848a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a72aee-dc8b-4b95-94ff-371c2abac6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3381e4ee-e21c-4d16-af78-680310039836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9b9d55-d9fc-4b3f-97a4-8f49b697fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c321da7a-675d-4990-a2a6-c3cf81875ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdf526f-8d94-44bc-a68d-ea82ef3382c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6949267-cf5d-4ea4-8cd0-f34cf6b81f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6432a1-732d-43cd-af37-018d31e351b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130528ed-0453-41f6-ade5-8d71fbad4938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1083f32-6623-485d-997f-077a00a6cfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caaa4de-e5ff-41ec-a0a8-1c27e2ba0894",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbdc658-804b-45d3-b281-27fda6e21d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b888658-2eea-4d53-9650-c1363659b2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4051bf4-4d7b-4558-b9e6-30a3a49fdfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d981b46-f26f-491a-89f5-156bede1e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2842e2d0-8a78-49b5-be3e-3624a1528bb3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca2bf7-e193-4fa7-9cbb-fffdd28df090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c462ac-7ab2-40bd-ba08-c15b545ebb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979c2f95-829a-4b89-b817-add0cca6c3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14571e1f-5b1e-4315-be82-5e5927bd4ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d86eeeb-7e8e-4e5b-9873-69ef5ff217ae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6050d35-243f-460d-87b9-ce92ef575af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561e1687-43b0-4d5d-9a4c-e0466f4ec5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27266ef-b658-4fc6-a0b0-2a1348b9754b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5899a8-dd80-4aae-96f6-915679b5d1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5996765b-cf4b-4ea9-ba00-7b60509b902f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15912f4e-6fe2-42ef-9b77-6ffe9d873ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb45abf-ba79-48b3-946e-a1aaaf8112fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0c02b-d895-493f-ba2a-a1c827c24fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ffcf7c-43fd-405e-8bc4-be30eeddd101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68942c84-bee9-41b8-bce9-f7ef5cea4c3d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e9908-f789-4831-8151-c5c0ebf52bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0a722c-4e9c-4929-b040-bf72066eb27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5d3c1-a49e-4400-866f-a292bb98aa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e25982-aa65-49b9-953a-0299e8c115d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e9d2e4-83c8-4cc2-b0d2-aad095258b34",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616e0a8b-fe49-4c4d-8a65-4004f24fe3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc96fe96-9a9b-4074-b120-004cfd6c126b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e6f76-bf28-4f0e-8e0c-8d4acccbdaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eda2ecf-7424-42f2-8335-b5c4748c8461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221fd48b-3b89-403d-a887-11e1602bd697",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b5721-c5fc-47cd-8d0e-04e23f60c521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7079b9f-6546-419f-8be7-f19836de5ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecbd00e-e326-4dc6-ae3c-c5f88ce9ba4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9a93fc-907c-4a44-9ff2-2ee1e961dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06efa17a-06f7-4192-9e46-e75b6c870e47",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9442449-cb4b-461f-8114-c450b7989b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9379c7-8aae-4502-81c3-bf8580057ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd18241b-5c4f-4e06-bfea-0eb58e3012f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b79e44-e0e0-47d9-8dce-459db6399aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064354a9-58cf-4baf-b2d9-5402fff2b0a6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b2b1aa-fcef-44ce-9636-b5ad848c6948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9779da-a839-46f7-8507-23140f426e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53279f7-7140-427d-b404-7eb3c2280d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b53ab55-942b-4385-a251-06649cbd739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9200ef-5b8c-4cc6-b096-d43966d70493",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f70ad2-b3d0-4e41-be09-90ef34d479d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb21fd14-77b1-4900-a107-c47e06d9e76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cb1ab0-0427-425b-81cc-c506bad5a068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ee4160-2865-4323-b26e-697a6081d0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b5aa58-e277-4f29-b53a-ae9ca4398b2f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92a66e-7999-4360-aa94-db4925e3a5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b77e92-2f4c-41a5-b8c8-a9b370c860b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc69e7-ad56-4f6c-8916-6f6108899b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc567c82-17a2-442f-a589-12c4a938c65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a526cca3-86f1-4bcf-a423-aa9b2a980d4e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dee7aa-f75d-48ea-bf01-5451ca19f119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463b8686-2162-435a-ac58-5cc5d499eaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80a670b-353a-4fe6-a59a-c95aa3ff1824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29342b0-20d1-40a8-95c2-9150b43f55fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd85ec4-d8ba-4eb2-8fe0-79e53763009a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588acdc-d2d6-40cd-837c-7b5350a36991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d2a1c2-0bbb-4285-aa29-3f2aa3f4425f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49391779-4fe7-4b79-bb9b-935556bc221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da6963c-668d-48fb-8c94-87edc1e2fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba846ce5-0eca-4abe-8144-d577419465a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26892bfe-c535-48db-8c6a-22eaade2ae23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9376bf-1f8a-4ea3-92e0-5ba92f425a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a46f2ec-b4df-45f3-a849-9021a57b9a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb479308-3b53-44d0-985c-d9aaeae7a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52ab758-fd55-451a-b6d3-dbbec5c5dfd5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fa18ad-8f06-45cb-9c70-d843fdd54d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8872fe-db94-4c8a-93b7-653c4913e5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a0b3c4-ed23-4a00-badb-9875851c1fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8222cd3-24a9-498f-97cd-b5b28b09b311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729596ed-8be0-4c73-b363-13da583f021e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2134b3d-ee30-4e82-bcc4-40a3700238fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0698ffd-81e9-4a61-aef2-0d7db3118f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a1242f-b580-4c19-9d6e-e99422f11c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1811e0-8ee3-479c-91e3-e78b60b401a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25357d2-7071-45f6-97d4-0d6a10cd3c8a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f263a1-72cc-4797-99fd-d70290e5b650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba28e74-9b74-4cf0-9e1a-16e2011fd0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca233f-78a7-412d-b8f6-a638bdcf24f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa6c3e7-0d60-4f75-ae8a-836d4199ea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9159669-f661-41c9-967c-cc1cce326e47",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ce23d-1daa-4416-9786-ac99d227019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a560a0d0-e0d0-4dc1-9fff-489f5842b0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9a1de9-142e-4e0b-910a-d2486452d937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feddd0a3-3afc-4ce5-9e6d-65f7a79c3137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ddf832-3621-4415-97df-6ba89fb864cb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d234895-3e54-4afb-ac5f-419c59d8d6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164aab3f-2cf2-438a-9c62-493514a8d8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee89b2b-43d1-4aa0-b4d3-fdfc52de1cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5a3e5c-203a-4cf9-95de-057dea7ae54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b110d0-a5a0-464a-a113-cdfe2ebe5c5c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25adcca1-c6bb-4252-8d7e-12d727f389dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27c67e5-9e66-4f98-aa58-e9b7d76e72f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4894b4ea-5c4c-4118-afdb-11d7c1a33e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4524a05b-1a3b-44dc-ac17-0fef6aa5f08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc28f30f-050f-4150-a499-efd71c2fce0a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc80e76-24f3-4970-acab-39813ba9623f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131c4f5e-3e2b-4975-9cd6-452dc418c567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f134d0a-ca51-44c9-8e5b-5dd8a271e2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5ffd7e-4de9-4969-80dc-ca8055cad7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c498b6d8-1809-4568-9542-71395fa11475",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659c9a15-c037-4521-9f03-9db31fab908a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c9645d-788f-4e45-b030-a52781b433e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a4f738-deed-429f-a90a-f8f67747840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac9d199-183a-493b-b776-b86ddf3afe71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24045951-a2bd-4d6f-9c0b-05c1ed55a7f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e2655a-a76f-498f-9cf6-59dd9bf0a087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f37c2e9-38fc-4ab4-93c4-a77f6972cc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db478a8-8ec4-42cb-bb49-5c77fe19c24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c494b079-23da-49ad-a040-63e976a54a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69187a3a-aaa7-4c47-99b7-a80a4bb8739e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b2712-1098-491a-84c0-a43afbc868c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891906bb-c4de-4df8-b394-07ff6cb0219b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80a361d-48d5-4073-a7b5-0a476fc86299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec19774-2b43-43f3-8504-e0230fc7e878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fafc4c-398d-4b75-9085-d1959dd34a71",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d310e006-c24a-4ea8-96e8-f547cd948676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e813d014-2d1e-406f-b581-45886d2709d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77dcf7c-1dbd-42d4-9f1a-5e1e1563ed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf211cbc-8db7-4c43-bbfd-5dbcb3a08587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4c9e73-7dde-4323-bfff-8749cc581ea6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13aa1fa-e278-444e-b464-953e7213fc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173c62f7-7f69-486e-acb0-7fc78f813eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c97babb-cacb-4de8-aed6-c09078c25d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9e3870-f2b9-4898-8785-b7adc95c80fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303c52c1-1f35-43bc-8fed-4c783b0ffe75",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1297933b-6f50-43ed-8fc9-988db2c44e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b2c51f-bf76-4bbc-89d0-10172f1d05da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e7459b-c679-4f44-96d2-a5bb28d07d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d6d2dd-6fdb-4e5e-8563-2f30cb8eb2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031fbd8-76cc-43b6-9412-98a8f6da3311",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d310fa34-8c0c-4e60-a2e0-30b1886d1989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f04def-d22c-4dda-82b4-6c0e4d92a4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de552da0-fbc5-4cb4-9a9f-3407e8f3b69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89de9aef-cb51-4dc4-97d5-eca664c37ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d276da1-6fa1-4ff1-af47-42caa82acab4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19feccf6-fbef-48f0-b53e-3c9bc0e152e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f525176-5f30-4024-84a5-08e496339a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660530ce-d2d1-431e-8645-b3fc55afe79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cca408e-590d-4ebc-ad88-ec54b62e1475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5cd77b-6578-4a19-8be7-236caaac2bfe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfea80cd-a7ac-41b2-9470-6ad4e99aca21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9222ec30-20ab-4d43-8435-48eddfc1381b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34159bba-1b74-4d6d-b057-be76444eff66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6bd2e4-1ff5-4deb-ad5f-a9e971db5320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b167933-f6cb-460a-b53e-0c62b705fb5d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43df031b-922c-4533-85e4-b92329d93e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330a6669-1ce1-4301-8dd7-77352c766e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fb2e01-a9f7-43d0-a61e-bebaf5785145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ada38-4419-4cc7-8968-6b08f4d202be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c70aaf-b827-411d-a556-fe773580e372",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176a1cc4-39b6-4b8b-aaae-f4e3bc9acfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a260a5e1-0c5d-40d3-9604-aa10ac44bfdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e349bdf-ab25-4826-a001-e6459fb0395b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699b7dbe-c768-41e3-9772-f342c7f4dbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dfccdd-98b4-45f5-81f6-d954e534fa79",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab9d5a8-85b9-47e5-b5e2-92a49fcd319e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d289ef54-0b6e-4250-8e89-15d255fd687a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d7ae97-56b3-48e9-a966-ba4325702a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b760bbca-4c8f-4986-9c80-4f9daae8fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01847047-69e9-4bf2-b60e-4c4301064eaf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa74d3c-67ee-4754-af34-7a34e79eaf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fb3bef-d5a5-4f81-a6ed-a15b154264a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c914b1b6-ccc9-4ef8-a915-099898d49c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a99e2cb-ebfe-426f-a9b5-162690f222f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c834b6a3-2d87-4f20-8664-184737596653",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57b6afb-7ae7-4a33-8705-21f834d2f6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ff28e7-18dd-47ca-873a-3cbd70a6a2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4687ccbc-7d48-4313-96e0-b4b53afd7edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b839fd-1f4f-458d-b465-52733eec27bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367d0528-ca20-4fba-9631-15dc2735df91",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f198f81-b4f9-4741-abe3-f2c2ce4e810c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a545a45-76c5-491e-8b0b-95237262f2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d157e30-3302-4048-88f4-68c324c05b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197aeec2-70dd-459e-8af8-603606ba5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca901fc-7667-4b4d-a90b-89e3829da74a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4558e597-4a07-4116-8423-bfc67796c0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91955bb5-fa84-4cb3-9dec-a164d1245965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c894fad0-5dcf-4527-8b39-fb19151be544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fe11d3-248b-445a-82cf-4a0b439db086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056098b7-0c71-4f9d-aa15-09343fbfcfaf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22396dc9-caf1-43f3-a2a0-60ba73f58110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4154cb-88db-4b94-aa11-8e55a176e1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f51efd-1a21-48f9-bb56-620eb000c8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8873b93-6321-49b7-92ab-e8905eac4767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc458e5-789b-4952-a68d-4021c9c44e76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae175090-55c5-4388-8733-97845b5d3aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dc39b5-bc3f-4096-a4c1-3f3dad818a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e937cb-0b26-464b-a996-7813132f027d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37eb472-e249-4c49-8eda-4846f4c2f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dd3289-ae16-4083-992e-2bf61c69aa9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcbdebd-da9c-43cd-9bae-d6b5169963be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e58a98-c391-4759-8deb-15dbbdbbaf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf0032c-8608-4f5c-9b8e-0d9ef1c3a8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c162c13d-072b-41f9-bdad-e1b6950b3786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afe7120-7714-49be-bb67-2e52b2b2845e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655d133a-fbd7-4c28-81a8-c3bed1b0c77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e13e8f-abee-4365-b783-bc04eed4514e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557baeef-f1a0-4975-80e7-9322b82c0174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911c541d-e636-4ac6-8502-91f3198fc081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861606e1-571e-4084-9869-a1dffa9cea5a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370e08b-c251-4210-9e55-d45c826e3fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a717676-7a31-472f-80bc-8579bdb08f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6594c0c0-effe-4fd1-b46b-593d9559a545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128f09cc-57db-42be-b546-352d93ed4d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0699c8f-a7c9-4b74-b90a-dd00bdce411d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2eb0b2-a67d-42dd-9cd4-50f2a638240c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6ee50b-0146-4f8b-9d79-799879303e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94cf4a5-30b4-4b5c-890f-3c04247f3be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26667670-0b8a-4cd6-8f32-57e4f4e829ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd77cae-c10c-4c00-b8b3-8e9f890d11f0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5628fc28-df2b-4142-8dcb-c410084e510a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9d11cd-2ec1-428c-aef5-c5ac4a9b2c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38161cd2-5c92-4e5f-8b1d-f64054fcf4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d0d159-7de7-4d62-9315-0232890602b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9674c668-4cd5-49c8-8929-10948ccec602",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605da428-0665-4e02-9fa3-61dd263119a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb2e04b-5674-45c3-8ff4-2682f28e3e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d6988-23d6-4283-9386-e3b43c5e13b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9795339-4ca9-427a-a38a-92e8b6789272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b203c928-ccd5-47bb-8d87-f2f989ea9106",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb235ef3-380c-4a64-9276-0d3303320ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebf7bb7-d579-461b-bcbd-34284f90e61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7764b427-47b2-4294-8592-834796cf0cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76481e87-3713-4574-800b-2b7ab99d4e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726733fb-6972-4a82-bfdd-fff94ebe2f80",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e624ac8-ae12-49ec-a8e5-deee3efd588d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b366bb4-3fe3-4f39-9e52-afe1891599d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b83cba-645c-4922-af74-3a9691849bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ab37d5-c81c-495d-be26-45b4edf1f1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b3a6e7-32ec-4dab-b526-477d0c4dacf1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c47309c-2f49-473f-b114-b915baf3ec12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91eb3dbc-943c-49d6-b8c1-8b7b0a7100b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c7cbe7-433a-40dc-98e5-0c62d264f97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb2e2fd-7be1-4697-8604-56b919453ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbaf5a4-a26f-4d02-a57f-5cfebea3029a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0731bb-fc36-4596-a317-6d744e9d9a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896f6181-2e89-40d7-b154-b760182696e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa3016b-6daa-47af-9e87-b46e26abae27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912d46e5-b1d0-40ef-bfa3-b736919029a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addfe4ee-b5ca-4ddb-90b4-00906625b9f3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f471832-893a-4aa1-bdbd-023acda81c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7237e9-cd99-4058-8034-cd9529466c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c93fc1-2fb2-44f5-8e56-921319bd0b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbc0a9f-db12-4894-ac3b-cac995c0c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5975f2fa-d99a-4fbd-82be-a605695f80e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bb7664-a347-4fca-9c37-20356ae085e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593c6f0b-d0f1-437e-8ecd-b663861b8e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91430f16-9062-43a0-a9d1-c36fdc9ec1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105ebb1c-9a47-4952-90b5-40d277ac3016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3daa603-64b8-4add-8a0b-39d2195c9841",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fca8a2-3e39-4141-971b-5b102408316e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8fdba1-b5ed-4e26-8b90-67bc628713dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882a20f0-6b68-47e5-bcd1-3d7a89789172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e272a5-7197-4928-9ced-505830764111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ddb6fd-c903-4af8-8736-9b732d63dadd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3875fe88-2577-47c6-8cbe-2763e9272e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efea686c-31d0-4a94-8f73-52557d519eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe12a62-32d2-4a8b-84f6-2c55b568d7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2f9469-5d9c-46c8-9c3d-e68ff902ecb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d85434-3683-4940-a20c-c3bcd7fbbfde",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3be6f41-8d78-4b5b-a347-cd50e24090e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa1b403-a918-4d7b-b66d-e5dc80f31174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b13c53-182d-41cd-9702-c9b7c8cfed1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb617b5-7b05-49cb-895d-2c3078ee4da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152116e-e91d-44ad-a0b6-3d827e5d2877",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a5a073-2706-4e2f-b094-f3f43c5d3753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f9dae9-fa39-4f76-ae3f-943118e88ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27441a9c-695d-4c20-9397-b4d1576a7e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc19bd5-9faa-4224-9fa2-580a722e9690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbb29fb-ccb7-4496-9f3e-67acc071fa12",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839afe3-9abd-4af7-98e1-96bd942fad0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0be5d8-c70b-4620-ba6a-d80cd7d528d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778facd5-bf60-4a64-888c-15236b304586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df7152e-3be5-46ea-8f66-0386b7c2caf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c6913d-0a6d-4181-a9c8-97f581044a45",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e14380-a431-4157-a525-222125b1d863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02e890a-2f58-4628-9715-e691f376e166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f3ab5-9c64-4002-b447-c2be6e8bb230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857294e6-cc38-4327-b74f-c80dc385a8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c57e0-b31f-466b-b02a-b4f8c984bee4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eb7bba-ff46-4f3a-ab2f-a5c93be11935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebd6610-085c-46cd-a893-4e6be9d15c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cdb1be-3e56-45d6-ae99-4c69fd7d07cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6bbb86-2e90-4625-b2e0-8c34dcc6e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff627f-3a92-457d-a532-8b26bf90ffc7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4591b216-f26d-49ab-b6d9-61236aa47e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a807813-a597-475e-9b81-db10159eff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83599dee-713d-47f8-9b93-86de19a45a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73f6258-9126-46a9-8d90-297b7cf28ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c851c-3547-4be5-b7c7-7c77bc4e9842",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473953bd-9a06-4979-9f3b-c04ae9b23730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e1b2fc-3905-4f13-a8d7-744242605211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f945ea-34a7-4474-a8f3-86579782a0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b25b977-e405-4269-a7f9-2a75d56756cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59a7264-98b0-43f8-92bf-c38633b3d7dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2072c425-dca6-47c2-ab58-c65c623c68c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17bd9d86-437a-451a-8ea3-65b571bf05a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ffcd2-4342-4d1f-860c-db4abf2cd29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9010fff7-f902-4b01-8d91-a0c342699bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c01715-a1dc-4489-bb52-a4fbb30d99f9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783cb6e8-6bf5-4d89-9caa-9e6dc7c462b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12b1188-98d6-45ac-8f94-c2d7f2008690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3dbc4b-4566-44f8-bda4-cf486f8df9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a29c6a7-9c4e-403a-aff8-24489cf1d7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f6a81e-0896-4211-b5d3-6cab503f7033",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd30220-32f3-426a-aa0e-64b25d3adc03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82f44e6-b6a3-4dea-9f98-7f5fae0dbb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ca0fe2-baad-4613-9f7a-71f4de7e8259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e6f3e1-337b-4ac8-9afe-e4929c0c5147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be956ef4-77dd-4188-8749-13af9b06b85f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e1c6d-c20b-40a6-9a3b-031253cc2261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6e6d2a-4d95-46fe-8722-edd7f102cd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0e7fe9-7e66-488e-afe9-c3655b49e58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84abdc2-9c56-40d2-82eb-2cdba940f647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6c730-6b46-47f6-9632-837f681d3eda",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd5f9f8-923b-41cd-84c8-6801f14e969c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "becf1603-7873-43e4-8692-ab88499e477a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6848a6c-39ba-4100-a2e8-1b55002ecd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae57c78-ac5c-434c-867c-769483cecc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f93eec2-7693-47f3-856a-70c3eeb4722b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043d0fbd-4f84-48df-838b-63277a050883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5bb18d6-7d8d-47db-9a0a-4271702feaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa4546d-7094-430c-9cca-d5d05bd5b8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2fa79c-5d1b-4f50-b675-003e0ad41ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eda88a0-0e2f-4478-a256-8f214b779bcc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa4a154-06e2-4903-80b4-a1eafa202287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c74049-117f-4266-9cb3-ca8d6d57f041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b306904d-7e38-4a80-8afa-935b1c7565d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f71111-9842-4a4c-b22b-3731aa398ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4859eb-1c56-4f26-abf9-e5cf540644b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ac77f7-4964-47e7-967e-383ebe0fb3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc230d54-b893-4395-94ba-711f23f73bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5aed0-5fc6-4ae3-a971-d78db032ea46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e298e762-544a-4da6-9827-d36c5c41106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b37f6-cbd4-4629-8bff-15aba4999173",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4489d-e3f7-4d78-9676-9e015a43e87e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d552d99b-9118-4bda-842f-5c5314e21800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8899d480-0dfe-4687-83b5-5df53c5b7d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc31437-b3f4-4ec5-a7cb-d43ce3faa96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dfee79-6f25-4978-acd4-df845b3a44fd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba36aa2d-d79e-4e74-be24-d621002415a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fb1f2e-1b0e-4cad-9c00-4740e23835cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4667efa-21af-4ec5-abc6-9a119a626854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c047bf-0bf1-45f4-9d96-baec29459fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8e4683-166a-4509-9fbc-4ebd45693c20",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce43c1e-f5b8-4220-a9a0-6f1e29830a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6d5555-b216-4d94-9c87-6f384d1e679a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ce196-9920-46ea-8637-ae5d9561a636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09643006-5f97-4bfa-acbe-d3a39148f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8a69d5-d35d-4a4d-af67-a9d8012c026e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747ad39b-e6dc-41e2-8ddf-097b5ed8d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca8530b-04c1-4bdc-aff0-dd84196e00f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebef5b85-a7f6-4a44-afde-f1245e825161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c7a0b4-8e3f-4d03-8238-cbe4e05e94f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788c7165-1804-4f32-bef3-71b976e889ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5cf6ab-9781-43a2-b361-08e2c7bc94e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef3b482-55af-4771-9c38-96c66edbace8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7752266e-d1df-4710-9ed1-31a889014e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623bde7d-de9a-4869-90b7-00274f09a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b33f514-7b83-4602-9da7-8319d4a7dc13",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed09d52d-570e-4932-9951-1918aea0047d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70aa85de-682b-4198-bfd6-5ab054526fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9961a561-040e-4997-a03c-c606891e9b72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169734ff-6d44-4606-b626-871678c50b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4da50f-4ba9-4f8b-a7ce-8d89fab4dd93",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252e03ec-6d0b-43c8-b0ac-79332a1400b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c87a2f-5ede-4c2e-b4f9-8ef233f9a615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af35652b-a0f6-431b-9d5b-2b6e31ec7bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba59474-09c8-4ea6-abaa-58dc65b81bd7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18b12099-18d8-4b18-8313-bb87a96843af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88ccfa57-4510-4335-aa81-c9976a039d97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a05cac-424c-47db-8165-e631d596894c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4750818-f4c5-4e75-8f81-47fd85402305"
                    }
                  }
                ]
              },
              {
                "id": "ad73815b-c88e-49bf-a29b-63f1aa3dbb4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66d6023e-8fda-4841-a632-f57916a90be1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b49b51-ce23-42cd-8050-63c7b52a5a43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c676e532-2e29-426f-8e90-c312c9e736f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7220dae4-d02d-4d11-9645-aa4924a140e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aefccde-543a-4735-998e-a12bb46bdad5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9c37e36-46b3-46d7-a25e-71052b284f17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03b3800c-0f2a-4305-9893-1bd80329882e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89c197f-534e-4ba7-a480-e83d52c28218",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f51ab99f-223b-4a19-a847-0e74681111bc"
                    }
                  }
                ]
              },
              {
                "id": "b86dc7fc-5283-4213-b9e0-54be79cd0c9a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52355b59-d42e-4928-ade9-b4f49e5b2391",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d6d6db-3699-43b4-afb2-b0bfaf637bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0b9e7e5-63d6-4e27-8e90-8acc1b0acfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcfeeec-d96e-4eef-9197-85d2fcfaf73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409943ea-9295-44ef-b312-781d8e8afc3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "773d5ed8-307b-4d44-9405-35ad9e2fa449",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd803121-e586-4d5a-9f84-9f79b8115e2d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35804e9c-74a1-4427-aa54-adb8adfc1a2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9576497-ad88-46cf-b2db-8f6f079738df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2af25a36-cfcb-448f-ae8a-fab4a5075c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6711f064-dc14-484b-8095-f57c0478cbae"
                    }
                  }
                ]
              },
              {
                "id": "be289169-0117-45fa-b1b0-cc90d89d813e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75afa332-2e43-4ce3-85a4-452569840aaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4dde1854-d1b3-450d-b9f8-335d7ff7c44b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "656edffe-5d9d-4643-8743-65871c9c6bc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59a21996-69b1-403c-9b60-96856a4da9fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7fadbdb-7730-4f46-9f25-c8933d59cbeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "835d1933-7a72-4f4f-a1bf-f004dcc079c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89668111-95f4-4332-9f4e-eef957dc97cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e179823c-79a3-451f-be81-9e04967fb211"
            }
          }
        ]
      },
      {
        "id": "57209eb4-623b-4244-b9b3-968494e92e4a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "04539339-c59d-40d3-be28-aeff70f2f106",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6565ae88-57d8-4e88-911e-2933efd72758",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ac6998b-3c87-4c79-9dc5-dcf60a7f0676",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62dea9c-c717-456f-9ac7-3237db440a48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c969e711-1493-4f8e-99cc-ecf415e72e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec3fe8c-4e96-40b2-88f3-3a85f18d1926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6428a1d5-2620-46fe-9c96-fede786fc789"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be4209b7-eb8b-4bc7-9112-c70dd23f0859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a57c4bb8-268b-44de-b392-e5fb5348dbae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2caa35ee-5161-4894-a9cc-3d62cf5c0e75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aad9fa5-939b-4f62-ac33-fce8ff47b200"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13aad98a-05c3-464d-9701-629396a94a7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "780116df-7560-4b73-9661-8bb61d0506ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efbd795e-2669-49ff-991f-72d20190ecd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30254c1b-410d-451d-9836-2572ac9861cb"
            }
          }
        ]
      },
      {
        "id": "2f6e7794-ef02-4ef8-a580-b4e0b2bf05f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9191fc8c-b3ee-4f1a-8669-bd273efcbced",
            "name": "Negative Testing",
            "item": [
              {
                "id": "146144d0-ccb1-455d-bbdb-970d8d02ae11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88bc6d68-c220-4ba8-8a71-384da2e4650c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e3938c-82d4-49be-a4df-002d7ed051ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3592ac29-7d8d-408a-bb91-59ee6a504db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58df6b2-3cfa-4ef7-9062-652c03134ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c77687aa-f89c-4c95-834f-310fb7d9796d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3b95082-e636-4e6e-b156-e7802ee92982",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "deb866f5-7980-42c8-a0f5-42fc87122bdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "822c72bd-7026-47ae-80a1-f68c501ec387",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ffabeda-e406-43a6-b535-2960f04156c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ea4f63-caf5-4e16-a4b8-aaa574e7288c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0144336f-db19-481c-8e93-753c7b29739a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aada4d6-bbe2-40d1-bd3d-374fc1567de2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ad904b9-fd2d-4adb-9957-c875e8fd46a7"
            }
          }
        ]
      },
      {
        "id": "0b091422-5e10-4b1e-b5b4-cc01166f5013",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5871c53e-667c-466c-a6f7-452f872e00da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86be58ce-0ae8-4212-aab5-a412af4a05b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab804d1d-9795-461e-9ea4-e9e2df18633c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664d366-73ef-436d-a352-7135439e60e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a6369a-1e17-4146-90fd-6dee84ce396d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21177064-c2ef-454c-80d5-0cd619313f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "057fcde8-5153-46e8-8c30-c3b90820fd88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04cf3bd2-7191-4499-b452-fb244fdd2471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03106159-32bf-4c13-8071-e76bb2f76fec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ffdbb33-7e94-4d75-b694-5e8e9dc4ba62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b3d9fd7-b656-4cc4-bb55-75310d917077"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083268f6-cccb-48d2-bb7f-5fd126acca65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4133cd1b-d4c8-4ec5-a951-ef51bc0488be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c1cc30f-a1b4-43b1-a82b-394653ebc09b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08d2dc4e-c144-4e2c-935c-b02fe5b6d614"
            }
          }
        ]
      },
      {
        "id": "60121f51-c0e5-42ec-ab5d-8a74cee31a65",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd941ef6-37eb-4a6f-a462-91f40a825bed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05234b17-4c23-4a12-af9a-c58f0de838a3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "caa85188-6472-46bf-85c2-a0a868434b8b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59e767c8-998a-4bd9-aaa7-b017c138f9a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "379acd56-25b5-480e-9584-89fa7dedaa8d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.69473684210516,
      "responseMin": 6,
      "responseMax": 2670,
      "responseSd": 311.4170805246149,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702341383695,
      "completed": 1702341419476
    },
    "executions": [
      {
        "id": "957c9ed9-d737-434f-8766-c502de20a9e1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "361cf04a-d258-48be-87c1-7855567cce0c",
          "httpRequestId": "cacb5e54-7618-4792-b4d3-973edeec4f83"
        },
        "item": {
          "id": "957c9ed9-d737-434f-8766-c502de20a9e1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4fb4bc4d-3c92-475a-b479-349bfb65db6f",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "5ed5fba3-d5c7-41d7-8e9d-8d310b1f9d54",
        "cursor": {
          "ref": "6851c500-d490-4a1d-8a79-847fae6f6d60",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b533ba73-d5d9-4464-bf8e-d132b767be77"
        },
        "item": {
          "id": "5ed5fba3-d5c7-41d7-8e9d-8d310b1f9d54",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b6d1913b-7317-4f92-b5e1-fcf05dafadb6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "161f163f-1fa0-4fcd-9918-4fea032ca36a",
        "cursor": {
          "ref": "5d7e6bff-2f29-4482-97a7-5b516170c02e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e910c558-77a3-4aa4-8ca5-347ca5f907d3"
        },
        "item": {
          "id": "161f163f-1fa0-4fcd-9918-4fea032ca36a",
          "name": "did_json"
        },
        "response": {
          "id": "3824862f-afc9-4c83-977f-0475ee0d09da",
          "status": "OK",
          "code": 200,
          "responseTime": 588,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2706f2d3-6837-477d-9427-e5a25b518635",
        "cursor": {
          "ref": "c89b94af-070e-472c-ada8-177974d4cb2d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8573750e-7c9f-4964-b6f4-a71db5ae12f7"
        },
        "item": {
          "id": "2706f2d3-6837-477d-9427-e5a25b518635",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0738cef-bb5d-4e62-a2c0-29b36bfb1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2706f2d3-6837-477d-9427-e5a25b518635",
        "cursor": {
          "ref": "c89b94af-070e-472c-ada8-177974d4cb2d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8573750e-7c9f-4964-b6f4-a71db5ae12f7"
        },
        "item": {
          "id": "2706f2d3-6837-477d-9427-e5a25b518635",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0738cef-bb5d-4e62-a2c0-29b36bfb1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d245bb7-7b1f-47c9-9bf7-56ea08d16e94",
        "cursor": {
          "ref": "fab9b334-04bf-45cc-b458-ad8fd0e83624",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88697c5e-1a94-4a6f-bcb3-1f0cd0869ffd"
        },
        "item": {
          "id": "9d245bb7-7b1f-47c9-9bf7-56ea08d16e94",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c63ba4c2-41fd-4cd5-a86c-09cdcb2a66d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 102,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae80cdb-8042-4cb1-80aa-8301151bf28b",
        "cursor": {
          "ref": "1b42fb52-0edf-4d9d-bd7c-83b61d0819e4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0c69281-a340-4d6a-9d5c-3c96c1a7b95a"
        },
        "item": {
          "id": "dae80cdb-8042-4cb1-80aa-8301151bf28b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "917f887a-60df-46f3-8528-f124efb14723",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1016cdc9-9724-4161-a3c0-26375b54f569",
        "cursor": {
          "ref": "081c1eda-daf7-4862-a532-cd894fc740a1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ec370848-6de4-4e93-a7a1-27ba81b22b6a"
        },
        "item": {
          "id": "1016cdc9-9724-4161-a3c0-26375b54f569",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "795f15c2-7b29-45e1-8f04-a3fc7670ebfa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e9130-aea6-48bb-9693-639bc40fbd4f",
        "cursor": {
          "ref": "53bc81ce-ac76-4f37-96c6-4eef8d450052",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "101b187b-fd5d-47d6-9eae-f1e6dd2326ea"
        },
        "item": {
          "id": "b77e9130-aea6-48bb-9693-639bc40fbd4f",
          "name": "identifiers"
        },
        "response": {
          "id": "831ec588-78a0-40d4-abe9-d9d8e46aac08",
          "status": "OK",
          "code": 200,
          "responseTime": 297,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7ddcc9-9718-4a48-8585-5368b34b0531",
        "cursor": {
          "ref": "f7a490b7-1d4a-4280-9c79-8ea9b870e909",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "77123b3f-7baa-4d9a-a05a-15a89d46b1cc"
        },
        "item": {
          "id": "bc7ddcc9-9718-4a48-8585-5368b34b0531",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4a3ff150-53f6-4ad1-8f9c-f05d12a728eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f225e2-206b-4546-9550-df5c80ce842d",
        "cursor": {
          "ref": "a6e3e3d3-fbe9-499b-8142-58b2ed9f14bc",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "867228ce-b0b4-4006-a8a3-8b0c934d3026"
        },
        "item": {
          "id": "86f225e2-206b-4546-9550-df5c80ce842d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4886522e-aa97-496c-9964-05f219630158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860f7b9a-67f4-40c2-92b6-0807bacf22f6",
        "cursor": {
          "ref": "4013a1a6-64e8-4384-9964-663ce10399dd",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "efe0ed6d-92cb-43d2-9758-dd2d65b6fa5b"
        },
        "item": {
          "id": "860f7b9a-67f4-40c2-92b6-0807bacf22f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "647d7add-e305-4e1b-bcf8-d149c90c5ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6004075-c10c-487d-9066-d28ebc5efb4b",
        "cursor": {
          "ref": "cd1f60aa-fecd-45a0-91d3-ef3c55467090",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb69806e-c322-48d6-9e47-cfe357b21b5e"
        },
        "item": {
          "id": "d6004075-c10c-487d-9066-d28ebc5efb4b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1278469e-0399-4897-b5fa-40bc6aa8beb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76600f5-af7b-4c8d-8057-d2adc28f2df9",
        "cursor": {
          "ref": "7ba34089-44cf-4d86-a780-3930e34191a6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f72838c5-50d7-495b-8ba6-639142d8f2eb"
        },
        "item": {
          "id": "d76600f5-af7b-4c8d-8057-d2adc28f2df9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "afff7f7c-3bc1-4ae3-8b1f-db1395ce1e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf66c067-a2ca-485e-888a-dfdce7745aac",
        "cursor": {
          "ref": "25c08171-7cfc-4920-b208-45808c22d493",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "936457a6-4dc4-4505-beaf-b2d9115d2719"
        },
        "item": {
          "id": "cf66c067-a2ca-485e-888a-dfdce7745aac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64c24c86-41cc-4e1d-b8ad-306f991011a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8094626d-80ad-4ed6-953a-3da2c03d67b7",
        "cursor": {
          "ref": "347c9a34-b158-4c02-93f6-45459faeb38c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3e4d2ea8-9b66-4835-9549-4a642692bea8"
        },
        "item": {
          "id": "8094626d-80ad-4ed6-953a-3da2c03d67b7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5eef5d9a-eb81-46c5-af92-d3f30ceb1911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9ed93c-6173-468c-b0be-d0429f9a299c",
        "cursor": {
          "ref": "299fb32c-6824-41a0-8c8c-5690734a6a3b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0f201ccf-36ea-458b-bc9c-e73358e0fd27"
        },
        "item": {
          "id": "9b9ed93c-6173-468c-b0be-d0429f9a299c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2825967e-c7e8-4660-8843-86fdd6b32398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9108f5-9046-404d-aa64-75950732d112",
        "cursor": {
          "ref": "49f2bde9-727a-4adc-b346-f8c9db7cc13b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6b72aca6-36f0-408a-8fde-151149bdedca"
        },
        "item": {
          "id": "9d9108f5-9046-404d-aa64-75950732d112",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f615233a-8833-474e-bdf1-5ca43ca01651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d7c24d-92e5-49cc-ad82-8b623f1afc03",
        "cursor": {
          "ref": "673b7e51-35e2-4599-b82a-be336510aa78",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f587959-747d-47db-bde8-c47e68738a06"
        },
        "item": {
          "id": "a9d7c24d-92e5-49cc-ad82-8b623f1afc03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d155cc36-e651-4245-b52e-fb123bec753f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6708b31d-2c7a-4e7b-90ca-3286056af2a6",
        "cursor": {
          "ref": "14f3abf7-af51-4e37-89a6-21303e4aefc5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "041f9f0f-462d-45c9-bfe5-33c612261380"
        },
        "item": {
          "id": "6708b31d-2c7a-4e7b-90ca-3286056af2a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "04144eb6-d2ea-49b5-8688-35ce29d8f966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4f67da-bc57-4d98-a02b-63ce55ab208a",
        "cursor": {
          "ref": "54a7c0aa-cb7e-47d6-88f6-27b4c6e8b043",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "db815d0f-aadf-4fe4-aa11-03c0333e1d0e"
        },
        "item": {
          "id": "0c4f67da-bc57-4d98-a02b-63ce55ab208a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2052ee3-e8e7-4183-b551-7128da026e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2314f648-8893-49da-826a-9a7737b5a081",
        "cursor": {
          "ref": "bba8fd27-ef4c-4870-bd55-608cbe7853b5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "188d137f-7b5a-42f9-b1fe-0188043eb229"
        },
        "item": {
          "id": "2314f648-8893-49da-826a-9a7737b5a081",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "42dcd7bf-d814-4e67-a507-4c02cf190c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10166bdd-6080-4dc5-af66-2f6a17010654",
        "cursor": {
          "ref": "70625c85-9405-45fb-8a3e-71d3526f8758",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "94a6decb-0eef-44c7-8f32-ec069e6106c0"
        },
        "item": {
          "id": "10166bdd-6080-4dc5-af66-2f6a17010654",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8a4b276d-3b8b-46f0-b6f1-0ec599b55c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf1e60-6ceb-4930-afe7-5d014d8238a3",
        "cursor": {
          "ref": "bd228407-ce11-4a2f-b968-865ff060d735",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "53991eb8-19f9-4630-8a5b-24c630031f25"
        },
        "item": {
          "id": "e9bf1e60-6ceb-4930-afe7-5d014d8238a3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "22944563-5fd1-44c4-b841-c2fc0b4c7fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2b2895-5700-413f-b315-e263bab99b6d",
        "cursor": {
          "ref": "35cc7ab2-5918-45e4-b8e3-425cec8469ee",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9d4c82aa-66b1-44ef-a41e-94d06a648210"
        },
        "item": {
          "id": "cf2b2895-5700-413f-b315-e263bab99b6d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "58b87472-ce76-4062-b8c6-c0fe3bcd45b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0213bb58-2df4-4fde-8a02-9265f8d15cfe",
        "cursor": {
          "ref": "5afc9ff5-f7e7-4fe6-9225-7835fb1371cd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e3879df1-8c97-4798-bfe4-47372dbeaa63"
        },
        "item": {
          "id": "0213bb58-2df4-4fde-8a02-9265f8d15cfe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a53e64ee-3ffd-4eaf-8b0d-8017e0891227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66da9874-807e-425a-b352-e02e64e81708",
        "cursor": {
          "ref": "11f17c28-5087-4dbf-af5c-5ba103664912",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a37ce4a-2a6f-477c-8875-0183918493b9"
        },
        "item": {
          "id": "66da9874-807e-425a-b352-e02e64e81708",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7ed561e6-6bd0-40b7-a5df-eb566fc7dadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5fcdeb-b264-4aed-9833-ad0501aaf1c3",
        "cursor": {
          "ref": "ff1597d8-df8c-4927-9edc-d5c09622364a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ccae7b4c-0271-49a9-a135-215045ef5cef"
        },
        "item": {
          "id": "fd5fcdeb-b264-4aed-9833-ad0501aaf1c3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f02c8717-acf5-43d3-8a7f-236d7b98e242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf14c297-75e3-48b1-86d2-dd9334ba3af6",
        "cursor": {
          "ref": "e518c351-5fc1-4b2f-a55a-37949d9423d6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f341151c-97b8-496d-9a2f-87ad42610b6e"
        },
        "item": {
          "id": "bf14c297-75e3-48b1-86d2-dd9334ba3af6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "78ac08ce-4dff-4a06-9f87-2cbb9a2d5f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeae138c-2334-447b-ab78-26281defea7d",
        "cursor": {
          "ref": "c81fe2d4-5e62-492a-934b-5154261e7800",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b0711c49-e1f7-49f1-bb04-0604583658fa"
        },
        "item": {
          "id": "aeae138c-2334-447b-ab78-26281defea7d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c356005c-76a8-4b7b-adfa-b51ba410cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d581eef-7b22-4f6e-aac8-5e505f9bd4df",
        "cursor": {
          "ref": "ff5031c8-e572-4eaa-bf0a-6686123a448a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "276e7907-9abf-4e1e-94cb-cf84b50b4811"
        },
        "item": {
          "id": "4d581eef-7b22-4f6e-aac8-5e505f9bd4df",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2c580438-218c-4b44-a511-b63dc77515af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af951a-1aa9-4da1-9e36-d880ee730f85",
        "cursor": {
          "ref": "1bc502ac-9716-486b-acc1-af1f66be56d8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a68dfa1-c86d-4382-a133-664cbb46ee94"
        },
        "item": {
          "id": "e0af951a-1aa9-4da1-9e36-d880ee730f85",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d4bf24a2-01f6-49ee-b4c2-7a3eeff64c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdb1e4f-956a-4963-81e4-5ba14f4bd96c",
        "cursor": {
          "ref": "0fa56893-92db-43fb-be15-c98d4a9227c8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3292fbd6-569f-40ec-b2f0-8ecf04b52dce"
        },
        "item": {
          "id": "6fdb1e4f-956a-4963-81e4-5ba14f4bd96c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3e4683b0-6db1-4285-a9f4-31f4309c0d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c39c71a-f242-419a-aaed-7bb8975e69e6",
        "cursor": {
          "ref": "1117fbb2-2e2f-426c-9a91-201e5c178ad6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4d77f5ab-1faf-470e-9666-837573474392"
        },
        "item": {
          "id": "2c39c71a-f242-419a-aaed-7bb8975e69e6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a48e3948-07f3-4c6c-837a-c742283cda82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf994696-5600-42db-99ee-fe7376750048",
        "cursor": {
          "ref": "e5aa12c3-3f4e-4ef7-8e8d-f3f84a3c9f06",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "93cbc568-dd79-40cd-8deb-819f53aa74fc"
        },
        "item": {
          "id": "bf994696-5600-42db-99ee-fe7376750048",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "830f8685-78fa-4c57-a68d-ebedfbd6873f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7609e7-db9b-4dc6-a1f9-40dc522ccbb2",
        "cursor": {
          "ref": "11390e98-3bc9-455a-a789-b92e103b8fbe",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce5c9b85-49d5-4462-8614-1c250a4f30b1"
        },
        "item": {
          "id": "1d7609e7-db9b-4dc6-a1f9-40dc522ccbb2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0b50b258-210a-4d41-bac0-afea933344d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135697eb-e44d-42ad-87ce-23de8eca9248",
        "cursor": {
          "ref": "89962096-4216-45f9-ba11-c78a69ff3c8d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4605d35b-478d-4942-88f7-2a507eed9328"
        },
        "item": {
          "id": "135697eb-e44d-42ad-87ce-23de8eca9248",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "058748ce-b673-44d6-86c1-2b3d684df35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca82d25-c0eb-413e-a650-3c503895c818",
        "cursor": {
          "ref": "830e2c97-f628-4fa9-be2a-1a8df0f17bbd",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f5c9309a-8a91-4b56-8ead-fe9e8b2a4674"
        },
        "item": {
          "id": "6ca82d25-c0eb-413e-a650-3c503895c818",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0b37dd2f-30f9-4ee5-a625-f18832c20289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e73698-cb53-44aa-a9b6-c29ae8cffa73",
        "cursor": {
          "ref": "64cc7d8f-bf5f-45d5-9993-5b70585f6404",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "18bcf247-ce73-4932-841b-a131f3bea33e"
        },
        "item": {
          "id": "18e73698-cb53-44aa-a9b6-c29ae8cffa73",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10518215-228e-4ae0-9529-a866bb429f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713655bc-89d1-47ab-9ad2-27cf01fbc427",
        "cursor": {
          "ref": "67230716-c152-4b5b-83cf-c361759d29cb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "22bdf5f5-8f3f-49b7-90b5-80634439b2cc"
        },
        "item": {
          "id": "713655bc-89d1-47ab-9ad2-27cf01fbc427",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff931f73-3201-415a-b78a-3974d978e704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b45d4b-b403-4ca8-9fd5-9df4819cb823",
        "cursor": {
          "ref": "63c0c6eb-42f4-4caf-b442-b9883af3c6fc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e2284ee4-469b-49b0-90ef-699b7a1a0432"
        },
        "item": {
          "id": "26b45d4b-b403-4ca8-9fd5-9df4819cb823",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c7baa7f1-353b-428b-a380-6cb8e16a3141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac84dff-949c-445a-b5d5-19be8f4cfdb7",
        "cursor": {
          "ref": "1cd0dffd-7151-493b-a12b-dbf13c4c168c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8a1f1f8f-6516-47ef-874f-7f3005440915"
        },
        "item": {
          "id": "eac84dff-949c-445a-b5d5-19be8f4cfdb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d99030a2-22c9-44da-b6ce-6b502729f0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a04d21-0e28-43c1-9fb9-e848e29fe6ee",
        "cursor": {
          "ref": "8aeaaad5-1149-4bb8-b443-2a84249fe6f8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "608391bd-af9d-4b63-a856-3a2bd500eb48"
        },
        "item": {
          "id": "c0a04d21-0e28-43c1-9fb9-e848e29fe6ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9bbc1475-a442-495a-8007-03ed75fdfd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9f9fa4-648a-4bc1-8164-aa62067dd119",
        "cursor": {
          "ref": "8a856d27-fef7-4d33-98e1-d80dec7bdcf6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ab57e18c-26cf-4499-b747-bbd067f9fe65"
        },
        "item": {
          "id": "ba9f9fa4-648a-4bc1-8164-aa62067dd119",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fcb178d9-3630-4a1e-8aad-4aec4a2d6ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae150a-7395-4a01-a83f-415b1181df47",
        "cursor": {
          "ref": "b4daf8eb-2f10-44aa-bcb6-1256ebccd8d4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c524998b-70e8-4eb4-8e40-132ae5d486d5"
        },
        "item": {
          "id": "25ae150a-7395-4a01-a83f-415b1181df47",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "47551e0b-a4e3-4416-9275-1b32925ecb48",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 328,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fd1d78-ec24-4b62-8d12-4cdb2b036016",
        "cursor": {
          "ref": "7469802f-dc2b-4c8f-abc0-f21e8247a6ee",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "504bbeba-643a-4b8d-9f3f-4cf182cdd350"
        },
        "item": {
          "id": "a7fd1d78-ec24-4b62-8d12-4cdb2b036016",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "084e508a-e19b-4a45-abea-165b65e0e4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40d4415-8fbe-4bb4-ad9f-0add68c08df3",
        "cursor": {
          "ref": "fe603bcb-8a41-4cdc-9424-176e4740b392",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "738c8db1-32e0-42ad-a29a-ec6698bf2c0c"
        },
        "item": {
          "id": "a40d4415-8fbe-4bb4-ad9f-0add68c08df3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3093f446-454c-403d-ae93-dda1092bc8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3408dff-3ab9-42f2-9d17-4ed36436193a",
        "cursor": {
          "ref": "40b44591-23af-48e2-bdce-e7cb83d6d57d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ae8f8d72-3211-425a-8c34-ca94696863d8"
        },
        "item": {
          "id": "d3408dff-3ab9-42f2-9d17-4ed36436193a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a90486cc-d814-4dc3-90ba-88e2e544387b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcef130-8c2d-4fba-9eea-466e19a15078",
        "cursor": {
          "ref": "fcf3e3e7-f418-4d44-a096-705f5c95451a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8f2264ab-2831-4896-8a86-ce83a40bac77"
        },
        "item": {
          "id": "edcef130-8c2d-4fba-9eea-466e19a15078",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "78d1ec22-74fd-40ed-bb78-3845b558046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c910c5-d096-4dae-a300-2b503156b9b9",
        "cursor": {
          "ref": "9ae79230-4cfc-42f1-9b55-9bcb8e9019f0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2a760bc7-9415-4aaf-9b1e-7fdd9240ecf6"
        },
        "item": {
          "id": "41c910c5-d096-4dae-a300-2b503156b9b9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "36f19abd-b40a-4cca-a23d-32c05f733336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a310a2-8974-4d93-9817-688eeb9ce48d",
        "cursor": {
          "ref": "7b46ed16-6145-4d1e-87f7-7d0217d98c45",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "beb8b71b-7c0c-41bb-87ab-44d691309b27"
        },
        "item": {
          "id": "70a310a2-8974-4d93-9817-688eeb9ce48d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eed2d77b-7d15-4e0c-abec-2b4b4a38f9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb5d712-b57b-46f9-9833-514dee18f107",
        "cursor": {
          "ref": "86e0209e-97f1-4539-a10f-9155faa5250d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6bdb5c26-4171-4c86-83f2-0fd2a604bd12"
        },
        "item": {
          "id": "feb5d712-b57b-46f9-9833-514dee18f107",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9a50401c-ea53-44ec-ba81-012d069c5f4d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 308,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef974397-bfee-448b-887a-4b91b82cae23",
        "cursor": {
          "ref": "8288bc0c-1ffb-4bbe-9d9a-4926fbcb6971",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7999874e-0c93-4843-96c6-89aa632ca73e"
        },
        "item": {
          "id": "ef974397-bfee-448b-887a-4b91b82cae23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3fb4170f-c75c-4f28-a4cd-977e18517e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16da46ef-e43a-4294-8190-207c953f48b9",
        "cursor": {
          "ref": "6098b2d5-9ae9-47b2-87ee-a45c7b953428",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "55dfdae0-8aaf-4d6f-97ce-dc1ff506eda2"
        },
        "item": {
          "id": "16da46ef-e43a-4294-8190-207c953f48b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aee8d28c-0d65-4e18-bd73-119efc41250f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0dd953-7216-497b-a714-cbd5609e53f6",
        "cursor": {
          "ref": "70c7b240-fe76-496a-8bc9-a877ecda2068",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66b71f78-ed8f-43d1-b6da-d757cc73f7cf"
        },
        "item": {
          "id": "9f0dd953-7216-497b-a714-cbd5609e53f6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d6b844d-9f85-4f2f-b420-55489defa210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a24705-67b3-4d6e-a3ac-820e39494e9e",
        "cursor": {
          "ref": "dffeb001-fb45-4bcb-ad9a-9d71e9f4d9f2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b7eb9d62-f3c4-4fcf-bd11-ea58426b221d"
        },
        "item": {
          "id": "25a24705-67b3-4d6e-a3ac-820e39494e9e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6171630a-b7a8-4ece-a23d-fa155ee6a0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef7f3c6-69db-48a3-9c0c-9dddc519b6e7",
        "cursor": {
          "ref": "ee848e57-3280-47af-8c55-7f65a2e91748",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f9a56cbf-2efe-44d6-b5c7-7c61b5305212"
        },
        "item": {
          "id": "8ef7f3c6-69db-48a3-9c0c-9dddc519b6e7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9fa0e5c-4586-4af6-affb-cdfb774b9c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236976df-b2ad-4b59-b0e9-f5d145525eb4",
        "cursor": {
          "ref": "e80f4f8c-e8c2-4c51-8882-f65c20b6b6e3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "11f297b5-ecbe-4002-a2b0-8517cf7c52bc"
        },
        "item": {
          "id": "236976df-b2ad-4b59-b0e9-f5d145525eb4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "281cf1f7-067b-49be-b357-41a2413c928f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bd9a15-e138-439b-86a9-044e7c32980c",
        "cursor": {
          "ref": "60ba973a-d265-4558-95d1-524c0b8c4a53",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8eadb99e-6aa8-4d78-923e-9ff06bdf5fdf"
        },
        "item": {
          "id": "39bd9a15-e138-439b-86a9-044e7c32980c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9bced4d4-8e53-4e78-baf6-82d13f3851dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f3d18e-5264-4814-b8b9-d85207692dc9",
        "cursor": {
          "ref": "c2f66424-ee4b-4725-87a9-01a160f5a152",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c773240c-1fc3-49cb-b9d5-a04a7976d84c"
        },
        "item": {
          "id": "24f3d18e-5264-4814-b8b9-d85207692dc9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "009647dd-f908-4ede-84d0-25ae6bb5a858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32304ebd-c5d0-4b74-b986-d093a07d0177",
        "cursor": {
          "ref": "ab07b137-572c-4f7a-aa64-6a81a8f9ac80",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "51198477-8c23-49d8-8592-8d70a8bae234"
        },
        "item": {
          "id": "32304ebd-c5d0-4b74-b986-d093a07d0177",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "23898654-26bd-4c74-9fa8-6dc5f2ccecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9b9a40-e781-442e-85e0-7eae2dcd4f35",
        "cursor": {
          "ref": "8cd5ce30-ecc2-47e0-bbda-a9a8462c32a1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b4976370-3252-4604-9f27-ca38726314ae"
        },
        "item": {
          "id": "cc9b9a40-e781-442e-85e0-7eae2dcd4f35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f82e23b-6b4a-4416-abe2-951c5de4536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb4ad3d-3c0a-4154-a499-5fc50892eaaf",
        "cursor": {
          "ref": "38ad0da9-1059-4533-a932-7d298788d607",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a206b94b-00c5-4232-9223-dfbf610ef60d"
        },
        "item": {
          "id": "8bb4ad3d-3c0a-4154-a499-5fc50892eaaf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "924e64f0-7e74-4c7c-9a13-a13505fef995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5aeec3-abc7-4378-b4b8-0d47edaf5bf9",
        "cursor": {
          "ref": "5a51b9c7-14eb-46f8-b3f1-20eb1af5f779",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46fed380-f9b6-4dae-9fee-1467d885298c"
        },
        "item": {
          "id": "2c5aeec3-abc7-4378-b4b8-0d47edaf5bf9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "13bc5832-d3f4-47c3-9b2c-3127785ad7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99bf4bc-0790-4fa1-b3f1-f3c3399ec594",
        "cursor": {
          "ref": "de22ae87-9252-4e2a-be24-b0d1f5575201",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7ed04226-c642-454f-9b29-59127957fe7b"
        },
        "item": {
          "id": "f99bf4bc-0790-4fa1-b3f1-f3c3399ec594",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "648e94e2-fd79-43a8-ab23-a2773876d0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fda757-a538-4326-b2bf-90932b9d5bfb",
        "cursor": {
          "ref": "c2465651-5799-46e0-97ab-7c1641377f1e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cc7b31f4-72f0-4376-b559-1349e5c99134"
        },
        "item": {
          "id": "88fda757-a538-4326-b2bf-90932b9d5bfb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b382ef83-4561-4479-82a2-6780f6c1ca22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92bef5f-3a79-426c-b2da-befbe57a9307",
        "cursor": {
          "ref": "78e11063-a603-4abf-9710-1a968b341218",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d278b17-3081-4aa8-a9ff-dabbbd94ba9f"
        },
        "item": {
          "id": "c92bef5f-3a79-426c-b2da-befbe57a9307",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "44208c67-9f2d-40b5-895c-d41b9fbdc76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b46ac2f-dbd8-4e0b-a5f9-0175d30acfa7",
        "cursor": {
          "ref": "67c80818-b2a9-49fc-8149-e9ceb2328c64",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "32630a59-19a4-45d3-9e98-a130642e88c1"
        },
        "item": {
          "id": "8b46ac2f-dbd8-4e0b-a5f9-0175d30acfa7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e345521b-fbb6-4770-88ab-ba29fe909d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97785510-ca34-4ae2-a392-ebc0fd6db63d",
        "cursor": {
          "ref": "345152dc-9e93-4de7-8a7a-d0524b26ab5f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "de063ca2-3669-475c-ad85-73735a86250d"
        },
        "item": {
          "id": "97785510-ca34-4ae2-a392-ebc0fd6db63d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f65bf3dc-b217-4680-9ae1-1cc9d097707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2f21ed-bc10-4dc3-9c05-c4b46c432f46",
        "cursor": {
          "ref": "f62780a4-7d49-46d2-ba13-99a0ab967dcc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a9506bf1-a1f5-4f3d-bd40-65d5bc4b4be3"
        },
        "item": {
          "id": "2f2f21ed-bc10-4dc3-9c05-c4b46c432f46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21e11275-afb5-4512-9b58-5a52e4b3a0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b66225-31b0-44fe-8ba1-5c08a845427e",
        "cursor": {
          "ref": "e1df70fe-3106-4e5f-b25f-c95ffe385d4b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "09dd4b3b-6a4c-4634-99c8-3b03b4e6dd5d"
        },
        "item": {
          "id": "e5b66225-31b0-44fe-8ba1-5c08a845427e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3383a056-0a7c-4288-bc97-3b6bac1962bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9449b6-aab7-4f0d-919a-1f615c627e13",
        "cursor": {
          "ref": "3db81cc3-b09b-4635-a837-83445dee3412",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "35f0f9b3-782a-40fe-a200-c34474e86154"
        },
        "item": {
          "id": "cb9449b6-aab7-4f0d-919a-1f615c627e13",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b537f456-df8e-45d3-b746-4f143d26e6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9b6f30-19cd-41d0-ae2b-41e9893cbca9",
        "cursor": {
          "ref": "0228b70d-29d5-4e46-8d62-cb2171200e1f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e80e21df-fcf7-42a4-8cc1-442f18341307"
        },
        "item": {
          "id": "4b9b6f30-19cd-41d0-ae2b-41e9893cbca9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d32ed848-3c0d-4e2b-91ac-08be44a8e170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd598a44-7368-4ccb-8015-e74cd5c22b8f",
        "cursor": {
          "ref": "0ca017e8-f590-4993-8520-d6f299683e85",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1ba722d9-30d1-4e09-b756-e62862a72048"
        },
        "item": {
          "id": "dd598a44-7368-4ccb-8015-e74cd5c22b8f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "38a92328-4990-4e2f-91cd-99e4207a058c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96cc369-1f35-4934-b8f6-fa8e3816d3da",
        "cursor": {
          "ref": "6c08475c-13d9-46b5-82b4-636182964e5b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a12c6cb4-98f4-4da6-804b-c9f3eeb18a64"
        },
        "item": {
          "id": "f96cc369-1f35-4934-b8f6-fa8e3816d3da",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e269602f-d068-492d-ac28-a3c04dbc65b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd087af-4941-40a0-89ce-618ec930bd2e",
        "cursor": {
          "ref": "533f74a4-7110-4786-9403-cc3fa0240b23",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bee948d4-7227-4c75-b4f1-e909105e91c3"
        },
        "item": {
          "id": "5dd087af-4941-40a0-89ce-618ec930bd2e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0fae9216-cfbb-45a3-886b-ce968ffedc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc10221c-0ddc-4e96-a29b-0b30335925b3",
        "cursor": {
          "ref": "ee8c9959-3f97-4018-8758-f7b35ed03331",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3d91ec2-7c9f-45e0-8b9d-a0c249e1503f"
        },
        "item": {
          "id": "bc10221c-0ddc-4e96-a29b-0b30335925b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e96e8e50-db17-465c-a353-c99de5319316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c655e47-6d64-479e-ad15-04c0c48c93da",
        "cursor": {
          "ref": "481c9bda-47eb-4767-a43d-c2aed0ddbed2",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "64f56367-3af2-4c17-a5a1-3518b8652e9a"
        },
        "item": {
          "id": "6c655e47-6d64-479e-ad15-04c0c48c93da",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9b77baa2-b197-4567-abcf-ed951238eb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00699a18-5061-4978-937f-d8ab9a97b99c",
        "cursor": {
          "ref": "42936804-1ac0-48ba-bfa8-665e209eedf8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c1be08a7-239f-4e2b-939d-6ad9fd6bbe7f"
        },
        "item": {
          "id": "00699a18-5061-4978-937f-d8ab9a97b99c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b0ee0852-719b-4c37-9db0-439d6481cd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a2885f-6c6c-4950-85ee-994ee295fa9d",
        "cursor": {
          "ref": "7ec5d98b-eef0-44a4-9027-87f97ef08d6b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7c765e7a-cfb4-4f91-a800-bc7dfa9240e6"
        },
        "item": {
          "id": "e6a2885f-6c6c-4950-85ee-994ee295fa9d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22dfd301-92a2-46cf-8e72-7e9a9b4c7de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72202d59-a009-4f56-83d7-8ad5b5d332cc",
        "cursor": {
          "ref": "8e3ace43-58fc-4f34-b8de-4f7c7f9a3ea4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b3b0abb5-7c6c-455f-a7d9-c02b85589a3c"
        },
        "item": {
          "id": "72202d59-a009-4f56-83d7-8ad5b5d332cc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1c70d5b6-fa5c-4c02-b523-e007aa0e4a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b2b5c2-5a36-4ab8-84b9-64845b78a3bd",
        "cursor": {
          "ref": "128b0fa6-a294-4fb0-9c35-504e6cd1183e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8267bb2b-e42e-43ca-8910-aae386f10364"
        },
        "item": {
          "id": "c4b2b5c2-5a36-4ab8-84b9-64845b78a3bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa18acaa-7957-42a5-b17b-0b2d82492f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169cefcf-77af-4d01-807b-00d18dda2d8f",
        "cursor": {
          "ref": "46016331-8952-4286-92ac-ece32b2eb104",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c5cc2b65-c8a1-4933-982a-937930034ecd"
        },
        "item": {
          "id": "169cefcf-77af-4d01-807b-00d18dda2d8f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9b7a152-f298-4dde-a983-66b4d4d4eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a5390-f9b3-450f-81f9-b0de2abed849",
        "cursor": {
          "ref": "4ef5e1e6-5eb1-42ea-b38e-a18edd6c49db",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "45708a00-e481-49c9-a7e8-90f2d9c4460d"
        },
        "item": {
          "id": "385a5390-f9b3-450f-81f9-b0de2abed849",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bd44c419-79d9-445c-a2eb-13811922fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d74fe45-f25a-4f12-a567-96da477a1467",
        "cursor": {
          "ref": "88d2e5fe-e88e-435e-9b00-b8a2b147292f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f0b05486-3b47-4b38-984e-5ebf302d5299"
        },
        "item": {
          "id": "5d74fe45-f25a-4f12-a567-96da477a1467",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d130c5a9-1ab2-4ba1-b09b-164ba75dec61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad65de0c-a6eb-410f-8fa1-0ffc6ba8117e",
        "cursor": {
          "ref": "35f49dae-ac7f-4d73-8f30-aaa6aa9e29b8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0044da91-30c1-4489-921d-db2853a0b898"
        },
        "item": {
          "id": "ad65de0c-a6eb-410f-8fa1-0ffc6ba8117e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b4dd4e23-0855-4bab-84c8-3ea28df30e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b6de23-0f02-424b-847a-2a03d285225b",
        "cursor": {
          "ref": "4f7d02f8-e322-4ddc-93f4-0b1f4818911d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7df92a5b-d69d-4bf8-bd02-cb28dd0132d5"
        },
        "item": {
          "id": "03b6de23-0f02-424b-847a-2a03d285225b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53fcd937-567a-4908-9a2a-c4e1292b0838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b705af2-9dfd-40ce-a95f-b73c2a101d5b",
        "cursor": {
          "ref": "d288653b-a072-4b12-9ff4-b1e08cf94a3e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b5edb55a-dcc5-4f37-9344-53bfcb6c649d"
        },
        "item": {
          "id": "4b705af2-9dfd-40ce-a95f-b73c2a101d5b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b66b2025-d4ca-4ba9-812a-333bb6b84217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c02e8-d509-4a8f-a77a-bb86d21621f7",
        "cursor": {
          "ref": "1be5dbba-e56d-4740-b4f5-3b9e060b98ef",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2d14de25-3d88-4d91-9382-a9ae171c6ca1"
        },
        "item": {
          "id": "492c02e8-d509-4a8f-a77a-bb86d21621f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf0b6fb3-81be-4fdb-ad07-15147191242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dabae4-5cc8-408b-88dc-71d5623026f0",
        "cursor": {
          "ref": "84c123c9-b3e6-47ae-aa73-2b1f724de95d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d323fe1e-3774-40d0-b812-2f40a36edecf"
        },
        "item": {
          "id": "d8dabae4-5cc8-408b-88dc-71d5623026f0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f1cd8923-2508-4ab4-800f-86782e962893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd59f52-4261-4115-8c10-05f28db898c3",
        "cursor": {
          "ref": "d8d8ee3f-dfb5-4cd5-b2ff-2a311d12d69e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b690ce9f-3891-4e88-8d14-7dc7d083ec6f"
        },
        "item": {
          "id": "acd59f52-4261-4115-8c10-05f28db898c3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4b137095-105c-4b83-8522-a59148f80f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa82edf0-363b-49e2-901c-47220f160b4c",
        "cursor": {
          "ref": "933a46a1-7530-47cb-99ef-a0621248881b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d90557f5-75e5-4b3b-89eb-6c645cd0c7aa"
        },
        "item": {
          "id": "aa82edf0-363b-49e2-901c-47220f160b4c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b166d04d-38cf-4537-a2d9-c4b9d8b341a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3886c356-2334-4cb8-9b5a-5f9d37c768a5",
        "cursor": {
          "ref": "b2976fb1-3828-41b5-b0c1-da05a35692e5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "87f73b94-0d40-46f9-bcd3-b0f3db741ddf"
        },
        "item": {
          "id": "3886c356-2334-4cb8-9b5a-5f9d37c768a5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "77825e43-dfc9-4e52-8573-3885cc0e1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363f6f2d-c17b-4fac-b189-4592425a0b28",
        "cursor": {
          "ref": "7e2f3548-e9a9-4a50-be73-2e0e470b2cc4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aad30455-0f3f-4dc9-9612-ffd0e5fba9b2"
        },
        "item": {
          "id": "363f6f2d-c17b-4fac-b189-4592425a0b28",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5bd84d3-4a14-4f36-89e4-2dbdb2c5b71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878e544-f2fd-4981-8cc9-98188f1fefea",
        "cursor": {
          "ref": "d3e9c64a-06ec-4079-b103-408a0735d3aa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "71dad907-f4f0-44d0-bd54-8408dcd41cb9"
        },
        "item": {
          "id": "c878e544-f2fd-4981-8cc9-98188f1fefea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eeb0303a-6174-4e6f-8918-82d70a7b1c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b906a72b-63db-4c6e-84c3-ffffdbdc4ad5",
        "cursor": {
          "ref": "9f1bb059-cf15-417a-8827-ac24ffc0021e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "090d7150-bb51-4121-85f8-32c79051817d"
        },
        "item": {
          "id": "b906a72b-63db-4c6e-84c3-ffffdbdc4ad5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3c7095f6-1167-4f97-9f05-b0d3050195a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be75bc4-5430-4c41-ac6a-f1e82d207a1f",
        "cursor": {
          "ref": "574c5f60-bd87-439a-beed-02c9ba5e1620",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "688bb01b-8af8-4e10-81a1-4f9a598f7beb"
        },
        "item": {
          "id": "8be75bc4-5430-4c41-ac6a-f1e82d207a1f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e4041ae-9d5e-4da0-ae4a-0c9ba98b4637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a077a1e1-bfe1-42d6-9f22-f4ac20c4fd1a",
        "cursor": {
          "ref": "67df46aa-cb02-4d85-9ed1-60ba98a6e049",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f11c8720-4a32-415b-8f62-42036fa79e5d"
        },
        "item": {
          "id": "a077a1e1-bfe1-42d6-9f22-f4ac20c4fd1a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8aa7e302-4029-486b-97b4-4df1f119815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02229d49-1cf2-4b2c-a054-28b7612d5fd8",
        "cursor": {
          "ref": "b67f56b4-d8ac-4771-a21e-bb2d685901a0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "66d0957a-6379-47b0-a8d5-0599ac599600"
        },
        "item": {
          "id": "02229d49-1cf2-4b2c-a054-28b7612d5fd8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c9c688b2-f6dc-446b-a276-ab8a9210f467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e723b08-1243-42ea-827b-7a631bac95c5",
        "cursor": {
          "ref": "ec001b7a-33c9-4f18-bf52-e0a1fdd46ca5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eebe8ba1-df19-4ab0-886c-91b7a183740a"
        },
        "item": {
          "id": "9e723b08-1243-42ea-827b-7a631bac95c5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ac2ec5cd-cd07-4918-9e4e-a9271fbb89ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4297ed8d-e135-44c9-bda1-936948dc4a07",
        "cursor": {
          "ref": "82c3f67d-ca7b-4703-b830-2a292d6d8b26",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "89bc9559-2c48-48a1-b59f-ab7b2c8bfe0e"
        },
        "item": {
          "id": "4297ed8d-e135-44c9-bda1-936948dc4a07",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0eba8a7a-9f69-4b62-b69c-e560a0bb95fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f978ef3-fdc6-4e60-be34-46a1c78df4dc",
        "cursor": {
          "ref": "7306493a-a903-4f2d-aece-3a067fdbcbd4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0f19826-63fd-4c50-8a82-c66c864048d6"
        },
        "item": {
          "id": "7f978ef3-fdc6-4e60-be34-46a1c78df4dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "56ec7ec8-7eea-49ce-b0cc-07b4f3767a4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2d55d-8479-4ca3-aa20-d6d8c832b4e5",
        "cursor": {
          "ref": "dad02c80-43fa-4a73-8063-34ee520d636e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "362c8d5b-9596-4f57-89be-a7bd091c85fb"
        },
        "item": {
          "id": "b1d2d55d-8479-4ca3-aa20-d6d8c832b4e5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5658d6c9-dac8-42c2-b982-81788193958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "09b67a29-af06-49db-814d-a7cfa0658d58",
        "cursor": {
          "ref": "749fec18-8f7a-404e-8ded-da450816b1e5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62bbec66-8529-461d-b989-c5a3a3667a80"
        },
        "item": {
          "id": "09b67a29-af06-49db-814d-a7cfa0658d58",
          "name": "credentials_issue"
        },
        "response": {
          "id": "538f18e3-7dc3-44ba-af71-1efaff860af0",
          "status": "Created",
          "code": 201,
          "responseTime": 2670,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a13c9e-2676-47c0-9350-0903c1e9f93c",
        "cursor": {
          "ref": "ee44c692-8a8b-43ae-9994-18d3c58457a6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39b8ba29-fcc2-4cbc-a426-94a2b68e803e"
        },
        "item": {
          "id": "99a13c9e-2676-47c0-9350-0903c1e9f93c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "89c65f81-9eba-4454-8fe1-fb1e8733b5eb",
          "status": "Created",
          "code": 201,
          "responseTime": 2002,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9806d7-19a6-4704-b308-a53a225e7bcd",
        "cursor": {
          "ref": "b284a855-a2fd-4d10-8144-01c85d6c10ee",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6dd0ee77-8727-4c6b-a1d6-8f2833321bec"
        },
        "item": {
          "id": "bf9806d7-19a6-4704-b308-a53a225e7bcd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "791f215b-40f8-48cf-a608-7ade41813fbb",
          "status": "Created",
          "code": 201,
          "responseTime": 2016,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c490de-f22d-46ad-9bb4-50a8d7ff900d",
        "cursor": {
          "ref": "b416a627-a37b-4e42-87a9-ddff51357e45",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "913d354c-f799-4a9c-855e-5aafa8102518"
        },
        "item": {
          "id": "08c490de-f22d-46ad-9bb4-50a8d7ff900d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1b1020f8-ed72-45fe-aa0c-b1842e8eb871",
          "status": "Created",
          "code": 201,
          "responseTime": 2339,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0342944f-8b54-4689-8add-065fcc4fe5d0",
        "cursor": {
          "ref": "290dbfb6-a173-40e5-9a57-f8c18e2e7ad9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c15661b4-acfe-4b7f-b798-d0bfb820b934"
        },
        "item": {
          "id": "0342944f-8b54-4689-8add-065fcc4fe5d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "66056888-01a4-4faf-928e-7b489b9891e5",
          "status": "Created",
          "code": 201,
          "responseTime": 2070,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "947d9434-f3e4-4c79-bdc1-7ce35f446df0",
        "cursor": {
          "ref": "9c69cad0-8eb9-4cf5-964e-59cd85ec3e19",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "06882ff0-815f-498e-8de2-273916f251b0"
        },
        "item": {
          "id": "947d9434-f3e4-4c79-bdc1-7ce35f446df0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "46f31f7d-f186-4a89-a1f8-20967cddec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d9e3ee91-803d-4f42-9cda-126b415a6625",
        "cursor": {
          "ref": "fd71b26e-a82c-499f-aaab-1486ce6678fc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9e17a46-e6fa-4b58-9e3f-4cd6cbff3a85"
        },
        "item": {
          "id": "d9e3ee91-803d-4f42-9cda-126b415a6625",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0bbea3ed-964a-487d-8d23-346bd2d780d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c0f72b-f948-4b75-809d-ecda1b11cf88",
        "cursor": {
          "ref": "ef6938f1-4625-43e6-8c43-5f0730e2ab4c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4c699853-b325-4a7e-8cf1-8d5afc8be89d"
        },
        "item": {
          "id": "b2c0f72b-f948-4b75-809d-ecda1b11cf88",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "78af6172-5085-406c-8dc7-1f4d71cf2d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d1b7e1-3d99-4d1a-8b69-9cae5ead1003",
        "cursor": {
          "ref": "be850110-3889-49de-abfa-f59fe1134111",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa9abd85-76f2-4a73-9afc-6c80b721ce82"
        },
        "item": {
          "id": "02d1b7e1-3d99-4d1a-8b69-9cae5ead1003",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3cb821f-c277-4db2-a174-ee11d082e2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950c83e-8793-4fb2-9d8d-0ca859c82a33",
        "cursor": {
          "ref": "4bdb63ee-0436-4d26-a58f-d1b175f51285",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "46e818e8-ea16-4cc3-855c-6f008ddc90e8"
        },
        "item": {
          "id": "a950c83e-8793-4fb2-9d8d-0ca859c82a33",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6742618a-b0b1-4ced-aa16-b815fc4c9d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d095c81-861d-46ac-a210-1ec4552d6dea",
        "cursor": {
          "ref": "e7dedb4b-a666-4573-8aa9-b1834ae10fc6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "982e77fc-994d-4cd2-bd01-a71edafdfcb7"
        },
        "item": {
          "id": "7d095c81-861d-46ac-a210-1ec4552d6dea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74d4cd5d-3e53-4898-b750-456338931044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965f810c-76ef-4788-a335-726af527a97c",
        "cursor": {
          "ref": "c16cc51b-b548-4eb7-a40d-afdbdccb5007",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6af8d79c-7530-4a43-b706-44be78815392"
        },
        "item": {
          "id": "965f810c-76ef-4788-a335-726af527a97c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97f06858-5210-4cc1-9745-28c542fa87df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9efb196-eb60-4d38-8c54-231dc4ad3166",
        "cursor": {
          "ref": "a87494e3-1d6f-431c-919c-9b0348f16920",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9873a925-4e19-4e91-b34e-9e8a7ee5fd13"
        },
        "item": {
          "id": "f9efb196-eb60-4d38-8c54-231dc4ad3166",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36a788e3-3b31-4c67-9160-5f01edecfb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af53811-c4df-48ac-88cb-1154d048f5ba",
        "cursor": {
          "ref": "91af10b9-f72b-40f5-87d1-f48b1fd64e6f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0576c3cd-66d1-46ff-ba99-f22c89e37c13"
        },
        "item": {
          "id": "1af53811-c4df-48ac-88cb-1154d048f5ba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45e69f96-bf15-4b73-bb91-611ac7b4bd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9df114-c4c8-4d1f-80e2-942a70efb26c",
        "cursor": {
          "ref": "5791e3e9-32d8-4424-8c43-5979badffa87",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "630355b9-4f80-4638-80f0-073ab7afb23e"
        },
        "item": {
          "id": "be9df114-c4c8-4d1f-80e2-942a70efb26c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fd765bbc-9196-442c-a039-d020a690c6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d802253f-aa2e-4abd-ae25-c2e806abe980",
        "cursor": {
          "ref": "47487157-c1f3-47b5-9b67-431b2d023feb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "81a0ebf1-1405-4d6c-834a-aaf4e5caf89c"
        },
        "item": {
          "id": "d802253f-aa2e-4abd-ae25-c2e806abe980",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ccfcd203-09e0-4ec9-b229-9a7b0a7d3f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08eed95-de73-45cb-863a-3316585a7403",
        "cursor": {
          "ref": "54e98455-81f6-4ca0-8882-8e86ad222b43",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3d37b8fa-fe8f-4a42-a15e-6cdefbe063f5"
        },
        "item": {
          "id": "f08eed95-de73-45cb-863a-3316585a7403",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b48acd0-50f3-4f0a-8adc-a03418c60358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdab25e-db14-46a2-85bc-788151866a07",
        "cursor": {
          "ref": "56a401e6-7535-4a3b-bc4c-3f0001c51738",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b49d6054-3ab8-42c5-8340-a8173bb722f6"
        },
        "item": {
          "id": "abdab25e-db14-46a2-85bc-788151866a07",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1571c7ed-1485-46e8-8f99-8aa0076c9f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7274a310-e8eb-4340-bc2c-52a62adac80c",
        "cursor": {
          "ref": "26bb6a19-c661-4443-956e-4a48ea5f9a8e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ac40e12-f378-47d5-862f-a67610f8573b"
        },
        "item": {
          "id": "7274a310-e8eb-4340-bc2c-52a62adac80c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1e8a753-76e3-4ec3-9be9-be821843e687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0479b2e6-b6c3-4748-81e2-c54cefdf1184",
        "cursor": {
          "ref": "42af33b8-43d0-4465-8f18-485d45907df0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7f126716-dafd-4293-b934-b8781f2a2283"
        },
        "item": {
          "id": "0479b2e6-b6c3-4748-81e2-c54cefdf1184",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c047125f-a8bb-4348-b521-902b6a316f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcf31e8-9743-444e-9622-27b88440858a",
        "cursor": {
          "ref": "ac9df17c-097d-4cf1-9044-d6414a726eeb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42194b5c-fb1c-4cc1-9919-1e0cbcccbd5b"
        },
        "item": {
          "id": "cbcf31e8-9743-444e-9622-27b88440858a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1bd91269-b3c2-4d53-8699-79076ec599af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b185a04-b077-474b-a860-9c684455b305",
        "cursor": {
          "ref": "6082370c-a48e-4899-b2b9-436621b9a5ad",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c05d869-0585-46d7-bf83-798fa8277fcf"
        },
        "item": {
          "id": "3b185a04-b077-474b-a860-9c684455b305",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a943e68-2049-47df-a2af-c169155f5e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690d5c03-77e3-43e3-a23c-804b755d7295",
        "cursor": {
          "ref": "46340a52-4ed1-4e59-8ac8-bdec8ded05bf",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6ea5e0df-9863-44b4-8264-9cb4a82bef1e"
        },
        "item": {
          "id": "690d5c03-77e3-43e3-a23c-804b755d7295",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a64c6223-78f9-4033-b79c-46e7da264c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e17d92-157e-4d67-bffc-2e08554274f7",
        "cursor": {
          "ref": "645caf42-0172-435b-962b-3f7790aac875",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d6d0c21c-369e-4c06-a8e2-71c24e4e8577"
        },
        "item": {
          "id": "43e17d92-157e-4d67-bffc-2e08554274f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b29d625f-1e5f-45d1-ae91-f39a2bc1d3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082c9ed5-f65e-4e0a-839e-9ab33d91c2c0",
        "cursor": {
          "ref": "bfd4efd7-586f-4d61-b991-440db0418688",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eb367b64-f159-4c4a-b340-56a8c0e1cf0a"
        },
        "item": {
          "id": "082c9ed5-f65e-4e0a-839e-9ab33d91c2c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d5c188b-a14b-4057-87c0-35e361f9c6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87654e21-8bc3-44fe-af05-e0a025384e03",
        "cursor": {
          "ref": "8056f4f8-ae67-437b-8abe-276d78f366ec",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5b72a6fb-33fa-4b68-ae25-2c2a6e5681fe"
        },
        "item": {
          "id": "87654e21-8bc3-44fe-af05-e0a025384e03",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "017635cc-e7d2-45f0-ac6e-3673cd13e835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb5c9e-1ca8-49b5-9de4-e7cbe917fcd7",
        "cursor": {
          "ref": "ecc9080b-365d-4d7c-9f27-2cc1c454899a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f5986a7e-2bd7-4d42-9db1-a88c46e589b9"
        },
        "item": {
          "id": "8ccb5c9e-1ca8-49b5-9de4-e7cbe917fcd7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "332b5e07-0f9f-497b-954a-9ebe8f5cc652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaf027a-375d-45f4-ac6f-a80c72555462",
        "cursor": {
          "ref": "a831d920-9fff-4d64-884a-80032201de3d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "45eadb06-4425-46f2-95c7-c29e3f3bb8b8"
        },
        "item": {
          "id": "4eaf027a-375d-45f4-ac6f-a80c72555462",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "be39021c-81a6-417b-a2d2-076327f1fb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c63adb-e8c2-4e1d-97ee-99428a073a1b",
        "cursor": {
          "ref": "52c78830-4371-49a6-ab9b-28b0e05d4779",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2aa107d7-138d-43f4-a640-fccfee802d90"
        },
        "item": {
          "id": "a1c63adb-e8c2-4e1d-97ee-99428a073a1b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f83d9bcb-4996-4414-8926-7ac371529f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e9a4f-122a-41eb-a008-3e2564d74f4b",
        "cursor": {
          "ref": "08d68ed1-6f5a-42ca-a0ff-0aad2ed137b3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3a24d3f-9b56-4600-972a-a05c05dc1363"
        },
        "item": {
          "id": "190e9a4f-122a-41eb-a008-3e2564d74f4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2a6a9198-b2f3-40cd-9416-4f1464257fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ecfacc-3a82-48cb-8531-ac46541c2ec0",
        "cursor": {
          "ref": "6390d7d5-5502-4fac-a5d5-e0e41836c843",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "26ad8abc-357c-49e4-bbb4-5f5810b5b472"
        },
        "item": {
          "id": "c0ecfacc-3a82-48cb-8531-ac46541c2ec0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "403f63fd-9262-4d41-95c7-029db361c195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec9d7c3-efc0-44bf-8405-703b3f55a4e9",
        "cursor": {
          "ref": "0666e54b-22ab-410e-8b02-2a7b5e3a1cb9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c260edc7-8889-43d5-b8e4-78d475b3dbc4"
        },
        "item": {
          "id": "5ec9d7c3-efc0-44bf-8405-703b3f55a4e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f2d74208-5354-4bff-8398-ca560a17522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8aeb36-509e-4469-8a04-e68610029713",
        "cursor": {
          "ref": "effea476-1629-44cb-bb22-05a3456a3b2d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "47c12dc3-33ed-4a6b-b521-1f883744e0e5"
        },
        "item": {
          "id": "1f8aeb36-509e-4469-8a04-e68610029713",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "43f1628a-7a4b-422c-b4bc-8777353694fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47c422-b2c5-4d0c-8856-ba88de6ed21e",
        "cursor": {
          "ref": "860c6f16-16f1-46d2-b9c7-751f9013701e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f8dca8b-7a65-4bbb-87c4-86818d5dea73"
        },
        "item": {
          "id": "ab47c422-b2c5-4d0c-8856-ba88de6ed21e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "34c6e309-76b6-4bf1-9d70-b5f26872efd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c317d-935c-4bff-8328-d2f517781400",
        "cursor": {
          "ref": "b3e2ec35-ce77-4c49-9aee-2e89be028ff5",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e72b5e6a-bf6e-4747-91c4-4f2a5a8aad49"
        },
        "item": {
          "id": "1f6c317d-935c-4bff-8328-d2f517781400",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "369b7407-12c3-4bd7-ad46-80ac58d827a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f34317-313a-472b-acea-3bbb3fdd5894",
        "cursor": {
          "ref": "9c635718-bce8-4986-be2f-f21a80e787ff",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "531a2bca-6a31-44fc-9e1f-ee737b9470a4"
        },
        "item": {
          "id": "47f34317-313a-472b-acea-3bbb3fdd5894",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66ec9814-8c5e-4dfa-af33-aa76b498b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9077da53-c1e4-4fd4-8a51-aed8c5e11ccd",
        "cursor": {
          "ref": "c83ac41e-2077-404a-8a43-2ca99de4c376",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10df2800-dd48-46e6-a7dc-97691bad7fc2"
        },
        "item": {
          "id": "9077da53-c1e4-4fd4-8a51-aed8c5e11ccd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1013e05b-4acf-4612-aac0-48ded354c33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9c90ca-c1dd-4623-b8df-ce832c9d0075",
        "cursor": {
          "ref": "7b652730-9e0c-4210-b20a-dd0e96494532",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "619f62d8-76b3-4696-b062-4d6768ec094a"
        },
        "item": {
          "id": "2b9c90ca-c1dd-4623-b8df-ce832c9d0075",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4a57228e-8ff3-4ee3-a9d1-8110a510fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6aca2-8028-4757-b2da-0844b48e9efc",
        "cursor": {
          "ref": "c44ba237-9fea-4ac3-a77a-11f8697b001b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3b8d4b6e-6e6f-45a4-a521-161a7ce7f46a"
        },
        "item": {
          "id": "aec6aca2-8028-4757-b2da-0844b48e9efc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "341b8198-3fe9-4da5-9109-d6a97c4f5a53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620fba26-8aa8-49a0-a351-468c4f9ab7a3",
        "cursor": {
          "ref": "8504687a-24e8-4912-88c9-9d2d6ce57a16",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "acf48d41-7e2d-44ed-990c-e3a9376fa9a7"
        },
        "item": {
          "id": "620fba26-8aa8-49a0-a351-468c4f9ab7a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a446100-7688-4be6-8b37-e3bbe34d25df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566fa0ab-0ad8-4db0-bd44-81c7434a51f3",
        "cursor": {
          "ref": "b5afdcb0-152f-4bb6-9bb8-abc32c99105a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fdaf2311-b2da-49c5-a18f-c56550c9423d"
        },
        "item": {
          "id": "566fa0ab-0ad8-4db0-bd44-81c7434a51f3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7a11ae9c-1615-42db-8f4c-f8370c33e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf896a1-44aa-4c77-8384-824f1d91af24",
        "cursor": {
          "ref": "d575757c-e7ac-41c1-86b8-f530a3c2947d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "84e4b541-8cd4-45f7-8e45-b03b77e1bf44"
        },
        "item": {
          "id": "4cf896a1-44aa-4c77-8384-824f1d91af24",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e9de54e5-bf96-4b52-b177-7b86a1505956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fc3221-db59-4187-8828-48409c78648e",
        "cursor": {
          "ref": "8a7dc96c-1009-4eff-a667-50ea75e8ea1a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "14827edd-75e5-496d-ab4e-ac5a5b4638b2"
        },
        "item": {
          "id": "05fc3221-db59-4187-8828-48409c78648e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3a93739a-e4cf-4300-86c1-85a1f50f9bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afacc714-67c2-4806-ad83-d51c84cbaa33",
        "cursor": {
          "ref": "6ed1a57b-8447-4ec7-9c9a-fc45d56be0e1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b61d34d7-7d69-4eb3-882c-60a8aca4090f"
        },
        "item": {
          "id": "afacc714-67c2-4806-ad83-d51c84cbaa33",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2872596f-2094-45b8-8925-9128ec096299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0783a6d-001b-40bc-96a3-16d4afd64fe3",
        "cursor": {
          "ref": "8c9c0cb9-b943-485b-b6c9-5deca7051af7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6d6b8138-7df7-44ff-840b-378860962ef5"
        },
        "item": {
          "id": "f0783a6d-001b-40bc-96a3-16d4afd64fe3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "26534405-4e3f-4b4a-adc1-1bac8ede0383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b209359-7135-4f56-9d4c-aa540e042c6d",
        "cursor": {
          "ref": "61b831e3-be24-4adb-8a9b-be7463910b8f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "57fae4c7-1d84-49fb-8267-eb0142cc4e88"
        },
        "item": {
          "id": "2b209359-7135-4f56-9d4c-aa540e042c6d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58fe7ee9-7817-4cad-a6e5-28c034a0bdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040dd983-1a20-4fab-81ca-921a48e160b2",
        "cursor": {
          "ref": "53971a36-f6cd-4aa7-b333-e59ba1d4cd89",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "684ae9ef-9b59-4c43-b1c1-2e1640deea6b"
        },
        "item": {
          "id": "040dd983-1a20-4fab-81ca-921a48e160b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e3778a7-17f7-4d3e-b82c-5f1e18a8a721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1821f1ca-ff35-4893-857d-065abf07bc9b",
        "cursor": {
          "ref": "5be876ba-80cc-4dde-8d0f-f92389037396",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "87068460-6b38-4f06-a034-f4051f43a951"
        },
        "item": {
          "id": "1821f1ca-ff35-4893-857d-065abf07bc9b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fcdeef21-301b-4d95-9df9-dd9fcb030385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c26563-3362-4ded-ad1e-fe0f38f06ce6",
        "cursor": {
          "ref": "f834ae8a-80b9-4595-ae80-e82d010b7fae",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "637cae3d-2c70-49ab-8f3f-95fac5235030"
        },
        "item": {
          "id": "f3c26563-3362-4ded-ad1e-fe0f38f06ce6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0835aef-1c95-42d6-aa23-3d33b027b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70d10e1-f404-4565-8610-d768c4f90b78",
        "cursor": {
          "ref": "d380675c-0fae-485f-904e-ce9af1e006d3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff6a891d-bf24-4ca5-ab88-8af64da4022f"
        },
        "item": {
          "id": "c70d10e1-f404-4565-8610-d768c4f90b78",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "237098a5-46d2-4905-95e5-034f3ee7e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbfa03f-9e63-4064-9099-e0d4f541003b",
        "cursor": {
          "ref": "13963612-391b-4186-8909-0d0e4dbdd138",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f4523090-1498-4e6c-b98a-27a7c52fff6b"
        },
        "item": {
          "id": "2cbfa03f-9e63-4064-9099-e0d4f541003b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9d07316e-3e87-4f5f-ad2c-8574ae7f0ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c9e9a9-7f81-40d7-8da7-7f7664f89d71",
        "cursor": {
          "ref": "eca0ceeb-cccc-4d54-9703-dcd481de07b5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a703fd6b-6f1d-4099-8b9e-fb9341885443"
        },
        "item": {
          "id": "f4c9e9a9-7f81-40d7-8da7-7f7664f89d71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "730a5329-8502-4923-ba1f-3fa0291fd485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cd177b-7c9c-4750-860d-f4d45724b65f",
        "cursor": {
          "ref": "9fe7911f-4735-4e46-96ff-0217e9f781f4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a909850f-517d-4c9e-bd14-bfbc233b36e0"
        },
        "item": {
          "id": "f1cd177b-7c9c-4750-860d-f4d45724b65f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "740fe4bd-9464-431f-ab68-65c4f294bcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac1887e-24c4-4a2c-957a-c5cbe5c1d4bd",
        "cursor": {
          "ref": "56f64f6a-2ec1-4242-9ec5-d1aa421dd528",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "31fe4513-9b93-4f3c-b090-e4fd54fb92da"
        },
        "item": {
          "id": "aac1887e-24c4-4a2c-957a-c5cbe5c1d4bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5113133d-21b6-40f2-b465-487026ea95d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed8e3c3-6387-467f-bcca-779d1701a407",
        "cursor": {
          "ref": "b5f44bc6-9085-4ae7-8c54-f9f5adea47a6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dea1893a-fb17-4a71-b91c-c345fe0b9828"
        },
        "item": {
          "id": "aed8e3c3-6387-467f-bcca-779d1701a407",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4351d651-d725-4362-87ec-f063b50f2744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ec52d7-1009-47de-ae6b-fe5fd44d2a6e",
        "cursor": {
          "ref": "ea54ca24-4aa4-488b-b667-28333b6b4421",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34fae7a2-e4d6-4986-bf4c-92fc51ec382e"
        },
        "item": {
          "id": "59ec52d7-1009-47de-ae6b-fe5fd44d2a6e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "902908db-aa14-40af-8649-17db7434ffa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd2092-7157-498f-917e-6e1aa7b27d9b",
        "cursor": {
          "ref": "a961a143-75ae-4c01-aa92-4cd5261eea93",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "87565da0-6cc6-4b16-a711-4cf1edb6048e"
        },
        "item": {
          "id": "65dd2092-7157-498f-917e-6e1aa7b27d9b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6112733d-1edd-47b6-a2d7-9f003ab3a394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8931fb5-028d-4503-9f6d-a8af82a6cdb9",
        "cursor": {
          "ref": "ed8b8c01-7f9a-45f9-9f35-da1188a2b2bf",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dac0ffdf-b97b-4230-b10e-531f54c2f450"
        },
        "item": {
          "id": "a8931fb5-028d-4503-9f6d-a8af82a6cdb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "480878c9-d57c-4ba9-9ab6-ee16d93e1e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77625a0-116b-4902-9d4e-ff8be6b3c3f2",
        "cursor": {
          "ref": "acd0bc80-260f-4224-a7af-0b6695b87520",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "adb6eba0-93cb-412d-b32d-d320c93ae606"
        },
        "item": {
          "id": "c77625a0-116b-4902-9d4e-ff8be6b3c3f2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ce2f3bc-433c-49de-ac8f-3f2baab5109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadae42a-2d5a-49c5-bddf-106f4470b2a8",
        "cursor": {
          "ref": "39f320e2-f9c8-4e55-936f-7145a631880e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2d45d1b1-87dc-469e-adfe-71f48af31bed"
        },
        "item": {
          "id": "dadae42a-2d5a-49c5-bddf-106f4470b2a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20b4cd2f-3a9e-4590-9b98-7c7ce2ab699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23192c11-359d-44a8-800b-022362a3e5fb",
        "cursor": {
          "ref": "b70a5dde-1191-4bf5-b2a9-3843c0eb8038",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89a5fe1d-d056-4f0a-ab7a-9fdc5e13ac8b"
        },
        "item": {
          "id": "23192c11-359d-44a8-800b-022362a3e5fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43ee06d5-fddb-4207-b2a8-4998584df210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ee332-ca88-4696-b8a5-d785b6094261",
        "cursor": {
          "ref": "55dca963-b8b4-4fbe-bc64-14f50cba5b77",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "74748776-8179-41e1-81d7-65dbedcc1cdc"
        },
        "item": {
          "id": "312ee332-ca88-4696-b8a5-d785b6094261",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d078592f-c262-49db-8edf-2fdabe281c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefc6a0a-7762-4a4f-9586-fa2e45f2569e",
        "cursor": {
          "ref": "cddd3de9-3f66-43ab-99a0-d5e644c1b6b7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4f33ade9-69fe-4ca1-ac85-ff6b631ea0ee"
        },
        "item": {
          "id": "aefc6a0a-7762-4a4f-9586-fa2e45f2569e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb84d85b-87e6-4a07-abe6-2ff89b55ea48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2965add-6273-4ea8-a69c-9d193f40d14e",
        "cursor": {
          "ref": "9b8a574b-7992-435d-9719-6f6630de3e44",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4af8c94e-6744-4a1d-8557-29497d97b292"
        },
        "item": {
          "id": "b2965add-6273-4ea8-a69c-9d193f40d14e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c950fffa-85f9-40de-a3eb-87743c3db60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6316490-aa9a-44d8-926c-903d905badfe",
        "cursor": {
          "ref": "0b19e2b3-ab1e-461a-b4e3-278ff649c1a3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "98d371d7-9d8d-4362-83bf-874c8b8d08f5"
        },
        "item": {
          "id": "d6316490-aa9a-44d8-926c-903d905badfe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8673edf4-4d2d-45bb-9f00-e36da8617a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6390a022-1bc1-4295-9a6f-70519936c7d0",
        "cursor": {
          "ref": "f698f7d1-b6e1-45e1-94b6-ce579adaebdc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "887bf857-c157-47ef-9bb0-c85f4e70f4c3"
        },
        "item": {
          "id": "6390a022-1bc1-4295-9a6f-70519936c7d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7e661d1-f7a5-4e80-af72-4525dc427b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2b32d2-e176-4495-bda4-d9a1644c83e4",
        "cursor": {
          "ref": "c8e107f8-65f3-4de3-b7cd-cde84502236a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cacd9f52-73f2-4a92-ae28-1b12a7e43987"
        },
        "item": {
          "id": "fb2b32d2-e176-4495-bda4-d9a1644c83e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e0b2fd9-49b5-4843-b0c0-37c0c5900cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b5e81-e8c8-4900-ae42-85cd62872d59",
        "cursor": {
          "ref": "14f7937a-1ae3-4f3e-a571-ff99e8c926db",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "898d5c3c-0a50-4dc8-b797-b1b597ede5aa"
        },
        "item": {
          "id": "539b5e81-e8c8-4900-ae42-85cd62872d59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5021ae8e-f6aa-4262-910c-1602f2d157e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abee1089-047b-49c5-9a3e-6330098d7f40",
        "cursor": {
          "ref": "edb48831-850b-4b94-9ee2-ee59eec5a883",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4a376c45-1ccc-420e-875b-48393cdfe3ae"
        },
        "item": {
          "id": "abee1089-047b-49c5-9a3e-6330098d7f40",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9bba7d42-84bd-4874-b490-2b555d559503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f838c555-e262-4a31-8a43-2d5573a3f0a9",
        "cursor": {
          "ref": "3e6755b3-c4f0-4130-8d7f-57e866c025bc",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7c3dd58f-e644-4c14-8459-ab7491284e35"
        },
        "item": {
          "id": "f838c555-e262-4a31-8a43-2d5573a3f0a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "900e40a1-e720-40bc-92ba-942d9f9e4274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad2edd-baab-48c3-92ee-7e65d0586bf7",
        "cursor": {
          "ref": "94de84fa-6d32-4171-83b3-278a459c89ec",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "388fc467-fb7c-4165-9a7f-c3286e5feb9c"
        },
        "item": {
          "id": "e5ad2edd-baab-48c3-92ee-7e65d0586bf7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "85017005-efe3-4f38-9c91-bffca0708f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb25533-d79e-4cec-8d01-6ec0c80d9ff3",
        "cursor": {
          "ref": "754b1470-59d0-4594-85b7-f93429391876",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d387354a-981e-44f4-8ad0-a45350c5f63d"
        },
        "item": {
          "id": "1eb25533-d79e-4cec-8d01-6ec0c80d9ff3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eeb3ac67-6ebf-4927-aaae-451d5ea24895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205779dd-d93e-45d8-b21d-550914b65094",
        "cursor": {
          "ref": "f1a66671-4878-4c68-8193-b28a142aa703",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29b1af1d-5c7d-4abc-aa6a-7e5dea511e5d"
        },
        "item": {
          "id": "205779dd-d93e-45d8-b21d-550914b65094",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a391c5d9-1d7e-49bb-9123-c20f73783660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7007abea-b858-4be4-82f4-140ce05302a2",
        "cursor": {
          "ref": "f57e536e-bc81-4fd0-870b-8ada2569bede",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6b0eeda4-e982-44b7-b5bd-d1e70c5acf2f"
        },
        "item": {
          "id": "7007abea-b858-4be4-82f4-140ce05302a2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2696e545-05dd-437a-9bad-31668511ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6f558e-fca8-40d7-88f7-7b82bcf2acf1",
        "cursor": {
          "ref": "55c4373c-e364-46d3-9c9f-f93784bf71be",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bf4f90e1-4cd2-465e-a7d4-3fef7f18ece0"
        },
        "item": {
          "id": "4c6f558e-fca8-40d7-88f7-7b82bcf2acf1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b9385cb-1369-4a97-bfbb-abd77565959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8257518-2dec-497b-83dd-8562761507c1",
        "cursor": {
          "ref": "27e68011-5959-430d-b33f-1cda4823f0a6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f8268c61-0f56-427c-8aa5-2ddb9ca43c2f"
        },
        "item": {
          "id": "e8257518-2dec-497b-83dd-8562761507c1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0971432f-a95a-473e-964a-3b540ab11f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67ec47-428b-41ab-a0c1-c66ba56f1d90",
        "cursor": {
          "ref": "75ff7d19-e374-485a-be9c-64e4ba6d1a06",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60031865-ac3c-4c1b-80a8-47eab85c9cb6"
        },
        "item": {
          "id": "ee67ec47-428b-41ab-a0c1-c66ba56f1d90",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6458603d-e2e0-4bdf-a5d5-7ddf65258266",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7947e7-b92b-4ca6-a1cc-173bedfa704c",
        "cursor": {
          "ref": "69c96a74-5c01-4e22-9fe5-7f282ead5be5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7447d99b-ef59-4e60-b382-9d9ffa3b1828"
        },
        "item": {
          "id": "5d7947e7-b92b-4ca6-a1cc-173bedfa704c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26d6b04d-50eb-4b14-8c7a-fa4d3e13f45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dbf5db-ca6f-484e-8409-1ebeb7eadaff",
        "cursor": {
          "ref": "4321fde4-3d0b-43ca-ab25-b080c7db8f0d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d0f23acc-74fb-48a8-831d-2fa000879050"
        },
        "item": {
          "id": "e6dbf5db-ca6f-484e-8409-1ebeb7eadaff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ca97cc7b-6323-41b1-b16a-f24e1069d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7d05f-1b73-4708-b4b8-eaa10ebd8f91",
        "cursor": {
          "ref": "1c82f169-404e-4352-87e6-41a51591971a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "38ae7d4e-c07b-47bb-a25e-9c7d3682ab9b"
        },
        "item": {
          "id": "f5b7d05f-1b73-4708-b4b8-eaa10ebd8f91",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b44eee8-4908-4f72-99bc-8c5882b73d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3dbd4-2a28-4b51-bc88-1f26b460fb3d",
        "cursor": {
          "ref": "2f70fe84-963c-4501-80aa-5f275a5312c5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a83e14d3-fd9d-4cf4-a367-daf39f24cb1b"
        },
        "item": {
          "id": "22c3dbd4-2a28-4b51-bc88-1f26b460fb3d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fa09e8c6-7af7-4383-aeb5-18af76aadccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ac2ad7-55a3-427a-9e31-a51d30d62047",
        "cursor": {
          "ref": "d1937fbc-4f92-4450-ae54-d308759e1f27",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c4eb2a36-0bbf-4dde-bdd3-31e8f02ada5d"
        },
        "item": {
          "id": "52ac2ad7-55a3-427a-9e31-a51d30d62047",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c3cc16b1-3ffa-4090-8c84-e0189a7b33b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54431c7c-a668-4954-8ee4-0241a98c7bb5",
        "cursor": {
          "ref": "d3f4ba3a-6017-43e1-9444-00723b077903",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7083b725-4536-47db-96e6-64a51c2f832d"
        },
        "item": {
          "id": "54431c7c-a668-4954-8ee4-0241a98c7bb5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "afd7f246-5532-4631-9844-ef2db029739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3dcc58-a902-4f05-ac88-5c18123418c6",
        "cursor": {
          "ref": "0fc26d60-b5f1-469a-9e57-996243467a2e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2b7f5a50-3a94-48d9-a9aa-04f55e89e96e"
        },
        "item": {
          "id": "ef3dcc58-a902-4f05-ac88-5c18123418c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b666663b-51dc-430a-8d6f-61ff9a9ead1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340dda8-f8fd-4be2-b5bf-a117460361ad",
        "cursor": {
          "ref": "ac458729-b168-425f-a3b8-108140a1db32",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b2c658c6-400e-47e5-b11c-9b0d3e9400e7"
        },
        "item": {
          "id": "8340dda8-f8fd-4be2-b5bf-a117460361ad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "69c6ab13-803e-43e4-ae27-f453345079a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1465cfe5-3b74-4149-84db-5b0fa68b1e52",
        "cursor": {
          "ref": "be81e847-447d-499c-bc6a-041308056d90",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d21defe7-7ec3-4325-bbd5-b837b5540126"
        },
        "item": {
          "id": "1465cfe5-3b74-4149-84db-5b0fa68b1e52",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8939b809-e6ff-45cf-9712-b98b3543cce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e493f0-d198-4907-85b8-a5727bf5cdf4",
        "cursor": {
          "ref": "cd920aee-c6f0-4fd2-95a2-e0a79fbfdc0e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c4c4396b-11df-40ac-bec0-f97befbe5af9"
        },
        "item": {
          "id": "c2e493f0-d198-4907-85b8-a5727bf5cdf4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e177f48-6527-42c1-8d94-1efb06772405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd0d6a-3697-43a0-88a4-69be8ded0041",
        "cursor": {
          "ref": "9cc7679d-2ae3-44f0-890e-be85abab01a0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "69c3f9f3-7dc9-4889-8bef-f721b5cfc476"
        },
        "item": {
          "id": "f4cd0d6a-3697-43a0-88a4-69be8ded0041",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e600572-cc31-40cc-aa54-f114352cf089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132e4ff7-be6a-4249-9cdc-a2092d113f3a",
        "cursor": {
          "ref": "62431997-638d-44c2-a198-4db576224cec",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0777a206-fd06-4796-bbef-2d4fc267c64a"
        },
        "item": {
          "id": "132e4ff7-be6a-4249-9cdc-a2092d113f3a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "98c3f69a-c4b5-41bd-bac7-7361999ec1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a435e0-8a20-4f42-aa68-38014d94fa25",
        "cursor": {
          "ref": "e31f1e38-63bf-41ad-b6e9-69c9b06adfd3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "49320f1f-cce0-419c-8100-fb385c6d1f49"
        },
        "item": {
          "id": "c1a435e0-8a20-4f42-aa68-38014d94fa25",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a3005627-bc55-4f4f-810f-95790cdcd6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d9170c-9cf1-4ed0-a6d3-ad79228e2f7b",
        "cursor": {
          "ref": "2587c097-db6b-4af9-be41-ded306d86272",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb317187-f505-400b-a089-2cdf96b61dfc"
        },
        "item": {
          "id": "28d9170c-9cf1-4ed0-a6d3-ad79228e2f7b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "66f09787-2ca6-49af-a566-77829f2e9e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18365ed-ef32-46be-b2b1-ad1000d021de",
        "cursor": {
          "ref": "4b7a37d2-df00-4f6b-9c76-e9b6be8211cc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "713b08eb-fe25-4916-bb9f-bafb2cd5d58e"
        },
        "item": {
          "id": "c18365ed-ef32-46be-b2b1-ad1000d021de",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ce1e143c-6858-4941-b5b8-2ae9974fe8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67aa923-b9ad-4f37-926c-af5a62ff422c",
        "cursor": {
          "ref": "41762878-eba6-4516-92c1-3df1124fc8de",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5c1a106c-4638-4d05-add3-e4dffd875c19"
        },
        "item": {
          "id": "d67aa923-b9ad-4f37-926c-af5a62ff422c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "69926bda-bf19-49b2-ba12-1a133723b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf7f6e-ef60-4f44-bd3a-bb509ab1933f",
        "cursor": {
          "ref": "4e750ba6-331e-4988-af91-a61b90a59573",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7166de85-ae9c-46e2-bad8-43772e30cd4d"
        },
        "item": {
          "id": "edbf7f6e-ef60-4f44-bd3a-bb509ab1933f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "67f535e0-4e84-4ef8-9e0f-8d955177ada8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edca5b9-4cff-4d83-a2f2-4cfea060ff85",
        "cursor": {
          "ref": "9d660907-4961-482d-970f-c59a06358a3b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "01219906-991d-4c24-99b5-72701e8b7b40"
        },
        "item": {
          "id": "6edca5b9-4cff-4d83-a2f2-4cfea060ff85",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a1607330-c538-4ee1-a371-678e85c350aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a6efbf-89d0-4054-bed9-4b2b6a2cbeaf",
        "cursor": {
          "ref": "e21987c6-680a-4214-8f24-65cb1731c5e8",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "911048f5-8fbc-4612-bb6c-80f66b728652"
        },
        "item": {
          "id": "44a6efbf-89d0-4054-bed9-4b2b6a2cbeaf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "03479c13-2feb-46ad-9314-8fba0bf2ef50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa458663-c91c-4c6c-a9ae-277d0cc8a32a",
        "cursor": {
          "ref": "2d32c419-b311-4fa2-8a0e-b47255c5ab7e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7a04f13-c5c6-46c8-ab8b-da439de8a1b8"
        },
        "item": {
          "id": "fa458663-c91c-4c6c-a9ae-277d0cc8a32a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d237e3bb-cb49-4704-bb6e-37e315d50165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37183ae3-6000-4e57-b38c-fcf32d79848a",
        "cursor": {
          "ref": "a8eb7aca-1ddc-4400-b3de-d3b41dbf5e58",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "522e5094-efb8-4561-a867-da0680002f83"
        },
        "item": {
          "id": "37183ae3-6000-4e57-b38c-fcf32d79848a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a3a56ef4-2d20-41b2-ac05-12b722b8dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdf526f-8d94-44bc-a68d-ea82ef3382c4",
        "cursor": {
          "ref": "2bc565dc-e030-43fe-8954-1c0f6b31b0f6",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ea86de82-4f5b-4efc-8c40-b2cbdb72b7c0"
        },
        "item": {
          "id": "2bdf526f-8d94-44bc-a68d-ea82ef3382c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac6e5230-a20b-4f3c-8f0f-f948a45ea78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caaa4de-e5ff-41ec-a0a8-1c27e2ba0894",
        "cursor": {
          "ref": "9c941666-7169-46b8-9a8e-59f55cf533ca",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "11ade9c6-800c-4c15-ae95-10c253799d5c"
        },
        "item": {
          "id": "2caaa4de-e5ff-41ec-a0a8-1c27e2ba0894",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5c0331c5-00c0-48a2-bc3c-89693260264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2842e2d0-8a78-49b5-be3e-3624a1528bb3",
        "cursor": {
          "ref": "482e589d-6e55-4f0b-a40a-12004e256faf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "943e8019-d657-4609-ad30-352f8221eefd"
        },
        "item": {
          "id": "2842e2d0-8a78-49b5-be3e-3624a1528bb3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0ae82007-0a74-4b18-a205-ab4e0dcd7eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d86eeeb-7e8e-4e5b-9873-69ef5ff217ae",
        "cursor": {
          "ref": "54faad6b-32e7-4e8d-adc0-47d5f1d1ec49",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "78a52205-832a-4ebb-8126-6b948b7f0339"
        },
        "item": {
          "id": "0d86eeeb-7e8e-4e5b-9873-69ef5ff217ae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b2609cd8-9133-4852-a839-5c1aa11f1664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5996765b-cf4b-4ea9-ba00-7b60509b902f",
        "cursor": {
          "ref": "3d302736-0a0a-4d8d-93b8-6df5dab35fcf",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f470bd7-743a-47a3-b3dd-af3342e78fcd"
        },
        "item": {
          "id": "5996765b-cf4b-4ea9-ba00-7b60509b902f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ffa6b9f0-d6b4-47d1-97ff-d7de0ceef6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68942c84-bee9-41b8-bce9-f7ef5cea4c3d",
        "cursor": {
          "ref": "3f72ea3b-89ff-4475-9f99-250b12544d25",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f35bf8a-870b-4d0a-896a-52314922304f"
        },
        "item": {
          "id": "68942c84-bee9-41b8-bce9-f7ef5cea4c3d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5f5ad063-7c94-4439-b893-2aeebbfb4331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e9d2e4-83c8-4cc2-b0d2-aad095258b34",
        "cursor": {
          "ref": "d28e0034-8a7d-42ef-bbe6-235a25170074",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b8b97238-4705-4339-94be-3f2baf48599f"
        },
        "item": {
          "id": "78e9d2e4-83c8-4cc2-b0d2-aad095258b34",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9206aaac-98e4-47e2-bdca-ec31af23ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221fd48b-3b89-403d-a887-11e1602bd697",
        "cursor": {
          "ref": "e1e220d7-2424-493f-a546-ef8b406375ad",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "48688509-99d8-44f1-92d5-78ce9a600d82"
        },
        "item": {
          "id": "221fd48b-3b89-403d-a887-11e1602bd697",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fb5f707e-02ce-4408-81c8-1b00145a686d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06efa17a-06f7-4192-9e46-e75b6c870e47",
        "cursor": {
          "ref": "7a786195-551b-48a0-9219-9722c0ef55af",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "879dfe68-bea4-44b0-b41e-529f0ffe63ce"
        },
        "item": {
          "id": "06efa17a-06f7-4192-9e46-e75b6c870e47",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1584ba61-92d2-4356-9e80-e4c5eb0d912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064354a9-58cf-4baf-b2d9-5402fff2b0a6",
        "cursor": {
          "ref": "b8aeef0a-1df2-49c8-be5f-ad372aeeb16d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7a305bf-81d6-4d32-b180-c8a29e66593a"
        },
        "item": {
          "id": "064354a9-58cf-4baf-b2d9-5402fff2b0a6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "40a9e32b-1171-4140-9262-0430a2bc6ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9200ef-5b8c-4cc6-b096-d43966d70493",
        "cursor": {
          "ref": "e8b85eaa-fe71-49af-8af3-3628939f2b52",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "981a5f99-5608-4f24-9e76-6f7435603467"
        },
        "item": {
          "id": "4d9200ef-5b8c-4cc6-b096-d43966d70493",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e7eaafb1-1b97-47ac-9773-ca0d4d13c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b5aa58-e277-4f29-b53a-ae9ca4398b2f",
        "cursor": {
          "ref": "a255712a-6731-4a01-bd9c-39adfec16e55",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a58daa4a-2ddd-488a-900f-7469762671fc"
        },
        "item": {
          "id": "41b5aa58-e277-4f29-b53a-ae9ca4398b2f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1f763e3d-34a2-4b53-babc-d2ca4316947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a526cca3-86f1-4bcf-a423-aa9b2a980d4e",
        "cursor": {
          "ref": "2acaef43-3bea-46cc-8f98-ce6e04834411",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56b27550-a810-4adc-a4ab-03e893ab940e"
        },
        "item": {
          "id": "a526cca3-86f1-4bcf-a423-aa9b2a980d4e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ceedfda9-d2ea-403d-a03d-b4cde047fb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd85ec4-d8ba-4eb2-8fe0-79e53763009a",
        "cursor": {
          "ref": "6dcf82f9-35bc-491f-826a-1da3fb51e8c1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd476028-9a5c-40a0-98be-58f0ad16cf90"
        },
        "item": {
          "id": "ecd85ec4-d8ba-4eb2-8fe0-79e53763009a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d70193fb-8cb7-4040-b21b-5266df9cce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba846ce5-0eca-4abe-8144-d577419465a2",
        "cursor": {
          "ref": "9d91db19-8c90-4943-a648-765c3f547aad",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "09a7766d-9db4-48cb-b241-d232cea1d3a9"
        },
        "item": {
          "id": "ba846ce5-0eca-4abe-8144-d577419465a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "adf73a3c-c90c-4a5e-ab5d-46ecaf3fd989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52ab758-fd55-451a-b6d3-dbbec5c5dfd5",
        "cursor": {
          "ref": "d62d0e4c-7108-4e6c-a693-6c9b16dd78eb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f7dc9b38-2ac8-4b98-a059-3040f3ed9819"
        },
        "item": {
          "id": "b52ab758-fd55-451a-b6d3-dbbec5c5dfd5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aacceb7c-1cd5-465d-bbe6-a3fc1572fe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729596ed-8be0-4c73-b363-13da583f021e",
        "cursor": {
          "ref": "7fbabe00-2c29-46d0-8061-8ba2ff4e3a96",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "528da5f3-f195-4043-9b9c-e857719cad43"
        },
        "item": {
          "id": "729596ed-8be0-4c73-b363-13da583f021e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89dfd418-ae85-4149-a893-7d7227ecf5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25357d2-7071-45f6-97d4-0d6a10cd3c8a",
        "cursor": {
          "ref": "a78fd528-5d0d-4651-92f3-17434ca9a255",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e491bebc-e54c-44fb-b3f6-3b21e133561d"
        },
        "item": {
          "id": "c25357d2-7071-45f6-97d4-0d6a10cd3c8a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a112db07-548e-480e-85aa-e55163ed1537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9159669-f661-41c9-967c-cc1cce326e47",
        "cursor": {
          "ref": "eda584e4-a620-4cc6-ad77-fbea54295285",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "67e5429f-8c28-45de-8a5e-9ca72fe982cf"
        },
        "item": {
          "id": "a9159669-f661-41c9-967c-cc1cce326e47",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f4bfe8ef-f86c-466e-bd1a-bb6a3aa90ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ddf832-3621-4415-97df-6ba89fb864cb",
        "cursor": {
          "ref": "5c8c8d96-5593-4613-8691-a79420f24e4f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f1eac88d-f1ee-4dcb-b2f5-09882ab9003c"
        },
        "item": {
          "id": "84ddf832-3621-4415-97df-6ba89fb864cb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3bcb6ff1-c911-4ba3-ab55-363fa16ba34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b110d0-a5a0-464a-a113-cdfe2ebe5c5c",
        "cursor": {
          "ref": "01b4b60d-b234-4e31-b17a-8a6e430aea59",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a502e5c7-4c0b-46a0-95fc-1c5c73c44149"
        },
        "item": {
          "id": "27b110d0-a5a0-464a-a113-cdfe2ebe5c5c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6b0787a1-7c69-461c-81ef-fd430f965194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc28f30f-050f-4150-a499-efd71c2fce0a",
        "cursor": {
          "ref": "acf72f48-f589-49ff-813f-294a59d2302f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3970431e-031c-411a-b8cc-881b41fca1bf"
        },
        "item": {
          "id": "fc28f30f-050f-4150-a499-efd71c2fce0a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1feb3e4b-9c5d-4ad5-a3bd-e6a4d7e86cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c498b6d8-1809-4568-9542-71395fa11475",
        "cursor": {
          "ref": "24791603-78e3-4cf4-8d34-2288ae592a56",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "441e2633-379f-493c-8cf0-d6c315057d2c"
        },
        "item": {
          "id": "c498b6d8-1809-4568-9542-71395fa11475",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bbe2d0c3-5f28-49b0-af2d-5b29fbde1315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24045951-a2bd-4d6f-9c0b-05c1ed55a7f7",
        "cursor": {
          "ref": "53e38435-cb1e-46d2-9f75-948bc4a464d8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d2a97067-e6a9-4203-b895-031b46fc984a"
        },
        "item": {
          "id": "24045951-a2bd-4d6f-9c0b-05c1ed55a7f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "37750e93-ca80-4c99-b534-de0e05b8313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69187a3a-aaa7-4c47-99b7-a80a4bb8739e",
        "cursor": {
          "ref": "4dfdb0c2-00e4-4577-82e4-56f2ebc63a7d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "73698807-c3ad-40fa-9dfe-2de28d45f7b4"
        },
        "item": {
          "id": "69187a3a-aaa7-4c47-99b7-a80a4bb8739e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "231294ea-e0f3-4383-8a1c-d9f0b172217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fafc4c-398d-4b75-9085-d1959dd34a71",
        "cursor": {
          "ref": "fdae1ce6-a4b4-4530-af20-a040faf95a76",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea9dd2c8-eb6b-43fd-87ec-26aa5f6678a8"
        },
        "item": {
          "id": "66fafc4c-398d-4b75-9085-d1959dd34a71",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0dcc40f1-2796-464a-bd71-a3f43a8af4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4c9e73-7dde-4323-bfff-8749cc581ea6",
        "cursor": {
          "ref": "806f6b10-efc0-4620-a890-14f0a25c43b2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3daade4b-c573-4a97-a9fa-29efb59b97cb"
        },
        "item": {
          "id": "3b4c9e73-7dde-4323-bfff-8749cc581ea6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8edd1ca0-2613-4645-ba85-942fd592131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303c52c1-1f35-43bc-8fed-4c783b0ffe75",
        "cursor": {
          "ref": "799a3d82-4fdd-4343-9eec-b5048ee165de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "50ecd0ad-ac72-4ab4-8074-9db5e6ad5768"
        },
        "item": {
          "id": "303c52c1-1f35-43bc-8fed-4c783b0ffe75",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e7326c94-1fc3-4175-9170-d1a90f155cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031fbd8-76cc-43b6-9412-98a8f6da3311",
        "cursor": {
          "ref": "ed4e0158-f56c-42bb-b968-fa13f6e8c151",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9e83e16f-67ae-4138-95b5-8f6afa44d60a"
        },
        "item": {
          "id": "6031fbd8-76cc-43b6-9412-98a8f6da3311",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e8f48610-28df-4f49-9248-f4f6d6c7dd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d276da1-6fa1-4ff1-af47-42caa82acab4",
        "cursor": {
          "ref": "41ad797b-d0fa-44de-a82a-7bf45007c6bf",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3b7ff267-4283-4692-a009-3d39fcc2ec13"
        },
        "item": {
          "id": "9d276da1-6fa1-4ff1-af47-42caa82acab4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f2328980-a496-44b7-b9a8-1a83f706c1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5cd77b-6578-4a19-8be7-236caaac2bfe",
        "cursor": {
          "ref": "c0562096-c5ec-4651-bf0d-ee98f2bb4642",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eedd85ef-74c5-41ae-8845-44fe2b0ca69d"
        },
        "item": {
          "id": "3d5cd77b-6578-4a19-8be7-236caaac2bfe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "754e3aec-8bc0-464b-997a-7d960e648ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b167933-f6cb-460a-b53e-0c62b705fb5d",
        "cursor": {
          "ref": "e853f681-1d8d-4065-b0b2-dd58cfa3acaf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "facfa608-3a45-487e-98a8-300024418847"
        },
        "item": {
          "id": "4b167933-f6cb-460a-b53e-0c62b705fb5d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c0924aa1-e84f-4da7-823b-fe62dd5c200b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c70aaf-b827-411d-a556-fe773580e372",
        "cursor": {
          "ref": "ee323be8-58b4-4093-ba83-10fc70f1a2b4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d05d6519-9fc6-45d7-9460-426ac3810b15"
        },
        "item": {
          "id": "89c70aaf-b827-411d-a556-fe773580e372",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61a52fa6-8dac-4ed9-907a-b7365a8215c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dfccdd-98b4-45f5-81f6-d954e534fa79",
        "cursor": {
          "ref": "2b2a8459-ffe6-4cad-a801-1f52fda3a0c6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "491ce07b-461e-4f5f-af1f-dbed1666c552"
        },
        "item": {
          "id": "c3dfccdd-98b4-45f5-81f6-d954e534fa79",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e6ea3679-3c88-4e45-bc44-dbfbfb05c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01847047-69e9-4bf2-b60e-4c4301064eaf",
        "cursor": {
          "ref": "ca544246-d3d4-4fa1-8fb0-5d7e525fa2b6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f64edc54-9d86-4d00-ae0a-8773f70ed5ee"
        },
        "item": {
          "id": "01847047-69e9-4bf2-b60e-4c4301064eaf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f8a45cbe-9c30-46b1-b123-4d9addb2482a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c834b6a3-2d87-4f20-8664-184737596653",
        "cursor": {
          "ref": "2fba3eaa-a38c-4e76-b59b-36b7ca7a10a4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "681c486c-1e15-47ed-be11-a623399d9d68"
        },
        "item": {
          "id": "c834b6a3-2d87-4f20-8664-184737596653",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cdf4bef2-79e5-4e52-a3cd-6bdffa211a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367d0528-ca20-4fba-9631-15dc2735df91",
        "cursor": {
          "ref": "1d80c659-91fe-4030-949d-9d88b1de4367",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d8e87e7-c1b5-4ac3-b5d0-af593451f4c4"
        },
        "item": {
          "id": "367d0528-ca20-4fba-9631-15dc2735df91",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c53fd165-0ffb-4e28-8d75-d24abc62265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca901fc-7667-4b4d-a90b-89e3829da74a",
        "cursor": {
          "ref": "2271b4d1-dd8b-4c0b-8edb-13d0abb313f1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6d300e4f-16cf-4ca8-ace3-80b3b8630f53"
        },
        "item": {
          "id": "4ca901fc-7667-4b4d-a90b-89e3829da74a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9ed9902a-23e5-4e20-8297-5cd0acb94f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056098b7-0c71-4f9d-aa15-09343fbfcfaf",
        "cursor": {
          "ref": "89d0ac1c-9e09-4d07-81eb-a47668b43eae",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c6d42b4c-d508-464b-a977-9e888af53212"
        },
        "item": {
          "id": "056098b7-0c71-4f9d-aa15-09343fbfcfaf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "804cdcde-de9b-4025-9635-a354a7f477f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc458e5-789b-4952-a68d-4021c9c44e76",
        "cursor": {
          "ref": "c623a726-38ce-4df0-b464-6610ebc75b0c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2fa845f-6ac4-4b25-a478-88d78fd0532b"
        },
        "item": {
          "id": "9fc458e5-789b-4952-a68d-4021c9c44e76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aae42d7d-2092-4ec3-b93e-187bc8eaae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dd3289-ae16-4083-992e-2bf61c69aa9c",
        "cursor": {
          "ref": "5ef316af-4728-4ccf-b480-df2a563a4724",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "94154652-b1a6-4b31-8550-eecd14359b05"
        },
        "item": {
          "id": "d6dd3289-ae16-4083-992e-2bf61c69aa9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8fef1251-923a-4934-834f-ab3517bd2f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afe7120-7714-49be-bb67-2e52b2b2845e",
        "cursor": {
          "ref": "f23cc1cd-2af6-463d-86ca-23c6a43b07e4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b141823f-c4b4-4d28-9bf3-df7a8ee8f90d"
        },
        "item": {
          "id": "2afe7120-7714-49be-bb67-2e52b2b2845e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5cb8b43-42b5-4ab9-93a9-843b93b4c784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861606e1-571e-4084-9869-a1dffa9cea5a",
        "cursor": {
          "ref": "16df26f5-ef1f-407c-85ee-679f0d463891",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3a81dd75-9821-4bfe-8a51-bae14f16a47a"
        },
        "item": {
          "id": "861606e1-571e-4084-9869-a1dffa9cea5a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "691d5d0a-08dc-4c2b-9b2e-8fe8ac20874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0699c8f-a7c9-4b74-b90a-dd00bdce411d",
        "cursor": {
          "ref": "64c5770f-610d-4b3f-88fd-dd0128bbe0dd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2f85bf9-3f14-4234-971e-bb9a5e2e367b"
        },
        "item": {
          "id": "e0699c8f-a7c9-4b74-b90a-dd00bdce411d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ebdfbd89-688c-45fc-a8fb-7b353c657258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd77cae-c10c-4c00-b8b3-8e9f890d11f0",
        "cursor": {
          "ref": "5b5b24cb-9896-46cd-b0ef-9355001dcca2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb7b48c2-1afe-4996-b96c-18c2c7f7e729"
        },
        "item": {
          "id": "ffd77cae-c10c-4c00-b8b3-8e9f890d11f0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57f48175-3a9a-4b1c-a71e-cbc885326cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9674c668-4cd5-49c8-8929-10948ccec602",
        "cursor": {
          "ref": "428d574f-d2c3-431a-8cff-31af2df11b3a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "adc41dad-b941-47da-8d61-a5fc5d0d4609"
        },
        "item": {
          "id": "9674c668-4cd5-49c8-8929-10948ccec602",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9bf78dac-c9fe-44e1-bd15-bbcbe79a5c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b203c928-ccd5-47bb-8d87-f2f989ea9106",
        "cursor": {
          "ref": "dad9e7c6-45a8-4e06-b3ef-d5f37b1c6391",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "03c838d5-8796-49e3-8ed6-185f9d484003"
        },
        "item": {
          "id": "b203c928-ccd5-47bb-8d87-f2f989ea9106",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "413b2ce3-e9fe-4a0c-a936-495114b3f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726733fb-6972-4a82-bfdd-fff94ebe2f80",
        "cursor": {
          "ref": "31a89aee-1d89-43ab-9045-2d2784a2eaad",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "45e3d169-8854-4c5b-a3bf-edd3ea75447d"
        },
        "item": {
          "id": "726733fb-6972-4a82-bfdd-fff94ebe2f80",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c3726e9-b4f9-45a0-9070-d61d6ffbcf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b3a6e7-32ec-4dab-b526-477d0c4dacf1",
        "cursor": {
          "ref": "394b0502-ec6f-42bf-9088-e6e4e6ee7606",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "867ee4dd-8d93-4f54-b585-b417877a10a4"
        },
        "item": {
          "id": "18b3a6e7-32ec-4dab-b526-477d0c4dacf1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1044863b-51b9-4944-aca1-a706ddbefd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbaf5a4-a26f-4d02-a57f-5cfebea3029a",
        "cursor": {
          "ref": "941616cf-474d-44d1-a0bd-fc3b1a675132",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13b2ad0c-a383-4a6e-bce9-cb17408e74c5"
        },
        "item": {
          "id": "2cbaf5a4-a26f-4d02-a57f-5cfebea3029a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4582bb60-04ac-4410-8664-924ab2414cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addfe4ee-b5ca-4ddb-90b4-00906625b9f3",
        "cursor": {
          "ref": "fcccaaa5-3843-48ed-a6ae-ef6cb864b7c2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5ffd2fbf-da8c-4601-9f5a-842cfc6d1293"
        },
        "item": {
          "id": "addfe4ee-b5ca-4ddb-90b4-00906625b9f3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ad64e34-0849-47de-84c0-0fc6fb080758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5975f2fa-d99a-4fbd-82be-a605695f80e9",
        "cursor": {
          "ref": "777b21c2-c42a-42ca-b96e-4573e820a4ad",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a96ecefa-fc16-4861-a1dd-4fa2e9ab14fa"
        },
        "item": {
          "id": "5975f2fa-d99a-4fbd-82be-a605695f80e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc71a768-bec5-40a1-93d2-9367abbf66d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3daa603-64b8-4add-8a0b-39d2195c9841",
        "cursor": {
          "ref": "9bff66e6-ce5a-4e41-992f-a1f050af14b0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4c939152-3fa9-42ca-9dab-d594d95f4c8a"
        },
        "item": {
          "id": "f3daa603-64b8-4add-8a0b-39d2195c9841",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dc5484c0-d3ec-4f99-92e5-34f4b6d683a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ddb6fd-c903-4af8-8736-9b732d63dadd",
        "cursor": {
          "ref": "0173c195-0143-4217-89be-b42a8232f62a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4302fc77-dabe-4d33-895c-c0ee8cf4291c"
        },
        "item": {
          "id": "b7ddb6fd-c903-4af8-8736-9b732d63dadd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bef0633b-a36d-4341-a08a-2cf665888477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d85434-3683-4940-a20c-c3bcd7fbbfde",
        "cursor": {
          "ref": "68e8445c-6015-4b70-8a16-ff2aa8acfbc2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "604714b3-1d66-4fef-881a-5986df314e13"
        },
        "item": {
          "id": "a7d85434-3683-4940-a20c-c3bcd7fbbfde",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e1730ead-228e-4f3c-b256-67a4e5cb2653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152116e-e91d-44ad-a0b6-3d827e5d2877",
        "cursor": {
          "ref": "49124066-5aef-4a90-a474-3e4dbcf71e95",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2361cac4-524f-432f-bfd2-77be032d4ec6"
        },
        "item": {
          "id": "7152116e-e91d-44ad-a0b6-3d827e5d2877",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "02965b22-dc30-424a-9f17-1665b751b0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbb29fb-ccb7-4496-9f3e-67acc071fa12",
        "cursor": {
          "ref": "cd57b9e3-2a48-4abb-a04f-6dd06d5c5efc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "34948389-321d-4809-82fc-48f2be7f3386"
        },
        "item": {
          "id": "9fbb29fb-ccb7-4496-9f3e-67acc071fa12",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a539c43-8a7d-4d3e-b267-4915e5af4f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c6913d-0a6d-4181-a9c8-97f581044a45",
        "cursor": {
          "ref": "6072e3c4-8557-499a-98ea-a6248fc186c6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "310ea9ce-5708-4a3d-9680-9257ac545f28"
        },
        "item": {
          "id": "d3c6913d-0a6d-4181-a9c8-97f581044a45",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "98b199d5-dec6-4afd-80bf-466db703fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c57e0-b31f-466b-b02a-b4f8c984bee4",
        "cursor": {
          "ref": "70d2861d-85f1-4e03-9338-60b02451cb24",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "dd0c12f0-a113-4531-8de7-087747f52d3d"
        },
        "item": {
          "id": "698c57e0-b31f-466b-b02a-b4f8c984bee4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92f44a53-d2a0-4cff-8357-0eddbbad10d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff627f-3a92-457d-a532-8b26bf90ffc7",
        "cursor": {
          "ref": "0474381e-d092-4601-92c1-52249db2d670",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "59f076ee-34c3-4c7e-a260-cf2285112481"
        },
        "item": {
          "id": "dcff627f-3a92-457d-a532-8b26bf90ffc7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8ebc0917-6974-4cff-9b4e-9acf02cd7633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c851c-3547-4be5-b7c7-7c77bc4e9842",
        "cursor": {
          "ref": "3bb49d08-c69c-4abf-a7a3-7f74e8e76c60",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fb06fdc0-4112-4211-88ae-d149266d1657"
        },
        "item": {
          "id": "db4c851c-3547-4be5-b7c7-7c77bc4e9842",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3ca732f0-21c3-4c84-9e91-e8d50dace373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59a7264-98b0-43f8-92bf-c38633b3d7dc",
        "cursor": {
          "ref": "5cbd626c-9f98-48bb-a954-25c7c085b31b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2435eb7d-c702-4e8f-b2a7-bef1c5eeef4f"
        },
        "item": {
          "id": "d59a7264-98b0-43f8-92bf-c38633b3d7dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5392a283-e5e0-451a-896c-0c5f2b969d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c01715-a1dc-4489-bb52-a4fbb30d99f9",
        "cursor": {
          "ref": "4dba3a42-bed0-4f8a-a3b2-26ffbd3e46ee",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "16784ec0-e0a4-494b-b382-eddee3198240"
        },
        "item": {
          "id": "92c01715-a1dc-4489-bb52-a4fbb30d99f9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c9f093fd-0c85-4d4a-9414-0ecc49f01699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f6a81e-0896-4211-b5d3-6cab503f7033",
        "cursor": {
          "ref": "683323d6-381d-4201-a61b-a2e4301628f2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0dc725d1-f798-479e-a3d8-659bd6aa5eaa"
        },
        "item": {
          "id": "42f6a81e-0896-4211-b5d3-6cab503f7033",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bc4ae57d-82d1-4927-a82e-b668d9f89812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be956ef4-77dd-4188-8749-13af9b06b85f",
        "cursor": {
          "ref": "9080dc93-ff3a-4b21-b47f-b2792ddcbf7f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3e43f196-d78b-41e5-a838-7ba86e9061de"
        },
        "item": {
          "id": "be956ef4-77dd-4188-8749-13af9b06b85f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "21d192a9-29f6-44f4-8f5c-1901e432b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6c730-6b46-47f6-9632-837f681d3eda",
        "cursor": {
          "ref": "b9cb6ea1-5423-4e0d-a63a-13380bc08c84",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "10de2e0e-1880-40b6-b9d9-fb8844dcd720"
        },
        "item": {
          "id": "81f6c730-6b46-47f6-9632-837f681d3eda",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f303a1df-45a7-43dc-a6bc-8e02806d30a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f93eec2-7693-47f3-856a-70c3eeb4722b",
        "cursor": {
          "ref": "d2b9791d-0602-4338-b61b-aa897e1252c7",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d4480e2a-6d7c-4b94-bb57-0a35a62424df"
        },
        "item": {
          "id": "3f93eec2-7693-47f3-856a-70c3eeb4722b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "45643469-9cec-402e-a426-696b488e83b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eda88a0-0e2f-4478-a256-8f214b779bcc",
        "cursor": {
          "ref": "f27030b2-d2e7-4b9b-afbd-838b543113c4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5d00a0c5-6b84-41a3-b5df-30ec77842e92"
        },
        "item": {
          "id": "5eda88a0-0e2f-4478-a256-8f214b779bcc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "78455ef1-beff-4695-9b85-6727b272da41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4859eb-1c56-4f26-abf9-e5cf540644b7",
        "cursor": {
          "ref": "d27fac0d-9ed3-4400-b929-23646a2b7d3e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "44c66c3e-d36e-4a20-930b-0ee1037c5b00"
        },
        "item": {
          "id": "5e4859eb-1c56-4f26-abf9-e5cf540644b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c0fe6464-1626-4417-bd4c-60fb269962f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b37f6-cbd4-4629-8bff-15aba4999173",
        "cursor": {
          "ref": "a93f2c50-ad6d-44cc-b8f5-e72bfef81711",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a589bf3c-4a27-471e-876b-f6a035676e7c"
        },
        "item": {
          "id": "867b37f6-cbd4-4629-8bff-15aba4999173",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2523b72-dfce-447e-8ec0-74f50678ee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dfee79-6f25-4978-acd4-df845b3a44fd",
        "cursor": {
          "ref": "f286fe3f-9045-4052-bd48-79ceffe2735c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "52411961-6f07-44e1-8aa4-0d5c45a92396"
        },
        "item": {
          "id": "14dfee79-6f25-4978-acd4-df845b3a44fd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5842247-1995-490a-a191-72e22a2710b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8e4683-166a-4509-9fbc-4ebd45693c20",
        "cursor": {
          "ref": "b5c72778-d04e-47ad-8202-0fb23df6c011",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "937b6fbb-00cb-470b-be21-5cfc5faa9b05"
        },
        "item": {
          "id": "1d8e4683-166a-4509-9fbc-4ebd45693c20",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aabbe5c3-0f1a-4fbc-a77d-cf31bec679c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8a69d5-d35d-4a4d-af67-a9d8012c026e",
        "cursor": {
          "ref": "994ee0e3-ab49-4803-9ee7-c00807cdd1e0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a5dd8a2c-f4c5-4840-bc87-6879c5773267"
        },
        "item": {
          "id": "8b8a69d5-d35d-4a4d-af67-a9d8012c026e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e732ab18-bfd1-4a69-a083-c8861fbe7034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788c7165-1804-4f32-bef3-71b976e889ca",
        "cursor": {
          "ref": "2731b5f0-a7db-4ac2-874e-de29631be126",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3c0a9395-b6b9-450f-9ebb-93e5f98cf55a"
        },
        "item": {
          "id": "788c7165-1804-4f32-bef3-71b976e889ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e31e66a-d88c-425c-acda-22b55807f9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b33f514-7b83-4602-9da7-8319d4a7dc13",
        "cursor": {
          "ref": "d636dac3-ca42-42c4-a46e-d7cac0e14ca1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "db08b783-9b81-46f7-9801-6bcb3f5bd7b5"
        },
        "item": {
          "id": "7b33f514-7b83-4602-9da7-8319d4a7dc13",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0db3e8aa-1cba-4469-8b9e-3d28057e49a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4da50f-4ba9-4f8b-a7ce-8d89fab4dd93",
        "cursor": {
          "ref": "3fa80fdb-837b-4d51-8c7b-c7d3187267f3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "aa111490-05d2-4e94-95bb-826ec2c0a383"
        },
        "item": {
          "id": "8c4da50f-4ba9-4f8b-a7ce-8d89fab4dd93",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "41e2d47e-d296-4e51-901e-756de14d8b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d6023e-8fda-4841-a632-f57916a90be1",
        "cursor": {
          "ref": "b08c964d-dbbb-4e22-a32c-5954296e9301",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b6801b26-81da-49ca-883e-d2b677e2fc14"
        },
        "item": {
          "id": "66d6023e-8fda-4841-a632-f57916a90be1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6022247c-7e69-4d72-aafb-9467c7ec2925",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52355b59-d42e-4928-ade9-b4f49e5b2391",
        "cursor": {
          "ref": "e4406f73-ae22-4bf9-b5ef-f646a66ff52e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dd4feb86-1c83-4ab7-9295-3c26ad033d11"
        },
        "item": {
          "id": "52355b59-d42e-4928-ade9-b4f49e5b2391",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "03af25db-dc46-4851-816d-e75f1cb6e040",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd803121-e586-4d5a-9f84-9f79b8115e2d",
        "cursor": {
          "ref": "d14f9a03-6f9c-4337-b3e5-685895031d22",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d374e992-ef2d-4c50-906c-336a5c07e25b"
        },
        "item": {
          "id": "cd803121-e586-4d5a-9f84-9f79b8115e2d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "351a8616-6621-4512-ae85-f7d05edf3c2e",
          "status": "OK",
          "code": 200,
          "responseTime": 1392,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be289169-0117-45fa-b1b0-cc90d89d813e",
        "cursor": {
          "ref": "c59e2d8d-3541-4865-bea7-6c2f8359ec9a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "69feaf3d-7937-4dd5-8145-27d8de10a068"
        },
        "item": {
          "id": "be289169-0117-45fa-b1b0-cc90d89d813e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "baeef43b-c0d5-4905-9b23-acae3501d529",
          "status": "OK",
          "code": 200,
          "responseTime": 1367,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac6998b-3c87-4c79-9dc5-dcf60a7f0676",
        "cursor": {
          "ref": "822152f4-3121-4d1f-a5b5-bb7ef3845cce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "703dba48-fc94-4729-9f70-674b80b951c1"
        },
        "item": {
          "id": "0ac6998b-3c87-4c79-9dc5-dcf60a7f0676",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae863619-6b84-4c4a-9f84-6d1cbd34f114",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac6998b-3c87-4c79-9dc5-dcf60a7f0676",
        "cursor": {
          "ref": "822152f4-3121-4d1f-a5b5-bb7ef3845cce",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "703dba48-fc94-4729-9f70-674b80b951c1"
        },
        "item": {
          "id": "0ac6998b-3c87-4c79-9dc5-dcf60a7f0676",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae863619-6b84-4c4a-9f84-6d1cbd34f114",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bc6d68-c220-4ba8-8a71-384da2e4650c",
        "cursor": {
          "ref": "d584b9ef-ffff-4350-a316-fd424c791f93",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "42ef89df-572c-420b-936c-31b54f72486a"
        },
        "item": {
          "id": "88bc6d68-c220-4ba8-8a71-384da2e4650c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1fa16739-b3ca-42b1-8384-8ee2a85f43c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab804d1d-9795-461e-9ea4-e9e2df18633c",
        "cursor": {
          "ref": "e743d36f-120c-4c0b-a313-689b8bc29670",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "61d9557f-5bc8-4286-9090-9378e90ffb25"
        },
        "item": {
          "id": "ab804d1d-9795-461e-9ea4-e9e2df18633c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "637a07f7-660d-45ef-b72d-3833a6bd730f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}