{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8da2d8ac-cf2a-4b93-8cd9-9b2354f5b1c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c6396a74-f027-41d3-9a21-850524fdef42",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a253755-198a-4cd1-9166-0fc03f64ebef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5ade07e4-480c-470e-ad98-bb5114d3f68d"
                }
              }
            ]
          },
          {
            "id": "62da19bd-9f4e-41c5-88e7-165806570e65",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40f4dce7-f984-4cda-b985-5aaa0087dcce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ba36a4c3-b301-4f9f-aaa0-d41964cc5f87"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1cf6708b-b73b-4715-8b94-525362c79339",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8e8ea96-ad0d-4746-bb8c-214218ef92fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da8c5782-13de-47ee-bbed-0404a7700a38",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd7c167-b5eb-4d16-af78-209f3ce12b8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f23c42e-408a-4873-a9f8-60087ef30589"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "025908fa-88e6-4c96-ab9f-18f929ca1b1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb87654e-d334-4870-96c9-14c7a1c8887c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aaf53e4d-ce77-4e15-9cfd-4309a9fc0ded",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32002161-a91f-4e18-8d97-58313d5eaf9a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12f7ec7f-3cc8-4ae6-bf2f-b5a719195e8c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e500cf61-6130-449a-9bd3-39c84b2fce6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79ad0332-221a-4cc1-8595-3045daaeed19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bcd349e-645a-4aaa-a50f-1f72286a9ff3"
            }
          }
        ]
      },
      {
        "id": "c5b2a067-7b91-49f8-8df0-3f08fc991da5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7974f138-efb4-4e52-a4db-55ea5500ad01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37f5f24c-46ab-443c-a036-0725f1477310",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32b30b49-56aa-42a5-a7ef-4dba56b1340d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6d8cc-26bc-483f-bb48-155804550c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fdaf72a-7272-495f-8477-1ae0fa5958f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cc1394-4ba5-4bc2-ba21-79aaa563206b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c339f-ba82-423b-9d8d-4c13e0dc5e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c72280c3-f5e9-4ce3-9970-e2e4e21d922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41b8210-7048-4700-ba65-29c7887ec4b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6237c9f5-9cdf-4323-be05-3273c335dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1293608c-e6e9-4fb9-9bcd-75d24b257035"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94421ff5-c0a9-425d-b39a-7958b3438738",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbd664f6-b550-4e1a-bfb6-d6b2b25cf19b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb4c6a0-355c-441c-a1c6-0c453e58f0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f921b5f-06a5-42fa-8780-a7c7290e0cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc2d9ee-5822-46e9-b890-f4fd7ae1dd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0f350f-1852-43d7-812c-d34049f922ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa2bbf69-7bce-450b-9843-0d39b3bbefde",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e31a1f4e-e8f7-442d-8eb0-2c642b4de862",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89fd892-248a-4ecb-a911-7f958f6a4b6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f684f976-734e-4d68-856a-b80f988aebf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cac7996-0fec-49a1-a9f8-69b65742a134",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7867c52b-4795-4485-9d03-c5c4f80ff583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da5535bd-f7b3-41e9-b439-9655c119684d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a62f07b-3deb-4793-81ce-b0feac1d03ab"
            }
          }
        ]
      },
      {
        "id": "dffddef8-060e-45ed-b321-f2ae995f064f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2d6906c6-1dd5-46fa-bb0f-ee7fd75fea16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6185ef17-7fdd-43ac-b406-f4da0873e38c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f9d12991-e5b7-40d8-88a8-425ef95e780d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517c397e-5dbb-49c2-8215-8a9e3cced7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af023ee4-2ec0-4229-9497-5f4edc7ea39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7de401-9934-4e05-970c-e48649c0fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d4e028b-055d-44fe-a4a6-002a6eeec640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888d4111-9ccb-4f19-aa0c-4966a1bc55fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e560c3-b0d7-4a40-abda-0f64ca70aaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b96337-b318-4105-a7ed-509079ec341d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e98013f-7e88-4a4d-8af5-6b00f50a4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63371ba8-64cd-4ea2-a76f-6656f378aeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc804dc-1e1f-4e66-b691-4a4afc3403c4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d471c1-34b9-4406-b238-98e02d70ff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe77581-1fcb-47db-b1ad-5a5962593be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24790e19-b832-4174-a45d-657403a8e3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e563aca9-5414-403c-8f76-de968dee84a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444a5597-9599-4515-a3c5-2785cf9b72db",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dcf748-5d86-4dfa-821b-beb10d573283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bbb1f4-e2f0-496a-8b46-d50b5412f431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ad5737-1011-4e16-b4e3-5e67db8a7c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c473f1-4018-436e-981a-4f85f7c0b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3589a3a-0fad-45c8-aaaf-971f1a0dffa1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e8526b-9784-492d-a2a2-3f4b05a7fd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc85489f-51f1-4c80-9b8e-861e310dd634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb132219-f0bd-4d8d-b806-61fc2452d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dede52c9-b51e-4497-b5a9-1fc0682cdfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a56d58-4566-47a7-a11c-b4d6e212392f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3c78f7-5118-4e27-b7c4-412d2c128afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76d305b-2283-4ede-be3b-cad7440e2031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4e49ab-ae53-41a3-8e07-ec7232b8757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e580cc8-8071-4fe3-9665-bd4228bbc466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b7a614-be6d-4d4b-ba2a-1664b2bcd3ac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587b836d-6f61-4ddd-8476-8cc1525ccae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee69dec-94a2-4e80-9fb4-3d17a4b3a671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a211045-e141-40dd-b054-a10f0a0108ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20937477-a1ec-4c98-a0a1-9cd64b3fe75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4baa34-3251-49d2-bd7c-776983cdb75b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8b9e61-898b-4ee1-a906-4d585d4ea0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d1618-adce-4fba-af2b-e0bc43ae1d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31798651-0b95-4520-8ce1-a5b9c9112eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b8ea243-4226-4264-b206-7f927440f104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c703cc-6a53-4285-94f0-32f96ca08795",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a86a6e4-d904-4352-a8d2-47340c4e9fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6907f1c4-f53e-4169-a6cb-865caef96c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff08f2-91ed-4a02-98fd-64882c593eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7baf01af-1cd1-479d-a00c-328532a6f3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc89335-5009-440c-b873-853ae8bedc7e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec24ca24-4292-4faa-9c2b-4d2457a7c4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac4ff8d-4882-44ac-bcb5-f98ab38032f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4342540f-5f14-4033-946b-1b58ab529e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c434c8ee-31df-4cda-ad99-8d4a93e53f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa51f22-3d13-41cb-b6a8-3abe94e6e0d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052e49b-b205-40ac-a871-9f84734f5599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ad5217-3acc-40e1-b64a-f966d6445240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c6d654-34cb-4899-b240-232c1945e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab3ce17-6987-4253-a27c-4e489817d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae1cc5-2e23-45cf-b93c-6de9f358d0ef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2ff833-7f0f-4609-9216-351a921f7089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eb1779-e1f4-4bb1-b556-70a749348a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1753cff7-a3ec-4554-a000-487e287891d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d9c33e-4782-4293-b56f-bf53e2fe4b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc187144-9737-4f68-95e9-971d3d4d321a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cb7371-c302-4dd2-9c8a-bed7ee4fcc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d9e494-34e3-4ffc-9a40-5c4aef08acbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dc0cc0-ec04-43f2-a680-64fd733d98d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdd6a331-af21-44b1-a6f6-25fc3c2deca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1dc234-aba7-477a-9822-6c071d9dd2a0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf42c302-56fc-4c8f-abd1-886d505c736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44112e5-43fd-4495-b44c-07a06039a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76135629-cc24-454a-83fe-a705549a7052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46593c2d-69dc-432d-bc6c-0e0849e7fd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e99fe42-250e-4d1c-b08c-ab64be55d685",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c8e70-e7e6-4209-b1e8-4acd4decd469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d2c563-4cee-46a8-a0ab-22c8b6c4b1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7591549-1073-4d84-8043-5b9b4d10658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d6155db-94ad-4807-a0a4-9faeef4eceea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3168775e-7b73-4566-8645-ab0f48139f45",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0b11d5-5123-44dd-b26f-a2317335041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d4e0e3-fe12-4e5f-8b00-ca2ba324c24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8c689b-548b-438d-977c-337f0d55fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f41044d-4ae7-4c1a-9c3a-5232f27566e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04712b17-29bb-4481-b9a4-6b14b992c7a6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502821bc-7283-4e98-92f5-95e2d6d4aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509c185e-75d2-4073-8796-0230e3163c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743fd375-c53b-4011-ab7a-4d27bb166d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "414fe9da-f806-4df8-900c-4df06778b6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120eb181-1107-4956-8b7d-75e9db2ac8ed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c4e3a1-1ac2-415c-9b98-4e57626bf9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534d3069-46fd-4f51-9343-9cd4806a0db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d4f882-086d-441a-b300-7eb25ec0e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41151863-e06a-4d42-acf5-122f046019b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab176fc-29cf-4e10-a9e4-dfde280ae069",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182808f0-3275-443f-8255-f3d89c1d8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9a345f-a13d-4539-8aa6-d7300a241da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040273cf-8dc1-4075-92f9-94c460cc0704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd170238-ca5e-4133-a98f-8737e201a91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ed433-0d96-45a3-ba34-63c9e8ea7f74",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ff9cab-4c57-4c0e-97da-85416f9d596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d129dee3-f1e2-453d-9031-ec26374e6b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4338d1-41e5-4d24-9df5-3bad7a18dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a014f0-d9e7-4f5a-98ed-a3bd896d20f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc08ac3-5bef-4141-bcd9-53afb4900002",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089894b5-7c64-488b-9a38-d5405a4f17da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fa3daa-2871-4e7f-b7ff-14438c9e0cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1463a565-a107-418a-a630-ecd430a14598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d79abf6-1f1b-4cc4-a182-4d5cc4141c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4077c201-a49d-4359-a938-bcc69c011ed7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4247e-eaad-4520-b8f9-5476957ea61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3140e5-3a2d-4625-b6ba-0fa4a96647e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004c8e12-ae7f-4856-953e-8310cea0cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e08608f3-64d3-44d6-9744-e2004bed5e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c4780f-9c9b-4fcf-b461-614e58128254",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1262fc58-9762-480d-8c99-4dcf82d54770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b03ea4d-0af9-49b0-9254-a3ec5e64c63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aeb1ab-0a78-4b45-93f7-9ba283704f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5719fee-d818-428f-8ceb-27cbcf64e98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca8242c-04e0-40ab-af66-f925dc777583",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a61df88-8f4d-4457-b986-78be401602ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0256ae-be2d-4706-982b-204eafd4b22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5ee8a4-8e85-4d08-b834-c9b5cf13e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ced894-d34d-40ce-a939-834d45851948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b671ad95-ad33-49be-b3a3-339706d44a19",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9292c87-24e5-4092-8ca3-cb8c24dcf6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90deb2b4-e2bc-4d44-8dab-7fc360d8f4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ef720-174f-4f7d-82b0-e58bdb616469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "275895cf-8ddd-4087-9467-cc7aebba9bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150a0e93-b547-4848-9d0a-a8baee15bd5c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aadd5b-ff1b-49de-8f25-e00001fa1042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0055201-7ae1-4ee5-a312-320543f4b270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a42450f-f745-457f-8be6-0736b12eb74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd79e19-343a-4475-a65c-fe1a6b4f082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424da1eb-ce3d-4c3d-a828-ca59b35ba3eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76660e8e-837a-41cf-a688-5bae03d4e497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d06940d-9b57-4a1c-887a-f3f9002c7649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1eccc9-a0eb-4836-9092-02a4fc6f0d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "358dc41a-a899-4512-9fde-eac17c5456de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6400052-cd61-40fb-8a3d-80012ed672c2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca20a487-2a31-4bb7-973e-91f5c945189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bbdf11-a7d2-497c-be65-e30c86202289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c5ab23-a1b1-4b20-a8ce-76b0241d4c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea80f035-2329-4c0b-ab1e-6fc0ca91ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1d1ce7-a3cd-46d1-b49e-e39770847c55",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6758a0-ebe9-4577-bef8-5891534c0a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb7a1f8-afe4-4974-9dc6-455f7cd390fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa27682-ea9f-4b70-ace3-1916df0e7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c71178-697b-4f4d-b19e-6bd49b16baaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f383c-2ee8-455a-8fa0-5827efe8e47f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f04de95-a9bf-4226-bde4-a06b07f19d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce11a6cf-9ec0-4568-8a54-4d1cea767daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff393b4-3499-4b2b-988c-a61b012cc576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d9098e-8ebe-4404-980d-bb81b71caee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c83889-8cb6-4d3c-a04c-5a7fc79dae18",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035043c6-906f-49ca-a01c-834cf6cfd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452c0259-8e1b-408b-8840-cdd0eb00ce27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ca361-f61c-4269-8f84-a01b5c4739b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd91fb43-fb26-4f91-aea5-b55e429aa863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4465163-f119-46ac-95a9-f76612b56e3f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538d2d99-4055-4b8a-83b3-238b15eabd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf0b8da-871b-466a-8ffc-6822f7ec1f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f7e82a-03e9-4379-a147-2027ebc7357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9b17ee-44af-4ecc-9dbe-e6f3fc11c8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986ed02-b0f1-4ab2-90b1-c00a634428cc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f16bba0-79f2-4d58-b80e-ebe0f415b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0545ee80-79f1-49c0-b7bd-c6c0be951413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290e0010-64e3-4c3a-a9f7-f51092f4ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04b0876-3415-43cc-8b3c-b8796be76cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199d01a-eb78-4a45-ac95-305447408cc9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96edd8d4-5320-464c-9340-ae1f7afdfac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae436ca-b623-4726-945a-49618ef71ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73553a63-eba6-434c-917b-ab769af559a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56410d89-0af1-44d4-9971-a35651a8d8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8bb110-74e6-431c-9c25-4866705493f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20386b6f-7fce-493f-a5a6-ee138e02d6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3127d2b5-9703-4004-b556-94b9e38d40b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e477b43-118b-43b3-9aad-6a9a52f2d622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb32784-2456-492e-91bd-7986f6e78526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6586663c-d368-4c56-8fc2-e182b09a425d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6efb0c6-5ef8-4a1e-b433-98d26c279496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "021a14df-1ace-44e4-b3a0-69d23c062a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef94ca5d-0445-49c2-ae1f-3240c5dbaf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a452f581-ee36-4921-9f6f-ce478b4009fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a02d211-1e0d-45cc-acc2-735ceb56283b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de52ba4a-2c8c-4cff-b1ba-1a7f8503e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e2f977-11bf-4910-b7c4-222372470b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08168e2-7b43-4924-895f-8e9ebe1a31c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "495499b8-c488-4b77-9257-4fd15bc30087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe91f5-4f0d-4b18-bca2-3ea5a26a5961",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45c3c5a-6dea-4d3d-aa41-c48f0a2066a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05271c1b-a435-4a6e-aada-af5ede8ce218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87eba31-2fb4-4917-9940-535ce2d894de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b157e07d-6659-4293-83f7-24130d3b11a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83948b37-79fc-4220-a48b-c506a762dc9c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb0eaa5-062c-488c-85a3-8981b110204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ae38e-530c-4841-a4aa-861ba08091ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128de74b-d4a8-4d1d-bf6b-a3c960916629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50fa0c34-0513-4955-a23c-b78d5d969bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f3fc9-94b2-4313-b1b0-4cc23b9de9a0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5da82-1413-4ece-8403-9fa4252b5417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a385b48c-c1a9-4211-9145-01f63384e572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99c392-7f9b-471c-b6e7-f5b0c4e209ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f215ef-86b9-49ce-aece-c132d3a87419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd592d7e-75b8-4d26-b1df-000cd9d4c3db",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2436b2a-fb21-4062-92dc-bb7259f7ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9eeb6fc-65f5-4ad6-b8b4-1bec746ca54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40ecdd6-2e34-4589-ae79-33247c579554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f97248e-f3d8-4857-bdb7-4bec8f8856d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4991b3bf-99f9-496a-b91f-b34f2046fe7a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2475c6db-04f5-49d7-8b3c-fe52b7a0c583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e6c773-394e-439e-aecd-8c9d7eb2bc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e2567-91ff-4554-9f13-c3a69b7f318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "57b085c7-7539-4e63-83fd-0c4f6d64dc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296c8ae3-715c-46b4-be09-b8847e316c94",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521eeb7c-736f-4bd2-8164-0b0616d9d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c72328-f347-496d-ada5-20b986aa3565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd7df4c-0211-43dc-a712-b7f10c932cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "baff0439-b309-4c24-9e77-be030bff0588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3cf81e-5742-4ba8-a845-85bea417c975",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74eba95-b79c-42eb-9f75-c7c7f6ba638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3556e35d-be77-40fb-8895-f1a0c69c685b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff3473-d8f5-4394-8020-afa3597f6e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "373adeaa-33a9-4845-a9b6-d90b9fc35e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d3af6e-a7d6-4b08-b46b-3c10318dee21",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c42412f-e5d2-4833-9759-7cca423ea27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27676b6f-7af1-4997-a2c8-f4fe585e13f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11a55e5-375b-4ca7-a9be-fc93da9665fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06649bd3-f869-4165-b168-9fb92a89c4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7448e133-b41f-4815-843c-f9d775a69193",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8f697d-3bd7-4254-b233-579c64204be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee3d839-d820-4faa-a7e6-aaedc856436a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91346d5d-fb30-40ff-a4c7-0ac64164fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dff7922-144c-48c4-adfe-5186f37c2321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7c7c7b-1cfa-4d17-9fed-9455dab57bd1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804796c1-651d-47d5-bf44-73eb3a2aa111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73986e8-935c-46b3-89f6-94589d5cbfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84edd32a-2a2d-4365-9bd6-a7b6d9b2e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "145118e5-4d75-41d8-9f07-0e4b4d673294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac5f133-97f1-4878-b055-5e5e7c307ba6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822998f7-cbe4-4fbd-b97b-ce3ca9061061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22246ecb-df7d-4f8a-9d33-f3f51043b2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f3991b-98de-4703-92a9-4dd6b60df6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb604b8-be9a-4c7d-9896-fa23e9d43eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18ecc24-5d10-43bc-9509-e0f4caa87cdf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221f8cf2-8a57-408c-a44f-29afc8b729a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e5ba6d-0019-46b2-98ab-506c3200cc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1432f1-6669-4e17-9772-942edf7b191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b833f6b-6fc3-434e-8910-1965395024fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4fce72-8ff1-4d5a-9ff2-8657459c65a2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70421747-4583-43b3-822c-dfd68634984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c3d534-473c-499e-8987-bc76d3334a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0d4eda-7044-449e-90cb-897bf805127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "959a0619-ee4d-403c-a849-c2e3b97c870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d23b1e2-d7fe-4bd9-ae82-00baf4bf423f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf9fb00-d25e-4f95-b1f0-3a3451c46018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9736c739-8c73-4e86-9226-9bdb4710dbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82096b5b-7fcd-4a1c-8cb6-a0db5bddc488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "473938e0-a9a8-44e3-ae6d-a2c70ec2ed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0b30b-47f7-47ff-aae0-be03d73d86c4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e47524-5457-4fd0-b124-dbbcea63a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97290e8a-2972-4a26-8d8d-f4167c0d3368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f50b18-89f4-43d2-8869-74d4b32f3ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3121504c-fb64-474e-b4f1-6f0701dad27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9c3985-61e4-43e3-a388-955e540f8c71",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cd4fe6-b794-4eb7-a094-b0e0afdbca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8efec8a-8deb-4cc6-a62b-02c1f09b6d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606ff952-db03-4ac5-8e12-98b2560489f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c4cadc-872f-46c1-86d0-5cd714028794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb5987-ee05-49af-9abe-d4ccc82e7395",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae916444-cd9d-4e8d-b038-acacca12fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6184bc0-62db-4d8c-89dd-5e8396880d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e945d0-6326-45b1-b1cb-e1896a3a7e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e588f3-6688-4483-9c96-133f866324eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41805b93-4cfc-4517-9589-74c5b0a3bfdf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff7fb52-6506-4f02-bd06-6921f19edd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb662b09-5c19-4e45-938f-f0be68d59573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905e4e31-1cd2-4dd5-b0ab-ef04e644cdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfaad4c4-d54f-4510-ae2a-0823a6b51db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526aa0fc-6efa-4125-994c-b795cc805ddc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9718138-f171-44c6-a6ae-e23de7b337f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb92b69-a78d-49cd-a1d9-e5ee44e4e472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c85f8fb-dd3a-4ebb-b172-1e147b2a0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22e5056e-99bb-47c4-a7e2-508a367f3b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd43eb5-abca-4a3e-ab4a-baab9ed4c646",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f263187c-ed40-4fd3-a54e-caa415232cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee71db0-946d-4ca0-8113-5586e7ae4e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4efc0e-b206-429e-8d5d-9b0797530499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33fd5d1e-6777-4141-a14b-b888ea2dee76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cccd85-120d-40b8-83e9-dadccf59e3e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20515d0-44b7-456d-bfc6-2198fef43014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c3afde-e7e6-4fbd-9965-e412e5e07406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c05e03c-df61-49ac-a8a9-d66b5ec4350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5963c848-4fc5-4156-a04e-380efd42dc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd5067d-08c6-4ba7-bace-5097919c801a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905130e5-e322-4d32-885a-149f8da2bad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f993a-a12f-41b5-9039-4d485fc49e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed56de33-5f20-4afc-a5bd-1cc61fd2b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1049fc-db81-49e3-87aa-5cb115890f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e234d915-bf4c-4807-ac78-21a322a649c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a75f7-d227-451c-a9f5-c3ea5c7b7fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c13a298-7c5b-4314-8382-9aafb4cf5a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6a029d-6735-4d4b-bec6-400a7e1dfe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c548fb0-0223-422e-ab31-b1a352821a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2768be6-2b92-4412-b40b-85200f4b371e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6ffc91-4321-415a-a9f0-576d267e7735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d804dc-c54c-49f3-bc00-89c28ec3a689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3da858-33f1-4916-b21a-654a89db1572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c06a1bd1-fc5c-4cb3-99ab-cb7d3056d9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8035ce-9c0b-4c45-9768-9eadf7f591f2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87072ad-498d-4c35-af70-7ff03bd08b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d2827a-a83d-4599-a6a4-178b45b1a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacf8280-ecab-4c0e-967a-192a9d09e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "634f156e-249a-46c1-a6c4-c84d5c7fc764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117db507-f126-417f-ab17-6e6968b71f14",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91159a47-b32e-4054-b867-887d90fc4a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba36d03-8cd8-43c0-af13-6f9b3e7e6b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7020b12e-ca99-4135-8e19-f2b439ab1b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "37926a7c-a3a1-444e-8097-7b9367dc36d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80618bc5-7b7a-4973-87a2-626e04321e4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac4bb94-bdae-4ca6-b2ab-0dfbaa87f787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92afb75b-14d0-44a7-ab11-8395cf6578d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8c935-3b58-4baa-8ab9-ab1fcee8b565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44673779-41eb-4f55-8cda-e3996fe565e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be004a1-99d5-4a67-a49b-52d7388800b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2630d4-0884-4f3d-8e7d-28adb1578c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d749b2e9-9a11-411d-ad44-d44b06af5884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d499dc41-ea78-4042-87ed-56b2d3ef96df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1faf4d13-2578-43fc-bf3f-9dec777b0a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b52defe-9ca3-4bcd-9b15-21d1eb4974ff",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811f7f9-5365-4ace-a412-00ce190c73da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b706d3-ad9f-4238-b87e-60481e158082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae11eab1-b8a4-4bc2-b382-fe868c0dc78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4607dc2-ae7d-4cd1-9297-8f3abbdaf865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c85358-51ea-4f38-aae2-13b396f8f5e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363dd362-e54f-4bb0-a309-643c448c093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e04f6c-c6a8-4aea-9834-c6c98f7d7841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f17e40-559e-45dc-83e4-a4912bdacefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6392fe1e-220c-4c59-a6aa-d3df2db3a32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b31d446-079f-4424-8d05-ee2b20137b22",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3dc0eb-185b-4787-965a-d454c95da983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a156c9e-48db-4de9-b01d-e9698915527a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd12a4-1d80-4803-827b-5efc47d7be02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f456f311-c4d1-4942-b4e3-af3322fcd43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4b6d83-efb7-475a-8485-e4affda8004f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef8e205-2ddf-446b-bea5-78a8b85bdea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294d005e-69a7-41b0-8900-1aa4d56b5ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2570a561-d6a1-439e-80c3-bc4f282a73d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aed62d9-d769-4854-97d5-2ea49bb1a237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea3b623-8bc4-45b9-bd44-5b9d8f1f8f43",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1c55c-f4b3-4290-a76e-7b27883fd4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817bbb9d-766e-4394-8187-b7df47ba0e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1afa0-6838-4e7a-aaa4-4de3a5a001c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04dd6b63-4956-404d-95d0-a5936207d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970de8e7-a1ba-4de5-b499-c9067b9e98fe",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd89e328-e308-4776-84ac-a2b505075fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c3db16-6727-4e02-8be9-f0a0a7a93f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fdff68-2d44-4405-b9ba-e4f09e8af095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d96bcbb-de6e-41c8-806c-9138970f7bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0938b88c-e9b3-4113-b698-eacd4e675e74",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201571e7-17c7-4ec6-8236-94a757231215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b612382d-9930-4def-b316-3574a749f8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6010d53-47cb-4352-8ba5-75d123126169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de018ac3-c48f-439a-a915-ec2730aa1d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a34cb59-0cf6-46f2-b314-654b02ccaca2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a4c2cc-6777-4e76-9eb0-46d746768aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d89e16-394a-47b3-80f6-cdcee7f4e798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f70529-ec35-4ede-951e-b545bb26000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0855e3-5af0-4cc7-8d5d-19e399447e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64141d23-493f-4513-a55d-19bca9dca8f1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1035d8fe-1eda-4a8d-a676-d97b10f70cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a892a194-26b5-4965-8264-c49662b38657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359c9e1a-b67e-4777-b0f8-97c13555cdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "256b9d42-d9b6-4c2b-8a9f-57de9fa95a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75462aea-a22c-4f24-b7f4-5675740a3b63",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74e068f-5535-4583-8ea5-09ccff6bc804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3282896-479d-4aca-8fe9-d7dd3e7776d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4633909-8610-4d20-b663-ce9cae485835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2099a8f0-6bc8-4a44-a3ae-5a7e29183c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba5b2d7-2a1e-4363-b6fb-24c928cbfe68",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca3b9c-d46a-41ce-b4b6-d20f8d1875e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3758f592-9d10-4167-9f37-9c32714942e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fc487d-cdfb-4116-9d39-92eff579aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd3aa28-1afd-4380-a244-af942f099e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994095af-e54a-442b-9fc1-125607e7b095",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c5b5ce-a0fd-40ba-a829-33b2653ff259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c60195-5259-4859-bf41-920dce84a2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b7d720-b7e2-4926-afcd-18e011c8e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3ac6cb-7674-427a-96f7-c8665680c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f0f30c-bc1b-4c30-9a8a-36a382834638",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ba69e-c6da-4b3d-a336-3d8cfe9385a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec20a9a9-f5f8-487c-a955-4e992c19bf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd2ecd-be10-44e3-b88f-f8458dc55713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66eec71f-7260-419b-99d8-8f5150596107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf83ccc9-ed7b-444f-86d3-23f385aae89e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc30d73d-0be0-4e38-9306-db6b043e611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e4c472-bf23-44cd-bcfc-84cef2d61e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2886cac2-cc25-4b37-9d21-a729977a0568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9270593-0891-4a8d-a491-f73adbd66ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442ad1eb-6c3e-4d9e-9c39-47bfede94623",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d85e887-2cb7-441f-b873-e95d881e55c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8d93b4-a1aa-40a4-ad94-cd768a3fdfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc781c-a79f-4fec-aeb3-a5159a9eb60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dd1425-ba6c-4033-a478-d2bef4d57e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce346781-d098-45bc-81c4-d31f5771d733",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc90b0a-d0fd-4ba4-91a0-41afc66a0339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e62ef32-6e7f-44c5-8613-9b5b7bb276a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6d74c7-0ef6-4781-be0b-7b5f18aaf9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1a5519-370b-4a27-b4ca-633718366ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47de53a0-9383-411f-baf1-84e5101f6ccf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c3ad2b-e09c-46ff-9505-3679bd63ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294eeaa9-3183-4d99-9d16-14c952a6eb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88eee11-89be-4eed-a131-81ab55f44e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c90b5b9-12e3-42f5-90c7-0efa2e32ada1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0068f0a9-0ccb-47c5-9660-6f898f34fa0c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea38fab-d588-42fb-a029-fa35b660ec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37283eea-3f46-437c-b3ab-249e613e01ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a934f808-bee7-4725-a1bf-4a296b92d80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecab9eef-fff9-4fc7-a9c0-4533198bdaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c78c931-339f-452c-a072-6f2738532d74",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e99183-e499-419e-9568-d16dff5fb130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4029f834-44ec-4816-a2e3-6fc777957558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c045d6-4a6b-430d-8305-5e67ccacc7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4edf39-4006-47c4-9641-1451d480ca78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6993c1d0-7c40-400e-96ed-4819acaf71d9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73c868-ae54-4c6e-9410-02301724c834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c90f5-d268-4d4e-9ab6-a431ac024ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430aca03-a9ee-4b22-bcf0-671536ddd739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6666780-53d1-437d-86d4-fb8c2ca758e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174a2468-89e2-4a65-b6b2-cb40708941bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94668fd3-eaff-4f52-b90d-345048c23410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a301dd90-4127-45b7-b732-9ea59eb26dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4687b0c8-750a-4839-aa4a-9e4c1ae6d9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a19026-d009-42aa-a263-3162b0101c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f323781d-8808-4c90-ae4f-07c3ec720f25",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8e653f-4f6d-4ee4-9ceb-fff1f5fd9808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af31917-6783-4b21-83d7-ed43f70a2284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89caab18-0b8d-47e8-a535-86e4364df31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84347e07-11ee-4ae7-95d7-5051b1eba682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e8f9f-ba35-4443-bfbf-e52727b208e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dedc05-41fc-419e-972f-bc228f942ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b320279-689e-44c4-a057-6d562370c356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e2ee2-8c74-4b62-be47-8d7233ea286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "378fb3c8-d4bf-4663-b219-8254d8c02f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30deb2b0-e3cb-4e85-a7ef-776d9ad21316",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd99c5ac-2be3-45e1-ae71-6bb17795fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d480e17c-1bed-405f-b8b7-83d6673771fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc60eb-4715-43bf-a113-406d2594abf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7990fb2f-8b7d-4f66-a33d-6186db5f26ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba70d0-2bc4-4692-82db-bfcd741795ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3298d2-e313-4bbd-8a2b-6dad14f77d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c996ed-6570-4113-9fb5-d9132dc057fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a401df4f-d2b5-4cbf-b41d-5632e9878cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c803c3-b15f-40c5-8a5d-424f1c60c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82fed8e-aa35-4b82-be03-c41588777037",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6aca65-17cb-4eb3-b547-44a11fab105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481e0702-93b1-485a-af12-5b71a8035a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fe4e1d-70c8-4e54-b7fb-9743da0200d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f92c71b-aad9-4d74-8a1d-3222835b5844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed151b-b6b9-464c-bc9a-b101eaf2a452",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55af9da-468d-4340-ae71-accb4cad4b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e5eb4d8-5217-487b-903e-ffe25e88ede5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657463f0-4ba3-48da-9595-e99687b20ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e4576-6485-4a8f-a1b3-cd08d52f69fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c29210b5-544b-42c7-9d76-e1b4525f3104",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69ba39a5-436d-4ee1-ac6a-52ac5bcd5cae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79755544-bf9e-48b3-b2e2-6a590cded3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fe7a1e3-5f0b-417e-a38d-c7f19cbc2771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e83d17-e440-4340-bade-9d2afef89c7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da567e2b-acd0-4297-8ec5-9f7fc1b5e778"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "289e8bcf-4ad0-48e7-b74b-c8cb650f922c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e41299f7-60de-43af-8d1a-1b1e0cb0570c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb96baae-93bc-400f-a749-7d85add30a4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cfb1939-06b2-423e-95ed-0ab891707325"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d033cc4e-527d-47c0-a6ce-5e7b07472230",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f159e6db-3fc0-4047-9920-9d0e2f76cc4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63eae242-139a-4572-b524-f585711abe72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87e5fb51-a1ed-4d42-af2a-3c76feba8523"
                }
              }
            ]
          },
          {
            "id": "df3ad8ce-6832-40d5-825b-b346380660ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7adc597-bc88-4b30-8f1c-88209953f3a9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "93186bd8-2d63-4a19-9f81-60691a6497bb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe8ee6d-6aff-452d-94fa-3e661fb611b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "342b0cd5-7de9-4bed-9243-f4368f436e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9167d901-a420-42c7-a367-adbba33d7855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c808e72a-74f4-4c0e-8693-607bb82e6f20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae00e43f-f91a-4eeb-bc04-8ff71c764158",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42da0d16-d2f2-4d48-9a8a-46fd152d1039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "830576a5-8846-4f56-a38e-701036381f13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c444f14-1e7a-4724-9f4f-5910040c47d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29874ecc-1f9c-4133-babe-ba10d8803b86"
                    }
                  }
                ]
              },
              {
                "id": "59dacc75-a7b3-479e-aea0-cbebf1e32866",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "104d02d7-3164-4bf5-a514-dcba072561de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4139031d-c032-4a16-a178-cb8332e1891b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f770afd-4bbc-4731-83b6-b927b72d3e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72307590-bedb-4f53-9a59-a22763f10c72"
                    }
                  }
                ]
              },
              {
                "id": "14b1dda4-d741-405f-9cea-5d800d3b74e5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce710e50-3857-4eb9-9d2b-3b4ff6442f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c960a05c-11db-4445-97ac-7274248a1be9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed93ff13-9418-4319-9849-56c63af0d340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d056265-d9b2-4eee-9fb8-e36030f4ebae"
                    }
                  }
                ]
              },
              {
                "id": "e624b6fd-0874-4244-8b53-a8886afabd14",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c5d0075-4fe4-400a-af47-95a8ab729571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "881a2778-3b1c-44d7-8545-180d1d1a311b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64429554-c6a4-49cb-8a54-da69d96ce110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4da0a9a0-81e9-4571-8b8a-aa25ee3751c4"
                    }
                  }
                ]
              },
              {
                "id": "f88d115b-7294-4b4e-893a-a0b96408d85a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "076aea9a-26c8-4b32-b215-35e5c18f8f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3788720-5061-498e-a90e-ad10e18e00fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa62a480-d458-436c-bb10-1ea5f951287d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca72e372-725f-413f-9ad3-6d6ee09c6882"
                    }
                  }
                ]
              },
              {
                "id": "dfb2719b-cf1b-44d2-9b0b-73e51a5ed280",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bc0adbb-9f42-4bd1-a950-cb41635b6044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c194c9b9-8dee-4d49-b0e0-dccde88a1f31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e839f8-960c-4a93-b75a-1e624acbd9a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9cca0d2-40ed-41fc-afd0-ace95cfde3fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54f4a666-1f7a-455e-95b8-e9491ca69b6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44c0a047-0000-4ae9-975c-10cd1f506884"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea3d7e9c-207d-4c73-a928-9047130d0d34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "536dfc4d-d639-4764-b6bc-dd6affb80162"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97fe0534-4407-4563-a56b-748907c626cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "318b81b5-c36e-4e99-befe-594160119470"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cb628ea-4eb6-4b7e-9385-56fd45e9c7e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04b28cf4-3404-42b6-95ca-996919ef7819"
            }
          }
        ]
      },
      {
        "id": "f1d1228f-b1dd-4a8b-ae85-eb5d3c5bd070",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fb40b46c-8e19-4362-8de5-10f9e1b7f3df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86f1bc95-3819-4e1a-ae66-ce6989e6780e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cffd0f9b-f787-4d83-8561-cc885db9b2df",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d16ca1e-513b-4c2f-9768-af1bd854ca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4dc6c3-815b-43a7-acb7-8204dd28c41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcb3f27-2964-4411-9341-6143cf4f7460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c57c301-b2ba-4d74-aa07-98483d82b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa584591-57ea-452b-a041-29451203796d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd25254-c02e-49f5-bea3-d5e821ecf219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88df6a93-0c7a-4c9b-8472-016368327e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19ca088-8c5d-48df-90f5-aa50e0c8560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "688bae89-1eb2-4e30-9759-4e6444db7699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb3e030-76ed-472a-b7fc-91ebf51b4a9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcda57e-0b9a-4973-828a-9fbe145159a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c629fc-1f52-40b5-a047-db9b98df6f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584de49a-93b0-4e3d-bc60-07fafc0572af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84745508-716e-43ac-9b55-2622eb2fabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de616d7-04f5-410d-b460-41bcda7bfa99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21fb1b2-d2b8-41ef-92da-584fe613177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcd8b57-c8dd-4dfc-8299-8db02ce629db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a028c-c45c-4981-a373-160b8be43246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b7b136-d01f-40ad-9f54-91661c19b693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fdcf5-c643-4841-af12-db2b8066b0cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9966b45c-f88a-4ddc-9ba8-1e2a459e37a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e996ece-c9bd-40af-a35c-bb74e91c7bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84ef387-80a6-47bc-8e83-d373f06ad3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e70e9b-700a-4dc6-9839-0088d1424e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3656ec9f-4fc0-4c48-850f-a1d938490949",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514afac2-879e-464c-be28-8a956f638103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d5e05b-69c5-427c-8c7c-e296f5ef4835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40d86ac-c1c2-418a-9185-1bf4a27521fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0c2b22-39aa-4d3d-91f7-e8c0300c9f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e63b37-21aa-41b5-9f5f-dba7ca47e28b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32761b2-8509-41de-856f-532af5e76d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff71c067-0edd-4cc4-9766-332d31221da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998c0c84-e693-4ac1-a4a9-5cbd6300d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faca28a-93d3-4234-a2d3-c39c05fe36bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2f6cd4-0fb8-4f18-a4a3-adf4ac46fc0e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027cafcb-10ac-4d76-8774-57ce340ea2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48387797-eb44-4474-80a2-744f2ac02d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5c6294-d43f-4cdc-893f-bd8dc2b81510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "785882cd-913c-4a0d-82b8-aedf0c02fac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b239212-532b-4fab-94bb-0c81e9a590c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457937ea-c8c8-4447-aa12-d74b2634eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bbdc77-edbd-4167-9287-86b13679cee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fbb247-ca99-42e7-bb9f-4c1fe7ffd972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7925f5-3424-493d-bdbb-08a21ccf1d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4018172-20d4-43bc-a311-bc8d1a7ed819",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515de38-decb-47d1-8c6d-b5befe061b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd67952c-eb9c-438f-938a-e505655bedb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bec164-8d68-4c9c-9b53-545fbc2a577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5db3575-193c-43a5-abe0-3bd740dc639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee55a92-6d8b-4b0a-ac9d-f5197364cd64",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749faaca-b614-4eb9-a791-f0c7dd032f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977dcb8b-34d5-4925-8834-9ad165721590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b6eb87-a08d-4cc9-ba9f-3f1f708d30b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a294ed7-1e25-432b-902c-72fe2c30bf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c08391-2bb3-4bd6-bd8b-9a6ef6026970",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20c81c-9852-4917-869b-36172e27e0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa5eb24-9411-473d-9ea6-3112dc1f2689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c37c22-5649-4e41-922d-835ac9040243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14e5d5cb-600e-4014-b675-7dfb9546a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bcefe7-a6e9-4f95-9a1a-18e00ec9c3e0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b399ecf-697e-4664-bd2a-b09d91bdfdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d65849f-dac9-48c4-a0ac-e5c13740d44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e457130-9290-4b86-b78f-e4717d87d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c750bbf-ec6e-4bcb-9c1b-5d054c59ff4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f68c48-4279-42cd-86c1-100b669f164a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e70c5-1e29-4ff3-a811-40855a730bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaccb58-c167-4edb-9929-f32d7c910edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99e43cd-af8f-41d2-8135-dcb00315f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc724e8f-3103-4858-9c89-f5fe73ef9aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce613d8-da4c-403a-8e0c-a0083e91ede0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c063dbe-637e-4a9d-aede-52d9ac246dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0116ba9a-8aa2-4468-9cdf-0cf42cc59451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71915f19-fd87-46a7-b1ac-fe68888c46b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "304c3064-b272-4d18-85c9-805e5133fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bd1da1-83c3-422d-8fc5-8ab9f7eb0857",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5758866b-a8ad-472c-a9ce-b30a9c32eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e5d55b-7666-4813-bdb1-d20507a2fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07d0b65-6908-4104-bd60-245d0d3522bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf07e97-5de1-4ec6-ab97-3523ec2b728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7f90f-38d3-4b44-b044-268e33e8db1b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824f4ae5-9432-43e5-ac47-a8021387ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ed2223-8b6f-4323-ad60-3d101a3fb187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb25100-4cd7-4eff-9f19-70c3e6973c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f1424f-65b1-487f-a608-c3eadf8f763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba968eb8-58fb-473d-8323-ade4191b65f9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73588aa-6c12-4c62-a0ff-7d0c5963fbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d8e0d1-b01b-4987-8951-62295cddbf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c741f-48df-4111-809b-ba1d6c9dee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17568096-8a32-448a-8070-3f14c4c9e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b80e404-e00e-4701-9c8c-c02578d6b1ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01cbb49-359d-4535-b54e-ea0243b221d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eda3415-fc73-41d5-a5fa-5fdec713d2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd0b602-33d4-41cb-b5ef-f41f96592bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2f7d4b-f182-4c32-9aec-595834534272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1841194f-6072-4ff1-9899-9a900775bc47",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34b76d7-0788-4185-a899-3eb85e49ec41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce2c98b-1f29-494c-91e1-d0b9018fcaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c633efe7-72b5-43f8-98fd-6302d37a2103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d202b051-5e84-4d88-97c7-cdfe91fef72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bf3289-a8ba-44dc-9f56-689fe0ddf96b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef3f9d4-4d10-428b-90bf-c06a0f5d7aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be379422-fb6d-4662-bdb1-6590dca3f81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9b1cf0-6ffc-4be1-ab48-4a65ef91a130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9603e4c4-8f23-4957-b427-0013f54d1d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ff191a-6d1e-4fe1-ba57-1316f414e998",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38511db5-e45b-4b91-8458-546866c1be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540fac1a-f4d1-44da-9d91-33231c9140d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec16bcd4-2788-4874-8414-afcd85c1d7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ae94b0-47b6-4b12-9398-322f7e4604ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a2ed66-8a34-48e3-a7fb-659b7044d918",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb6521-4958-4ece-96d0-9e6a56e2d1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742d2a36-3329-4abd-ae2f-6bbe7fc01caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5beab41-029a-4d88-9fab-2c2f51bb70aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "493381c8-cf3b-4d27-92f8-8178685ce622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae9d3b8-e427-4d87-a20e-0dd9e4c35b3a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86dd7b-2f54-4449-b480-831a33128bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd018c9e-89bf-409e-bc9d-e5924e373a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df3240f-83b1-4528-9c95-f6267926b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378255a8-964b-4648-a4af-99759db5e136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b8f46e-0e6a-4fa0-b86a-bab8690beb07",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b6bdd-0a34-45ec-8cbe-4dd569129477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd16905-8166-4907-b462-4046518109d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efbbdf9-cf72-479e-b6ef-390e26784941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69c02d8f-6578-4d73-9c2b-3eae56c63a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db46dd7-2e6b-486d-9d7b-cbc14e70aa73",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16498485-b638-4684-94d2-681a41d45ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa2f1b8-9929-4026-825c-7e6a7e4bfce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74e80bf-56fe-48d9-aa09-5bf1a56cd569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e14e30e-5bcd-4981-8cf4-963726523ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6278acdf-b5ee-45fe-b2a1-659fc184e7ed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b4265f-51dc-48b6-b3df-aecb567c1b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a594066f-33e4-4ea3-9a80-e9c32b8e1c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252c549c-b2cb-4bfc-a4bc-8f3aa91ea050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec02bdc6-148d-4c80-8b91-a5d34099dd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff1e07-808c-4867-85a1-a5d8c9ea66c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2673e86e-a9bb-4c7d-a934-c8b3c6b664cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2413d0ce-36ad-4b73-b0c9-9c0a15d3c349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a273f44-2577-4f18-b934-b084a3b3b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c00fee-d05b-4208-a312-0539196138ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2f6275-a644-4168-a205-bb87d6ebdcbf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e087aa1d-80ee-410c-ad3b-ef94cd02c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813e3049-e6f2-4e72-8c92-688b2c13a365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6415f2f0-c170-418f-a89d-b649af8ed091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db38577f-25e1-4d69-b5ea-b125e77d8b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8ac5f9-8bfa-4040-b999-6b1fc7c6412b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db01a0a8-f609-418f-b425-59965cce468b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263743be-b48f-46b4-8d30-10ce4e958d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f237fd-415f-4079-8ada-be75874c7639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77546d5b-119c-42f8-b23b-08a2e07075b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4678a4-7efb-478e-9bbd-02f79b7d7b98",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e25ad18-f456-482f-b94f-6f5eb16fca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab88921-caf4-47b6-ac11-aec29e8cb7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9563c263-0ec1-40e5-b0f9-8851637ef727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeb8e4e-58e2-49f7-91cb-68e5dc6754b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e76803-d766-4be4-9ad7-90083b0d21c4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4c6d3-da0f-4ba3-ba05-a4f53297df41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be2c833-a710-4878-afbf-603d5c5de890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e14ef-9645-4307-b88c-0cad539b44a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0512dfdf-c270-4742-a49b-9c97aba2d1ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39248962-9c69-47b4-8ad2-0197466a67b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eae19830-4cd8-4ed6-8955-688e1d216ab5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7e9309-5ef3-4516-9d5e-b0fba8fcaaea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "132cc89e-2560-46e4-b70a-172834b27a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4612f73-2fba-4c8a-ab4b-a25a9c91c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c87ba39-11e2-4a67-aa13-b5721ec2aefb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71df9a3f-cfcd-4478-ac90-4bf0e3ff8926",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29fd7999-5db2-40c6-b318-e1d76e5a0280"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ad6b21-7f37-428b-9b8c-1ef65b37651e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be711b98-1ae2-48e2-8eb9-3cefee1d8d54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8986afec-307d-4160-8354-21641916781a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d121c6a-178b-45f8-a68a-c8f2307f778b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8823f93a-def6-4bf2-99f8-79abf84999f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ce90f5c-dbd4-4bac-812f-af80a0a5baf6"
            }
          }
        ]
      },
      {
        "id": "14c62cb1-946e-4cbe-8e42-7b6f3127b16a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "064b7067-9f18-4998-9a01-44e3976464a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b92acd73-b4e3-458d-bfbc-44e2c3436baa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51579df4-3588-498b-8f5e-363b367b07d4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556ce54-b045-41a8-b1d5-dd26df30139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb3b44a-1072-4f5e-8493-0a94fb202267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215a2529-e4a3-4c07-99da-23b00f2699e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd18c74-e552-485d-bc60-1b4f5d7fd8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5193afbe-5010-4da8-bace-67830040256c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2757d004-e62a-4892-8f50-45a2956df088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411dbd7f-0f8e-4835-9bda-0b144054a3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369119c3-338e-4ad4-a145-235914f5902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "154b0c91-9bd6-4818-8a1e-1a1c93cb8f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6b6f0e-4292-4292-af24-58eef8963f00",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba0696f-765c-4f61-bc64-de7c7b8dad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a30d83-4c7f-437f-96ea-eff02a3c1921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cad11a7-e8c2-4a87-a0b9-71e4249f691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "614d6d77-087a-4bd5-bd8f-f1547d3ad15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a35f772-87ff-4d04-a49d-967dba98e9f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da149112-42e4-4fbc-b882-0a122743166e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcee7c13-b40c-42df-9179-4a74a285b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ec8ea-edae-48bc-aa30-89b964f077f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6e8ff6-564a-4c4b-90ae-7643ab878a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0347aceb-ef34-4f6c-856a-5addf352a4db",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c057da6a-a0c3-4e79-82b0-1d90b8f36e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe7f5ab-f8b5-4b8d-95e1-68178b08e127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c6e45-0ab7-4599-b404-520ac51494d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5747d0f0-b932-47dd-9811-3f5b06390593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e0d8ef-66c0-4430-97c9-16d8b877e643",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff53a29c-1e06-4b73-b1e0-651eecde5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c04ef1b-0bcf-451c-88c7-553dc9b09db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a441116-924e-4475-aeb2-ac5402258f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9428e2-0363-4aa6-8a19-6009c345ae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430a649f-b9b3-4c77-a5dc-92a4b3d89458",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed57567-b610-4ae9-9cf8-a15089698b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16289a7b-6c1c-4fd4-9269-3df1d4094fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88457f45-8604-4dd5-9b06-bae8652baabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceecfdb3-71a0-40ef-8fa2-2abb05816f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971305cb-e26d-48d5-95f5-db4003fface3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c43e91-f58f-432a-8d3d-70342fcc72f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4547b7c9-764f-4027-a449-7abd216ecffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e1989-b7e5-4f85-b649-48e4cd12b264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c12e351-a15a-45ca-9337-039229ab1569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d98cd8-9d98-4b5e-b693-f0992ac9326b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca86ffb-6743-482a-8705-ac1c53602d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7345f753-8196-4033-9bb2-65e8f720a285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6e50b-c2cb-4095-8cba-25d1da98c398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8693fb6b-7b04-4972-bce8-dd546b9e2df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ad3dbb-c44b-4399-b9a7-2e7f850969b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11301d-f701-45d7-a790-bba8704492bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a6e09d-400d-4f07-9da5-752a06920b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2115bb82-c669-450a-bca2-d90564011190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bf2778-5868-43a8-86d6-7cc97af93b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a8d615-da56-47bc-a082-704461bccf7b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5ac9b-25e2-4877-9579-695b4d517704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7913cd04-8f20-4f17-91c8-f950d98268d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee5ebe-d20e-4d54-9bd2-9ca2be8c7d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc65660-5b0c-452a-a58f-286e471f21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee694574-1bca-4d6a-88b9-a80c0586a3b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c9eac4-4013-4c59-9bcd-37c73da6f19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a653c7-31d3-4768-87a5-b53471babf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf72eff-5fb7-4ff2-b0a7-e7edae0c869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf287e23-c82f-4853-97b2-014dc41f0ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe40200-6c0c-4d13-9ad7-330335d7b217",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ea505d-af7f-4f43-852d-b5de02a0dd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07baae5f-50f4-4fbe-8b46-391238e40626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d49c0b-fded-45fa-8cc1-a962c83f8c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1086a81d-1983-4996-9e83-3b4c30b5a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5d6599-b5f9-48b5-8bb6-387a0c8b3093",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d8a058-3245-4f14-9208-dee69caf34b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b2dec4-cc9e-4824-96b2-c51d4d51e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00029662-c550-44a4-8926-bcad35197403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ea9f24-e8a3-4da8-aa39-be6c535e5fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68217d29-bfa2-43ea-8243-969d7553d4e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a172c0f-fab7-40a9-a6ea-0813816db3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cd6294-e9fd-4f16-b109-c2ce4b72f559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a3911-fdcf-413c-ba9e-d565f8d18d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a99cff-c8a7-458d-9ad5-4068bbcc8c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860e3367-f19b-4f5e-bdff-8f4de8f0de22",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184d612a-c808-4bec-8138-3bf82f1b1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aca2afd-78fa-4413-9a63-63ea86b061ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04737ad3-b0d3-42c3-ad83-8c6d82b226d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d268f3c8-c57a-4fc1-a80f-f5168a7501f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f12a9-0efc-40d9-9556-335016c65890",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9e0709-2397-4ecc-b982-f694d47d8bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a6f963-d847-41e1-9c86-83a7dfaedbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259534aa-e186-407d-a319-597f646424ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a312ce-d23e-4dbf-ab11-54dcd245b07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f515a21-ab18-4beb-8191-6b921adadd7e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7fdf58-e13c-4c2d-94ff-852e48337697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427cc770-eee8-4e76-ab94-a63d9695ab40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c71cd-05f0-4420-a037-a9a92a22a9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64211050-e949-45aa-b4ca-04ce82365ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ee70b-ba7f-4f6b-8de2-8e41e4e113b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de9be1-58eb-4697-bc22-ad10fe0c6a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d74fe8-5943-4fb4-9c6c-760915829b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8af9f4-4bf5-4999-a896-7f60a72ac9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a322f0e-0840-406d-a82c-ff38314912d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaf930f-9c79-4865-b55f-b711b0317491",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b90b6a-e72e-4038-9938-9e2001bca7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395b4776-4374-4e87-a993-72a28aacd57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411dcfe7-d9ad-4076-955d-c50112d19c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31fc2b22-07b1-47e9-ad35-1ae3994faadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3640f9-d1d8-44af-9e15-d37294e01f97",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972f85c-0ac8-407e-8592-75f865fb0872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915c8d0e-d515-4428-adec-bd133b81011b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328167ec-7cc9-48c6-bc9c-ab44c6b5b10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950a5ed2-4e43-4c5a-ad28-c718e347efd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d70092-9934-4e92-a05c-f7a1dc902652",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea54cfe8-2e39-4a71-873c-f2a00ac4b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e33ea9-4317-4e84-9db3-f7e7321fc087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7179fc80-6f8b-4aa3-ae65-d8400a31d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15102166-b0c8-484a-ae75-339ae8385278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1f1035-1afb-4c77-a1a3-0627ed69d4b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133fff9f-ee1d-4973-ae9a-deed895fe72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cd2abf-7672-4b93-bd50-d126d3ba08e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c411fdea-e25d-4ad7-b8ff-763ee045ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69090479-3337-4ebe-9ef5-e47ce8ff8b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f04d57b-cb0a-452e-a89c-e6ba84b5b844",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492148ae-eb37-42d2-9769-4266e288fffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234588ee-a8ea-4cdc-9db2-a3a8a712fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca77420d-17d2-435c-b2dd-9aa6bb58f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d3441a-0b1f-486a-b410-c7b3b46f5623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5282d51d-7563-41c3-81fc-393be6bde3ca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b7b796-4cb9-4516-8e64-4f8f8cecdaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa3923b-34ff-4a19-a1e2-3fab281f6e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaee403-cf79-4fbd-a2ae-e1769e31d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7d7bd2-8e72-4010-9ef5-d616db37c1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae033c59-b866-4ddd-96cf-7547325d00f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8799ce51-b5e7-4223-871c-47f3700476d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f8984e-c675-4591-8ad3-9f4f467e7309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261a3935-dac8-4cce-acf0-94768bd22091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65be6ffe-e4fc-462f-a823-374eb63aafea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998b3fab-e214-4783-8ff9-36905be34bae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cedd064-c8db-4b30-8d10-909b025bd099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fff050-485f-4942-9cdb-94867e36d098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7511f0a-f010-47bd-8264-550a0de32036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7b7536-2443-4345-8a1d-3062fa0155e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18632a0-0f6c-427e-a489-3e25e04cc886",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235dec64-a345-494e-aac8-ab69bb1251b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7462cd09-565f-4c80-a551-02a549dc7a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c7f99-29bd-4c53-94c7-3eea0aaa40f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8967312-44e7-41b6-94e4-d4c77063f329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa5f3df-9c0f-49e4-b340-9ad311fbf3fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69652067-ffdc-43ef-92e1-b3021898def9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb86cc6f-9136-4478-94ab-9e02bd3b93ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db03b6c-52a8-44e1-af4a-fb021f887a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc09f87f-a2ad-433e-97ee-a0eb5ff3ac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4485369f-e4f6-48ff-ac9f-d577aabcdca8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da902fd8-c30d-4411-8811-dcca17364fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32d557e-959c-487b-aa18-20d7012c7140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de656c32-682a-4d4c-a3da-efe2c12e4259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3b6b5f-98f9-426a-9ce2-369a93149d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0329fb-1ca8-4598-a73d-7423254303e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141cf28b-65bb-42b1-aa0a-d0a633613984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe8332-0339-45a0-a51c-68168740b8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6882f318-628a-4f9f-af20-37613532e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5341aeae-a354-4f40-90fe-87dd6e6dbb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9db9a-a886-4b46-9520-cce977174151",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05102cd3-2a09-4a83-b8e5-8abe4507f54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc77657-cc8f-4ce8-997f-9b9755879d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69f5734-43c1-48bd-87bb-7851f7dc3210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "309fa85c-83b1-4ab7-9274-edec103f8030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06112f2-adac-45a5-b539-e708a59e0ad6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98f9b4a-d19a-4a72-8f43-c2b600d46819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31f49b7-ac24-482d-8c46-5be99cce0268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0977411-febc-4b2e-ace4-ce495112e238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbf6cc9-a0ac-4fd7-8b6a-f5ba52212a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5396ba03-142b-4677-9b9a-a6a42afae3f7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5d7b41-92d0-4d34-9ee1-b5637b84f3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73723aa-804e-42b5-a87e-1116568b5c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ef8f7f-800b-4ef5-8775-c7a7db17ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d9169e-8a2b-40b5-b5b4-0f2f26cc2eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8544ca-8e09-4740-a56e-9adfc47259c5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c61e53-85ba-49ae-8898-079bc92b04f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b15dbd-2a30-4439-8de7-65b7dcd0d3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9858158f-6e6e-4b70-90a6-7c341c605958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f4c876-29bf-4474-8d54-5dc0add5feed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de899ec4-6784-4a30-8b74-3883d8ef907e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a8bd10-c3f5-4674-be80-44d396c031c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be0b636-4580-409d-8bee-cea37a0f4cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47d58d5-f7d5-4332-9f2e-b66aec1ff745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acfc0ae6-cb16-4cc3-adb0-74a9a92baafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7344613e-1cc9-466d-97d0-b763992cd17a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6ea80c-8bd5-4707-9407-a6364d558865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736f312d-9f79-4f1c-aa95-240b712ab82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df2d521-1109-4af6-a166-7b5ece765273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef9e2de-4103-4e38-a02b-71b3db036883"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c1a2c37-d786-4151-9fdf-1a30e85e860d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "185552a7-54e2-49e1-83a8-e7167777c124",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfb737c-fa6e-4b98-82e0-a4b0f3430815",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec18d83-8fec-4f00-b1d6-fa35a960c6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da13d8-6220-48e5-824a-c35b369296b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a39996b6-be55-4447-baae-f2f2291e0146"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0d4096-56f0-44f5-a102-e31f5cdf75c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49c6030f-a79d-47a6-80f4-a938ee3db6fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d7b7905-a8b2-498c-8bbc-47ff5f0bc88d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "875e47bc-0643-4e52-84f7-b7e87c40a04f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feb5251d-8870-45c7-b0db-2ec7baad428e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "442e0521-3248-48b8-aaad-bbb2f28d3c50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50c96fa3-bdfc-4352-9cda-5dc6b9d39037",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88a43889-e1b7-487d-aad9-e54ca9b9bed8"
            }
          }
        ]
      },
      {
        "id": "1b5a9e9e-b3bb-493f-a43e-4446d6f126e8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d897bcb-831b-4838-ac1e-08b46ebdb036",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1b9ed19-7949-4e44-ae0d-704fd99ea6a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57d87254-dd7a-4a62-9f95-8ebbd6a14aaf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcad1fe-6ab4-4eef-8520-b7ff642c2bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a757a9-5d02-4801-98ac-dac2b8694e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46b7e21-e901-46e7-8870-48f7b25f7e1d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d494f573-fc25-4b94-9cb5-0bac675d6d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8aa767-b8c4-4847-9f06-ba44bda6c48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73871b65-9cd5-4903-bc30-80fbbf64e60e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b7e71-b1de-4921-9dd6-5ab6cc02a5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd8de44-adb0-4151-adf3-d09abc4248a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b15ff6e-0c0e-4319-92f9-4525ee1d3722",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb2a24e-0de6-43b0-ac5f-b3f04f64950d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b62331-27a5-4d85-8058-c9fdb78269d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1cee7d-7a97-4e6c-a5a4-570adfccb31b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04b4b9-d65e-4a93-883b-0e44e43baf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55f2643-aa18-4d9c-8be5-ffce2a492c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5547016-3592-4532-b202-a0b259077964",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925a654b-ea95-4689-9e0c-6cb1b633d73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb83171-bc94-46ac-bd72-9c7150360486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409e8eb-85b9-4b11-bfc6-efdaf41d5896",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b764085e-c9de-4e97-977c-12efc28178f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ac0737-7049-4973-bcb9-652a8ee4b952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07cb07f-4a59-4af9-b5e7-a4db516725cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0c1270-bab0-4515-9949-5a735d97465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3854c-7ce7-48be-8e69-33df1db4b234",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e06a1e7-a638-4fe4-9347-365ac8407995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691198d9-c9bd-4731-a03a-ee44126ca242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16de316b-5305-431d-8982-74ef02c4209e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41becf9a-9537-4c75-9b95-1f0f080e8227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a118df1-51e8-49d0-8c92-0030bc4467a7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf0732e-d02c-4956-b736-94b1f61292b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "875ea8b7-9b93-44d6-882f-7a29afb97929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3ade56-2d71-49ff-9dd2-0071f26e4258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a009e9-6168-4eec-9337-6ba4455cee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3159e947-4b2d-4d55-b8b0-ac153f1676c6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df576498-26b2-4999-ae7f-1d58d98b7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91fdd3a4-def9-45c3-9c5f-c3829effe317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb919c4-2a1a-456c-aae7-cda3734a9b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47d358a-37e9-41cf-8186-c8ef1699f0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ba9ec-84b0-40f7-acda-3f28c82dea30",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6842d0a-5187-4f29-b6ca-874c74b7c9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ede9a-72b8-44d3-8347-7996f068766f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fae9643-7f7b-41e9-b50e-336cd12010e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f46da0-c99a-46fe-af1b-c3ea899fc786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ee349-803d-421f-8cf7-e65d532f2cd1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceab1231-326a-4004-9410-4206681946c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f012a8c-df0c-4a73-81a7-6bb7ab767230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f1df4-31df-42bf-b626-4d13481e438f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa512c48-440f-4476-9aed-9a0a74626fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f5a308-5b8e-4385-8714-3f0c26ed138f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dd91a0-889c-4b95-bf00-0e058fabde82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf73994-04e7-4290-84f9-b0b85185549d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fabcd55-3d72-47da-b7ce-ba21b5d65189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5465e2-845a-4ed1-a915-22f46bed252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500990c3-3cc4-43ee-828e-bddfd765e529",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cec55e-37a7-42af-9089-fca4709e73ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6df8a3-41b2-4c08-89e1-c218691cc131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48920915-44b7-497b-b4b5-6f1637d87b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a73d515-fb48-4fdc-93ec-81b291daf1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ecfdfb-b12e-4b97-bca2-d0e9294a3d84",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5a4aa8-449c-4165-a052-b3e76898bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b151ba-9816-4432-b4c3-61792e534f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91890c2d-cbf3-402a-ba2f-b8c86fdcf3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37a13fe-9cfd-4022-8393-0965525c0ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389bfeae-2ed2-45d7-be6a-2a44ca0e698f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d19c5f-7a7c-4e15-a079-223d8f35fc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d163f0-29ec-492f-9538-50618ad0bd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428e494f-c61d-43b1-954e-5a858b67309d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3f5029-3944-44a2-91f5-1a9c78a05c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc225b03-1fe7-4dc4-ab0d-ec3ed67468d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eba7954-d04d-4d77-a561-86b1613dd00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96c60e0-cbcf-41b7-842b-2a9555b5db7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bad8b9-5d92-44f0-986b-8385aa73cd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b88a5a-66ae-4a0b-9e3c-17dcfc4ec63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38feb98a-a113-448d-ae31-c7a097998986",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d026ef9c-9bc7-4ff7-8ce2-1a350c8c2be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0d0cf4-d497-405a-bb70-a9fa88a8ec4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f84f2-979b-4a6c-bee2-dca23064a8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b3a522-1b37-4799-842f-ee0164b67543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38decf71-7aa4-4ce8-9a9b-669c021cfdde",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3b2da-043c-49e9-b178-78e6976e954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc4b325-1d71-422d-b278-1c424735fc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec58e2db-eb86-4c88-bc06-39f8b56852c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550c83a2-0a08-4775-8175-c1d0e10e7c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba75e0be-8c9d-47f7-8db3-d4da0453e09c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588a8b9-a2ff-4fbf-ae39-e39c97604a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c78d6d7-c8ad-487c-a1e1-fd659eef99ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0d2bc2-c7ee-45df-b555-95170be17805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e035606-21e5-49eb-ab84-cb8b9910522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f20c8-c5b4-435d-b896-53075c48f915",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab880f7-f748-4907-be19-1bedbc0e7112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b749d6e-e916-4775-bd76-5a8921576608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7177e4c-f4d7-4a40-9937-287b6d635576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ffdff1-e049-412e-bd73-53e301d87027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f47b852-24e9-4387-b2c4-528e0c77a2bc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7063f0-e0d3-4730-a746-7b2bd10740fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4e4a73-f248-4332-8e74-43127928bb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2287a0ab-a0b3-45ac-8f66-d18ae9458cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a67bf9-5fa0-4cdc-826e-46e95a57a0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf5269-026d-4b0c-adf6-1a6de9607982",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a47c2bf-2c5d-4dbd-8fc4-df31dbf7d008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f054ca-e6a2-47d3-8e31-a5049e6d8afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd33c54-d2d6-4385-b392-a825c99f705a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7d7773-5121-410f-9a92-a1d2b6104cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3740f5c-4545-4b11-8fec-50968cf86adb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ede0187-3679-4180-b40e-7f4e2ba9b57b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7824ab-061e-492a-93fc-c56eae2c0ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335bcd83-78e5-4257-be05-0e5aff53c142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f36945-6816-45cd-8097-8bc69fa5f58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27966e0-bc12-4f66-af6c-c79e31d48bb1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bf8ba1-38cd-4c1f-b0a7-b4a46024b7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdafbef0-8a7e-45d5-93f5-7622a1768198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b69f04-23e6-4406-b10b-28ebe68c81d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec1bf82-3e56-4311-9780-367edbd22ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8109d4-2393-49e2-8630-624fbbf918bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b7fbc-812b-47c8-9fd0-10f150299b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1ec55f-d180-4c66-813c-d6601c192e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c990333a-2158-440c-84db-553f9634f8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a035109-b8ef-45de-af4b-6f8e67913329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25294fcf-3611-46d9-ad3d-5b75d8aa952a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796b67e9-8c34-4fb2-b918-25c2a3f35238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c855db37-9892-4e62-9ec8-5abdf5b0c371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ea407a-3b2f-4f01-b3b1-c102e4284f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c6dfc7-a68b-4334-8e8c-907b59bcec9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7422722-f1ac-4e22-8839-e1b13faa41ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcec22cc-65b5-44b6-9e8a-7a604d3b237a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a0a8af-f7e1-46fa-aacb-5ef06cdb51f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dbc1fd-3420-4284-984c-4eeac282bca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53703dbd-7f21-46fc-83ce-16ab8691d1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b83f66-a907-43e9-afb3-9171ed91adad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b499f-139f-4484-b301-35c3dac12081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2775bf5-770e-4a0e-b2e7-c80cbf01d9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b6a90-1904-4474-8825-b377fab4ae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184c2700-5c76-4885-a1c9-d342f82dbda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e33c3-2199-40b8-85d9-0cbe646d312c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb88b069-2396-43c2-9b65-20bcfc535f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853eb339-036b-4abd-afbc-1cecd060d0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf6c2df-256b-4220-bb17-fd5e568a7550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bae897e-60a5-4365-9624-6a27e23f91dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e658f7-f4af-4990-ad83-c2218bb1d09e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9187fc-e6b3-47f2-ade5-1976e1c11b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68eea52-348b-4c81-a72e-dd36e4503e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e1d1f9-6842-4195-aac6-890638c64cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12589006-ee9c-419b-901f-4c8d08ee90e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2858dd4-d458-4a5c-b9ba-5c140349f221",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621be4b5-b9c3-4008-8915-57402b9ba1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c51461-bb4f-403c-9d4d-5f823aff723f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b100daaf-5d06-425a-895b-4a14374f83c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f0eecc-8a3a-4e04-9718-ad99f04f8875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f96f94-d4be-4a36-8313-65902760a5dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e5f663-665a-41aa-802b-3cc38aa5d6b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9c0000-1eb7-44fa-9eac-77de0e74bec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba95ac1-5065-4788-89c5-9bc34cd4567f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a201e0-d1e5-4472-aafa-fb5570e45879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493b592d-0c59-4787-a6d9-cc6b455cf777",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a52bf5-fc56-4e29-9d6d-fa3f53f68921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ebb18c-9dc2-428b-9e7d-e287649a020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a51b6cf-17d0-4f85-9331-aea223b43e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9747ba-79d3-4bab-b08f-89ad9acacedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8055cfe-9b6b-4321-9c85-2a10b4b91a71",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10558f6d-6ca0-4244-8cd4-dbfed8a8eb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bc7c83-d218-4652-9833-21971a16fa52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17448820-8f00-430f-932a-e18877debb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ce582c-a467-4f54-a2f0-f6ec7b0cbc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8d4f39-b84b-4027-93f0-07dce14b6613",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5fcf5f-5076-4f00-95a4-500ade648c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222e5ece-3edf-4ee2-8a0a-4358c06c9aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c3c6aa-a4e0-446e-b911-f133d64dd3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c92003-ae4a-49d3-a30e-335827d23ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef4ed5a-27d0-46f4-ac28-23ceab44b992",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5922493b-8cdd-4ea8-83dd-7b7c4b8173d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb58d37-4fde-4cd4-a646-b09def43078a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93b46bd-65e4-4412-a601-c2b7ff3637a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1836000c-4333-432d-8636-b30eadf63aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fad0674-6bbd-4297-9c16-6e1f1ef7899f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2ea094-e067-4684-b3f6-ab27401e3d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4c580-c254-44bc-9ee5-3485338d95d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8b4dd1-b51a-4c0c-b90b-bdf1ca288621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d1d33b-2dfe-435f-952a-1ecd0a0b4dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c214f79-d2e5-4915-8e48-c0d05a3a3017",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d769ac-f635-488c-ac3c-07d29397edcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1757586-93a4-48f4-857d-d7677fb8cd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dc041a-3751-48a2-952a-57fbbce000be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b83f96-f569-4f05-ae33-074071d61c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7919865-1b64-45dc-91f9-36fb3b905e6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb32431-3233-493b-b14f-87c66129e7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120f6131-45a8-4c04-a42f-aab289905051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d5264-8645-4464-a4de-93fae7d6b095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69699706-1a21-4ae8-b51c-0553acc41ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb06311-8cd6-4a3e-a7de-4c404a99c186",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59312455-6474-4f08-ab82-e1f6b8715e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f746c6b2-edec-4020-ae4d-e4265d0e762d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6be36-0a93-4833-8de0-0e0539e724c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43bb03e-8d41-43ed-ba96-8040c806b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362c28d1-5b45-4c6f-9660-f86b15f7763d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d7ea1-d5a8-4db2-8043-da1ace44bafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c727518b-3703-40ee-8a1f-c0683f73f923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc7994d-d2c9-4077-a4e0-38e919c46d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d07a75-6996-4776-b49c-350c4f4cf22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78a87e8-ba8e-4299-acf1-c829f36e0264",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e758935-59be-48c9-9442-fb005fffb970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25ecffc-b24c-4ab7-a3bc-4e9217792748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c8dd2-accf-4bf2-8d6a-b832b1d7589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed486658-17f7-40a8-b7a1-b4f0dc951300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fc36cb-0fe0-407a-bfbc-d90cab6df9b8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80cc00f-9ad2-4461-ad9f-b00e2dbf94c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef88de9-4416-4175-ba2e-293f478fc024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5443795-115a-45db-884f-6905288e5ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17108518-2f79-42b0-a29f-a0af00cdb7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c01c015-adc3-442c-9a92-61f4836eb46f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34050cfd-4e10-4099-8e4e-059e027ce15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f60ce9c-4753-4098-a476-1601acee3e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f63d35-693a-424f-9676-11aed5d1d41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec49a7f-4dad-4c73-8038-6ad22591d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a5256-d28d-4533-af3c-0e7917f2098f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f39668a-cd3f-45d6-b4ad-3b03587fb6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4e1673-02e7-42ea-b453-fec80cde2faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b63a4c-fa53-48e7-a037-c2e1d3b6cb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b259bd67-e44b-4645-8edb-597022a1a083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f653127e-ce8e-424d-8f24-514cde67ce05",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2bd67a-b81d-409e-9537-30b574d6ce57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d45556f-9a5a-4e9f-828d-ca37f05cca0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdc1347-869a-4f8e-811e-a0cbe7048e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cf4cbc-7244-46c1-8dc3-979b6bb6cb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae25af74-999d-425a-97bc-055ae7b453de",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a488c9d-2c3d-4010-932f-da59769f8a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb5c6e3-6e17-4d66-b1e4-0e638a501447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fb5ada-7cff-4a27-9c8b-2cceb5dd3fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee63610-6a64-45ea-b6d5-9d4defa6295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f211c6-ffe9-4168-8520-8768f753bf27",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1841eb08-c258-4548-a0f4-ca41fb13566b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ba93d3-a936-40a4-857d-be670dd33309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ff09c9-c5fb-473d-9365-e87edc413766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9e6ae6-3925-4edc-bd49-2b3c15ecee5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720734cd-5d8b-44e7-b930-6e6b8271559d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cfb16c-e6e4-4ccb-b39a-76158b7d5841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2e2b4f-1300-41f1-bbe8-eaed598439af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44fe163-eafd-41c9-b1dc-f92b3917a604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33316ae9-9fc5-4af6-8df4-1868c5653569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5fd283-ed4d-4f80-a3f4-da4d2a19a1ec",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b3980b-f51d-4f30-8d83-a3bbbdb165ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670791b2-684e-4c0f-88b8-eedf9d7b51d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf2b5b9-9758-4285-8063-01c78b651ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fefdf33-a471-4f36-8081-efc1d754db97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f126ff4-e12d-420f-bd06-eb73ce513eac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa018fb-e577-4ca2-bdbd-4efc0443a024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee8d27c-53a6-413d-8b54-ad5597fbe4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9054159e-a9eb-4f9a-a6dc-c10121f06f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb80824-edc7-4d90-80e4-80a9c2450024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d028fc38-d30e-4e29-93f5-54861878bf6f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4698b62-d16a-48c0-b3f2-8873a059112f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f867ba03-1983-449f-87d0-d864c6da6658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692c5948-199d-4d2a-9e82-e9fbf89c5b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73d6483-0ec3-438f-831e-465ac804d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfc3e6d-a5ba-4f44-b2b7-facbd9df2bd0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bc78ac-6855-49cf-8b89-8a2770d09b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562e3313-4dfd-4553-aacb-accf6916c1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cd7272-9d8e-460f-9dfd-cc498bcb0827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50989e98-ecf2-4901-afd1-0bc709a7c55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfdaf3b-ebf1-4a0e-a253-092e303a4ade",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c85cf4-9578-4fcd-a4d9-7cedec2b47b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d01c69-98d8-4844-9b42-50f67c84627a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8173c26-883b-4475-8741-f2c8aa23de9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9944afa-eff2-4894-8e2c-c3159e809a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784539c6-2d84-45de-b2db-961ca7210185",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b24ba3-854b-477e-9b7a-a319b6825833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a5e8bf-7aed-4275-983c-9b633954bfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbb1971-f374-464e-834a-697b72f991b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e283f552-f3ac-4c57-b917-cb8c84d72549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c52dfe-909b-4a30-ab04-f182b9024e44",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2eddc7a-61aa-4b42-a037-c3a4226c3365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb29e30-6af2-404d-b0af-51e9b1c9f07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e5abf0-14ed-49af-8d63-492f775ae617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63e679f-0c4d-4f50-9627-14c43227a352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffad8000-7cb0-48c4-ad11-ce2fbe56001f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e741116d-0ab5-455d-bdad-06fcde9e59fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58e94ef-99c2-4041-b200-fbea4a17bc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a483576b-8c11-491b-a216-04d937685f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c02070-5084-4126-80cd-fa895eb92b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a824eaf-145f-4cf9-8b88-bdb90643a075",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd199c4-b123-47f3-8c02-1e3efa125e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929a2349-9156-48d7-bc9f-02ac3c8b99bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec3671-c7a5-453c-937c-2a9c0dfeeb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adaefa3f-ab19-4053-9248-faee5f3e86ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439124eb-71ea-404d-a3d6-1330f8b2febb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eece10-bdd7-445b-95d7-0a97be12b2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c776dc-fe70-49b0-aa59-98137cda0784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2e6a90-772c-4a27-9ad1-2ba38f24217f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8293bd-ef81-4762-8eb5-b6c1e85ad970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b841f86c-5059-41d8-8281-c22e100c0d45",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd9db51-4fc9-4611-a17e-aa562d3728b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90905ed5-fd50-4f35-b59f-8eb6449b5e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097a240b-6c6b-4bb0-95ab-4e036e63e5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b12106-0d4b-441b-9d33-0aee37956938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e972b8-a885-4911-a5d3-5d79b5a77265",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b31e47-b980-4a39-a176-0b30aaba9f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e06457-8e5c-4420-aec3-31e503acb651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de57d1d-2957-42fc-9b9a-f3c8a7633b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4496f0b4-7eb6-4e07-a378-a40a12367c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be8d3d3-f4e1-43ad-ba80-23d0dc8529d5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6867bdea-1051-4dac-8f16-acb11441dbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60ca3bb-19d3-427e-bc49-0cc2bf57de58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba11ba7-61ad-4af0-9061-4d3f9fa445db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de21c571-9eac-4b6c-a21d-de205b3389fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2749df3-fa79-4ec4-88d4-1159ab6d13c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f9328-5a17-4cb9-9733-d6d1e096fd5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a2c1d5-1d7c-4bfd-839a-094e07303d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd3a77c-04bf-406c-8f3b-57a5f140c247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9afeb7-e410-40ca-aa9d-7cae55e5ef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72beb81-063d-4c79-b46e-d9a017731230",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470de1f4-beb2-4d73-a983-4ab9db172ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f870f1d-3a10-4b28-9a8c-c63422088abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9124b8-1112-41f9-82f8-6827b349cc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa94c79-1a05-4cfd-b1a7-cc25fbf9cb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefc22bf-f9f6-43f9-9817-54cc4e414a51",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1046243-261d-4ca5-8a05-8fd80c03ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b91125-a742-4c41-9833-34d881cc624c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76519df7-353e-4f0d-a6cc-1ccfc56d97b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8b81f7-fa21-4ee3-8ce8-ac66a099aa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf4e184-72ca-4935-bf7b-aa13d8dc3b6c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9390e5a3-7856-4e0e-9659-08c98a3134bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00919288-3c76-4f64-8409-10f75eeb05bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b2143c-4677-4e2d-84ed-2edab5d70793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82f8c75-baa6-4d4a-84be-8e01ab73b16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8363da62-67a6-441e-8881-42e05603eeee",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133ace3a-ac99-47db-afb0-01c56c3e7204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9c474d-c30a-4602-aa67-9288d539a1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b214cbb9-f13e-48c5-ae1d-e5f3c7e778d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4a42f9-37c4-4ed3-a88c-b6ca33d77443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140896da-a67b-4f76-b0bb-30f6a1ca58ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55405456-243d-4f99-b9e1-58743ecce7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f159be3-5b28-48e6-8332-8ddaa697e319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb75173-11e5-4947-8626-02b405c9c153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f490b9d4-f9ca-44e5-bf83-dc4bb0205e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aa20d7-57e2-4c77-8546-92ff9fe4c692",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bdab0a-3004-46ea-a0c6-c0d3636826ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9adae6-fe33-4d9d-93d3-4e57134c4a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e9659f-25ff-47c4-bf2d-400651b59c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed967c8-fb9b-48bf-a7f4-875cf7fe3796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7995ddd-f1e1-42db-8161-f6a13fa29735",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfb3ed1-4960-44fb-b1c0-217a17d1373e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b31537-f1c4-4d4e-b9b9-292adcee510c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6fa607-bacc-4746-b04e-9fe9e6fae933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3cea8a-ee7f-4e57-abc3-623865fdddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8475e53b-0eb0-434e-a707-fd5cee028eaa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1752aa1f-4ee6-4473-b5ce-1ba5b45a66b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4bd6230-7c5c-473c-b3f3-1cafd7baa2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23017a5-b415-49d0-9758-18992701332e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11c94d0-9263-4da7-be2b-e6dde524e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38c8c98-5aa8-49df-ab28-330c6c6f9842",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330f73f7-3f56-4906-bd69-2f3d99ffd150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc933a8-d75e-4a65-84ca-98c23f934c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c782c1d1-7a98-49c2-b61b-0b6cc135e621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f41d5b-fac8-4298-82ef-a61c44d95f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2861db1d-d2b8-455a-95a5-2734bc85ffb3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15929991-25a8-4f1e-9cb6-298b4584b2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0fa8571-dcf5-4b2c-8994-97cd77cbd9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4911efaa-5007-44c6-b574-20fc12f423d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7ab50b-2746-48d5-92a3-21c6a92d467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119cb01a-2592-468a-96f7-758ebbb00230",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495c3b6-0d35-413b-881d-802a3d334ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f699152-def8-42c0-b734-880a66a2c633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeacc37-fc6e-4202-94f6-003b5ee12dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec76f27-f7a4-4e37-8b38-494511e26031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb1a101-5a59-4f95-8838-705359e4316a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ebb6e0-46ea-4462-b9ce-a84a55a1dc41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9392c92-2a8a-4fbb-9a26-65fd7ee23a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8388840b-f10b-4198-813d-cad8758e5a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ca31e5-067f-46e8-9df1-c977d52e5c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd41337-6767-49fb-8bde-f839e3310536",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aa7d3b-68b0-49b1-a220-cd2d146a6736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa6e306-1f40-4dde-a8e8-ce5302799355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b546678-8fd1-48f1-91f0-ed9ee8a8b314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6026659d-b178-4587-b547-0466c50cbd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab527a-0469-4258-ac83-ef4721b95aa9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d48b24-9182-4ac1-a97e-73ee4949df54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a45c3c2-b382-44e2-abb8-1dab6c9e0fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e75509e-caf7-4f7f-8db8-68e5a7a7003c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e628b086-af88-4365-b3ef-70010a73b006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a099b49-0e4a-4ee0-be4b-ecc550ddd4c6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be4ad45-e9c2-4bff-a8c8-fb52962921fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85faf69-bfd2-4848-ab63-35ace8fcd316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00376634-6e44-4791-a740-276a6c6bf5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60070116-4185-4741-9880-5eeca8c03038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53378005-e503-45e1-9e61-f87eadf43101",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88177444-5e86-4d81-a13e-e6496754be26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87dd209d-9899-4249-888c-80c41da290b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505ff912-5dd3-4882-a69a-52de53bb5082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d699f8b1-128d-4b0d-9bda-c92da20145b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f1d27-2848-48d8-a1a9-89cef344c417",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5f404-5a91-4c53-ac91-cda99a9e046b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560c8f62-aa10-48e4-85d2-8a6813d68717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695c9d2f-d611-4de9-900c-82c8e0550425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecdc671-09f6-4ee8-a0f5-da6fa908ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f27ff76-21d7-4838-9420-6de39a428087",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fc24f5-d054-4248-83a8-4b25b5d782de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd2f30f-d7c4-4613-8eb0-e2bd2794bf99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d2c537-3a49-4699-8492-d3d9e2117d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d3870f-1e27-4598-80c8-7cb80e5c48d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86505eb6-3980-4a2d-be34-0ca383f51a73",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c85870-873b-44db-b6d4-c68b7cc50ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c375af-ba9f-46c0-a028-f186d13a164e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c539a4f-07e3-42ea-b4db-5a8361445075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cb64e1-d59e-4ab5-b458-f19ea4d99078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e89420-2068-48ff-bd2d-98b2163dca18",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccad958-521d-413a-a0b0-f2fceb12a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba8f3891-c0c5-4850-9809-c84b46825c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be001aff-43a1-4a36-b80e-c5e48235ee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba14c2e-7884-42e3-ae05-36a8e92b34f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384f6e99-6932-45f7-bd0c-f2209095ecc9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352339ce-efec-4529-aae0-5fcd41345c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e724c8-6d09-4234-baec-d79745cb2316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a39f1-1668-4f25-8321-5567820a70d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdb131d-f408-44b4-a47a-485af34ce7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a720bf4-4efb-4d5c-b423-c9879c987bb9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8626981e-2bc3-49c9-b431-06dbece3a379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378c7f52-4bff-4072-b3ee-01588fd96684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1b6e99-4f70-4c0e-a4ea-21247e0a04ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a943ee31-2f05-4373-8f80-8307216be841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dee00fb-c345-41b2-bf72-15b6fbffd0e2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33aa6cc-f6b2-478e-afb5-1a5a202f391c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4ba3ee-d6b2-42d9-808f-dd219a819765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326bbe5d-3896-48a0-a00f-67a76b33e0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da62d53-9d21-4804-906f-c2453ed764c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d89bed-b363-46ce-ba90-bc88f6a69634",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94045f3-0f8b-4c7a-8bc9-0f16f001f690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26a2f1e-e87c-44db-b35a-f17e21b4d379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9568ae43-af79-4a24-b27b-4c35607fbdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0e0682-ca69-482e-be59-09128d496f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94556cd8-74e7-4bc9-a7d1-ce84aa304da1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e646ca-ad8d-480c-8f36-8b92a4fd8166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b69fff1-3cb0-4e5f-bdf8-45af8d412bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db1b811-c49f-42a7-b026-45c32c2418c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b1b1e9-3428-4e29-83cb-22db5a04458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4f8964-69a0-4398-ad3b-5f04dfca39a7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0331f825-3708-44b9-9bfa-cc53cf2aa777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63a319c-46f4-427c-bea9-77e4b329bfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f4e54d-c590-4a55-8472-7048a1a3277c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7836cea2-d202-44d7-bbcb-1004425d1eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e4993-3e4a-4372-af96-ef9af467d4ac",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eca11b-1750-483c-911e-e0550432f3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f998ee4a-7fb8-41e5-9e1f-eeda1141a728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1224c8-0648-4ccd-ad14-e64ba78c0ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffab4d1-346b-4b9a-9915-2cfd60a36a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db38ac04-2e48-4c66-b84f-4c6647b015a2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a5d4b-5661-41b0-8c8c-3c132f98baa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec89e51-121c-4486-a899-cd570b757e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2901994-9307-4a83-b2e7-546626816b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080ae7ed-661f-4e5c-a33e-23a15751498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238b91ec-e1c9-4d95-9be2-05f5e94c0140",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3272cba2-2a14-4e68-b5e2-b679caed0b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1a04c4-3e8c-49eb-8498-dfcef95f3aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df36864-adf8-428d-a894-165cca925a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9c4e42-d924-42a1-9f74-94ee4096933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee9ed11-2007-4efe-94ff-c25ca97481d4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3cd31-faf3-439b-8085-e808feca1117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98317406-e9f5-44a8-a94e-d6055d274c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d6bcc2-b9de-410a-83c6-026cf3131439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f6e365-dfc8-4b03-8496-0234f1a942d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe41e42-e836-46f4-941e-3a6bc19a8c19",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743dce8-67f9-4571-b0fc-35afacd1d67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d60e9c-d237-4ad8-883a-628abdcfb2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6860b0e6-4c0d-4c8e-991a-b29119b82e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1f0fcb-13c8-4140-b878-228b1f022626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff8a477-7eb3-486b-b102-057365e86cec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1b740-7f80-422e-a3a9-71747ef5f663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13753fd9-5592-493e-a309-4735a23b442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c943efac-f77d-42cc-87f7-6cc4a65ddd93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf8c52-19d8-449c-a8b3-574944a3c863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c02db7-734d-45d6-b81b-3f1c0d670aa9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c32722-635f-4538-a88b-ba1cb055932e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79890aea-b34f-4ce7-a935-40654ef45c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb336831-0ce0-41c6-9423-e8c6d743dd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a3aac6-1bc8-4436-85e1-aa1633475d22"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "148192e6-40a1-4b1f-a926-38c5ccbdba7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502e393d-4921-4a5c-82e2-94793e84d36a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "649cc18c-13a9-4d21-bcca-d9d104ea45c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7d1f566-d01e-496b-b9c8-3539c3f643ec"
                    }
                  }
                ]
              },
              {
                "id": "154bd8f5-6141-4e40-901e-0d0f930accda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4617f73-054e-44f8-8193-f21946f8f627",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b769df8d-ccd6-41fc-ad02-9c3e8e103f3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3c0b8a89-af88-44c7-989b-b86a6306ce3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c375f241-8e85-4d6f-8d97-89a65b3509dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c673582-777f-4244-b0d1-7ca18e2ccc7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1243466-a62c-4c1a-9697-91ac6af09d70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b530c26-9bcb-4b5f-90ad-14d0cd675731"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66a1baa-b267-4326-ae76-1643b6b22e56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f1399d8-2a09-41c8-9562-152c9ec2963d"
                    }
                  }
                ]
              },
              {
                "id": "584be8e7-94cc-41d7-97d1-9d6dced20daf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a64f8eab-0da8-413c-a1fe-fd1d97851b9d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8e758c-87e5-44cb-ae7c-7b3938b48d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3abf2481-e5fd-4bf7-b482-01f27dcd946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ffcc2-cbfc-4c6e-b5ab-2745d14f3407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c33418-5f7a-48fa-846c-e0fb513e9b8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98882da3-8a8e-4d8a-a5d0-f09aa7325527",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acb309f2-7aea-4c3b-9269-b96d86e15c64",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "677995b3-6eef-467a-a3e2-4fa8e1ad8298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "264a37a5-a614-4076-8187-374820b50307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf6bdb1-3779-49cd-bf37-055d43051965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "811e3e0a-f87d-498a-8480-b3c4f51cb37c"
                    }
                  }
                ]
              },
              {
                "id": "0f7bbdc9-1b93-41db-bbf7-78f462f0156f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae63eb2e-4c03-4ed9-9c92-bc87323c85c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3dc3d02e-8af9-4630-b25d-0e1fbcba2828"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c50013-3ea4-456e-b766-bb7141296ec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e117977e-1bf6-4d69-8c45-e0b7088d74c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a5112b7-4755-4b72-9596-2f2e673e41d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a7ac84c-1387-48b1-ab9b-2a89f839b357"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab7c9a03-646b-44d1-bff6-6ab3a5a97aba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abd5e417-c62b-4e9c-9530-5758ae9a7648"
            }
          }
        ]
      },
      {
        "id": "179dc727-9f50-42be-9f4b-9e21d3e6985b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dddd0df0-7a93-437f-be8b-49a4d0e9b3fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e235ccc-0ec3-42f8-88e5-ab919dbfbc95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "658d30d3-009c-4cf1-9323-26262d7e67c0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e008f4e5-2d1b-4e8d-93c4-bceebede7b66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6cd32a67-82e7-4df6-a554-1ff66b608df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f7774f-7899-4407-965e-c7c02ed20130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6581d83-3be5-48fc-93ee-1bf9849ed7f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35586420-9abf-4d04-ae9c-f59c62e66a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b245ece6-7f0a-4b0f-862a-a02adcad32e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ad3b794-f57b-47c3-992f-ea2354982a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5605885e-f59c-4890-8da9-cda04987b888"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "371c3934-0f7f-4051-b518-352cfb81c6d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "457e85a1-0740-4972-b155-2b5bef5dbce6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5fc55f4-8af6-44f5-b05d-5169fe24aa79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a170889-1056-4d0a-8149-decd94a081ce"
            }
          }
        ]
      },
      {
        "id": "37d9d2ea-59e1-4bff-96e6-bcfa6c42a518",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d81ebb02-2464-4817-819b-f8b74cc9be56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1cc388a-9f16-4627-8d65-520664b14c55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "130372fd-b62c-46e4-a8b7-d48e545f4eb2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aed20fb-4b3f-45e1-ab17-39c13f4ac425",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3500f6f2-e636-4844-90c4-3b3fd81e1d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9d739-33d6-40bb-b767-b365249e2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77af93e8-34dc-40a9-9aff-b1735e5f4a3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87984cbe-3b31-4850-86d3-2d4a449e07f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c071e2cb-1c03-4abb-aeaf-4b4909dece25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3126a7ac-fd1b-435d-865e-00ff5a88c7e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0678ade7-4303-4154-b597-c74d3b5ff370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09165703-29cc-49dd-a48c-dde9bf7115bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be29da9c-c30a-4b25-bd47-aca0c2665323"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "668b5bd8-55f7-49d9-8df0-ebab9b0cd4f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6b09bdc-a073-49f0-b143-60405554d150"
            }
          }
        ]
      },
      {
        "id": "abf6ac0c-3d0b-4c08-aeb5-a5f28b416311",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "26acdd5e-3b6f-4f99-a20f-ac6d8059826c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1094051e-2359-4898-9d8d-7e9743e4b171",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c479c0da-7cec-4c4a-b947-49d3708e213f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76770fed-f48b-4dd4-9db3-36e67128c83b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8fabe3-28b1-4b17-82e6-16d3171b382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170abef9-0c32-4bcb-b98f-4317d02570ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbddd9c5-f8ef-4c7c-8909-302eefff38dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe63869-898b-4aac-bd70-a7f53ed65002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83cdc54b-cbaa-457a-bdf9-b44327a7084a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b362565-771b-4d90-8dfb-809f76084e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af36a3c5-2c2e-4600-a738-5cf661402f4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5a134d6-1a33-4a6a-a49a-7500bfa9d8df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7f9c2fe-1cc1-4909-aa2f-0f021eeaf8b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e878ef9-3bd2-4936-b4d1-d0a6bfee7c34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8281a5eb-5ee2-4c23-aead-d260af1ce683"
            }
          }
        ]
      },
      {
        "id": "0c1610c9-f1c6-42ef-b55e-cb2c04e1c931",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfcb5238-5516-432f-9c29-68866a47d2d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38ba60c3-c55b-4c59-986c-812235265125",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1ca6b36d-f92a-4709-ab07-ca23e4629e41",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b35b802-cc94-4338-bb46-f0000b997d2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61460658-cc8e-4552-8955-d82229ecba07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 38.708771929824564,
      "responseMin": 18,
      "responseMax": 465,
      "responseSd": 28.645738672721947,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699922070305,
      "completed": 1699922093172
    },
    "executions": [
      {
        "id": "c6396a74-f027-41d3-9a21-850524fdef42",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "64bf4b39-4649-4716-bdf3-7eb885263293",
          "httpRequestId": "f60ec7f8-7027-4de6-81a2-48893180cefb"
        },
        "item": {
          "id": "c6396a74-f027-41d3-9a21-850524fdef42",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fbd36841-8a4f-4dc7-b354-326da797e5b0",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "62da19bd-9f4e-41c5-88e7-165806570e65",
        "cursor": {
          "ref": "7b2c9076-8270-44c0-ad5f-12d2d77d9f81",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4d16af4d-9d79-42fa-ab1f-1fbf8a69122f"
        },
        "item": {
          "id": "62da19bd-9f4e-41c5-88e7-165806570e65",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68da2149-94b9-4109-9d21-bc9cdda95167",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "da8c5782-13de-47ee-bbed-0404a7700a38",
        "cursor": {
          "ref": "67cf6103-d006-47d1-981a-de891ab258b8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eaa7265b-e9db-4ec7-83d2-5a953ed926d6"
        },
        "item": {
          "id": "da8c5782-13de-47ee-bbed-0404a7700a38",
          "name": "did_json"
        },
        "response": {
          "id": "35cb94ff-3994-43de-8c2d-58f62a4e785c",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b30b49-56aa-42a5-a7ef-4dba56b1340d",
        "cursor": {
          "ref": "7491d2bc-6277-45b1-8659-bd32eb58b578",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "250583ab-6b1a-4841-887e-8298afad8b6b"
        },
        "item": {
          "id": "32b30b49-56aa-42a5-a7ef-4dba56b1340d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbc45b0a-3239-40c0-84f9-42b971bb89e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b30b49-56aa-42a5-a7ef-4dba56b1340d",
        "cursor": {
          "ref": "7491d2bc-6277-45b1-8659-bd32eb58b578",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "250583ab-6b1a-4841-887e-8298afad8b6b"
        },
        "item": {
          "id": "32b30b49-56aa-42a5-a7ef-4dba56b1340d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbc45b0a-3239-40c0-84f9-42b971bb89e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cc1394-4ba5-4bc2-ba21-79aaa563206b",
        "cursor": {
          "ref": "7820220b-2965-4d13-be3a-7c3af3f8543c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0046c257-3a37-431b-aa30-0b07dc8ff468"
        },
        "item": {
          "id": "b8cc1394-4ba5-4bc2-ba21-79aaa563206b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fae92ed1-5c2d-438f-b35b-658415db4cee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41b8210-7048-4700-ba65-29c7887ec4b7",
        "cursor": {
          "ref": "0e6841e2-62d5-4f2a-8344-87544aac8367",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bea33817-43f5-4da1-a695-b751a3d6ecfa"
        },
        "item": {
          "id": "c41b8210-7048-4700-ba65-29c7887ec4b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7e2baceb-98b3-45a3-bcf8-54f2e80c00a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd664f6-b550-4e1a-bfb6-d6b2b25cf19b",
        "cursor": {
          "ref": "37949ea1-d2e4-40b6-94fe-5b9e236d4fb2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "64a9f54d-b838-48b8-b461-9965d35072a9"
        },
        "item": {
          "id": "cbd664f6-b550-4e1a-bfb6-d6b2b25cf19b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd478aa9-6f4c-4759-a958-64b8311f3f33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a1f4e-e8f7-442d-8eb0-2c642b4de862",
        "cursor": {
          "ref": "ad06fda8-d85a-44d8-abb5-feee4722da3c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ba74f45-ea92-443d-a460-c8c535655661"
        },
        "item": {
          "id": "e31a1f4e-e8f7-442d-8eb0-2c642b4de862",
          "name": "identifiers"
        },
        "response": {
          "id": "91e335ca-e214-47a0-8c9d-ff3f09c4f0a1",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d12991-e5b7-40d8-88a8-425ef95e780d",
        "cursor": {
          "ref": "9824fb18-0d90-4ba0-afc4-cdcc096d40e2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "da71b997-cc16-470f-a1b8-e8e7861079b4"
        },
        "item": {
          "id": "f9d12991-e5b7-40d8-88a8-425ef95e780d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0ca5389d-928b-4341-ad53-8a58482db476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888d4111-9ccb-4f19-aa0c-4966a1bc55fa",
        "cursor": {
          "ref": "e11a78a8-a431-40e3-906d-890852bd7f42",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25764491-40aa-4934-991e-4cb982720825"
        },
        "item": {
          "id": "888d4111-9ccb-4f19-aa0c-4966a1bc55fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2c590fd1-5c72-4560-b808-6795c60ebee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc804dc-1e1f-4e66-b691-4a4afc3403c4",
        "cursor": {
          "ref": "f0df437b-97d5-424a-b41a-a3ad9aa6b2a6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4c177af-3f01-43e8-819c-5bc8b510a9d8"
        },
        "item": {
          "id": "fdc804dc-1e1f-4e66-b691-4a4afc3403c4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2209a96b-2c94-4cbd-ade2-b4bb503cf4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a5597-9599-4515-a3c5-2785cf9b72db",
        "cursor": {
          "ref": "715fc758-d992-46a3-8a8a-c4be8800ce50",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae5e3e3a-10ca-41b5-8c12-6f70f4e1cb1e"
        },
        "item": {
          "id": "444a5597-9599-4515-a3c5-2785cf9b72db",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fcca880b-c254-4f97-ba0a-09e90a3a2d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3589a3a-0fad-45c8-aaaf-971f1a0dffa1",
        "cursor": {
          "ref": "f7b2e2d2-9132-4f01-8b07-aadb36acd850",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d72e8845-e09a-4a42-916f-80446664ca8b"
        },
        "item": {
          "id": "a3589a3a-0fad-45c8-aaaf-971f1a0dffa1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4fcc11b9-985d-4105-9faa-ef3331ab6dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a56d58-4566-47a7-a11c-b4d6e212392f",
        "cursor": {
          "ref": "b6180301-a2d5-4c4f-8b99-7c3ccb785303",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "201aae1d-a29c-40d0-bcab-16b3d7388655"
        },
        "item": {
          "id": "a7a56d58-4566-47a7-a11c-b4d6e212392f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f042b1dd-fe1e-4b80-883b-70b2a3b5a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b7a614-be6d-4d4b-ba2a-1664b2bcd3ac",
        "cursor": {
          "ref": "f9eceb9e-9388-44fd-87ef-fec29b1bf889",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "76d4c0db-4474-4ea0-8b80-fd1cb67a5b67"
        },
        "item": {
          "id": "11b7a614-be6d-4d4b-ba2a-1664b2bcd3ac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3ef5b326-2934-4405-93ad-e6329987eadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4baa34-3251-49d2-bd7c-776983cdb75b",
        "cursor": {
          "ref": "688543f2-6d22-47d6-8ee2-a6a4394d99b7",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b5ba0193-bc97-436b-a3e4-9184a35e6f9c"
        },
        "item": {
          "id": "8b4baa34-3251-49d2-bd7c-776983cdb75b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "593fdb31-2dc4-4161-a484-6f79c41bc1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c703cc-6a53-4285-94f0-32f96ca08795",
        "cursor": {
          "ref": "fa009a74-6e4c-4151-8fa0-78b3b130239c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "23be949c-d5dd-45b6-9ed6-8d048997cbd6"
        },
        "item": {
          "id": "15c703cc-6a53-4285-94f0-32f96ca08795",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "adb86897-063f-42a9-afc1-dae0f0fb9fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc89335-5009-440c-b873-853ae8bedc7e",
        "cursor": {
          "ref": "ddffae2f-decd-4e38-815c-1e4b167c5839",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0245a8d9-9f4e-45f7-84cf-ddf04c35dd7e"
        },
        "item": {
          "id": "ebc89335-5009-440c-b873-853ae8bedc7e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4c210bd0-28c1-4241-832a-05c3a9afa0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa51f22-3d13-41cb-b6a8-3abe94e6e0d4",
        "cursor": {
          "ref": "dc24c248-8605-4cf4-b907-573116f4a591",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "68e47d66-d668-4e6f-bbf3-42824b5b40a6"
        },
        "item": {
          "id": "daa51f22-3d13-41cb-b6a8-3abe94e6e0d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4ec2ff71-5345-4ba9-88c6-d4999415f9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae1cc5-2e23-45cf-b93c-6de9f358d0ef",
        "cursor": {
          "ref": "6a8221c1-9df7-4d89-8814-255964bf130d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f881f27d-309c-4cc1-8856-c2cf6e9964da"
        },
        "item": {
          "id": "13ae1cc5-2e23-45cf-b93c-6de9f358d0ef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b31a1f2-06e8-479e-bb8f-596f06b43a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc187144-9737-4f68-95e9-971d3d4d321a",
        "cursor": {
          "ref": "d2824edb-66a7-482c-8f85-80c52252fdde",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c93d08ee-9ffc-4e30-b848-059a2107ed30"
        },
        "item": {
          "id": "cc187144-9737-4f68-95e9-971d3d4d321a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9de2cd6e-48af-4a1f-9a7f-072725866adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1dc234-aba7-477a-9822-6c071d9dd2a0",
        "cursor": {
          "ref": "3a33332e-019e-4ae7-83c6-7e1a7ff33447",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "449a3ce6-4549-4bb5-899b-4dd3cd74c8d1"
        },
        "item": {
          "id": "9e1dc234-aba7-477a-9822-6c071d9dd2a0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fefef97c-5a32-406c-8955-296dee3b8642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e99fe42-250e-4d1c-b08c-ab64be55d685",
        "cursor": {
          "ref": "134ca3cb-3ebc-4c2d-8470-393fb7dde216",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "454eba63-96d9-4afa-ad15-59cadc0642ee"
        },
        "item": {
          "id": "4e99fe42-250e-4d1c-b08c-ab64be55d685",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6e6b2f47-6b91-4335-9fed-6f2577fe83b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3168775e-7b73-4566-8645-ab0f48139f45",
        "cursor": {
          "ref": "1f01b3a1-b0a6-4b77-8c78-609694b907e5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d897e47a-5600-4ffe-8828-34a49b5723d9"
        },
        "item": {
          "id": "3168775e-7b73-4566-8645-ab0f48139f45",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cd5790b6-20a7-4d76-8d92-32b580f717e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04712b17-29bb-4481-b9a4-6b14b992c7a6",
        "cursor": {
          "ref": "2d73bc69-5af6-41f3-b456-9b279c7d540c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5aadd7d9-da17-4a49-bf7e-4506a40064fa"
        },
        "item": {
          "id": "04712b17-29bb-4481-b9a4-6b14b992c7a6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "87552598-5297-4d14-aafd-237f445618f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120eb181-1107-4956-8b7d-75e9db2ac8ed",
        "cursor": {
          "ref": "066cc199-50d8-4f4c-bb22-443fbb667f34",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a74f36ab-d10f-4427-9852-75cb201753b8"
        },
        "item": {
          "id": "120eb181-1107-4956-8b7d-75e9db2ac8ed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3c69a491-a307-4bb0-9e8a-b1ee057c0c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab176fc-29cf-4e10-a9e4-dfde280ae069",
        "cursor": {
          "ref": "89b3fd31-d9a5-4ba3-b8db-95f2f98fcb1e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ed55ce8-7196-4283-a4d7-0c33432b25a1"
        },
        "item": {
          "id": "7ab176fc-29cf-4e10-a9e4-dfde280ae069",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "baaa8908-2bcd-4f0d-9fff-c19f4073b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ed433-0d96-45a3-ba34-63c9e8ea7f74",
        "cursor": {
          "ref": "713d1e4b-01de-46ed-8670-362e0b3b4285",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c22fa07a-1319-4d1e-af59-46cca540204e"
        },
        "item": {
          "id": "387ed433-0d96-45a3-ba34-63c9e8ea7f74",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0470f489-6609-4185-bd9e-6cc3db2bd61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc08ac3-5bef-4141-bcd9-53afb4900002",
        "cursor": {
          "ref": "8abc2bff-eff3-474c-82d6-0557ad02015a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d0dfb5af-5a47-4617-94b5-53e67cac252a"
        },
        "item": {
          "id": "edc08ac3-5bef-4141-bcd9-53afb4900002",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e01fa4ac-7780-4ad6-a5b9-7be596c5f6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4077c201-a49d-4359-a938-bcc69c011ed7",
        "cursor": {
          "ref": "b57c96e7-3495-462c-998c-ee3965df095c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "63777ed0-96af-4a00-9e80-9a7f2f0f9ed8"
        },
        "item": {
          "id": "4077c201-a49d-4359-a938-bcc69c011ed7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "585e7aee-5483-4a72-a2a3-a0d3920ac988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c4780f-9c9b-4fcf-b461-614e58128254",
        "cursor": {
          "ref": "7534cbe9-9735-49f2-a30b-087ceca7fdc3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f4143b26-d68b-4e35-adea-53f9545637f7"
        },
        "item": {
          "id": "e7c4780f-9c9b-4fcf-b461-614e58128254",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8db93170-4c42-4058-a691-58993bfe48d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca8242c-04e0-40ab-af66-f925dc777583",
        "cursor": {
          "ref": "7ac240f3-f205-4e22-935a-c97737068cec",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87279678-26d7-4cb8-898a-910d6c3c61e4"
        },
        "item": {
          "id": "eca8242c-04e0-40ab-af66-f925dc777583",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d0ac44c9-25ae-4f51-83b1-11a933319473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b671ad95-ad33-49be-b3a3-339706d44a19",
        "cursor": {
          "ref": "cdf510c8-ced4-4938-bbd3-3c047b0b2f80",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5c5169d3-1d56-4735-a7bf-e224caf860b0"
        },
        "item": {
          "id": "b671ad95-ad33-49be-b3a3-339706d44a19",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "952920f9-39cd-42db-8fa2-e19eeb9b03bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150a0e93-b547-4848-9d0a-a8baee15bd5c",
        "cursor": {
          "ref": "85abbc9c-f52f-44fe-8515-62beb7ed495e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dbccca18-b291-40bb-a9bc-0e88825d5217"
        },
        "item": {
          "id": "150a0e93-b547-4848-9d0a-a8baee15bd5c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f016991f-84d5-42da-b8b9-df54777886f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424da1eb-ce3d-4c3d-a828-ca59b35ba3eb",
        "cursor": {
          "ref": "8bf6cdfe-f849-45bf-99b0-037785eda5a9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "40771d37-0369-4731-8ff8-7b90310493f0"
        },
        "item": {
          "id": "424da1eb-ce3d-4c3d-a828-ca59b35ba3eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c8eabece-b197-4145-8b2d-34c8fca883ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6400052-cd61-40fb-8a3d-80012ed672c2",
        "cursor": {
          "ref": "f50ff1ba-ba0d-44df-bab5-2568697f7a5f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1ea2480d-8620-4ec5-af4c-2d936454c24b"
        },
        "item": {
          "id": "c6400052-cd61-40fb-8a3d-80012ed672c2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df42c744-5570-4094-a576-7a960879e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1d1ce7-a3cd-46d1-b49e-e39770847c55",
        "cursor": {
          "ref": "3bc6c1b2-bc4b-4866-a798-17cf8884170f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d6a9523b-3c8e-4e31-8d2b-f87222ae2a27"
        },
        "item": {
          "id": "8e1d1ce7-a3cd-46d1-b49e-e39770847c55",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57336689-6e58-4c82-8bdb-bec9467865ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f383c-2ee8-455a-8fa0-5827efe8e47f",
        "cursor": {
          "ref": "28855845-16fb-44de-b1c7-195ecc4b14ae",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "399aa615-13dd-46ee-a6fc-b9f00c3c3d50"
        },
        "item": {
          "id": "809f383c-2ee8-455a-8fa0-5827efe8e47f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7dfb3ce7-d2a9-43bb-ae29-b5a27b56bda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c83889-8cb6-4d3c-a04c-5a7fc79dae18",
        "cursor": {
          "ref": "38f924a5-9970-4fb6-8a2b-47332df83fed",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8a1ff281-ae90-4d6f-bfcf-790bf2cb27a0"
        },
        "item": {
          "id": "b0c83889-8cb6-4d3c-a04c-5a7fc79dae18",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cfe8a413-ffe3-4433-a58d-5e0731c583c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4465163-f119-46ac-95a9-f76612b56e3f",
        "cursor": {
          "ref": "e58c992b-9ea5-462d-b5e1-a071ab8e5f5c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6b05d92e-0ce5-4913-bebb-369819df6495"
        },
        "item": {
          "id": "f4465163-f119-46ac-95a9-f76612b56e3f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c2fd8a5f-4a46-4e4c-8acf-f40be73f9c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986ed02-b0f1-4ab2-90b1-c00a634428cc",
        "cursor": {
          "ref": "54fffd7a-843e-4842-a5ff-a91a7e6fe902",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8836fe21-2181-40ce-8a22-05f80aef1206"
        },
        "item": {
          "id": "7986ed02-b0f1-4ab2-90b1-c00a634428cc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e34c4193-bf37-44cd-ae98-747cf91ccb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199d01a-eb78-4a45-ac95-305447408cc9",
        "cursor": {
          "ref": "63827810-f5ef-46f1-a7ef-b7234ad52c27",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59335827-4648-4d9a-9be8-dd470c35dce5"
        },
        "item": {
          "id": "4199d01a-eb78-4a45-ac95-305447408cc9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ac27c90d-e1b9-497f-9aac-b6aa6840d507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8bb110-74e6-431c-9c25-4866705493f2",
        "cursor": {
          "ref": "18231289-d137-481e-b3c2-29dfaca6a66d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f541f187-ae5c-4278-ac6d-3e0eecddbba7"
        },
        "item": {
          "id": "3e8bb110-74e6-431c-9c25-4866705493f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6b7822f2-ab7a-4325-ad56-699513ac34fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6586663c-d368-4c56-8fc2-e182b09a425d",
        "cursor": {
          "ref": "390607fb-651f-481e-8e5a-0a458e3daf48",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0afcf6c9-b934-4505-8547-07d250836991"
        },
        "item": {
          "id": "6586663c-d368-4c56-8fc2-e182b09a425d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "452aa03b-6ce2-420c-a44f-5dfcf8e9b36a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a02d211-1e0d-45cc-acc2-735ceb56283b",
        "cursor": {
          "ref": "f0e4503c-db72-43ca-80aa-6ce6f2513bfd",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "00777794-c4ed-4c1a-bccf-bf6d00e61a4d"
        },
        "item": {
          "id": "7a02d211-1e0d-45cc-acc2-735ceb56283b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "37bcff5b-e8a4-4263-bd33-e0ab2d833540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe91f5-4f0d-4b18-bca2-3ea5a26a5961",
        "cursor": {
          "ref": "ae15f940-0e4f-40a2-a156-a5987d996329",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3733be90-95b8-48d6-ae31-17b30beb18fd"
        },
        "item": {
          "id": "6ffe91f5-4f0d-4b18-bca2-3ea5a26a5961",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e891bf0-b133-471b-adb8-32a4b2da44f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83948b37-79fc-4220-a48b-c506a762dc9c",
        "cursor": {
          "ref": "f05d9047-2622-46f3-8797-26b197b250e2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a932cf8f-c332-42ab-ac76-2030f23c6ff9"
        },
        "item": {
          "id": "83948b37-79fc-4220-a48b-c506a762dc9c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49923df6-bd30-42e6-9c69-f9b5df04d274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f3fc9-94b2-4313-b1b0-4cc23b9de9a0",
        "cursor": {
          "ref": "b7b41702-5294-4584-b1a9-f039c3efc8f6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b9d47e14-b241-46d3-951b-f05f716b3e3a"
        },
        "item": {
          "id": "c76f3fc9-94b2-4313-b1b0-4cc23b9de9a0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "25d28d82-a80f-46aa-b6ad-7d686771440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd592d7e-75b8-4d26-b1df-000cd9d4c3db",
        "cursor": {
          "ref": "c5cbd3fc-27ad-4cc5-b8b0-8aeb27fea38f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a00ab8e8-06f7-47bc-baf1-2510539062d1"
        },
        "item": {
          "id": "bd592d7e-75b8-4d26-b1df-000cd9d4c3db",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a933dbd8-4bba-4f8f-b1bb-ab5c2c0861f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4991b3bf-99f9-496a-b91f-b34f2046fe7a",
        "cursor": {
          "ref": "16ce174f-6126-4235-aeb3-625fa5ea4cda",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "89635f9e-7256-4b43-b909-0516806c91eb"
        },
        "item": {
          "id": "4991b3bf-99f9-496a-b91f-b34f2046fe7a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b0dab58a-3dd2-4efc-995c-dcf897e27c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296c8ae3-715c-46b4-be09-b8847e316c94",
        "cursor": {
          "ref": "a5d3f75a-17fe-4052-beef-179ada59acdc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "628121f4-dcb4-4a99-9ee8-ae3576169b03"
        },
        "item": {
          "id": "296c8ae3-715c-46b4-be09-b8847e316c94",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "582d37e6-a26c-42c2-b195-5ae256c0dc6a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3cf81e-5742-4ba8-a845-85bea417c975",
        "cursor": {
          "ref": "42c939ed-8aba-4b66-b6b4-b58e1bc21a01",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa081e7d-a022-431b-a00a-b903789e8806"
        },
        "item": {
          "id": "3c3cf81e-5742-4ba8-a845-85bea417c975",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cba82122-77eb-4a37-af08-6009d4550d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d3af6e-a7d6-4b08-b46b-3c10318dee21",
        "cursor": {
          "ref": "28f45e71-85f0-4da4-9d31-35b114023bfc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d2a9b4d-b4c6-4cf9-8221-2dd9076b397f"
        },
        "item": {
          "id": "66d3af6e-a7d6-4b08-b46b-3c10318dee21",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d13aaca2-a0b9-4089-a6ab-e4e6f861a60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7448e133-b41f-4815-843c-f9d775a69193",
        "cursor": {
          "ref": "e6effcb5-466e-45b1-9b53-ce7c1de40535",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c1a65eb5-b6ef-4c18-9405-24ea0f089d36"
        },
        "item": {
          "id": "7448e133-b41f-4815-843c-f9d775a69193",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1594730f-ff51-43a5-b4bd-1c17d7c80e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7c7c7b-1cfa-4d17-9fed-9455dab57bd1",
        "cursor": {
          "ref": "37b2bb4e-73fd-4504-8cfd-62db0ebdd733",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2d68d53-d1d9-4535-80f2-e4d47cfba22e"
        },
        "item": {
          "id": "4a7c7c7b-1cfa-4d17-9fed-9455dab57bd1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "38687e18-3088-4d6f-8841-5d7ad5fe84cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac5f133-97f1-4878-b055-5e5e7c307ba6",
        "cursor": {
          "ref": "22f7400f-134b-4dd8-b60d-f98836936f19",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "da1f3472-2a6b-43ec-964e-f69313f4096c"
        },
        "item": {
          "id": "9ac5f133-97f1-4878-b055-5e5e7c307ba6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5fb4a7ca-ca9d-4078-8d54-cc9f0cb694d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18ecc24-5d10-43bc-9509-e0f4caa87cdf",
        "cursor": {
          "ref": "d5a99eb9-4563-49ab-b475-ea50457d3dc9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "39579b86-366a-4e33-9669-48196d1c16c9"
        },
        "item": {
          "id": "f18ecc24-5d10-43bc-9509-e0f4caa87cdf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eef35c12-5f59-4b43-9285-76a0a46f1de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4fce72-8ff1-4d5a-9ff2-8657459c65a2",
        "cursor": {
          "ref": "d315135b-cb7f-4c5f-a98c-a2eebb083f23",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e911782c-cdee-4d71-9a68-9a14a79682ae"
        },
        "item": {
          "id": "ab4fce72-8ff1-4d5a-9ff2-8657459c65a2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a9de4416-4dbe-4c36-92cd-d10b9cd97d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d23b1e2-d7fe-4bd9-ae82-00baf4bf423f",
        "cursor": {
          "ref": "44099dbb-625b-45e5-966b-97be3a56524b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4646d931-71ef-4506-9161-06a193d228f9"
        },
        "item": {
          "id": "4d23b1e2-d7fe-4bd9-ae82-00baf4bf423f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "13f7f871-b4c6-486b-a308-74ae9b3f9ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0b30b-47f7-47ff-aae0-be03d73d86c4",
        "cursor": {
          "ref": "a41aa72a-41e3-4868-a793-71240aa2c0bc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f327a809-3675-4bbd-992e-20a5eff45cd6"
        },
        "item": {
          "id": "bca0b30b-47f7-47ff-aae0-be03d73d86c4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "314f417f-ae86-43ec-8ee7-d55ee9bc1d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9c3985-61e4-43e3-a388-955e540f8c71",
        "cursor": {
          "ref": "d331e058-104e-4662-9489-72d6b6bd9914",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e4525db8-81a2-438c-96c7-de6512df16f2"
        },
        "item": {
          "id": "6d9c3985-61e4-43e3-a388-955e540f8c71",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e40f2f2a-e96f-4b80-bf96-4a1bbc7ef2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb5987-ee05-49af-9abe-d4ccc82e7395",
        "cursor": {
          "ref": "2f61659d-2489-429e-b503-c8bb2cc0db43",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7b7936f9-3b3d-49ca-9b70-16b52b7e3bca"
        },
        "item": {
          "id": "cedb5987-ee05-49af-9abe-d4ccc82e7395",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bd03dc55-3289-4ea3-a643-4e17b6569c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41805b93-4cfc-4517-9589-74c5b0a3bfdf",
        "cursor": {
          "ref": "03130186-e72b-40fb-9670-611a438baa02",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "078e878a-9f97-4d14-b8d6-d0a99366ff7b"
        },
        "item": {
          "id": "41805b93-4cfc-4517-9589-74c5b0a3bfdf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "98ca836f-b99b-44aa-9b57-dce78cc78166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526aa0fc-6efa-4125-994c-b795cc805ddc",
        "cursor": {
          "ref": "df117639-3b99-49e2-8a91-f43a40568aa4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e60929e1-16d5-4ca4-88d4-819c5a3e9ef6"
        },
        "item": {
          "id": "526aa0fc-6efa-4125-994c-b795cc805ddc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aa70fafb-e6a6-4fdd-a6eb-4d7e626dc6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd43eb5-abca-4a3e-ab4a-baab9ed4c646",
        "cursor": {
          "ref": "d42abe96-bfb3-463c-bebf-873a5b951ce1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e1fda768-9c6e-4061-8df8-a7a77f0324f9"
        },
        "item": {
          "id": "7dd43eb5-abca-4a3e-ab4a-baab9ed4c646",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d48ca2be-4a2a-4fdc-962d-1ac0517e3ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cccd85-120d-40b8-83e9-dadccf59e3e9",
        "cursor": {
          "ref": "c02e6863-6190-41d1-bfcd-078945805242",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d63eed8-4e71-4f91-b670-8e9673a93a53"
        },
        "item": {
          "id": "54cccd85-120d-40b8-83e9-dadccf59e3e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da6df67e-81b0-42a1-9aef-455a98133803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd5067d-08c6-4ba7-bace-5097919c801a",
        "cursor": {
          "ref": "e2111e06-dab7-443e-babf-0d4108298212",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3775ad6c-9d76-44dc-a3a5-dbc08cc8b2f1"
        },
        "item": {
          "id": "ecd5067d-08c6-4ba7-bace-5097919c801a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "09007c45-7dbf-4e54-b5f0-80e920f690b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e234d915-bf4c-4807-ac78-21a322a649c9",
        "cursor": {
          "ref": "d94826a6-fbef-4300-88d9-7f9c4a237813",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ec2081eb-002d-40e7-9972-6e3356f5f35e"
        },
        "item": {
          "id": "e234d915-bf4c-4807-ac78-21a322a649c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6d7d684-ac8d-4310-b3d5-8183495fe779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2768be6-2b92-4412-b40b-85200f4b371e",
        "cursor": {
          "ref": "a4982ef9-51bc-4a8c-93c3-c87e69161cd9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2a8acebd-b90d-4eac-b465-1c23be1be260"
        },
        "item": {
          "id": "d2768be6-2b92-4412-b40b-85200f4b371e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0eedb74f-cede-406a-8308-d9cd084c0c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8035ce-9c0b-4c45-9768-9eadf7f591f2",
        "cursor": {
          "ref": "02c0f7a1-098b-4120-bb0d-bb9654f8b6dc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dda6af76-9411-4d30-b0a3-3a23af99aabe"
        },
        "item": {
          "id": "7d8035ce-9c0b-4c45-9768-9eadf7f591f2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "16d10a00-391e-4394-8a8d-7b3371a5638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117db507-f126-417f-ab17-6e6968b71f14",
        "cursor": {
          "ref": "08fcbee3-5cb1-445b-90c7-7c7e1b1df07c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df9280ae-1f10-478a-8893-cdd4e68bfcbd"
        },
        "item": {
          "id": "117db507-f126-417f-ab17-6e6968b71f14",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6dd729e9-efb3-425a-9eb7-23cce47d32c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80618bc5-7b7a-4973-87a2-626e04321e4b",
        "cursor": {
          "ref": "5abe4bd1-62ff-4824-a695-218632ee3b52",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ddf569a-1a1f-4a17-8213-99b425fe7683"
        },
        "item": {
          "id": "80618bc5-7b7a-4973-87a2-626e04321e4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ea41062d-08f2-4189-8a8b-77b4e1facb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be004a1-99d5-4a67-a49b-52d7388800b2",
        "cursor": {
          "ref": "b152b5ac-6382-4311-b3f7-40f5578ea098",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ade3788a-07ee-46a6-8cc8-8d34948b2915"
        },
        "item": {
          "id": "2be004a1-99d5-4a67-a49b-52d7388800b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c3d9926a-56dd-493e-a022-a0e657aad33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b52defe-9ca3-4bcd-9b15-21d1eb4974ff",
        "cursor": {
          "ref": "c7b29763-a560-48e5-8737-23877679a083",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0f76d9b9-3d3e-4c33-804b-86c916208585"
        },
        "item": {
          "id": "6b52defe-9ca3-4bcd-9b15-21d1eb4974ff",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5ae975d3-328e-4d38-9eaf-9934e0b78871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c85358-51ea-4f38-aae2-13b396f8f5e6",
        "cursor": {
          "ref": "8d0549cc-bd4f-478e-a5e6-522f85c6607d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2c5a8d2-0c09-446b-80f7-49afbc450e03"
        },
        "item": {
          "id": "c9c85358-51ea-4f38-aae2-13b396f8f5e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d48ffeae-07d5-4bdc-9c57-b945675576dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b31d446-079f-4424-8d05-ee2b20137b22",
        "cursor": {
          "ref": "d6ed31cf-7c3d-4f5b-aaec-d8c1cc6df515",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "695aefd4-46b7-47a2-92fc-75994b6105e1"
        },
        "item": {
          "id": "0b31d446-079f-4424-8d05-ee2b20137b22",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1055781c-7d0f-43e1-86ba-2dfdec031748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4b6d83-efb7-475a-8485-e4affda8004f",
        "cursor": {
          "ref": "79a65b0f-00e4-4eb3-8d38-af0a9b4591cd",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d7a9273f-d0ac-470a-9ebe-8b3151767e2c"
        },
        "item": {
          "id": "6a4b6d83-efb7-475a-8485-e4affda8004f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e48ca2a2-b396-49c4-a697-4a3dafcce4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea3b623-8bc4-45b9-bd44-5b9d8f1f8f43",
        "cursor": {
          "ref": "ee3fa098-2440-4544-a07e-dba0b5d026ab",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1d9d67f3-386c-44b4-88c1-dfcf2d6fb924"
        },
        "item": {
          "id": "5ea3b623-8bc4-45b9-bd44-5b9d8f1f8f43",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7020e4bb-641a-4008-9166-b4b337e707e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970de8e7-a1ba-4de5-b499-c9067b9e98fe",
        "cursor": {
          "ref": "b373225a-bfc7-4f98-a7ea-a98b1c94a02a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b34e2b9-ad57-4faf-a776-813ac357d966"
        },
        "item": {
          "id": "970de8e7-a1ba-4de5-b499-c9067b9e98fe",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "efd98b5e-5938-479e-9fe3-4191bc16fb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0938b88c-e9b3-4113-b698-eacd4e675e74",
        "cursor": {
          "ref": "3d1d133e-539d-4b25-8273-a97703f4d83f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3bc0af86-c738-40e5-90ee-3aca16c69a4c"
        },
        "item": {
          "id": "0938b88c-e9b3-4113-b698-eacd4e675e74",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "648d9707-96ed-4333-80be-a8102bd90a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a34cb59-0cf6-46f2-b314-654b02ccaca2",
        "cursor": {
          "ref": "d3480da9-efab-49e3-8fb9-20872a4ad623",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a78fef0f-528c-4909-b515-0a92c7311f3d"
        },
        "item": {
          "id": "2a34cb59-0cf6-46f2-b314-654b02ccaca2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bbfce55b-d97f-4ba4-90c0-454ae678a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64141d23-493f-4513-a55d-19bca9dca8f1",
        "cursor": {
          "ref": "9300b375-e839-495e-8a91-060d79d7909d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "da68d873-43ab-4883-9dc4-fa0977496e9c"
        },
        "item": {
          "id": "64141d23-493f-4513-a55d-19bca9dca8f1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c0cb3909-9d5d-4166-93c1-1e3fcb6d94b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75462aea-a22c-4f24-b7f4-5675740a3b63",
        "cursor": {
          "ref": "5e2a7824-699b-4fc5-99a2-5b208ab28bca",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "370a79e3-00e2-4fb2-958a-b3540ab49fda"
        },
        "item": {
          "id": "75462aea-a22c-4f24-b7f4-5675740a3b63",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5136945b-5148-47fa-86cf-3d482c554c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba5b2d7-2a1e-4363-b6fb-24c928cbfe68",
        "cursor": {
          "ref": "80e32724-8861-4f7d-8f61-111b8ff156e6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4a11e218-d80c-40b0-9fb6-7c162b9dcaea"
        },
        "item": {
          "id": "eba5b2d7-2a1e-4363-b6fb-24c928cbfe68",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "090d04be-ee40-438b-8983-ab4027c94925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994095af-e54a-442b-9fc1-125607e7b095",
        "cursor": {
          "ref": "2727a3d8-c180-4b2b-93df-1097da81616b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "abe63ec6-795d-4598-af29-ad6e01d42756"
        },
        "item": {
          "id": "994095af-e54a-442b-9fc1-125607e7b095",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f9b0919f-27ee-4380-afde-48dac8d98f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f0f30c-bc1b-4c30-9a8a-36a382834638",
        "cursor": {
          "ref": "f27b91d7-a8b6-4114-bcad-b276f1fe36ce",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b5250341-ca76-40ff-affe-6a109c37e8f8"
        },
        "item": {
          "id": "e8f0f30c-bc1b-4c30-9a8a-36a382834638",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7c1cd96-5978-441e-b13f-f6a05dd05395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf83ccc9-ed7b-444f-86d3-23f385aae89e",
        "cursor": {
          "ref": "0e62744b-f873-4e3e-acf1-1e5a634497df",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c17133e3-6b2c-4e3e-87e0-2f01d6fa28ce"
        },
        "item": {
          "id": "cf83ccc9-ed7b-444f-86d3-23f385aae89e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c31a8de-d95a-468e-a716-6f811adf9405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442ad1eb-6c3e-4d9e-9c39-47bfede94623",
        "cursor": {
          "ref": "9dd0f35d-f913-4a21-bdea-f54687d05c0c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0d83f660-215e-4b76-9128-a3abdb318e62"
        },
        "item": {
          "id": "442ad1eb-6c3e-4d9e-9c39-47bfede94623",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "055691a3-3e89-4349-ae71-798341843d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce346781-d098-45bc-81c4-d31f5771d733",
        "cursor": {
          "ref": "45f5a1ca-4d3f-44fa-ac7c-49858b793872",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1ee7f9b7-bf0d-4d68-9a64-e136be073923"
        },
        "item": {
          "id": "ce346781-d098-45bc-81c4-d31f5771d733",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a7831137-9413-4106-9107-5dcaddc5238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47de53a0-9383-411f-baf1-84e5101f6ccf",
        "cursor": {
          "ref": "a14a52a0-57a4-4f6f-a149-e578c5532e86",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c045cace-fefe-4ee5-a38d-f2500f59229d"
        },
        "item": {
          "id": "47de53a0-9383-411f-baf1-84e5101f6ccf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ebd4b076-191d-41fd-8690-cafba6e027a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0068f0a9-0ccb-47c5-9660-6f898f34fa0c",
        "cursor": {
          "ref": "751e2a76-8866-437c-b675-3df54a06303b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4cb576fa-5f9f-4b7e-a0a9-b1b689f4567e"
        },
        "item": {
          "id": "0068f0a9-0ccb-47c5-9660-6f898f34fa0c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "30252c86-2cb4-481d-8cee-2232587689ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c78c931-339f-452c-a072-6f2738532d74",
        "cursor": {
          "ref": "de19c382-0efc-42a5-b81a-a6dcfbed0e00",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1eea4e7-0ffb-4c32-a8f1-967433eb5eba"
        },
        "item": {
          "id": "1c78c931-339f-452c-a072-6f2738532d74",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "20ed5009-8c1b-450a-96b0-a464628f9e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6993c1d0-7c40-400e-96ed-4819acaf71d9",
        "cursor": {
          "ref": "bf0f40fa-6207-4d83-bfa0-d92ada30f6e8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b2396fe-3baf-45cb-8a51-635ec50fe699"
        },
        "item": {
          "id": "6993c1d0-7c40-400e-96ed-4819acaf71d9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "63826f31-d1e8-42d5-ad67-7c228eb9971d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174a2468-89e2-4a65-b6b2-cb40708941bc",
        "cursor": {
          "ref": "6b51dc7c-f56f-43b6-9277-7bde7144c38b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1401037e-5606-48ca-905e-f6ad4658f1ef"
        },
        "item": {
          "id": "174a2468-89e2-4a65-b6b2-cb40708941bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c00a14f1-b5f0-4118-b328-63c41b88b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f323781d-8808-4c90-ae4f-07c3ec720f25",
        "cursor": {
          "ref": "88757f51-4fd9-4ec9-9534-6dba9405f50a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b207cce8-cabc-4715-9565-649bd6877b74"
        },
        "item": {
          "id": "f323781d-8808-4c90-ae4f-07c3ec720f25",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8254c9ef-b060-463e-90e0-e231a0b6661e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e8f9f-ba35-4443-bfbf-e52727b208e5",
        "cursor": {
          "ref": "6c2e5fa1-37e1-4708-81c2-87fb5b33eeb9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "037698a6-4266-45b2-b14a-a99920b6ac6f"
        },
        "item": {
          "id": "0c7e8f9f-ba35-4443-bfbf-e52727b208e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a46a7cdf-f4ff-4ccd-b41e-8dc910c2b606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30deb2b0-e3cb-4e85-a7ef-776d9ad21316",
        "cursor": {
          "ref": "fe6e5276-72d9-4db2-9d7a-7a7658219ae5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3989a6f7-45bf-43b8-a3e5-ef03d6f207e7"
        },
        "item": {
          "id": "30deb2b0-e3cb-4e85-a7ef-776d9ad21316",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bd2c9e88-3048-49be-8330-75168df360e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba70d0-2bc4-4692-82db-bfcd741795ab",
        "cursor": {
          "ref": "d6ad37ed-3fb4-4e94-a74d-15508e588e4e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "81106d61-4880-4a02-b924-f09d1016c1f6"
        },
        "item": {
          "id": "74ba70d0-2bc4-4692-82db-bfcd741795ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cdba1711-68f3-43ad-8dc6-57b82e3dab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82fed8e-aa35-4b82-be03-c41588777037",
        "cursor": {
          "ref": "2a20b47b-9b7d-4713-8c71-76fc447d83c1",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f19b155-552e-4ae3-bbc9-15615a73adb2"
        },
        "item": {
          "id": "a82fed8e-aa35-4b82-be03-c41588777037",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ddf9756-1a4b-4185-ac7f-126c44a887d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed151b-b6b9-464c-bc9a-b101eaf2a452",
        "cursor": {
          "ref": "916b112b-41bf-45a6-8085-01a560c7216a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98e6fd17-7c8f-4582-8480-155111570a0e"
        },
        "item": {
          "id": "2bed151b-b6b9-464c-bc9a-b101eaf2a452",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58bdaa3d-b0f2-4237-b2f6-0a5770a2dc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ba39a5-436d-4ee1-ac6a-52ac5bcd5cae",
        "cursor": {
          "ref": "c42132e1-3a66-42e1-b5b1-e643a443ea5e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "53de70b0-2ae7-4d76-b59a-4fba49726f1e"
        },
        "item": {
          "id": "69ba39a5-436d-4ee1-ac6a-52ac5bcd5cae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "72f39dc4-88b1-4635-8972-1bf1fc1303cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93186bd8-2d63-4a19-9f81-60691a6497bb",
        "cursor": {
          "ref": "a65dea3d-1eb1-46bd-abd5-dd652003814f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3cf1cd1-41cc-43c0-833b-f0036f5c924b"
        },
        "item": {
          "id": "93186bd8-2d63-4a19-9f81-60691a6497bb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7927331e-db40-4fa3-8b21-10b31bb5fbcf",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae00e43f-f91a-4eeb-bc04-8ff71c764158",
        "cursor": {
          "ref": "28efc858-3902-4d65-9511-f69b24cf5e07",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "542d9dc0-5b59-4bd7-ad87-01b77cbcff0d"
        },
        "item": {
          "id": "ae00e43f-f91a-4eeb-bc04-8ff71c764158",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9c9363a4-b93c-4ca8-9dcf-9af6d965aaa9",
          "status": "Created",
          "code": 201,
          "responseTime": 156,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dacc75-a7b3-479e-aea0-cbebf1e32866",
        "cursor": {
          "ref": "a3c30e48-1578-491f-a0e3-4a067c2761df",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "51e0856a-ad70-4b7b-95b0-58efb3881590"
        },
        "item": {
          "id": "59dacc75-a7b3-479e-aea0-cbebf1e32866",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "93572117-66a4-4a72-b32b-a900c85b0736",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b1dda4-d741-405f-9cea-5d800d3b74e5",
        "cursor": {
          "ref": "0d29265b-4cff-467b-a660-c72285d95a63",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fcec274e-cbd6-4974-b47c-0c20cb35dca7"
        },
        "item": {
          "id": "14b1dda4-d741-405f-9cea-5d800d3b74e5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b8e057d8-76d9-4335-bcdc-22adaa98e157",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e624b6fd-0874-4244-8b53-a8886afabd14",
        "cursor": {
          "ref": "c682d15e-d5c7-4116-8200-6cb632b190bc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "626edbc0-0cf7-46e7-ad40-e2410e5a36f3"
        },
        "item": {
          "id": "e624b6fd-0874-4244-8b53-a8886afabd14",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6f677ec9-84c7-4897-9453-59f6cbe69169",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88d115b-7294-4b4e-893a-a0b96408d85a",
        "cursor": {
          "ref": "722e36ed-03c0-45f1-972f-281abd7a3cc2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f91349d-4656-40bc-ac92-849d78c8dc1b"
        },
        "item": {
          "id": "f88d115b-7294-4b4e-893a-a0b96408d85a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41d115c6-532c-43ee-9a3c-b67392d80ed4",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb2719b-cf1b-44d2-9b0b-73e51a5ed280",
        "cursor": {
          "ref": "6dc0eef3-42ce-4f0b-b02a-f238989f8819",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4fdfbe5b-7b8f-4d7e-851a-6fbd0f995497"
        },
        "item": {
          "id": "dfb2719b-cf1b-44d2-9b0b-73e51a5ed280",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "22e03267-7d72-47cf-ae0c-a480b56891f5",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffd0f9b-f787-4d83-8561-cc885db9b2df",
        "cursor": {
          "ref": "71d84be3-e64c-402e-bc85-4f7e4c527d4f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c8210c39-58de-4af6-8fff-dab8b25e3a14"
        },
        "item": {
          "id": "cffd0f9b-f787-4d83-8561-cc885db9b2df",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "819919bf-2673-418a-9375-7d30bc293e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa584591-57ea-452b-a041-29451203796d",
        "cursor": {
          "ref": "ec77bc80-26a2-4e2e-a723-b47566e6f541",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c61cf2b6-3286-4377-93c1-21a487921d4e"
        },
        "item": {
          "id": "aa584591-57ea-452b-a041-29451203796d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "014f9e2d-6eeb-418d-8fc3-879487bf87f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb3e030-76ed-472a-b7fc-91ebf51b4a9a",
        "cursor": {
          "ref": "f50f67c9-1984-433e-9f15-332be6a787c8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1aa74df5-d7cd-4de8-bfaf-0d120d46b774"
        },
        "item": {
          "id": "ebb3e030-76ed-472a-b7fc-91ebf51b4a9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "661db116-da00-44b1-bf3c-ee3b1adc68a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de616d7-04f5-410d-b460-41bcda7bfa99",
        "cursor": {
          "ref": "445c0a14-a16f-4acb-ad2d-8e8050bbffa4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8155f7f0-94e5-4dc0-969c-e7657111600b"
        },
        "item": {
          "id": "8de616d7-04f5-410d-b460-41bcda7bfa99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "405b3000-08cd-4c44-8ea1-ba5702d98a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fdcf5-c643-4841-af12-db2b8066b0cc",
        "cursor": {
          "ref": "fc5f2992-6865-45d6-a64e-1eb3929a43d6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c8ac00ae-0a08-4208-8adf-69a01eab4501"
        },
        "item": {
          "id": "8a4fdcf5-c643-4841-af12-db2b8066b0cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "606427f5-1976-40c6-9475-de98726c519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3656ec9f-4fc0-4c48-850f-a1d938490949",
        "cursor": {
          "ref": "e67ef2c1-bdac-4d4a-b249-0951eec9b6bc",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "316963e4-fee0-4633-a670-5ad71f489942"
        },
        "item": {
          "id": "3656ec9f-4fc0-4c48-850f-a1d938490949",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ab7dd36-2c8a-48b9-87f2-a45a229fcdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e63b37-21aa-41b5-9f5f-dba7ca47e28b",
        "cursor": {
          "ref": "91419028-23aa-47e2-a633-27c462a97856",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "851984f6-e289-40a4-a40c-d7c7132f6931"
        },
        "item": {
          "id": "d6e63b37-21aa-41b5-9f5f-dba7ca47e28b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6a4d0a7d-8bcc-4d11-a6c8-fc97befa82bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2f6cd4-0fb8-4f18-a4a3-adf4ac46fc0e",
        "cursor": {
          "ref": "96112acd-dbdf-49c9-9081-7524757b6997",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "91014058-7a70-46f1-bb1b-d0500227327a"
        },
        "item": {
          "id": "fd2f6cd4-0fb8-4f18-a4a3-adf4ac46fc0e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "82c16ea1-8b4f-436f-ac09-b442073c1b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b239212-532b-4fab-94bb-0c81e9a590c4",
        "cursor": {
          "ref": "fccc261a-da99-4047-834a-4eb0f645998f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f664c43f-46bf-4909-8fd1-1cdb0cc6d7e0"
        },
        "item": {
          "id": "0b239212-532b-4fab-94bb-0c81e9a590c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "15431551-20a4-4ea9-a6a8-696496636c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4018172-20d4-43bc-a311-bc8d1a7ed819",
        "cursor": {
          "ref": "9a6b38e6-cfa2-40db-9557-13af3cf3c2c8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d32e368-3774-4990-a1e1-2dc80c240f95"
        },
        "item": {
          "id": "d4018172-20d4-43bc-a311-bc8d1a7ed819",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9104eace-be99-4d27-a0c4-d7576aab71d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee55a92-6d8b-4b0a-ac9d-f5197364cd64",
        "cursor": {
          "ref": "2d91885d-828c-48aa-8ec0-33c078e2c770",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b16da764-ea00-4d87-9f5c-d40a69b0bebe"
        },
        "item": {
          "id": "9ee55a92-6d8b-4b0a-ac9d-f5197364cd64",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbbca9da-8685-4e5a-80df-72623cd4d4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c08391-2bb3-4bd6-bd8b-9a6ef6026970",
        "cursor": {
          "ref": "ef7b4be1-65b0-4105-9f9c-e85839ae56bf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "87a10948-3ddc-4c51-b019-aa570969a827"
        },
        "item": {
          "id": "61c08391-2bb3-4bd6-bd8b-9a6ef6026970",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "19a19876-ed0f-4eb2-a3d6-cda8c9e444e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bcefe7-a6e9-4f95-9a1a-18e00ec9c3e0",
        "cursor": {
          "ref": "3132e710-00b6-4995-9408-9af1e2730f5b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "637d2e10-6bf9-4e40-9c43-b9aa6b5f4837"
        },
        "item": {
          "id": "48bcefe7-a6e9-4f95-9a1a-18e00ec9c3e0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e569ed0f-f596-4d39-bb8a-b39f2c56fff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f68c48-4279-42cd-86c1-100b669f164a",
        "cursor": {
          "ref": "fee61a83-334e-431d-8953-b82ba8e5570d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "09fa3fb7-7de8-49e6-bada-e122e86ee2f9"
        },
        "item": {
          "id": "46f68c48-4279-42cd-86c1-100b669f164a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc5a066a-248a-463a-b9f5-4d8ac4102018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce613d8-da4c-403a-8e0c-a0083e91ede0",
        "cursor": {
          "ref": "0250f14a-9571-453f-84f5-0a205477b555",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "697b83a0-880e-4ac5-86c4-b4070039ff9d"
        },
        "item": {
          "id": "cce613d8-da4c-403a-8e0c-a0083e91ede0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8d8db62-1a51-4bf8-8be2-a94b269fc129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bd1da1-83c3-422d-8fc5-8ab9f7eb0857",
        "cursor": {
          "ref": "8fe32fac-f1f4-4b60-94f7-69961158d4a2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "86d3364d-da37-4569-82d3-31594a58b4d1"
        },
        "item": {
          "id": "92bd1da1-83c3-422d-8fc5-8ab9f7eb0857",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "421a13bd-cab5-4d28-8c9a-a6a4737be340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7f90f-38d3-4b44-b044-268e33e8db1b",
        "cursor": {
          "ref": "8e5b49d5-9855-4cb8-b62f-563bd37e41f9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f8a7237a-aa7e-4de3-8dde-bc6b6456041e"
        },
        "item": {
          "id": "69e7f90f-38d3-4b44-b044-268e33e8db1b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c6e320a-c10c-4ac8-9d6f-f9350c6ce0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba968eb8-58fb-473d-8323-ade4191b65f9",
        "cursor": {
          "ref": "142dac6b-85ae-4794-bbdc-f7120f82b5f4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b882609a-36d3-469d-aabf-f6bfb1a889d6"
        },
        "item": {
          "id": "ba968eb8-58fb-473d-8323-ade4191b65f9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fcbdf4f0-82b2-4c7c-99b7-21bafe5943fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b80e404-e00e-4701-9c8c-c02578d6b1ec",
        "cursor": {
          "ref": "b491bd7a-aed8-46e5-bfa7-5b65e615ad6b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f7f1ade5-1271-492f-a03e-2683bbc0ed3e"
        },
        "item": {
          "id": "4b80e404-e00e-4701-9c8c-c02578d6b1ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce92ae1d-a59b-42d2-a4f7-5efd06003df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1841194f-6072-4ff1-9899-9a900775bc47",
        "cursor": {
          "ref": "28b2cfa1-dd3b-454b-a30f-5b573c63639b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "36c8ce53-004e-4983-8882-d6d2b3acb358"
        },
        "item": {
          "id": "1841194f-6072-4ff1-9899-9a900775bc47",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d408e294-bbce-4eb7-9136-d0a09e42498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bf3289-a8ba-44dc-9f56-689fe0ddf96b",
        "cursor": {
          "ref": "92fc8d58-b9c5-4f6d-b7d1-4e611908042b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b4215b5a-8174-4259-90bd-15474fb05be3"
        },
        "item": {
          "id": "e5bf3289-a8ba-44dc-9f56-689fe0ddf96b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4684d959-cfc5-4007-9f85-51853b61a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ff191a-6d1e-4fe1-ba57-1316f414e998",
        "cursor": {
          "ref": "f833ff49-28d2-47fc-9a01-f1391a64c2e2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9bc81cdb-8af9-406f-8290-2be70bd6606a"
        },
        "item": {
          "id": "71ff191a-6d1e-4fe1-ba57-1316f414e998",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83f6bde7-4490-40f6-9704-43c70bb023ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a2ed66-8a34-48e3-a7fb-659b7044d918",
        "cursor": {
          "ref": "5f3cf9b6-bedb-47b0-b9bc-2352ba0d280d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac2aba1b-eab6-4a2d-acc7-db9fc7abb06e"
        },
        "item": {
          "id": "e8a2ed66-8a34-48e3-a7fb-659b7044d918",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "15fbdd9b-c2e3-472e-b841-f1a2bf263f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae9d3b8-e427-4d87-a20e-0dd9e4c35b3a",
        "cursor": {
          "ref": "bfee4aa3-0aeb-471d-9fe4-13ed3ce48a10",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "004d2586-897f-4178-80f8-7853dd41f4f1"
        },
        "item": {
          "id": "eae9d3b8-e427-4d87-a20e-0dd9e4c35b3a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85f98313-35fc-43cb-87b6-c4b2435b32e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b8f46e-0e6a-4fa0-b86a-bab8690beb07",
        "cursor": {
          "ref": "d72355d9-47c5-4163-b2eb-5e9e304f7a65",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55bbf469-e140-4d81-aff3-b6a59c3c6154"
        },
        "item": {
          "id": "14b8f46e-0e6a-4fa0-b86a-bab8690beb07",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71907f99-51fa-40c2-b1f4-f6279c640a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db46dd7-2e6b-486d-9d7b-cbc14e70aa73",
        "cursor": {
          "ref": "948ed1d8-db38-424e-aa7f-475447ba5134",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aa00ab6a-9faf-438a-9612-736738d3eb02"
        },
        "item": {
          "id": "4db46dd7-2e6b-486d-9d7b-cbc14e70aa73",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e1135eba-c355-4309-992f-e8878f45a426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6278acdf-b5ee-45fe-b2a1-659fc184e7ed",
        "cursor": {
          "ref": "14613d99-ec7b-4710-81ba-444d0b69d355",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "61c58efc-c7b4-4913-bd6f-ac6de4ab7879"
        },
        "item": {
          "id": "6278acdf-b5ee-45fe-b2a1-659fc184e7ed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aed2cb40-f15e-4d16-961c-76f85721ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff1e07-808c-4867-85a1-a5d8c9ea66c5",
        "cursor": {
          "ref": "27078cc4-84e6-461a-8a08-0f47dac88948",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dd33833d-487f-4d5a-a7c9-a6cb9b596031"
        },
        "item": {
          "id": "96ff1e07-808c-4867-85a1-a5d8c9ea66c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4734f75d-2d8e-4def-9416-60b853151ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2f6275-a644-4168-a205-bb87d6ebdcbf",
        "cursor": {
          "ref": "3dd276a0-3c28-4b3a-8f8a-c68cb50f568a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "35747e14-2450-4986-bf82-fa7a23061ca4"
        },
        "item": {
          "id": "ef2f6275-a644-4168-a205-bb87d6ebdcbf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2dd8735-74f4-47f2-bf01-6c3e1e3fc21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8ac5f9-8bfa-4040-b999-6b1fc7c6412b",
        "cursor": {
          "ref": "6ad5dff2-c86c-420b-9aa0-6bd5bc288297",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cb06bacf-d25e-4cc1-b309-f8f7be397b5a"
        },
        "item": {
          "id": "ea8ac5f9-8bfa-4040-b999-6b1fc7c6412b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "465b3601-0290-4b01-ac98-c2ecc0317378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4678a4-7efb-478e-9bbd-02f79b7d7b98",
        "cursor": {
          "ref": "cdf42cba-556f-4ac5-b60b-7b50048b9905",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "000ddd5f-64b3-4bcd-8fbc-e0f50b6ec3a8"
        },
        "item": {
          "id": "ae4678a4-7efb-478e-9bbd-02f79b7d7b98",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "177beadb-e6c3-4ab6-8707-817454b6482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e76803-d766-4be4-9ad7-90083b0d21c4",
        "cursor": {
          "ref": "36b6cbba-ab98-436d-bfe9-4bc559738fcb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f2fb7a61-e4ac-4685-a2e7-d149243d0165"
        },
        "item": {
          "id": "45e76803-d766-4be4-9ad7-90083b0d21c4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3e604bec-af4b-427e-9f9a-49c8e3b0c273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae19830-4cd8-4ed6-8955-688e1d216ab5",
        "cursor": {
          "ref": "f287d96e-f881-4ca7-8339-3aa01d997591",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef2850a5-794c-4d1d-82b3-9f713ebbc0dd"
        },
        "item": {
          "id": "eae19830-4cd8-4ed6-8955-688e1d216ab5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "856006d9-3f75-4011-8910-d4cfcc0c43e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51579df4-3588-498b-8f5e-363b367b07d4",
        "cursor": {
          "ref": "4c6a01a1-2042-4960-b433-ec6ad868f191",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "658768d3-2caa-4c3d-b6d1-27542982b79d"
        },
        "item": {
          "id": "51579df4-3588-498b-8f5e-363b367b07d4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2856119-589f-477b-8a90-2f21b40f9ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5193afbe-5010-4da8-bace-67830040256c",
        "cursor": {
          "ref": "c710497f-3383-4dc2-a29e-7923e9dcef32",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be41149e-11fa-48d3-bd6d-326aae18038f"
        },
        "item": {
          "id": "5193afbe-5010-4da8-bace-67830040256c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b43152e5-6288-4d98-b529-82e1d2ecc2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6b6f0e-4292-4292-af24-58eef8963f00",
        "cursor": {
          "ref": "8c592f43-c42b-4793-a1d8-342894293743",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2591a177-9a19-4454-8b56-9682df204a74"
        },
        "item": {
          "id": "4d6b6f0e-4292-4292-af24-58eef8963f00",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dcf2d69f-57c4-4269-a523-6ffda8e4e8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a35f772-87ff-4d04-a49d-967dba98e9f7",
        "cursor": {
          "ref": "d0b8a23f-d05f-45e2-ad54-dad77dafd819",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0c2235d-9f67-474a-be71-e7e79be85bfd"
        },
        "item": {
          "id": "8a35f772-87ff-4d04-a49d-967dba98e9f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6dcec0a5-5032-453e-9068-768aa9be258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0347aceb-ef34-4f6c-856a-5addf352a4db",
        "cursor": {
          "ref": "d18d00e1-268c-43c7-93f6-2f26e6682047",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "42ca7675-b3fc-4a0c-baee-01bc51ee4df9"
        },
        "item": {
          "id": "0347aceb-ef34-4f6c-856a-5addf352a4db",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "614234e2-6eee-43c6-b627-fb589b848816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e0d8ef-66c0-4430-97c9-16d8b877e643",
        "cursor": {
          "ref": "a8e5f432-7972-4bf2-9392-4b5b2c08ce67",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "36dc923a-9252-480e-85ba-e032903b3c34"
        },
        "item": {
          "id": "17e0d8ef-66c0-4430-97c9-16d8b877e643",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90ddc9c7-7a29-4933-9442-dfdc9ed0e333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a649f-b9b3-4c77-a5dc-92a4b3d89458",
        "cursor": {
          "ref": "04bf3ac6-c35a-4cab-bd63-1c0b4f23fc3d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4aedcc97-5a0e-4810-b2bf-12e146d29e13"
        },
        "item": {
          "id": "430a649f-b9b3-4c77-a5dc-92a4b3d89458",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb4bc654-e12e-40b5-8cb0-043c9d33f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971305cb-e26d-48d5-95f5-db4003fface3",
        "cursor": {
          "ref": "5a53b10e-b80d-4a9c-80b1-e10a969a5c0d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1562b2ab-ef43-4319-8de5-baa209920e02"
        },
        "item": {
          "id": "971305cb-e26d-48d5-95f5-db4003fface3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dc5737e0-bd47-4080-8fe4-adc4b7d39f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d98cd8-9d98-4b5e-b693-f0992ac9326b",
        "cursor": {
          "ref": "ee9803c8-915f-40b6-b9be-74fc868a3ba6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5d52f67-2a4e-4ece-bffb-d47d709cb766"
        },
        "item": {
          "id": "08d98cd8-9d98-4b5e-b693-f0992ac9326b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d1c32e8b-9c65-409c-a1e9-e5514d15b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ad3dbb-c44b-4399-b9a7-2e7f850969b5",
        "cursor": {
          "ref": "918036ea-5e1d-40e4-8219-fdb808f99e81",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "884302e6-72e8-40aa-9187-cd4b6c5c281c"
        },
        "item": {
          "id": "85ad3dbb-c44b-4399-b9a7-2e7f850969b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a0352d9c-243b-402a-9da1-e3e37bb60f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a8d615-da56-47bc-a082-704461bccf7b",
        "cursor": {
          "ref": "6515c395-a559-400e-8f65-7f6decb1548b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f6fb8261-9d86-418f-b580-8433856b0e0b"
        },
        "item": {
          "id": "25a8d615-da56-47bc-a082-704461bccf7b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6632a2a8-c849-4730-996e-0507355245ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee694574-1bca-4d6a-88b9-a80c0586a3b3",
        "cursor": {
          "ref": "7e183321-bdb6-471b-8883-35a4f8142fe2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6b3fa101-c95a-4677-8a5a-2f17dafe21bb"
        },
        "item": {
          "id": "ee694574-1bca-4d6a-88b9-a80c0586a3b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c7015cc7-b2e3-4039-a6c7-d3c84921baa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe40200-6c0c-4d13-9ad7-330335d7b217",
        "cursor": {
          "ref": "853ac83c-24d0-4e91-8544-3aa456a50ff8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e5ab277-6aca-4c3b-bdcc-c4934254fa8a"
        },
        "item": {
          "id": "9fe40200-6c0c-4d13-9ad7-330335d7b217",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f392208f-025b-4884-90e3-23d63a5396ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5d6599-b5f9-48b5-8bb6-387a0c8b3093",
        "cursor": {
          "ref": "e057cdbf-945b-43e7-808d-c9a07bca0cdb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1ed3c98a-5dec-4912-82bb-c9dbe4e27d04"
        },
        "item": {
          "id": "ff5d6599-b5f9-48b5-8bb6-387a0c8b3093",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b5a5703-006b-411d-8cc6-b31a41fadfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68217d29-bfa2-43ea-8243-969d7553d4e4",
        "cursor": {
          "ref": "c89f647b-e139-4d0c-8493-c11ccbe5d0c0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9187b7a9-9c63-4253-b0ad-12feac1c9f85"
        },
        "item": {
          "id": "68217d29-bfa2-43ea-8243-969d7553d4e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5ab7a4ed-f152-4646-999b-f940c3ea2f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e3367-f19b-4f5e-bdff-8f4de8f0de22",
        "cursor": {
          "ref": "8e552e94-33c2-4990-93cf-92bf4ad464dc",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "011314f1-6281-4412-9bc4-fbdf1e581c62"
        },
        "item": {
          "id": "860e3367-f19b-4f5e-bdff-8f4de8f0de22",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee9ce7bd-76bf-406b-8ff5-ad8a7783788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f12a9-0efc-40d9-9556-335016c65890",
        "cursor": {
          "ref": "1e54cc6e-1079-4221-a000-9428be5b20e7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8570e7db-77d9-453e-b288-e1f63e694b6e"
        },
        "item": {
          "id": "322f12a9-0efc-40d9-9556-335016c65890",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c7e09672-2a56-418a-a527-5bf1a2f7aa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f515a21-ab18-4beb-8191-6b921adadd7e",
        "cursor": {
          "ref": "08820b92-d0d5-486a-a4cc-8d4be78ba98f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c72822e-7aae-4424-9d5e-b76f8bbd5ac5"
        },
        "item": {
          "id": "6f515a21-ab18-4beb-8191-6b921adadd7e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e1191d89-8ebe-43a1-8ea7-c406174f6385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ee70b-ba7f-4f6b-8de2-8e41e4e113b2",
        "cursor": {
          "ref": "63028399-26b8-44e6-9ef6-e92b367f606a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97689957-4c4e-45f8-b093-a327e2d785aa"
        },
        "item": {
          "id": "ba8ee70b-ba7f-4f6b-8de2-8e41e4e113b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0c74bd89-0ca9-400c-b545-35411a337905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaf930f-9c79-4865-b55f-b711b0317491",
        "cursor": {
          "ref": "d77f4e63-f377-4ed6-ae84-199f2febae84",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e8667b6-4ce6-444f-b884-c6d5896e9961"
        },
        "item": {
          "id": "eaaf930f-9c79-4865-b55f-b711b0317491",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "705159d8-44e8-4026-8e67-5f4516e6d29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3640f9-d1d8-44af-9e15-d37294e01f97",
        "cursor": {
          "ref": "d6239f85-703b-40c8-bc57-dbda5d8f3567",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b02e2889-34ed-4ad8-812e-ef40ccba70e9"
        },
        "item": {
          "id": "fb3640f9-d1d8-44af-9e15-d37294e01f97",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f90f5df4-c167-41d3-b4af-c09be94cbc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d70092-9934-4e92-a05c-f7a1dc902652",
        "cursor": {
          "ref": "92b1b3c6-82bb-42db-952e-4e43e9bf8932",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d7e5afad-46cb-41fd-ae14-fb8b9de45ef1"
        },
        "item": {
          "id": "79d70092-9934-4e92-a05c-f7a1dc902652",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7ee37ee-b7fe-4ae4-b5be-b41d99e5c61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1f1035-1afb-4c77-a1a3-0627ed69d4b0",
        "cursor": {
          "ref": "2d2aaa26-76fe-4eb6-9f4d-924fea357b2e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2e818061-8608-4d9c-9409-737097e5dd2a"
        },
        "item": {
          "id": "3b1f1035-1afb-4c77-a1a3-0627ed69d4b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c82bf4a9-2021-4905-af5a-c4659704bab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f04d57b-cb0a-452e-a89c-e6ba84b5b844",
        "cursor": {
          "ref": "2c82320b-7e82-4823-b929-fc097e368eaf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2ffeac27-a622-4ca0-b821-f667b24c666d"
        },
        "item": {
          "id": "6f04d57b-cb0a-452e-a89c-e6ba84b5b844",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3ab9e8a7-893a-4797-911e-5ae29d5c8618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5282d51d-7563-41c3-81fc-393be6bde3ca",
        "cursor": {
          "ref": "0ac7f6ec-eeb2-4949-8914-e7e74a756658",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d8af760-93c1-417d-ae52-043c549d5c23"
        },
        "item": {
          "id": "5282d51d-7563-41c3-81fc-393be6bde3ca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7264eb8d-388d-41d1-a80f-a6b2ae9f8f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae033c59-b866-4ddd-96cf-7547325d00f6",
        "cursor": {
          "ref": "9ce9d198-2032-4fc8-8909-38e480af6983",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "40b37423-039f-4062-91e0-0d2043a077e3"
        },
        "item": {
          "id": "ae033c59-b866-4ddd-96cf-7547325d00f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17822935-7014-415e-acd9-a9d7dcf90542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998b3fab-e214-4783-8ff9-36905be34bae",
        "cursor": {
          "ref": "6b3370d5-9541-4a33-828f-4b3b7c91fe40",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "da4e84e4-9b10-4737-9515-ce1ecda2500b"
        },
        "item": {
          "id": "998b3fab-e214-4783-8ff9-36905be34bae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b285765-321f-48b3-ad59-fe61fa139948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18632a0-0f6c-427e-a489-3e25e04cc886",
        "cursor": {
          "ref": "9673c435-fc09-4509-b706-972c0246b38e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef59f132-8b32-47f8-b94b-fa85a1f66fca"
        },
        "item": {
          "id": "c18632a0-0f6c-427e-a489-3e25e04cc886",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16205860-c0de-45d8-95ae-5c0badc26d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa5f3df-9c0f-49e4-b340-9ad311fbf3fd",
        "cursor": {
          "ref": "a8330d4f-0ec4-4f72-a9a1-f1db882c2c93",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "77bb4ddc-77d1-4b84-be03-37b4409ee66d"
        },
        "item": {
          "id": "1fa5f3df-9c0f-49e4-b340-9ad311fbf3fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37683283-fd9e-4f87-a550-fb061af28336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4485369f-e4f6-48ff-ac9f-d577aabcdca8",
        "cursor": {
          "ref": "dbe85c31-4941-46dd-81c6-db1fd55f170e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8623573b-ab7e-4c30-a311-ce4788cb0d3f"
        },
        "item": {
          "id": "4485369f-e4f6-48ff-ac9f-d577aabcdca8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c5de267e-2818-49d0-aa08-73fcefeef76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0329fb-1ca8-4598-a73d-7423254303e3",
        "cursor": {
          "ref": "b546090c-cce2-4bdf-b038-64790773ee45",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b4049bac-a7e6-4fdc-8405-d10deca2aa29"
        },
        "item": {
          "id": "9a0329fb-1ca8-4598-a73d-7423254303e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "039db72c-8bb8-47f6-afbc-a14a206a331d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9db9a-a886-4b46-9520-cce977174151",
        "cursor": {
          "ref": "75e14c0a-3180-4492-a528-959587ae2abb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5c1729bb-d305-460b-b65c-ffb4974774c8"
        },
        "item": {
          "id": "4be9db9a-a886-4b46-9520-cce977174151",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "27ad605e-1cdc-4c50-8e1d-facbe8bb20d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06112f2-adac-45a5-b539-e708a59e0ad6",
        "cursor": {
          "ref": "abd3a2e4-fa0b-4247-ba7d-6abf307808cc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cfc70c13-d119-43c9-81cf-7b881d31d8f9"
        },
        "item": {
          "id": "c06112f2-adac-45a5-b539-e708a59e0ad6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9fd8c53-212d-45fa-b6bf-4ed4e694edff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5396ba03-142b-4677-9b9a-a6a42afae3f7",
        "cursor": {
          "ref": "a46b936b-243e-490a-aad1-1ebb984f52df",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5c9cf8cf-f53f-4831-acc6-fac53b3e38a1"
        },
        "item": {
          "id": "5396ba03-142b-4677-9b9a-a6a42afae3f7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d026b7e7-f67a-4620-af1f-7cdb6b4c19ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8544ca-8e09-4740-a56e-9adfc47259c5",
        "cursor": {
          "ref": "01f1eeff-7408-4e09-ae35-d8bb9464b671",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "97584ac0-684e-4fed-994f-930cac853edf"
        },
        "item": {
          "id": "6d8544ca-8e09-4740-a56e-9adfc47259c5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ca3bfb03-da28-40d2-aa84-945d3dc64397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de899ec4-6784-4a30-8b74-3883d8ef907e",
        "cursor": {
          "ref": "6e4b7aaf-3bbb-4c2f-97da-2d2824303ef6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0dd1640b-e198-4139-9d5f-51876abcb1c3"
        },
        "item": {
          "id": "de899ec4-6784-4a30-8b74-3883d8ef907e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2b36d2b5-3cbd-447d-a3f3-7e32f13e881f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7344613e-1cc9-466d-97d0-b763992cd17a",
        "cursor": {
          "ref": "0d579141-a30b-49a0-9bbb-d4a4b91d2186",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a0885dea-c93f-4fad-ad27-99030216b0a0"
        },
        "item": {
          "id": "7344613e-1cc9-466d-97d0-b763992cd17a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9a33d0d8-0c02-40a9-88d0-7ee63487ffb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185552a7-54e2-49e1-83a8-e7167777c124",
        "cursor": {
          "ref": "2b252b51-65da-49a7-8d11-83cd8d1ad327",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8c9400f8-cd98-41ac-825c-d66743539419"
        },
        "item": {
          "id": "185552a7-54e2-49e1-83a8-e7167777c124",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3dbc9c4d-6ef2-47da-9473-fbdba8296ad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d87254-dd7a-4a62-9f95-8ebbd6a14aaf",
        "cursor": {
          "ref": "2f71a286-3d12-4a9e-80e9-fe1ebd5fcb19",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc8d3aaa-a4c9-4156-a96b-e23275a9d6e6"
        },
        "item": {
          "id": "57d87254-dd7a-4a62-9f95-8ebbd6a14aaf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5cc55f5-af66-4e6c-90f1-b3632ce6dd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46b7e21-e901-46e7-8870-48f7b25f7e1d",
        "cursor": {
          "ref": "46cbf9dc-21ca-4f26-b8af-2cc35053c9c0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3085d658-4035-45d0-8905-65bb70119f80"
        },
        "item": {
          "id": "e46b7e21-e901-46e7-8870-48f7b25f7e1d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ed62325-b02d-4c80-9372-41850e0c33c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73871b65-9cd5-4903-bc30-80fbbf64e60e",
        "cursor": {
          "ref": "b0cd2582-ad1f-4355-9c4f-056f9965e427",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69f06ea9-f5e4-49b6-a101-42e0417780a2"
        },
        "item": {
          "id": "73871b65-9cd5-4903-bc30-80fbbf64e60e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4f58b225-b211-4687-a26f-79b03cc9db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b15ff6e-0c0e-4319-92f9-4525ee1d3722",
        "cursor": {
          "ref": "15406615-a922-4fa5-8240-043ca90370b8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "69c5f2a6-2caf-4c13-bee4-f71d4e473ee3"
        },
        "item": {
          "id": "2b15ff6e-0c0e-4319-92f9-4525ee1d3722",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1fcdae58-3817-4bff-b5b9-5f5478417b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1cee7d-7a97-4e6c-a5a4-570adfccb31b",
        "cursor": {
          "ref": "dbffa268-6259-4715-812a-35c51e187c23",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a913ac65-419d-44a1-9c40-952a5aa1397b"
        },
        "item": {
          "id": "9a1cee7d-7a97-4e6c-a5a4-570adfccb31b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4ad83535-7b78-4c06-94ed-5f42fca1e3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5547016-3592-4532-b202-a0b259077964",
        "cursor": {
          "ref": "804745b9-3bcd-4f39-85d1-65b6a15fdf49",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f7b467a8-5b71-4eca-a87e-83fb5e0fbfa1"
        },
        "item": {
          "id": "d5547016-3592-4532-b202-a0b259077964",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d92085b1-4100-4f5b-bb4e-226ee7e0ed4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409e8eb-85b9-4b11-bfc6-efdaf41d5896",
        "cursor": {
          "ref": "108e61f8-a103-4479-9807-6a795040892a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cd5d0e45-e679-49f1-bd17-b557829ae4dc"
        },
        "item": {
          "id": "1409e8eb-85b9-4b11-bfc6-efdaf41d5896",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5fcbfb2e-075a-455c-a31d-06cfa0aa3586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3854c-7ce7-48be-8e69-33df1db4b234",
        "cursor": {
          "ref": "78eba2fb-1f44-43a8-9c3a-07f788e95778",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "55b55037-85f1-4e37-9c1e-32208e6380c7"
        },
        "item": {
          "id": "81a3854c-7ce7-48be-8e69-33df1db4b234",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "529ce814-cfa1-4da7-9216-d5b1301a7020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a118df1-51e8-49d0-8c92-0030bc4467a7",
        "cursor": {
          "ref": "caca1204-1a08-43a8-a36b-139fc546fde3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "32def633-7052-4295-8d5a-cf696edc7459"
        },
        "item": {
          "id": "2a118df1-51e8-49d0-8c92-0030bc4467a7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fff36fa6-18c7-4d3a-b7b4-d6e1660bb419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3159e947-4b2d-4d55-b8b0-ac153f1676c6",
        "cursor": {
          "ref": "0ddda994-fa4f-48bd-9a4e-bfca32933186",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6b308612-db89-44ab-93bb-aa509c8bcbbc"
        },
        "item": {
          "id": "3159e947-4b2d-4d55-b8b0-ac153f1676c6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "770038be-923c-4e00-804b-47d879df8773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ba9ec-84b0-40f7-acda-3f28c82dea30",
        "cursor": {
          "ref": "581f61ad-7cb7-4ab8-8a9c-d32b608d1369",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bc5b79a3-d1fe-4d75-a71b-7f9edc7c0502"
        },
        "item": {
          "id": "af5ba9ec-84b0-40f7-acda-3f28c82dea30",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4cd41713-62d4-4a76-9679-56c8d34273fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ee349-803d-421f-8cf7-e65d532f2cd1",
        "cursor": {
          "ref": "3f1b48b5-b233-4fa4-860a-21d7a835d067",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "725c0239-9874-4bdd-a740-12dae1ee88a3"
        },
        "item": {
          "id": "988ee349-803d-421f-8cf7-e65d532f2cd1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "305ad78a-d3ee-44b3-81ff-6286b4f52474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f5a308-5b8e-4385-8714-3f0c26ed138f",
        "cursor": {
          "ref": "44bcfc8c-a02d-497c-b864-331c0b1e89e5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ded9d4b3-d59c-489d-9dea-797befc40e0f"
        },
        "item": {
          "id": "58f5a308-5b8e-4385-8714-3f0c26ed138f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66af6473-c32f-441d-8980-8da6c5f0e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500990c3-3cc4-43ee-828e-bddfd765e529",
        "cursor": {
          "ref": "802c0bdc-c888-4596-a689-50472ab0051f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7443fa8-9028-4a31-87ed-9cf69627d7af"
        },
        "item": {
          "id": "500990c3-3cc4-43ee-828e-bddfd765e529",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "795b5e3a-3860-4954-ab03-27dbdd1e7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ecfdfb-b12e-4b97-bca2-d0e9294a3d84",
        "cursor": {
          "ref": "ac1b94c4-51be-48ac-89dc-e8ffcf6dd64b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9389a839-61cc-4bc5-b0f4-79f3d295286a"
        },
        "item": {
          "id": "78ecfdfb-b12e-4b97-bca2-d0e9294a3d84",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "13d78330-b16d-48b5-bfcf-2b131d9e2c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389bfeae-2ed2-45d7-be6a-2a44ca0e698f",
        "cursor": {
          "ref": "6fe6f6d4-a28b-44c8-8ba1-f38f8a2a0e20",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e72ab410-7139-47c5-aff4-b511a981cdc0"
        },
        "item": {
          "id": "389bfeae-2ed2-45d7-be6a-2a44ca0e698f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "58567b8a-2455-48cc-befa-6f4e8f1ef91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc225b03-1fe7-4dc4-ab0d-ec3ed67468d9",
        "cursor": {
          "ref": "ad12571f-a19b-4823-ae08-898574956119",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dde928f6-059d-4e25-8209-c0f596ce4804"
        },
        "item": {
          "id": "dc225b03-1fe7-4dc4-ab0d-ec3ed67468d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96e7e450-847d-4acf-8e5e-c213ee9e3c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38feb98a-a113-448d-ae31-c7a097998986",
        "cursor": {
          "ref": "e766571a-79bd-4eb2-82b0-f0dc60953a71",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f7df13c2-bae6-4379-bad6-3622654db1cd"
        },
        "item": {
          "id": "38feb98a-a113-448d-ae31-c7a097998986",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2633cfcc-579c-47b1-8364-79e7a80ea1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38decf71-7aa4-4ce8-9a9b-669c021cfdde",
        "cursor": {
          "ref": "4d50b144-03f0-4861-a9b2-467c70d1789e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e54569dd-92fe-4b92-83fe-3ca3c40034b8"
        },
        "item": {
          "id": "38decf71-7aa4-4ce8-9a9b-669c021cfdde",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c3158b42-00db-40d2-985e-0b1a882e131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba75e0be-8c9d-47f7-8db3-d4da0453e09c",
        "cursor": {
          "ref": "651af74c-30be-49cd-835e-2e7ae30b6b22",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f6d5eff-b3ae-48f2-bf51-d6046a759b80"
        },
        "item": {
          "id": "ba75e0be-8c9d-47f7-8db3-d4da0453e09c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "47e15f34-e1fe-439e-a957-eeb8e6f6ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f20c8-c5b4-435d-b896-53075c48f915",
        "cursor": {
          "ref": "85a62859-7243-4671-bd90-1e054658095f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "68e7397e-798a-4cda-a599-a987d3ced15d"
        },
        "item": {
          "id": "255f20c8-c5b4-435d-b896-53075c48f915",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b70ba2e9-c6c5-44ff-b87a-325b3774d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f47b852-24e9-4387-b2c4-528e0c77a2bc",
        "cursor": {
          "ref": "edeb138d-58f2-4ec1-aeab-fd0dfbe123f6",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ff23ace9-9085-4d8f-bd05-6f7134d0099d"
        },
        "item": {
          "id": "1f47b852-24e9-4387-b2c4-528e0c77a2bc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f50f97b-c89f-4781-b0f3-d6359acdcdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf5269-026d-4b0c-adf6-1a6de9607982",
        "cursor": {
          "ref": "27e2f7a6-9e56-44fd-8f1e-3f73145f8eb1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b8a5e834-30ca-40ac-9b50-4bdd994889ea"
        },
        "item": {
          "id": "6ebf5269-026d-4b0c-adf6-1a6de9607982",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "83ae97ca-67ed-42a7-989f-d92421dd4975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3740f5c-4545-4b11-8fec-50968cf86adb",
        "cursor": {
          "ref": "ee49ebae-79cd-44c7-b4cb-e6fbd1ce465d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4790f8d-c26b-4324-bc28-5c48346e2d2d"
        },
        "item": {
          "id": "f3740f5c-4545-4b11-8fec-50968cf86adb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "43c96e6b-82c5-47f9-9bc8-e797839f6e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27966e0-bc12-4f66-af6c-c79e31d48bb1",
        "cursor": {
          "ref": "3a21a21a-2e6a-4242-8498-a1f3335c708a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "183a31ba-a71d-44dc-9f72-d0a596bee6e9"
        },
        "item": {
          "id": "c27966e0-bc12-4f66-af6c-c79e31d48bb1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "02f19be7-4dc7-46b5-8ee2-45877fb289ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8109d4-2393-49e2-8630-624fbbf918bb",
        "cursor": {
          "ref": "f44c1a76-e76c-47d6-8f07-57646520c2f9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "48ce3854-6ef8-421f-ac08-3cd90f10206b"
        },
        "item": {
          "id": "fc8109d4-2393-49e2-8630-624fbbf918bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "903b26e3-0761-42eb-9389-11745f2db2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25294fcf-3611-46d9-ad3d-5b75d8aa952a",
        "cursor": {
          "ref": "e3c59930-f9d6-4d17-b6ea-6947ce7064ca",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "908d04e3-2ee1-4751-a0d4-5bce38b99388"
        },
        "item": {
          "id": "25294fcf-3611-46d9-ad3d-5b75d8aa952a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a46f5acc-d838-471b-bda0-ea22753758e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7422722-f1ac-4e22-8839-e1b13faa41ec",
        "cursor": {
          "ref": "af53f0a2-0902-4d22-b588-7caad98a6bea",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8473a89c-bbb6-427a-aace-ec1207060b1b"
        },
        "item": {
          "id": "b7422722-f1ac-4e22-8839-e1b13faa41ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d55399cf-b32f-46f2-aca3-0fda2f1b5798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b83f66-a907-43e9-afb3-9171ed91adad",
        "cursor": {
          "ref": "08a62a4e-321f-460f-a381-07d6149003ef",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7a1abdf-ae99-4c02-acb0-04d1d15ac461"
        },
        "item": {
          "id": "a1b83f66-a907-43e9-afb3-9171ed91adad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "42f13216-3331-4ae6-aeef-7aaadbb101ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e33c3-2199-40b8-85d9-0cbe646d312c",
        "cursor": {
          "ref": "6d43dbe6-dab4-4ffc-99a8-48c8ace0b0d2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "54baf33f-e9c8-45bf-936d-50ee9465b349"
        },
        "item": {
          "id": "2b3e33c3-2199-40b8-85d9-0cbe646d312c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f10952f6-e43a-4829-a966-a4a220598e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e658f7-f4af-4990-ad83-c2218bb1d09e",
        "cursor": {
          "ref": "3e6ca30c-a9f4-4d22-8ab6-b8a71098a25d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5fec1990-3506-4485-8455-eeedd64d6947"
        },
        "item": {
          "id": "16e658f7-f4af-4990-ad83-c2218bb1d09e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d297ee2e-61f4-4927-8990-00d79fd6742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2858dd4-d458-4a5c-b9ba-5c140349f221",
        "cursor": {
          "ref": "4dc896ac-e118-4f7e-ac69-b9b521d67698",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "26fa73c3-7f96-4346-82cc-d7f0cfd04b3a"
        },
        "item": {
          "id": "c2858dd4-d458-4a5c-b9ba-5c140349f221",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "efcaa21d-a534-41fd-805a-d4d1e3e58c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f96f94-d4be-4a36-8313-65902760a5dc",
        "cursor": {
          "ref": "d694f6f3-39ba-426d-b82a-a83b3955f61e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "70fff82c-489f-467e-9c4b-a5a1752533e0"
        },
        "item": {
          "id": "28f96f94-d4be-4a36-8313-65902760a5dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "35edc991-2e72-4ee6-a366-1d7b97ba1fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493b592d-0c59-4787-a6d9-cc6b455cf777",
        "cursor": {
          "ref": "84b1e406-4633-4554-acf6-e5c1c1d1f4d5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dd7feb89-f83a-4faa-9fe5-641c76e10267"
        },
        "item": {
          "id": "493b592d-0c59-4787-a6d9-cc6b455cf777",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5d197a4d-f793-484e-80b9-a1b26a13c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8055cfe-9b6b-4321-9c85-2a10b4b91a71",
        "cursor": {
          "ref": "52108b84-6e64-474a-a811-3bf02aabd0ad",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b6d8661b-61d8-4f16-9d45-dc5eb5effb02"
        },
        "item": {
          "id": "a8055cfe-9b6b-4321-9c85-2a10b4b91a71",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "895ac161-6650-4a29-8004-78bfc04fd249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8d4f39-b84b-4027-93f0-07dce14b6613",
        "cursor": {
          "ref": "dac0bd57-2141-4290-bf2d-845330776558",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "12386c65-f2f3-4b21-992e-8228a4eb592b"
        },
        "item": {
          "id": "da8d4f39-b84b-4027-93f0-07dce14b6613",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7eebeaaf-70d2-4ab1-8344-745c88ce6f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef4ed5a-27d0-46f4-ac28-23ceab44b992",
        "cursor": {
          "ref": "b90b0cbc-4a84-4e16-aa98-6d59b0f0b4ba",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d76dffea-bf0a-4fc6-88e5-aed901861629"
        },
        "item": {
          "id": "0ef4ed5a-27d0-46f4-ac28-23ceab44b992",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ebd6c37b-24fe-4dec-a635-8009bccf8bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fad0674-6bbd-4297-9c16-6e1f1ef7899f",
        "cursor": {
          "ref": "ba193f12-347e-4142-a539-c5f486bcd899",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5d5b873e-013d-49b0-9568-a48797bddac5"
        },
        "item": {
          "id": "1fad0674-6bbd-4297-9c16-6e1f1ef7899f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e226599b-455c-4170-8b67-be579dc73d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c214f79-d2e5-4915-8e48-c0d05a3a3017",
        "cursor": {
          "ref": "c41ff4ee-a856-4465-bf15-c3f5c671f483",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8d67fd43-e030-4e19-8770-e2dafd8d4639"
        },
        "item": {
          "id": "8c214f79-d2e5-4915-8e48-c0d05a3a3017",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "afb30e98-c180-46e7-a11b-e6355950656c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7919865-1b64-45dc-91f9-36fb3b905e6a",
        "cursor": {
          "ref": "d3bd7948-587e-4378-bdfa-e8e35ca58336",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e061cbc-f72e-4407-b7f3-850e2e104904"
        },
        "item": {
          "id": "a7919865-1b64-45dc-91f9-36fb3b905e6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "07ba5cd6-7187-4c69-86b0-7da3397201aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb06311-8cd6-4a3e-a7de-4c404a99c186",
        "cursor": {
          "ref": "3b8f779a-8858-4160-bf02-0ebbb89a8098",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "102f9500-24f5-47ca-b02d-e7a7b65d1e93"
        },
        "item": {
          "id": "2cb06311-8cd6-4a3e-a7de-4c404a99c186",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42634983-9572-4d9c-9cc8-ea61e2d9378b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362c28d1-5b45-4c6f-9660-f86b15f7763d",
        "cursor": {
          "ref": "4602a5ba-9522-4514-8313-1df6fcb4d0e1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf84e057-ee74-461d-a621-630bf6a233f1"
        },
        "item": {
          "id": "362c28d1-5b45-4c6f-9660-f86b15f7763d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6fa22a2f-fddc-4d28-8c04-fd4487589875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78a87e8-ba8e-4299-acf1-c829f36e0264",
        "cursor": {
          "ref": "a9a493a6-b682-4fac-8613-49552427b5dd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c4fbbcf3-c2c0-4910-8d4d-5530ceb8187d"
        },
        "item": {
          "id": "b78a87e8-ba8e-4299-acf1-c829f36e0264",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ac1a4795-d7d3-4093-ba3a-b4a9ed3ee4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc36cb-0fe0-407a-bfbc-d90cab6df9b8",
        "cursor": {
          "ref": "815a6c99-44a9-49c2-aa10-fb06c2909f3b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "13210d08-6c54-4ab7-ad33-f9b8e1d0f9cf"
        },
        "item": {
          "id": "15fc36cb-0fe0-407a-bfbc-d90cab6df9b8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "965167a8-aec3-4150-b172-0a4de9b579ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c01c015-adc3-442c-9a92-61f4836eb46f",
        "cursor": {
          "ref": "2d65cbac-1826-4eb6-a3c8-840355afca20",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1fef0180-9e62-46d8-92d7-5cf8c165912e"
        },
        "item": {
          "id": "6c01c015-adc3-442c-9a92-61f4836eb46f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "162b075e-4097-428d-a890-ea69a0f94798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a5256-d28d-4533-af3c-0e7917f2098f",
        "cursor": {
          "ref": "45e76473-61a0-4f43-8f6d-c34557055645",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d246f860-61a7-461e-ba98-124121f9c4a0"
        },
        "item": {
          "id": "d75a5256-d28d-4533-af3c-0e7917f2098f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "620fb291-d3d5-449a-bfd9-b82ab888de26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f653127e-ce8e-424d-8f24-514cde67ce05",
        "cursor": {
          "ref": "0243d25c-f9c2-404c-9a69-be9d2a7345da",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cf71ee7b-5f47-4f12-8ee2-78592a9e2084"
        },
        "item": {
          "id": "f653127e-ce8e-424d-8f24-514cde67ce05",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5228d750-704a-4ff7-b181-7134c721c048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae25af74-999d-425a-97bc-055ae7b453de",
        "cursor": {
          "ref": "89669dee-cb0b-4faa-b941-39ded0330b4b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f7ca7c9-e407-4d12-a904-9dc3992230e1"
        },
        "item": {
          "id": "ae25af74-999d-425a-97bc-055ae7b453de",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5c611529-8f42-4a40-8deb-8d5b1a75935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f211c6-ffe9-4168-8520-8768f753bf27",
        "cursor": {
          "ref": "a07b4ccb-0253-444d-af99-2d44de037048",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "48053ea0-4155-4ee0-86a3-6b74b0794e56"
        },
        "item": {
          "id": "68f211c6-ffe9-4168-8520-8768f753bf27",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "16da0088-e09a-4d74-9b67-755d3176e667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720734cd-5d8b-44e7-b930-6e6b8271559d",
        "cursor": {
          "ref": "95378e28-e8ce-4954-bf8b-769a258a6f2a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bdabf2da-e903-4d22-b9d0-10865c7f014b"
        },
        "item": {
          "id": "720734cd-5d8b-44e7-b930-6e6b8271559d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bdfaf504-2eb9-4669-9179-6b3a94246ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5fd283-ed4d-4f80-a3f4-da4d2a19a1ec",
        "cursor": {
          "ref": "fa966102-ad4d-4fea-ab04-5a5948a5fc51",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4dc2d440-60fc-4bab-8706-6b0b3fd3f394"
        },
        "item": {
          "id": "2f5fd283-ed4d-4f80-a3f4-da4d2a19a1ec",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7b651ad8-c9ca-46bd-8856-a26e97e75d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f126ff4-e12d-420f-bd06-eb73ce513eac",
        "cursor": {
          "ref": "7213ccf8-d4bf-4814-884f-2e40fdefdb19",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "05d8e7b3-23b4-4335-bca7-1e2a65a2fafc"
        },
        "item": {
          "id": "8f126ff4-e12d-420f-bd06-eb73ce513eac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1c0fbc5-0707-47f2-ad59-9e7cc523a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d028fc38-d30e-4e29-93f5-54861878bf6f",
        "cursor": {
          "ref": "925602c8-b8cf-4335-9974-583033f8154a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "63981358-b8fe-490f-ab40-60f183cad446"
        },
        "item": {
          "id": "d028fc38-d30e-4e29-93f5-54861878bf6f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "061d5e2e-5891-49d1-9601-879b8e0a261f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfc3e6d-a5ba-4f44-b2b7-facbd9df2bd0",
        "cursor": {
          "ref": "adf1c817-189c-4844-baf0-d7c11129b0ad",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "31d99d2a-2e4f-4d04-873a-34c87c8c4776"
        },
        "item": {
          "id": "ecfc3e6d-a5ba-4f44-b2b7-facbd9df2bd0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "047c0150-3f7d-4b81-8ceb-6bad036615ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfdaf3b-ebf1-4a0e-a253-092e303a4ade",
        "cursor": {
          "ref": "017327a2-72bc-4210-864d-c9a760d30b75",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5f3a9840-448b-44b1-97a2-0b5efebfded3"
        },
        "item": {
          "id": "abfdaf3b-ebf1-4a0e-a253-092e303a4ade",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "25f13501-f877-49c3-9b0c-857f347e8181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784539c6-2d84-45de-b2db-961ca7210185",
        "cursor": {
          "ref": "e9957c7a-cbfc-452e-b87b-20c580835470",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "efd6dfc6-2211-4584-8967-090402465a7f"
        },
        "item": {
          "id": "784539c6-2d84-45de-b2db-961ca7210185",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6c8dc4d3-08b4-4cba-8f1e-1198f7b1683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c52dfe-909b-4a30-ab04-f182b9024e44",
        "cursor": {
          "ref": "dd87c455-58d2-4d9f-9bdd-3e60ad215f8c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b8b1fd59-1e2a-4cd8-96b8-3685978155a8"
        },
        "item": {
          "id": "89c52dfe-909b-4a30-ab04-f182b9024e44",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7afa17da-c5af-438a-a20c-b2e6efacd1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffad8000-7cb0-48c4-ad11-ce2fbe56001f",
        "cursor": {
          "ref": "c1310395-6b3c-4a2e-bd5a-4141cd1952ae",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "66cb8333-0698-444f-9efc-c0de0de27204"
        },
        "item": {
          "id": "ffad8000-7cb0-48c4-ad11-ce2fbe56001f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4f6ffc05-c9de-402f-99fd-f8f52d26c8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a824eaf-145f-4cf9-8b88-bdb90643a075",
        "cursor": {
          "ref": "17a77033-f5b0-4d80-ba28-ac14937b56c4",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c715981-e34b-4baa-9317-b12677043ccf"
        },
        "item": {
          "id": "4a824eaf-145f-4cf9-8b88-bdb90643a075",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "02ac7e4e-f347-4a0b-a924-95d13f8d89fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439124eb-71ea-404d-a3d6-1330f8b2febb",
        "cursor": {
          "ref": "9bf198c6-7f74-4f13-862b-9409cb0f5df9",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a884325d-0809-4731-a780-760e462fe16b"
        },
        "item": {
          "id": "439124eb-71ea-404d-a3d6-1330f8b2febb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4b6ea499-6358-45fb-a261-98b3b29e8220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b841f86c-5059-41d8-8281-c22e100c0d45",
        "cursor": {
          "ref": "d88638b7-3c3f-40c6-b232-9f1a8007eac9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5f98cbb8-a8c1-46f7-8f5a-8502b27f81b3"
        },
        "item": {
          "id": "b841f86c-5059-41d8-8281-c22e100c0d45",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6095dd3b-ea28-427a-8d93-cc3a28b94c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e972b8-a885-4911-a5d3-5d79b5a77265",
        "cursor": {
          "ref": "bfb26ce4-3ccd-4dfc-92e5-3db1c778d3fc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ff8af166-34a1-4a14-9d0a-107daf2ce2cd"
        },
        "item": {
          "id": "e6e972b8-a885-4911-a5d3-5d79b5a77265",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2c4b733f-d06e-4077-a9e6-c82e6cec5f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be8d3d3-f4e1-43ad-ba80-23d0dc8529d5",
        "cursor": {
          "ref": "bca88681-3497-453a-b110-beb65aa09b83",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f7e74099-8df2-4173-86c5-2770d7b534b2"
        },
        "item": {
          "id": "3be8d3d3-f4e1-43ad-ba80-23d0dc8529d5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e0355b9-5469-40c6-a30b-25806217c81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2749df3-fa79-4ec4-88d4-1159ab6d13c1",
        "cursor": {
          "ref": "35fb7634-d7e9-43ac-9861-c88da869dc35",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9ad619a7-d16a-426f-8fd3-6402e4ab9cb7"
        },
        "item": {
          "id": "b2749df3-fa79-4ec4-88d4-1159ab6d13c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e94f5de4-4af8-4c65-a889-884b570abd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72beb81-063d-4c79-b46e-d9a017731230",
        "cursor": {
          "ref": "7ffe41e7-b826-4277-84a2-a3dbcfadba70",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "942acd6a-aa71-4189-ae6f-d51e48c7e3df"
        },
        "item": {
          "id": "a72beb81-063d-4c79-b46e-d9a017731230",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7066bc62-0f1c-44dc-a65b-3fca82756f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefc22bf-f9f6-43f9-9817-54cc4e414a51",
        "cursor": {
          "ref": "c0de16f0-a99f-4ab3-8b7c-1133ca2cabe7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c81558de-e045-447e-b351-f631ef39136a"
        },
        "item": {
          "id": "eefc22bf-f9f6-43f9-9817-54cc4e414a51",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "be92bb9f-b222-4e1c-857e-0c1ff2768f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf4e184-72ca-4935-bf7b-aa13d8dc3b6c",
        "cursor": {
          "ref": "69e36b89-ff83-4f13-b002-54580bcddace",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "23b5abe7-505c-461c-85ee-53b8d96e6730"
        },
        "item": {
          "id": "3cf4e184-72ca-4935-bf7b-aa13d8dc3b6c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1762c067-56a9-4d5c-9115-6bda9203f9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8363da62-67a6-441e-8881-42e05603eeee",
        "cursor": {
          "ref": "a91a4881-c81e-49ae-9e06-16a0cc74be41",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "052c153b-3631-4d49-bcdd-0f941aae442b"
        },
        "item": {
          "id": "8363da62-67a6-441e-8881-42e05603eeee",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6451cea9-a17a-470c-bf1f-2bfbb48a957f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140896da-a67b-4f76-b0bb-30f6a1ca58ff",
        "cursor": {
          "ref": "5db2ea4a-82a6-4129-833e-240571797914",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df5327b9-3459-4eb9-b6b2-c42521c733f3"
        },
        "item": {
          "id": "140896da-a67b-4f76-b0bb-30f6a1ca58ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "12054f10-526c-4de3-905f-812db58bc1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aa20d7-57e2-4c77-8546-92ff9fe4c692",
        "cursor": {
          "ref": "17888790-3e24-4ddc-ba22-92df043797a4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cf198328-6556-4954-b8d7-a40cb89bfe29"
        },
        "item": {
          "id": "d2aa20d7-57e2-4c77-8546-92ff9fe4c692",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cea7f341-be93-4dbb-a126-2d69c782189e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7995ddd-f1e1-42db-8161-f6a13fa29735",
        "cursor": {
          "ref": "407368d7-a4d3-458e-9f35-4d5dcc355e92",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "21dd5558-8c2a-4714-b847-4b229a463607"
        },
        "item": {
          "id": "e7995ddd-f1e1-42db-8161-f6a13fa29735",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "eff5e1a0-a83b-4d69-8f93-f035cd27e11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8475e53b-0eb0-434e-a707-fd5cee028eaa",
        "cursor": {
          "ref": "484d837e-289d-481c-b96a-3fd2dbfb130b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e90b7d70-eed5-4db5-9ab1-6c399ca388d2"
        },
        "item": {
          "id": "8475e53b-0eb0-434e-a707-fd5cee028eaa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "95862e0a-3c0c-415a-8bbb-c09e449c37a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38c8c98-5aa8-49df-ab28-330c6c6f9842",
        "cursor": {
          "ref": "bb97cf46-6222-4b11-8ec6-d45a72f22e1e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e22c23c1-8857-4a98-ac5c-997845717303"
        },
        "item": {
          "id": "a38c8c98-5aa8-49df-ab28-330c6c6f9842",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51f82283-cb42-4010-b673-516bbf07c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2861db1d-d2b8-455a-95a5-2734bc85ffb3",
        "cursor": {
          "ref": "78858686-0589-44bd-b526-a67c5c06151c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "30102739-d575-43d0-8226-4cbe868c3255"
        },
        "item": {
          "id": "2861db1d-d2b8-455a-95a5-2734bc85ffb3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d6a13dcd-996a-4012-90d5-87968792566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119cb01a-2592-468a-96f7-758ebbb00230",
        "cursor": {
          "ref": "b1d17fdd-1f9d-43b9-8692-58b0b408e5d6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "04605861-8e8e-4978-93ca-2fb1ef0495d8"
        },
        "item": {
          "id": "119cb01a-2592-468a-96f7-758ebbb00230",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "703bb9aa-1e6a-475f-9494-8920f8458f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb1a101-5a59-4f95-8838-705359e4316a",
        "cursor": {
          "ref": "76af2f2d-f096-4c5f-9a5b-8c97e3a0b7c3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7202fcf7-e2cb-439e-b85a-593b7b08008a"
        },
        "item": {
          "id": "ddb1a101-5a59-4f95-8838-705359e4316a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9a12e949-baba-41e0-9d9d-6260e36813dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd41337-6767-49fb-8bde-f839e3310536",
        "cursor": {
          "ref": "cbf22240-0299-48bb-abcb-2a2784d9a26f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "80ab3af2-7810-48f1-b3d0-09d5bca67c2b"
        },
        "item": {
          "id": "8fd41337-6767-49fb-8bde-f839e3310536",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bb8fd779-1d6f-419b-b417-fcdbb213f771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab527a-0469-4258-ac83-ef4721b95aa9",
        "cursor": {
          "ref": "1fc85c1b-0f81-4aa9-bd29-9b2c34b7d2c6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3877e313-cb17-427c-af33-8c9b48043213"
        },
        "item": {
          "id": "60ab527a-0469-4258-ac83-ef4721b95aa9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7f86905b-98b4-42bf-a254-b6f0ca07ec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a099b49-0e4a-4ee0-be4b-ecc550ddd4c6",
        "cursor": {
          "ref": "ffba1bef-ad7a-42f4-be20-afdb8861ae19",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8ed63e91-a39c-4521-ba43-1f2b9ad0a5ae"
        },
        "item": {
          "id": "5a099b49-0e4a-4ee0-be4b-ecc550ddd4c6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cd9fc2c9-07c8-4321-bf3f-e449b1f3c1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53378005-e503-45e1-9e61-f87eadf43101",
        "cursor": {
          "ref": "1943e651-dbf2-458f-88f0-b548c1863978",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "273e6c80-7f9b-4d90-9251-688ba490d0b6"
        },
        "item": {
          "id": "53378005-e503-45e1-9e61-f87eadf43101",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "84ea3860-9432-46e0-bf3c-2f6bb661d43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f1d27-2848-48d8-a1a9-89cef344c417",
        "cursor": {
          "ref": "42c886a7-1045-4c6f-bd68-219acd247de4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c231733e-e4e4-42b6-b5d2-72ffc664e829"
        },
        "item": {
          "id": "c65f1d27-2848-48d8-a1a9-89cef344c417",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "065c2d4f-23a2-4c83-b75c-e102fe84a68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f27ff76-21d7-4838-9420-6de39a428087",
        "cursor": {
          "ref": "a80ee83b-6c1b-4224-9456-c3e0b5d8eb05",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ffa61749-637d-45d1-a95c-e7ce97eb1d82"
        },
        "item": {
          "id": "8f27ff76-21d7-4838-9420-6de39a428087",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "78884d6b-a6bb-4099-ae0c-5af49740b367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86505eb6-3980-4a2d-be34-0ca383f51a73",
        "cursor": {
          "ref": "27afba33-3784-4937-a98d-c1bf067909c9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c64b045c-2b95-4bd5-b778-5916d0b27d95"
        },
        "item": {
          "id": "86505eb6-3980-4a2d-be34-0ca383f51a73",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca0310c9-1cb5-48de-a4f1-3b4b1371f8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e89420-2068-48ff-bd2d-98b2163dca18",
        "cursor": {
          "ref": "dc81eee1-ddb3-481e-9889-d0bf0525ec33",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "18b9b6d6-2655-4091-b14f-f21d0c271c2c"
        },
        "item": {
          "id": "40e89420-2068-48ff-bd2d-98b2163dca18",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a54c198f-19a8-4b27-a678-5bbe50b11513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384f6e99-6932-45f7-bd0c-f2209095ecc9",
        "cursor": {
          "ref": "2b79c38f-0a40-4cfc-a044-dd1af7c9f380",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7dd9d38a-3d6b-4394-a421-0ad8fc57eedd"
        },
        "item": {
          "id": "384f6e99-6932-45f7-bd0c-f2209095ecc9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d85b88e-9e84-431d-9815-a9440695d47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a720bf4-4efb-4d5c-b423-c9879c987bb9",
        "cursor": {
          "ref": "c7840539-78cb-4fef-a1cc-12057baefcd9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "82ba0f60-be2d-4957-8aa2-c418c8d34631"
        },
        "item": {
          "id": "0a720bf4-4efb-4d5c-b423-c9879c987bb9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d94df4e-c682-4484-9a45-0856908dd9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee00fb-c345-41b2-bf72-15b6fbffd0e2",
        "cursor": {
          "ref": "6eb79060-7e92-4822-a40b-fc60b4cc3e9a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dc8f4f52-d6c3-4ec1-b7b1-92bfbe314e9b"
        },
        "item": {
          "id": "5dee00fb-c345-41b2-bf72-15b6fbffd0e2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a61d0cb3-090e-469c-9a9a-875fbdef8c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d89bed-b363-46ce-ba90-bc88f6a69634",
        "cursor": {
          "ref": "45fc1dac-79e3-4c08-9b81-709b0c79fcd6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eba3753c-ac6a-4a34-a8dd-2e2e1b4c0ea6"
        },
        "item": {
          "id": "09d89bed-b363-46ce-ba90-bc88f6a69634",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "49d3bfb1-37aa-47e6-bc95-d3b383496f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94556cd8-74e7-4bc9-a7d1-ce84aa304da1",
        "cursor": {
          "ref": "aec4152d-6e17-4587-81cd-1ee9fa68f5ff",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "36787f59-4ba5-4041-b759-de7025f96b65"
        },
        "item": {
          "id": "94556cd8-74e7-4bc9-a7d1-ce84aa304da1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1bd9fafa-42a2-437c-b090-34fd2d5029aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f8964-69a0-4398-ad3b-5f04dfca39a7",
        "cursor": {
          "ref": "f950b7f4-27b9-467e-aa37-4f5f1af87ae7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b43b7f3b-8a62-4fca-a05b-7dc24d5046af"
        },
        "item": {
          "id": "6c4f8964-69a0-4398-ad3b-5f04dfca39a7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bf2acf8c-1b5c-42d9-b8c7-a103eb92706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e4993-3e4a-4372-af96-ef9af467d4ac",
        "cursor": {
          "ref": "fa083721-dad5-4417-8240-0f90521a4c59",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4e5f2059-c3b7-424b-bf8c-7d81e53673d8"
        },
        "item": {
          "id": "f16e4993-3e4a-4372-af96-ef9af467d4ac",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "55231609-5819-4624-a8a3-b8f81be19476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db38ac04-2e48-4c66-b84f-4c6647b015a2",
        "cursor": {
          "ref": "41fccecb-66e9-4de8-b5a1-31000f111613",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fda61c77-0d13-49d7-9a72-3d6f09da02c5"
        },
        "item": {
          "id": "db38ac04-2e48-4c66-b84f-4c6647b015a2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d7b5dcd8-d1e6-4a93-a9c5-df35bc1e3b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238b91ec-e1c9-4d95-9be2-05f5e94c0140",
        "cursor": {
          "ref": "1e242cfc-ecac-4ac4-9c1f-921ca561c6ec",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7d4b965a-357d-4cca-9bdf-8607a6841a30"
        },
        "item": {
          "id": "238b91ec-e1c9-4d95-9be2-05f5e94c0140",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "39316e99-aad8-4f24-9251-9658ed1270f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee9ed11-2007-4efe-94ff-c25ca97481d4",
        "cursor": {
          "ref": "1e2df2a7-2d76-4a91-b3dc-2622e4e8da8b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4ae1dc80-5681-4e94-aa55-0834c57da9bf"
        },
        "item": {
          "id": "fee9ed11-2007-4efe-94ff-c25ca97481d4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ca537fa-af54-4455-9cfb-6679e3a95b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe41e42-e836-46f4-941e-3a6bc19a8c19",
        "cursor": {
          "ref": "75bbf7e0-54b6-4c8d-817f-ca083986abc0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c5345a59-a972-48d0-a7ff-b64b174af3f2"
        },
        "item": {
          "id": "2fe41e42-e836-46f4-941e-3a6bc19a8c19",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "79833e5d-2cba-4e4a-8652-f0151ebb0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff8a477-7eb3-486b-b102-057365e86cec",
        "cursor": {
          "ref": "4ba379fa-3714-4322-9595-0cad7d1602c9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6d8ca45e-0006-437d-967c-44a245726111"
        },
        "item": {
          "id": "9ff8a477-7eb3-486b-b102-057365e86cec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f33015cc-e4c3-46dd-a84c-7d1bc5d10927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c02db7-734d-45d6-b81b-3f1c0d670aa9",
        "cursor": {
          "ref": "c8f74d16-f57f-4a6a-b74e-1d73d4ee66c9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f86ff164-3eee-4a11-a423-ddb7d5d9f8c3"
        },
        "item": {
          "id": "f3c02db7-734d-45d6-b81b-3f1c0d670aa9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6e3a79d6-3f0d-4f9b-a2e3-918a233c4a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4617f73-054e-44f8-8193-f21946f8f627",
        "cursor": {
          "ref": "3d880b48-ac4f-45a7-b536-e9d370556ba9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d69c83b9-95bc-4732-bc8e-647e0c4690f3"
        },
        "item": {
          "id": "f4617f73-054e-44f8-8193-f21946f8f627",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c504ac59-ca15-4895-b697-977f84700861",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f8eab-0da8-413c-a1fe-fd1d97851b9d",
        "cursor": {
          "ref": "86c7da1d-bef0-4d1c-ba00-c17e462895ca",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a50b56c3-e1f2-468c-af6a-99c89ab0fd70"
        },
        "item": {
          "id": "a64f8eab-0da8-413c-a1fe-fd1d97851b9d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "84b2c85e-aa42-483e-b2cb-f59e2bd4cbb3",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb309f2-7aea-4c3b-9269-b96d86e15c64",
        "cursor": {
          "ref": "b6999272-74d1-4f68-8f5d-79e2eaf333d6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "19c2a608-4476-4050-aa2f-59954aae352f"
        },
        "item": {
          "id": "acb309f2-7aea-4c3b-9269-b96d86e15c64",
          "name": "credentials_verify"
        },
        "response": {
          "id": "467d52e3-6b73-4eec-adf7-8ae9b2238c6a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7bbdc9-1b93-41db-bbf7-78f462f0156f",
        "cursor": {
          "ref": "f9f39919-6896-4e2a-8428-1373ddd30261",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "31bd3c82-f8e8-425e-bda2-6516fab32ef8"
        },
        "item": {
          "id": "0f7bbdc9-1b93-41db-bbf7-78f462f0156f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8c279f5d-01d9-49be-af8d-3f30ea1f4300",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d30d3-009c-4cf1-9323-26262d7e67c0",
        "cursor": {
          "ref": "8c6e3a9c-5667-40e8-b079-6f5d0a180c47",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c9ffd276-bf44-4428-927f-94091f41f79b"
        },
        "item": {
          "id": "658d30d3-009c-4cf1-9323-26262d7e67c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0bb586e3-4f21-400c-a0c2-1639cbae3405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d30d3-009c-4cf1-9323-26262d7e67c0",
        "cursor": {
          "ref": "8c6e3a9c-5667-40e8-b079-6f5d0a180c47",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c9ffd276-bf44-4428-927f-94091f41f79b"
        },
        "item": {
          "id": "658d30d3-009c-4cf1-9323-26262d7e67c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0bb586e3-4f21-400c-a0c2-1639cbae3405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130372fd-b62c-46e4-a8b7-d48e545f4eb2",
        "cursor": {
          "ref": "894e7f04-981e-4e92-81e2-c9663371411c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cea50635-ee79-4324-9dc0-94adfb36be39"
        },
        "item": {
          "id": "130372fd-b62c-46e4-a8b7-d48e545f4eb2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c976ebfd-4856-45b9-8d20-f06280b1c52f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479c0da-7cec-4c4a-b947-49d3708e213f",
        "cursor": {
          "ref": "5dfedd11-a1e9-4c7a-8620-db7b6645f19d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "01bd421b-71dc-4d5a-badc-891f3306f74d"
        },
        "item": {
          "id": "c479c0da-7cec-4c4a-b947-49d3708e213f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5c2dc65-719d-4e00-ac87-065f6f2b3e0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}